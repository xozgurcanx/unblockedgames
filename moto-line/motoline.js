(function (console, $hx_exports, $global) { "use strict";
var $hxClasses = {},$estr = function() { return js_Boot.__string_rec(this,''); };
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var ApplicationMain = function() { };
$hxClasses["ApplicationMain"] = ApplicationMain;
ApplicationMain.__name__ = ["ApplicationMain"];
ApplicationMain.loadEmbed = function(o) {
	ApplicationMain.embeds = (ApplicationMain.embeds != null?ApplicationMain.embeds:0) + 1;
	var f = null;
	f = function(_) {
		o.removeEventListener("load",f);
		if(--ApplicationMain.embeds == 0) ApplicationMain.preload();
	};
	o.addEventListener("load",f);
};
ApplicationMain.main = function() {
	if(ApplicationMain.embeds == null || ApplicationMain.embeds == 0) ApplicationMain.preload();
};
ApplicationMain.preload = function() {
	ApplicationMain.bytesLoaded = ApplicationMain.totalBytes = 0;
	var _g = 0;
	var _g1 = ApplicationMain.AssetBytes;
	while(_g < _g1.length) {
		var bytes = _g1[_g];
		++_g;
		ApplicationMain.totalBytes += bytes;
	}
	ApplicationMain.completed = 0;
	ApplicationMain.loaders = new haxe_ds_StringMap();
	ApplicationMain.urlLoaders = new haxe_ds_StringMap();
	ApplicationMain.total = 0;
	openfl_Lib.get_current().loaderInfo = openfl_display_LoaderInfo.create(null);
	openfl_Lib.get_stage().set_frameRate(60);
	openfl_Lib.get_current().addChild(ApplicationMain.preloader = new GamePreloader());
	ApplicationMain.preloader.onInit();
	ApplicationMain.loadFile("assets/GameFont.png");
	ApplicationMain.loadFile("assets/Objects.png");
	var resourcePrefix = "NME_:bitmap_";
	var _g2 = 0;
	var _g11 = haxe_Resource.listNames();
	while(_g2 < _g11.length) {
		var resourceName = _g11[_g2];
		++_g2;
		if(StringTools.startsWith(resourceName,resourcePrefix)) {
			var type = Type.resolveClass(StringTools.replace(resourceName.substring(resourcePrefix.length),"_","."));
			if(type != null) {
				ApplicationMain.total++;
				var instance = Type.createInstance(type,[0,0,true,16777215,ApplicationMain.bitmapClass_onComplete]);
			}
		}
	}
	if(ApplicationMain.total != 0) {
		ApplicationMain.loaderStack = [];
		var $it0 = ApplicationMain.loaders.keys();
		while( $it0.hasNext() ) {
			var p = $it0.next();
			ApplicationMain.loaderStack.push(p);
		}
		ApplicationMain.urlLoaderStack = [];
		var $it1 = ApplicationMain.urlLoaders.keys();
		while( $it1.hasNext() ) {
			var p1 = $it1.next();
			ApplicationMain.urlLoaderStack.push(p1);
		}
		var _g3 = 0;
		while(_g3 < 8) {
			var i = _g3++;
			ApplicationMain.nextLoader();
		}
	} else ApplicationMain.begin();
};
ApplicationMain.nextLoader = function() {
	if(ApplicationMain.loaderStack.length != 0) {
		var p = ApplicationMain.loaderStack.shift();
		var o = ApplicationMain.loaders.get(p);
		o.contentLoaderInfo.addEventListener("complete",ApplicationMain.loader_onComplete);
		o.load(new openfl_net_URLRequest(p));
	} else if(ApplicationMain.urlLoaderStack.length != 0) {
		var p1 = ApplicationMain.urlLoaderStack.shift();
		var o1 = ApplicationMain.urlLoaders.get(p1);
		o1.addEventListener("complete",ApplicationMain.loader_onComplete);
		o1.load(new openfl_net_URLRequest(p1));
	}
};
ApplicationMain.loadFile = function(p) {
	var value = new openfl_display_Loader();
	ApplicationMain.loaders.set(p,value);
	ApplicationMain.total++;
};
ApplicationMain.begin = function() {
	ApplicationMain.preloader.addEventListener("complete",ApplicationMain.preloader_onComplete);
	ApplicationMain.preloader.onLoaded();
};
ApplicationMain.bitmapClass_onComplete = function(instance) {
	ApplicationMain.completed++;
	var classType;
	if(instance == null) classType = null; else classType = js_Boot.getClass(instance);
	classType.preload = instance;
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin();
};
ApplicationMain.loader_onComplete = function(event) {
	ApplicationMain.completed++;
	ApplicationMain.bytesLoaded += ApplicationMain.AssetBytes[HxOverrides.indexOf(ApplicationMain.AssetNames,event._target.url,0)];
	ApplicationMain.preloader.onUpdate(ApplicationMain.bytesLoaded,ApplicationMain.totalBytes);
	if(ApplicationMain.completed == ApplicationMain.total) ApplicationMain.begin(); else ApplicationMain.nextLoader();
};
ApplicationMain.preloader_onComplete = function(event) {
	ApplicationMain.preloader.removeEventListener("complete",ApplicationMain.preloader_onComplete);
	openfl_Lib.get_current().removeChild(ApplicationMain.preloader);
	ApplicationMain.preloader = null;
	if(GameMain.main == null) {
		var o = new DocumentClass();
		if(js_Boot.__instanceof(o,openfl_display_DisplayObject)) openfl_Lib.get_current().addChild(o);
	} else GameMain.main();
};
var openfl_events_IEventDispatcher = function() { };
$hxClasses["openfl.events.IEventDispatcher"] = openfl_events_IEventDispatcher;
openfl_events_IEventDispatcher.__name__ = ["openfl","events","IEventDispatcher"];
openfl_events_IEventDispatcher.prototype = {
	__class__: openfl_events_IEventDispatcher
};
var openfl_events_EventDispatcher = function() {
	this.eventList = new haxe_ds_StringMap();
};
$hxClasses["openfl.events.EventDispatcher"] = openfl_events_EventDispatcher;
openfl_events_EventDispatcher.__name__ = ["openfl","events","EventDispatcher"];
openfl_events_EventDispatcher.__interfaces__ = [openfl_events_IEventDispatcher];
openfl_events_EventDispatcher.prototype = {
	addEventListener: function(type,listener,useCapture,priority,weak) {
		if(weak == null) weak = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		var o;
		if(!this.eventList.exists(type)) {
			var value = o = [];
			this.eventList.set(type,value);
		} else o = this.eventList.get(type);
		o.push(listener);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		if(this.eventList.exists(type)) {
			var r = this.eventList.get(type);
			var _g = 0;
			while(_g < r.length) {
				var o = r[_g];
				++_g;
				if(Reflect.compareMethods(o,listener)) {
					HxOverrides.remove(r,o);
					break;
				}
			}
			if(r.length == 0) this.eventList.remove(type);
		}
	}
	,dispatchEvent: function(event) {
		if(event.get_target() == null) event.set_target(this);
		event.set_currentTarget(this);
		var t = event.type;
		if(this.eventList.exists(t)) {
			var list = this.eventList.get(t);
			var i = 0;
			while(i < list.length) {
				var func = list[i];
				func(event);
				if(list[i] == func) i++;
			}
		}
		return true;
	}
	,__class__: openfl_events_EventDispatcher
};
var openfl_events_EventWrapper = function() {
	openfl_events_EventDispatcher.call(this);
	this.eventMap = new haxe_ds_ObjectMap();
};
$hxClasses["openfl.events.EventWrapper"] = openfl_events_EventWrapper;
openfl_events_EventWrapper.__name__ = ["openfl","events","EventWrapper"];
openfl_events_EventWrapper.__super__ = openfl_events_EventDispatcher;
openfl_events_EventWrapper.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	addEventListener: function(type,listener,useCapture,priority,weak) {
		if(weak == null) weak = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		var _g = this;
		openfl_events_EventDispatcher.prototype.addEventListener.call(this,type,listener,useCapture,priority,weak);
		var f;
		var wrapper = function(e) {
			if(e.get_target() == _g.component) e.set_target(_g);
			e.set_currentTarget(_g);
			listener(e);
		};
		f = wrapper;
		if(!(this.eventMap.h.__keys__[listener.__id__] != null)) this.eventMap.set(listener,f);
		this.component.addEventListener(type,f,useCapture);
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		openfl_events_EventDispatcher.prototype.removeEventListener.call(this,type,listener,useCapture);
		if(this.eventMap.h.__keys__[listener.__id__] != null) {
			this.component.removeEventListener(type,this.eventMap.h[listener.__id__],useCapture);
			this.eventMap.remove(listener);
		}
	}
	,__class__: openfl_events_EventWrapper
});
var openfl_display_DisplayObject = function() {
	this.y = 0;
	this.x = 0;
	this.rotation = 0;
	this.scaleY = 1;
	this.scaleX = 1;
	this.visible = true;
	openfl_events_EventWrapper.call(this);
	this.eventRemap = new haxe_ds_StringMap();
	if(this.component == null) this.component = openfl_Lib.jsNode("div");
	this.component.node = this;
	this.transform = new openfl_geom_Transform(this);
};
$hxClasses["openfl.display.DisplayObject"] = openfl_display_DisplayObject;
openfl_display_DisplayObject.__name__ = ["openfl","display","DisplayObject"];
openfl_display_DisplayObject.__super__ = openfl_events_EventWrapper;
openfl_display_DisplayObject.prototype = $extend(openfl_events_EventWrapper.prototype,{
	broadcastEvent: function(e) {
		this.dispatchEvent(e);
	}
	,syncMtx: function() {
		var s = this.component.style;
		var v;
		var n;
		if(this._syncMtx_set != true) {
			this._syncMtx_set = true;
			openfl_Lib.setCSSProperties(s,"transform-origin","0% 0%",31);
		}
		v = "";
		if(this.x != 0 || this.y != 0) v += "translate(" + this.x + "px, " + this.y + "px) ";
		if(this.scaleX != 1 || this.scaleY != 1) v += "scale(" + this.scaleX + ", " + this.scaleY + ") ";
		if(this.rotation != 0) v += "rotate(" + this.rotation + "deg) ";
		if(this.transform != null) {
			var m = this.transform.get_matrix();
			if(m != null && !m.isIdentity()) v += "matrix(" + m.a + ", " + m.b + ", " + m.c + ", " + m.d + ", " + m.tx + ", " + m.ty + ")" + " ";
		}
		n = "transform";
		s.setProperty(n,v,null);
		s.setProperty("-o-" + n,v,null);
		s.setProperty("-ms-" + n,v,null);
		s.setProperty("-moz-" + n,v,null);
		s.setProperty("-webkit-" + n,v,null);
	}
	,set_x: function(v) {
		if(this.x != v) {
			this.x = v;
			this.syncMtx();
		}
		return v;
	}
	,set_y: function(v) {
		if(this.y != v) {
			this.y = v;
			this.syncMtx();
		}
		return v;
	}
	,set_scaleX: function(v) {
		if(this.scaleX != v) {
			this.scaleX = v;
			this.syncMtx();
		}
		return v;
	}
	,set_scaleY: function(v) {
		if(this.scaleY != v) {
			this.scaleY = v;
			this.syncMtx();
		}
		return v;
	}
	,get_width: function() {
		return this.__width || 0;
	}
	,get_height: function() {
		return this.__height || 0;
	}
	,set_visible: function(v) {
		if(this.visible != v) {
			this.visible = v;
			if(v) this.component.style.display = ""; else this.component.style.display = "none";
		}
		return v;
	}
	,get_stage: function() {
		return this.__stage;
	}
	,set_stage: function(v) {
		if(this.__stage != v) {
			var z = this.__stage != null != (v != null);
			this.__stage = v;
			if(z) this.dispatchEvent(new openfl_events_Event(v != null?"addedToStage":"removedFromStage"));
		}
		return v;
	}
	,concatTransform: function(m) {
		if(!this.transform.get_matrix().isIdentity()) m.concat(this.transform.get_matrix());
		if(this.rotation != 0) m.rotate(this.rotation * Math.PI / 180);
		if(this.scaleX != 1 || this.scaleY != 1) m.scale(this.scaleX,this.scaleY);
		if(this.x != 0 || this.y != 0) m.translate(this.x,this.y);
	}
	,hitTestLocal: function(x,y,p,v) {
		return (!v || this.visible) && x >= 0 && y >= 0 && x <= this.get_width() && y <= this.get_height();
	}
	,addEventListener: function(type,listener,useCapture,priority,weak) {
		if(weak == null) weak = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		openfl_events_EventWrapper.prototype.addEventListener.call(this,type,listener,useCapture,priority,weak);
	}
	,broadcastMouse: function(h,e,ms,mc) {
		if(!this.visible) return false;
		var o;
		var t = e.type;
		var m;
		var m2;
		var d = h.length;
		var l;
		var x;
		var y;
		h.push(this);
		if(mc.length > 0) m = mc.pop(); else m = new openfl_geom_Matrix();
		l = ms.length;
		while(l <= d) {
			o = h[l];
			m.identity();
			o.concatTransform(m);
			m.invert();
			if(mc.length > 0) m2 = mc.pop(); else m2 = new openfl_geom_Matrix();
			if(l > 0) m2.copy(ms[l - 1]); else m2.identity();
			m2.concat(m);
			ms.push(m2);
			l++;
		}
		m.copy(ms[d]);
		x = e.stageX * m.a + e.stageY * m.c + m.tx;
		y = e.stageX * m.b + e.stageY * m.d + m.ty;
		mc.push(m);
		h.pop();
		if(this.hitTestLocal(x,y,true,true)) {
			if(e.relatedObject == null) {
				e.localX = x;
				e.localY = y;
				e.relatedObject = this;
			}
			this.dispatchEvent(e);
			return true;
		}
		return false;
	}
	,dispatchEvent: function(event) {
		var r = openfl_events_EventWrapper.prototype.dispatchEvent.call(this,event);
		if(r && event.bubbles) {
			var _g = event.type;
			switch(_g) {
			case "mouseMove":case "mouseOver":case "mouseOut":case "mouseClick":case "mouseDown":case "mouseUp":case "rightClick":case "rightMouseDown":case "rightMouseUp":case "middleClick":case "middleMouseDown":case "middleMouseUp":case "mouseWheel":case "touchMove":case "touchBegin":case "touchEnd":
				var parent = this.parent;
				if(parent != null) parent.dispatchEvent(event);
				break;
			}
		}
		return r;
	}
	,__class__: openfl_display_DisplayObject
});
var openfl_display_InteractiveObject = function() {
	openfl_display_DisplayObject.call(this);
	this.tabEnabled = false;
	this.tabIndex = 0;
	this.mouseEnabled = this.doubleClickEnabled = true;
};
$hxClasses["openfl.display.InteractiveObject"] = openfl_display_InteractiveObject;
openfl_display_InteractiveObject.__name__ = ["openfl","display","InteractiveObject"];
openfl_display_InteractiveObject.__super__ = openfl_display_DisplayObject;
openfl_display_InteractiveObject.prototype = $extend(openfl_display_DisplayObject.prototype,{
	giveFocus: function() {
		this.component.focus();
	}
	,__class__: openfl_display_InteractiveObject
});
var openfl_display_DisplayObjectContainer = function() {
	openfl_display_InteractiveObject.call(this);
	this.children = [];
	this.mouseChildren = true;
};
$hxClasses["openfl.display.DisplayObjectContainer"] = openfl_display_DisplayObjectContainer;
openfl_display_DisplayObjectContainer.__name__ = ["openfl","display","DisplayObjectContainer"];
openfl_display_DisplayObjectContainer.__super__ = openfl_display_InteractiveObject;
openfl_display_DisplayObjectContainer.prototype = $extend(openfl_display_InteractiveObject.prototype,{
	addChild: function(o) {
		if(o.parent != null) o.parent.removeChild(o);
		o.parent = this;
		o.set_stage(this.get_stage());
		this.children.push(o);
		this.component.appendChild(o.component);
		var e = new openfl_events_Event("added");
		o.dispatchEvent(e);
		this.dispatchEvent(e);
		return o;
	}
	,removeChild: function(o) {
		if(o.parent == this) {
			o.parent = null;
			o.set_stage(null);
			HxOverrides.remove(this.children,o);
			this.component.removeChild(o.component);
			var e = new openfl_events_Event("removed");
			o.dispatchEvent(e);
			this.dispatchEvent(e);
		}
		return o;
	}
	,addChildAt: function(o,v) {
		if(v < this.children.length) {
			if(o.parent != null) o.parent.removeChild(o);
			o.parent = this;
			o.set_stage(this.get_stage());
			this.component.insertBefore(o.component,this.children[v].component);
			this.children.splice(v,0,o);
			return o;
		} else return this.addChild(o);
	}
	,broadcastEvent: function(e) {
		this.dispatchEvent(e);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.broadcastEvent(e);
		}
	}
	,broadcastMouse: function(h,e,ms,mc) {
		if(!this.visible) return false;
		var r = false;
		if(this.mouseChildren) {
			var i = this.children.length;
			if(i > 0) {
				h.push(this);
				while(--i >= 0) if(this.children[i].broadcastMouse(h,e,ms,mc)) {
					r = true;
					break;
				}
				h.pop();
			}
		}
		while(ms.length > h.length) mc.push(ms.pop());
		r = r || openfl_display_InteractiveObject.prototype.broadcastMouse.call(this,h,e,ms,mc);
		while(ms.length > h.length) mc.push(ms.pop());
		return r;
	}
	,hitTestLocal: function(x,y,p,v) {
		if(!v || this.visible) {
			var i = this.children.length;
			var m;
			var o;
			if(i > 0) {
				m = openfl_geom_Matrix.create();
				while(--i >= 0) {
					m.identity();
					o = this.children[i];
					o.concatTransform(m);
					m.invert();
					if(o.hitTestLocal(x * m.a + y * m.c + m.tx,x * m.b + y * m.d + m.ty,p,v)) return true;
				}
				openfl_geom_Matrix.pool.push(m);
			}
		}
		return false;
	}
	,set_stage: function(v) {
		openfl_display_InteractiveObject.prototype.set_stage.call(this,v);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var o = _g1[_g];
			++_g;
			o.set_stage(v);
		}
		return v;
	}
	,__class__: openfl_display_DisplayObjectContainer
});
var openfl_display_IBitmapDrawable = function() { };
$hxClasses["openfl.display.IBitmapDrawable"] = openfl_display_IBitmapDrawable;
openfl_display_IBitmapDrawable.__name__ = ["openfl","display","IBitmapDrawable"];
openfl_display_IBitmapDrawable.prototype = {
	__class__: openfl_display_IBitmapDrawable
};
var openfl_display_Sprite = function() {
	openfl_display_DisplayObjectContainer.call(this);
};
$hxClasses["openfl.display.Sprite"] = openfl_display_Sprite;
openfl_display_Sprite.__name__ = ["openfl","display","Sprite"];
openfl_display_Sprite.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_Sprite.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Sprite.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	get_graphics: function() {
		if(this._graphics == null) {
			var o = new openfl_display_Graphics();
			var q = o.component;
			o.set_displayObject(this);
			if(this.children.length == 0) this.component.appendChild(q); else this.component.insertBefore(q,this.children[0].component);
			this._graphics = o;
		}
		return this._graphics;
	}
	,set_stage: function(v) {
		var z = this.get_stage() == null && v != null;
		var r = openfl_display_DisplayObjectContainer.prototype.set_stage.call(this,v);
		if(z && this._graphics != null) this._graphics.invalidate();
		return r;
	}
	,drawToSurface: function(cnv,ctx,mtx,ctr,blendMode,clipRect,smoothing) {
		this.get_graphics().drawToSurface(cnv,ctx,mtx,ctr,blendMode,clipRect,smoothing);
	}
	,hitTestLocal: function(x,y,p,v) {
		if(openfl_display_DisplayObjectContainer.prototype.hitTestLocal.call(this,x,y,p,v)) return true;
		if(!v || this.visible) {
			var g = this._graphics;
			if(g != null) return g.hitTestLocal(x,y,p);
		}
		return false;
	}
	,__class__: openfl_display_Sprite
});
var Main = $hx_exports.Main = function() {
	this.oldTime = 0;
	this.oldFrames = 0;
	this.frameCount = 0;
	this.currentTimeStep = -1;
	this.timeAccumulator = 0;
	this.needsExtraScreenBMP = false;
	if(Preloader.ShowBlank) return;
	this.initSystemVariables();
	openfl_display_Sprite.call(this);
	if(!Main.LockCheck()) return;
	oz_OzSprite.MinimumBMD = Main.DontSplitBitmaps();
	this.initOzEngine();
	this.registerGraphics();
	haxe_Log.trace("before expandtiles",{ fileName : "Main.hx", lineNumber : 288, className : "Main", methodName : "new"});
	oz_OzSprite.ExpandTiles(Globals.definitionsXML);
	haxe_Log.trace("before sortinit",{ fileName : "Main.hx", lineNumber : 290, className : "Main", methodName : "new"});
	dev_DevUtil.SortIdsByName(oz_OzSprite.BitmapsIds,oz_OzSprite.BitmapsNames);
	Main.isMobile = this.MobileCheck();
	this.doc = oz_OzSprite.New(null,null,false);
	this.stateSprite = oz_OzSprite.New(null,null,false);
	this.debugSprite = oz_OzSprite.New(null,null,false);
	this.doc.addChild(this.stateSprite);
	this.doc.addChild(this.whiteRect = oz_OzSprite.New(Objects.sysWhiteRect,null,false));
	this.whiteRect.setxy(Main.WIDTH_MIN / 2,Main.HEIGHT_MIN / 2);
	this.whiteRect.set_visible(false);
	this.whiteRect.smooth = false;
	this.doc.addChild(this.debugSprite);
	this.debugText = oz_OzSprite.New(null,oz_SpriteType.TEXT,false);
	this.debugText.font = GameFont.Font;
	this.debugText.text = "FPS";
	this.debugSprite.addChild(this.debugText);
	this.debugSprite.set_visible(false);
	this.doc.setFluid(66);
	openfl_Lib.get_current().get_stage().addEventListener("blur",Main.Deactivate);
	openfl_Lib.get_current().get_stage().addEventListener("focus",Main.Activate);
	openfl_Lib.get_current().get_stage().addEventListener("deactivate",Main.Deactivate);
	openfl_Lib.get_current().get_stage().addEventListener("activate",Main.Activate);
	window.onfocus = Main.fnResume;
	window.onblur = Main.fnPause;
	document.onfocusin = Main.fnResume;
	document.onfocusout = Main.fnPause;
	document.body.onfocusin = Main.fnResume;
	document.body.onfocusout = Main.fnPause;
	
			var hidden, visibilityChange; 
			if (typeof document.hidden !== "undefined") { // Opera 12.10 and Firefox 18 and later support 
			hidden = "hidden";
			visibilityChange = "visibilitychange";
			} else if (typeof document.mozHidden !== "undefined") {
			hidden = "mozHidden";
			visibilityChange = "mozvisibilitychange";
			} else if (typeof document.msHidden !== "undefined") {
			hidden = "msHidden";
			visibilityChange = "msvisibilitychange";
			} else if (typeof document.webkitHidden !== "undefined") {
			hidden = "webkitHidden";
			visibilityChange = "webkitvisibilitychange";
			}

			if (typeof document.addEventListener === "undefined" || 
			  typeof document[hidden] === "undefined") {
			  // doesn't support event listeners :(
			} else {
			  // Handle page visibility change   
			  document.addEventListener(visibilityChange, function() {if (document[hidden]) {Main.fnPause();} else {Main.fnResume();}}, false);
			}  
			;
	openfl_Lib.get_current().get_stage().addEventListener("enterFrame",$bind(this,this.update));
	haxe_Log.trace("before ext init",{ fileName : "Main.hx", lineNumber : 437, className : "Main", methodName : "new"});
	haxe_Log.trace("after ext init",{ fileName : "Main.hx", lineNumber : 475, className : "Main", methodName : "new"});
};
$hxClasses["Main"] = Main;
Main.__name__ = ["Main"];
Main.LockCheck = function() {
	return true;
};
Main.RunGC = function() {
};
Main.Deactivate = function(e) {
	Main.fnPause();
};
Main.Activate = function(e) {
	Main.fnResume();
};
Main.fnPause = function() {
	if(!Main.systemPaused) {
		Main.systemPaused = true;
		Main.hadSound = !Audio.muteMusic;
		if(Main.hadSound) Audio.ToggleMuteMusic();
		haxe_Log.trace("Screenbitmap.visible",{ fileName : "Main.hx", lineNumber : 960, className : "Main", methodName : "fnPause", customParams : [Main.instance.ScreenBitmap.visible]});
	}
	platforms_WindowsPhone.ScriptNotify("fnPause");
	haxe_Log.trace("fnPause",{ fileName : "Main.hx", lineNumber : 964, className : "Main", methodName : "fnPause"});
};
Main.fnResume = function() {
	if(Main.systemPaused) {
		Main.systemPaused = false;
		if(Main.hadSound) Audio.ToggleMuteMusic();
	}
	platforms_WindowsPhone.ScriptNotify("fnResume");
	haxe_Log.trace("fnResume",{ fileName : "Main.hx", lineNumber : 972, className : "Main", methodName : "fnResume"});
};
Main.DontSplitBitmaps = function() {
	var isAndroidBrowser = false;
	var isAndroidMobile = false;
	var isChromatic = false;
	var isSamsung = false;
	
			var navU = navigator.userAgent;

			// Android Mobile
			isAndroidMobile = navU.indexOf('Android') > -1 && navU.indexOf('Mozilla / 5.0') > -1 && navU.indexOf('AppleWebKit') > -1;
			isSamsung = navU.indexOf('samsung') > -1 || navU.indexOf('SAMSUNG') > -1 || navU.indexOf('Samsung') > -1;

			// Apple webkit
			var regExAppleWebKit = new RegExp(/AppleWebKit\/([\d.]+)/);
			var resultAppleWebKitRegEx = regExAppleWebKit.exec(navU);
			var appleWebKitVersion = (resultAppleWebKitRegEx === null ? null : parseFloat(regExAppleWebKit.exec(navU)[1]));

			// Chrome
			var regExChrome = new RegExp(/Chrome\/([\d.]+)/);
			var resultChromeRegEx = regExChrome.exec(navU);
			var chromeVersion = (resultChromeRegEx === null ? null : parseFloat(regExChrome.exec(navU)[1]));

			// Native Android Browser
			isAndroidBrowser = isAndroidMobile && (appleWebKitVersion !== null && appleWebKitVersion < 537) || (chromeVersion !== null && chromeVersion < 37);
			
			isChromatic = (chromeVersion !== null);
			;
	return !isSamsung && (!isAndroidBrowser && isAndroidMobile || isChromatic && !isAndroidMobile);
};
Main.__super__ = openfl_display_Sprite;
Main.prototype = $extend(openfl_display_Sprite.prototype,{
	initSystemVariables: function() {
		var str = null;
		var str2 = null;
		Preloader.MainStarted = true;
		Main.NAME = "Line Biker".toLowerCase();
		Main.NAME = dev_DevUtil.StringReplace(Main.NAME," ","-");
		haxe_Log.trace("NAME IS THIS",{ fileName : "Main.hx", lineNumber : 126, className : "Main", methodName : "initSystemVariables", customParams : [Main.NAME]});
		Main.PACKAGE_DIR_NAME = "com.devgru.motoline".toLowerCase();
		Main.PACKAGE_DIR_NAME = dev_DevUtil.StringReplace(Main.PACKAGE_DIR_NAME,".","/");
		haxe_Log.trace("NAME IS THIS",{ fileName : "Main.hx", lineNumber : 129, className : "Main", methodName : "initSystemVariables", customParams : [Main.PACKAGE_DIR_NAME]});
		var interStr = "true";
		if(interStr != null) Main.INTERPOLATE = interStr.toLowerCase() == "true";
		Main.DEFAULT_SMOOTH = "true".toLowerCase() == "true";
		Main.WIDTH = Std.parseInt(str2 = "480");
		Main.WIDTH_MIN = Std.parseInt(str = "720");
		if(str2 == null) Main.WIDTH = Main.WIDTH_MIN;
		if(str == null) Main.WIDTH_MIN = Main.WIDTH;
		Main.WIDTH_MAX = Std.parseInt(str = "480");
		if(str == null) Main.WIDTH_MAX = Main.WIDTH;
		Main.STARTING_WIDTH = Main.WIDTH;
		Main.HEIGHT = Std.parseInt(str2 = "640");
		Main.HEIGHT_MIN = Std.parseInt(str = null);
		if(str2 == null) Main.HEIGHT = Main.HEIGHT_MIN;
		if(str == null) Main.HEIGHT_MIN = Main.HEIGHT;
		Main.HEIGHT_MAX = Std.parseInt(str = "854");
		if(str == null) Main.HEIGHT_MAX = Main.HEIGHT;
		Main.STARTING_HEIGHT = Main.HEIGHT;
		Main.LANDSCAPE_WIDTH_MIN = Std.parseInt(str = "640");
		if(str == null) Main.LANDSCAPE_WIDTH_MIN = Main.WIDTH_MIN;
		Main.LANDSCAPE_WIDTH_MAX = Std.parseInt(str = null);
		if(str == null) Main.LANDSCAPE_WIDTH_MAX = Main.WIDTH_MAX;
		Main.LANDSCAPE_HEIGHT = Std.parseInt(str = null);
		if(str == null) Main.LANDSCAPE_HEIGHT = Main.HEIGHT_MIN;
		Main.PORTRAIT_HEIGHT_MIN = Std.parseInt(str = "640");
		if(str == null) Main.PORTRAIT_HEIGHT_MIN = Main.HEIGHT_MIN;
		Main.PORTRAIT_HEIGHT_MAX = Std.parseInt(str = null);
		if(str == null) Main.PORTRAIT_HEIGHT_MAX = Main.HEIGHT_MAX;
		Main.PORTRAIT_WIDTH = Std.parseInt(str = "480");
		if(str == null) Main.PORTRAIT_WIDTH = Main.WIDTH_MIN;
		var bothOrientationsString = null;
		if(bothOrientationsString != null) Main.BOTH_ORIENTATIONS = bothOrientationsString.toLowerCase() == "true";
		if(Main.HEIGHT_MIN < Main.WIDTH_MIN) Main.Orientation = OzScreenOrientation.LANDSCAPE; else Main.Orientation = OzScreenOrientation.PORTRAIT;
		Main.FPS = Std.parseInt("30");
	}
	,initOzEngine: function() {
		this.needsExtraScreenBMP = window.navigator.userAgent.toLowerCase().indexOf("iemobile") > -1;
		if(!this.needsExtraScreenBMP) this.needsExtraScreenBMP = window.navigator.userAgent.toLowerCase().indexOf("trident/") > -1;
		if(!this.needsExtraScreenBMP) this.needsExtraScreenBMP = window.navigator.appName == "Microsoft Internet Explorer";
		this.ScreenBMD = new openfl_display_BitmapData(Main.WIDTH_MAX,Main.HEIGHT_MAX,true,0);
		this.ScreenBitmap = new openfl_display_Bitmap(this.ScreenBMD,openfl_display_PixelSnapping.AUTO,true);
		this.addChild(this.ScreenBitmap);
		this.ScreenBitmap.set_visible(false);
		Main.RESIZE_WIDTH = Main.WIDTH;
		Main.RESIZE_HEIGHT = Main.HEIGHT;
		Main.instance = this;
		haxe_Log.trace("before inits",{ fileName : "Main.hx", lineNumber : 249, className : "Main", methodName : "initOzEngine"});
		oz_OzTween.Init();
		haxe_Log.trace("before globals",{ fileName : "Main.hx", lineNumber : 251, className : "Main", methodName : "initOzEngine"});
		Globals.Init();
		haxe_Log.trace("before audio",{ fileName : "Main.hx", lineNumber : 253, className : "Main", methodName : "initOzEngine"});
		Audio.Init();
		haxe_Log.trace("before input init",{ fileName : "Main.hx", lineNumber : 255, className : "Main", methodName : "initOzEngine"});
		Input.init(this);
		haxe_Log.trace("before spriteinit",{ fileName : "Main.hx", lineNumber : 257, className : "Main", methodName : "initOzEngine"});
		oz_OzSprite.StaticInit();
		haxe_Log.trace("before particle init",{ fileName : "Main.hx", lineNumber : 259, className : "Main", methodName : "initOzEngine"});
		oz_OzParticle.StaticInit();
		haxe_Log.trace("before matrixinit",{ fileName : "Main.hx", lineNumber : 261, className : "Main", methodName : "initOzEngine"});
		oz_OzMatrix.InitPool();
		ozity_OzGameSystem.Init();
	}
	,registerGraphics: function() {
	}
	,start: function() {
		if(this.needsExtraScreenBMP) {
			this.extraScreenBMP = new openfl_display_Bitmap(new openfl_display_BitmapData(this.ScreenBMD.component.width,this.ScreenBMD.component.height));
			this.addChild(this.extraScreenBMP);
			this.extraRect = new openfl_geom_Rectangle(0,0,this.ScreenBMD.component.width,this.ScreenBMD.component.height);
			this.extraPoint = new openfl_geom_Point();
		} else this.ScreenBitmap.set_visible(true);
		haxe_Log.trace("we start",{ fileName : "Main.hx", lineNumber : 505, className : "Main", methodName : "start"});
		if(Audio.needsAudio) openfl_Lib.get_current().get_stage().addEventListener("mouseDown",Audio.HTML5Init);
		haxe_Log.trace("after audio init start",{ fileName : "Main.hx", lineNumber : 514, className : "Main", methodName : "start"});
		this.transitionChangeState(new states_StatePlay(this),15);
		var yT = new haxe_Timer(1000);
		yT.run = $bind(this,this.measureFPS);
		var mcRotDevSpr = oz_OzSprite.GetMCByString("cmcRotateDeviceSprite");
		if(mcRotDevSpr != null) this.doc.addChild(this.rotateDeviceSprite = oz_OzSprite.New(mcRotDevSpr,null,false)); else this.doc.addChild(this.rotateDeviceSprite = oz_OzSprite.New(null,oz_SpriteType.EMPTY,false));
		haxe_Log.trace("cmcRotateDeviceSprite",{ fileName : "Main.hx", lineNumber : 540, className : "Main", methodName : "start", customParams : [mcRotDevSpr]});
		this.rotateDeviceSprite.set_visible(false);
		openfl_Lib.get_current().get_stage().addEventListener("resize",$bind(this,this.onResize));
		Audio.PlayMusic("main");
		haxe_Log.trace("after music play",{ fileName : "Main.hx", lineNumber : 548, className : "Main", methodName : "start"});
		haxe_Log.trace("## Need Extra Screen BMD?",{ fileName : "Main.hx", lineNumber : 551, className : "Main", methodName : "start", customParams : [this.needsExtraScreenBMP]});
		haxe_Log.trace("## Minimum BMD? If not - flush-fetch bmd for r/s/a/fill",{ fileName : "Main.hx", lineNumber : 552, className : "Main", methodName : "start", customParams : [oz_OzSprite.MinimumBMD]});
		this.doc.adjustAllLayouts();
	}
	,onResize: function(e) {
		haxe_Log.trace("we resize, event is null",{ fileName : "Main.hx", lineNumber : 560, className : "Main", methodName : "onResize", customParams : [e == null]});
		Main.hasResized = true;
		platforms_PlatformHTML5.resize();
		this.whiteRect.set_scaleX((Main.WIDTH + 5) * 1.0 / this.whiteRect.width());
		this.whiteRect.set_scaleY((Main.HEIGHT + 5) * 1.0 / this.whiteRect.height());
		if(this.s != null) this.s.resize();
		this.rotateDeviceSprite.setxy(0,0);
		this.rotateDeviceSprite.setFluid(256);
		this.doc.adjustAllLayouts();
	}
	,update: function(e) {
		var logicalFrameTime = 1.0 / Main.FPS;
		this.oldTimeStep = this.currentTimeStep;
		this.currentTimeStep = haxe_Timer.stamp();
		var deltaTime;
		if(this.oldTimeStep < 0) deltaTime = logicalFrameTime * 1.5; else deltaTime = this.currentTimeStep - this.oldTimeStep;
		this.timeAccumulator += deltaTime;
		if(Main.systemPaused) return;
		if(!Main.started) {
			if(!Audio.loaded) return;
			Main.started = true;
			this.start();
			return;
		}
		this.frameCount++;
		var shouldResize = !Main.hasResized;
		if(!shouldResize && platforms_PlatformHTML5.invalidRect()) shouldResize = true;
		if(shouldResize) this.onResize();
		if(!this.rotateDeviceSprite.get_visible()) {
			if(Main.INTERPOLATE) {
				var timesUpdated = 0;
				while(this.timeAccumulator >= logicalFrameTime) {
					this.timeAccumulator -= logicalFrameTime;
					timesUpdated++;
					this.doc.updateAnimations();
					this.doc._updateOldValues();
					oz_OzSprite.RemoveRequested();
					this.s.update();
					oz_OzTween.UpdateAll();
					oz_OzParticle.UpdateAll();
					if(timesUpdated >= 2) {
						this.timeAccumulator = 0;
						break;
					}
				}
				oz_OzSprite.DeltaT = Math.round(this.timeAccumulator / logicalFrameTime * 128) / 128;
				this.s.preRender();
				this.draw();
			} else {
				var numFrames = 1;
				var _g1 = 0;
				var _g = Math.round(Main.FPS / openfl_Lib.get_current().get_stage().frameRate * numFrames);
				while(_g1 < _g) {
					var i = _g1++;
					this.doc.updateAnimations();
					this.doc._updateOldValues();
					oz_OzSprite.RemoveRequested();
					this.s.update();
					oz_OzTween.UpdateAll();
					oz_OzParticle.UpdateAll();
				}
				oz_OzSprite.DeltaT = 1;
				this.s.preRender();
				this.draw();
			}
		} else if(!Main.systemPaused) this.draw();
	}
	,disposeState: function() {
		if(this.s != null) {
			this.whiteRect.set_visible(false);
			this.s.destroy();
			oz_OzTween.RemoveStateBounds();
			oz_OzParticle.RemoveStateBounds();
			oz_OzSprite.RemoveStateBounds();
			this.s = null;
		}
	}
	,transitionChangeState: function(newState,delay) {
		var _g = this;
		Main.NumChangedStates++;
		this.s = newState;
		Audio.LocallyUnmute();
		this.s.update();
		this.whiteRect.set_visible(true);
		this.whiteRect.set_alpha(1);
		var odt = oz_OzTween.New();
		odt.startValue = this.whiteRect.get_alpha();
		odt.endValue = 0;
		odt.duration = delay;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.whiteRect.set_alpha((1 - a * a) * odt.startValue + a * a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = function() {
			_g.whiteRect.set_visible(false);
		};
		odt.stateBound = true;
		odt.gameBound = false;
		oz_OzTween.Add(odt);
		Main.RunGC();
	}
	,draw: function(e) {
		oz_OzSprite.TilesheetId = -1;
		if(oz_OzSprite.TraceCurrentMatrix) {
			haxe_Log.trace("CM",{ fileName : "Main.hx", lineNumber : 905, className : "Main", methodName : "draw", customParams : [oz_OzMatrix.matrixId,oz_OzMatrix.getCurrentMatrix().toString()]});
			oz_OzSprite.TraceCurrentMatrix = false;
		}
		this.doc.draw();
		oz_OzSprite.Flush();
		if(this.needsExtraScreenBMP) this.extraScreenBMP.bitmapData.copyPixels(this.ScreenBitmap.bitmapData,this.extraRect,this.extraPoint);
	}
	,measureFPS: function() {
		var timerStamp = haxe_Timer.stamp();
		this.debugText.text = "" + (this.frameCount - this.oldFrames) + " : " + dev_DevUtil.round(timerStamp - this.oldTime,4);
		this.oldTime = timerStamp;
		this.oldFrames = this.frameCount;
	}
	,MobileCheck: function() {
		return window.mobilecheck();
	}
	,__class__: Main
});
var GameMain = function() {
	Main.call(this);
};
$hxClasses["GameMain"] = GameMain;
GameMain.__name__ = ["GameMain"];
GameMain.__super__ = Main;
GameMain.prototype = $extend(Main.prototype,{
	registerGraphics: function() {
		Main.prototype.registerGraphics.call(this);
		haxe_Log.trace("before objectsinit",{ fileName : "GameMain.hx", lineNumber : 8, className : "GameMain", methodName : "registerGraphics"});
		Objects.Register();
		haxe_Log.trace("before game font",{ fileName : "GameMain.hx", lineNumber : 15, className : "GameMain", methodName : "registerGraphics"});
		GameFont.Register();
		GameFont.Font.RegisterCharacters();
		haxe_Log.trace("after game font",{ fileName : "GameMain.hx", lineNumber : 18, className : "GameMain", methodName : "registerGraphics"});
		Preloader.showCross = false;
		haxe_Log.trace("end of registerGraphics",{ fileName : "GameMain.hx", lineNumber : 33, className : "GameMain", methodName : "registerGraphics"});
	}
	,__class__: GameMain
});
var DocumentClass = function() {
	GameMain.call(this);
};
$hxClasses["DocumentClass"] = DocumentClass;
DocumentClass.__name__ = ["DocumentClass"];
DocumentClass.__super__ = GameMain;
DocumentClass.prototype = $extend(GameMain.prototype,{
	get_stage: function() {
		return openfl_Lib.get_current().get_stage();
	}
	,__class__: DocumentClass
});
var Audio = function() { };
$hxClasses["Audio"] = Audio;
Audio.__name__ = ["Audio"];
Audio.HTML5Init = function(e) {
	openfl_Lib.get_current().get_stage().removeEventListener("mouseDown",Audio.HTML5Init);
	haxe_Log.trace("we init audio",{ fileName : "Audio.hx", lineNumber : 69, className : "Audio", methodName : "HTML5Init", customParams : [Audio.hasMusic]});
	Audio.initted = true;
	Audio.currentMusic = Audio.playingMusic = null;
	Audio.PlayMusic("main");
	haxe_Log.trace("we played main",{ fileName : "Audio.hx", lineNumber : 73, className : "Audio", methodName : "HTML5Init"});
	if(Audio.hasSound) Audio.dicSounds = new haxe_ds_StringMap();
};
Audio.Init = function() {
};
Audio.PlayMusic = function(mid) {
	try {
		if(!Audio.initted) return;
		if(!Audio.muteMusic) {
			if(Audio.currentMusic != mid || Audio.playingMusic != mid || Audio.currentMusic == null && mid == null) {
				if(mid == null) mid = Audio.currentMusic;
				if(Audio.playingMusic != null) Audio.musc.stop();
				Audio.musc = createjs.Sound.play(mid,{ interrupt : createjs.Sound.INTERRUPT_EARLY, loop : -1});
				Audio.playingMusic = mid;
			}
		}
	} catch( z ) {
		if (z instanceof js__$Boot_HaxeError) z = z.val;
		haxe_Log.trace("Error playing music: " + mid,{ fileName : "Audio.hx", lineNumber : 107, className : "Audio", methodName : "PlayMusic"});
	}
	Audio.currentMusic = mid;
};
Audio.StopMusic = function() {
	if(Audio.playingMusic != null) Audio.musc.stop();
	Audio.playingMusic = null;
};
Audio.PauseMusic = function() {
	if(Audio.musc != null) Audio.musc.paused = true;
};
Audio.ResumeMusic = function() {
	if(Audio.musc != null) Audio.musc.paused = false; else Audio.PlayMusic();
};
Audio.PlaySound = function(sid) {
	try {
		if(!Audio.initted || !Audio.hasSound) return;
		if(!Audio.muteSound) {
			var v = createjs.Sound.play(sid,{ interrupt : createjs.Sound.INTERRUPT_EARLY});
			Audio.dicSounds.set(sid,v);
			v;
			Audio.currentSound = sid;
		}
	} catch( z ) {
		if (z instanceof js__$Boot_HaxeError) z = z.val;
		haxe_Log.trace("Error playing sound: " + sid,{ fileName : "Audio.hx", lineNumber : 150, className : "Audio", methodName : "PlaySound"});
	}
};
Audio.Mute = function() {
	Audio.MuteSound();
	Audio.MuteMusic();
};
Audio.Unmute = function() {
	Audio.UnmuteMusic();
	Audio.UnmuteSound();
};
Audio.MuteSound = function() {
	if(!Audio.muteSound) Audio.ToggleMuteSound();
};
Audio.MuteMusic = function() {
	if(!Audio.muteMusic) Audio.ToggleMuteMusic();
};
Audio.UnmuteSound = function() {
	if(Audio.muteSound) Audio.ToggleMuteSound();
};
Audio.UnmuteMusic = function() {
	if(Audio.muteMusic) Audio.ToggleMuteMusic();
};
Audio.ToggleMuteMusic = function() {
	try {
		Audio.muteMusic = !Audio.muteMusic;
		if(!Audio.initted) return;
		if(!Audio.muteMusic) Audio.ResumeMusic(); else Audio.PauseMusic();
	} catch( z ) {
		if (z instanceof js__$Boot_HaxeError) z = z.val;
		haxe_Log.trace("Error toggle mute music",{ fileName : "Audio.hx", lineNumber : 178, className : "Audio", methodName : "ToggleMuteMusic", customParams : [z]});
	}
};
Audio.ToggleMuteSound = function() {
	Audio.muteSound = !Audio.muteSound;
};
Audio.updateVolume = function() {
};
Audio.LocallyMute = function() {
	if(!Audio.locallyMuted) {
		Audio.locallyMuted = true;
		Audio.PauseMusic();
	}
};
Audio.LocallyUnmute = function() {
	if(Audio.locallyMuted) {
		Audio.locallyMuted = false;
		if(Audio.musc != null && Audio.playingMusic == Audio.currentMusic) Audio.ResumeMusic(); else if(Audio.currentMusic != null) Audio.PlayMusic(Audio.currentMusic);
	}
};
var openfl_AssetLibrary = function() {
};
$hxClasses["openfl.AssetLibrary"] = openfl_AssetLibrary;
openfl_AssetLibrary.__name__ = ["openfl","AssetLibrary"];
openfl_AssetLibrary.prototype = {
	exists: function(id,type) {
		return false;
	}
	,getBitmapData: function(id) {
		return null;
	}
	,__class__: openfl_AssetLibrary
};
var DefaultAssetLibrary = function() {
	this.type = new haxe_ds_StringMap();
	this.path = new haxe_ds_StringMap();
	openfl_AssetLibrary.call(this);
	this.add("assets/GameFont.png",openfl_AssetType.IMAGE);
	this.add("assets/Objects.png",openfl_AssetType.IMAGE);
};
$hxClasses["DefaultAssetLibrary"] = DefaultAssetLibrary;
DefaultAssetLibrary.__name__ = ["DefaultAssetLibrary"];
DefaultAssetLibrary.__super__ = openfl_AssetLibrary;
DefaultAssetLibrary.prototype = $extend(openfl_AssetLibrary.prototype,{
	add: function(id,t,p) {
		this.type.set(id,t);
		this.path.set(id,p != null?p:id);
	}
	,exists: function(id,t) {
		var r = this.type.get(id);
		if(r != null) {
			if(r == t || t == null) return true;
			switch(t[1]) {
			case 5:
				return r == openfl_AssetType.MUSIC;
			case 4:
				return r == openfl_AssetType.SOUND;
			case 0:
				return true;
			default:
				return false;
			}
		}
		return false;
	}
	,getBitmapData: function(id) {
		var q;
		var key = this.path.get(id);
		q = ApplicationMain.loaders.get(key);
		var b = q.contentLoaderInfo.content;
		return b.bitmapData;
	}
	,__class__: DefaultAssetLibrary
});
var EReg = function(r,opt) {
	opt = opt.split("u").join("");
	this.r = new RegExp(r,opt);
};
$hxClasses["EReg"] = EReg;
EReg.__name__ = ["EReg"];
EReg.prototype = {
	replace: function(s,by) {
		return s.replace(this.r,by);
	}
	,__class__: EReg
};
var ExternalAPI = function() { };
$hxClasses["ExternalAPI"] = ExternalAPI;
ExternalAPI.__name__ = ["ExternalAPI"];
ExternalAPI.GdShowBanner = function() {
	console.log("+++ DevgruApi.showBanner() +++");
	if(GDinitialized) DevgruApi.showBanner();
};
ExternalAPI.GdPlay = function() {
	if(GDinitialized) DevgruApi.play();
};
ExternalAPI.CmgGameEvent = function(ev,arg1) {
	if(arg1 == null) arg1 = -1;
};
var GameFont = function() { };
$hxClasses["GameFont"] = GameFont;
GameFont.__name__ = ["GameFont"];
GameFont.Register = function() {
	GameFont.Font = new oz_OzFont();
	GameFont.Font.face = "DOCK11";
	GameFont.Font.size = 32;
	GameFont.Font.padding = [0,0,0,0];
	GameFont.Font.spacing = [1,1];
	GameFont.Font.lineHeight = 20;
	GameFont.Font.base = 26;
	GameFont.Font.numPages = 1;
	GameFont.Font.bitmapName = "GameFont.png";
	GameFont.Font.numChars = 96;
	GameFont.Font.chars[33] = { id : 33, x : 167, y : 150, width : 10, height : 22, xOffset : 0, yOffset : -1, xAdvance : 12, page : 0, letter : "!", movieClip : null};
	GameFont.Font.chars[34] = { id : 34, x : 122, y : 174, width : 13, height : 10, xOffset : 0, yOffset : -2, xAdvance : 15, page : 0, letter : "\"", movieClip : null};
	GameFont.Font.chars[35] = { id : 35, x : 47, y : 114, width : 20, height : 19, xOffset : 0, yOffset : -1, xAdvance : 22, page : 0, letter : "#", movieClip : null};
	GameFont.Font.chars[36] = { id : 36, x : 68, y : 68, width : 19, height : 26, xOffset : 0, yOffset : -3, xAdvance : 21, page : 0, letter : "$", movieClip : null};
	GameFont.Font.chars[37] = { id : 37, x : 0, y : 70, width : 23, height : 20, xOffset : 0, yOffset : 0, xAdvance : 25, page : 0, letter : "%", movieClip : null};
	GameFont.Font.chars[38] = { id : 38, x : 68, y : 117, width : 19, height : 23, xOffset : 0, yOffset : -2, xAdvance : 21, page : 0, letter : "&", movieClip : null};
	GameFont.Font.chars[39] = { id : 39, x : 177, y : 173, width : 8, height : 11, xOffset : 0, yOffset : 0, xAdvance : 10, page : 0, letter : "'", movieClip : null};
	GameFont.Font.chars[40] = { id : 40, x : 155, y : 0, width : 12, height : 26, xOffset : 0, yOffset : -1, xAdvance : 14, page : 0, letter : "(", movieClip : null};
	GameFont.Font.chars[41] = { id : 41, x : 156, y : 68, width : 11, height : 26, xOffset : 0, yOffset : -1, xAdvance : 13, page : 0, letter : ")", movieClip : null};
	GameFont.Font.chars[42] = { id : 42, x : 142, y : 0, width : 12, height : 12, xOffset : 0, yOffset : -2, xAdvance : 14, page : 0, letter : "*", movieClip : null};
	GameFont.Font.chars[43] = { id : 43, x : 155, y : 35, width : 12, height : 12, xOffset : 0, yOffset : 4, xAdvance : 14, page : 0, letter : "+", movieClip : null};
	GameFont.Font.chars[44] = { id : 44, x : 167, y : 173, width : 9, height : 11, xOffset : 0, yOffset : 12, xAdvance : 11, page : 0, letter : ",", movieClip : null};
	GameFont.Font.chars[45] = { id : 45, x : 155, y : 27, width : 12, height : 7, xOffset : 0, yOffset : 6, xAdvance : 14, page : 0, letter : "-", movieClip : null};
	GameFont.Font.chars[46] = { id : 46, x : 155, y : 177, width : 9, height : 9, xOffset : 0, yOffset : 11, xAdvance : 11, page : 0, letter : ".", movieClip : null};
	GameFont.Font.chars[47] = { id : 47, x : 125, y : 122, width : 15, height : 28, xOffset : 0, yOffset : -4, xAdvance : 17, page : 0, letter : "/", movieClip : null};
	GameFont.Font.chars[48] = { id : 48, x : 47, y : 134, width : 20, height : 23, xOffset : 0, yOffset : -2, xAdvance : 22, page : 0, letter : "0", movieClip : null};
	GameFont.Font.chars[49] = { id : 49, x : 141, y : 162, width : 13, height : 21, xOffset : 0, yOffset : -1, xAdvance : 15, page : 0, letter : "1", movieClip : null};
	GameFont.Font.chars[50] = { id : 50, x : 107, y : 0, width : 17, height : 22, xOffset : 0, yOffset : -2, xAdvance : 19, page : 0, letter : "2", movieClip : null};
	GameFont.Font.chars[51] = { id : 51, x : 88, y : 68, width : 18, height : 22, xOffset : 0, yOffset : -1, xAdvance : 20, page : 0, letter : "3", movieClip : null};
	GameFont.Font.chars[52] = { id : 52, x : 88, y : 91, width : 18, height : 21, xOffset : 0, yOffset : -1, xAdvance : 20, page : 0, letter : "4", movieClip : null};
	GameFont.Font.chars[53] = { id : 53, x : 89, y : 38, width : 17, height : 22, xOffset : 0, yOffset : -1, xAdvance : 19, page : 0, letter : "5", movieClip : null};
	GameFont.Font.chars[54] = { id : 54, x : 88, y : 129, width : 18, height : 22, xOffset : 0, yOffset : -1, xAdvance : 20, page : 0, letter : "6", movieClip : null};
	GameFont.Font.chars[55] = { id : 55, x : 89, y : 16, width : 17, height : 21, xOffset : 0, yOffset : -1, xAdvance : 19, page : 0, letter : "7", movieClip : null};
	GameFont.Font.chars[56] = { id : 56, x : 68, y : 164, width : 19, height : 23, xOffset : 0, yOffset : -2, xAdvance : 21, page : 0, letter : "8", movieClip : null};
	GameFont.Font.chars[57] = { id : 57, x : 88, y : 152, width : 18, height : 22, xOffset : 0, yOffset : -2, xAdvance : 20, page : 0, letter : "9", movieClip : null};
	GameFont.Font.chars[58] = { id : 58, x : 167, y : 48, width : 9, height : 16, xOffset : 0, yOffset : 1, xAdvance : 11, page : 0, letter : ":", movieClip : null};
	GameFont.Font.chars[59] = { id : 59, x : 177, y : 44, width : 9, height : 18, xOffset : 0, yOffset : 5, xAdvance : 11, page : 0, letter : ";", movieClip : null};
	GameFont.Font.chars[60] = { id : 60, x : 141, y : 87, width : 14, height : 18, xOffset : 0, yOffset : 2, xAdvance : 16, page : 0, letter : "<", movieClip : null};
	GameFont.Font.chars[61] = { id : 61, x : 142, y : 56, width : 12, height : 11, xOffset : 0, yOffset : 5, xAdvance : 14, page : 0, letter : "=", movieClip : null};
	GameFont.Font.chars[62] = { id : 62, x : 141, y : 68, width : 14, height : 18, xOffset : 0, yOffset : 2, xAdvance : 16, page : 0, letter : ">", movieClip : null};
	GameFont.Font.chars[63] = { id : 63, x : 125, y : 0, width : 16, height : 23, xOffset : 0, yOffset : -2, xAdvance : 18, page : 0, letter : "?", movieClip : null};
	GameFont.Font.chars[64] = { id : 64, x : 107, y : 92, width : 17, height : 16, xOffset : 0, yOffset : 1, xAdvance : 19, page : 0, letter : "@", movieClip : null};
	GameFont.Font.chars[65] = { id : 65, x : 24, y : 139, width : 22, height : 21, xOffset : 0, yOffset : -1, xAdvance : 24, page : 0, letter : "A", movieClip : null};
	GameFont.Font.chars[66] = { id : 66, x : 68, y : 95, width : 19, height : 21, xOffset : 0, yOffset : -1, xAdvance : 21, page : 0, letter : "B", movieClip : null};
	GameFont.Font.chars[67] = { id : 67, x : 48, y : 44, width : 20, height : 23, xOffset : 0, yOffset : -2, xAdvance : 22, page : 0, letter : "C", movieClip : null};
	GameFont.Font.chars[68] = { id : 68, x : 51, y : 0, width : 19, height : 21, xOffset : 0, yOffset : -1, xAdvance : 21, page : 0, letter : "D", movieClip : null};
	GameFont.Font.chars[69] = { id : 69, x : 124, y : 152, width : 16, height : 21, xOffset : 0, yOffset : -1, xAdvance : 18, page : 0, letter : "E", movieClip : null};
	GameFont.Font.chars[70] = { id : 70, x : 125, y : 24, width : 16, height : 21, xOffset : 0, yOffset : -1, xAdvance : 18, page : 0, letter : "F", movieClip : null};
	GameFont.Font.chars[71] = { id : 71, x : 0, y : 115, width : 23, height : 23, xOffset : 0, yOffset : -2, xAdvance : 25, page : 0, letter : "G", movieClip : null};
	GameFont.Font.chars[72] = { id : 72, x : 48, y : 68, width : 19, height : 21, xOffset : 0, yOffset : -1, xAdvance : 21, page : 0, letter : "H", movieClip : null};
	GameFont.Font.chars[73] = { id : 73, x : 168, y : 0, width : 10, height : 21, xOffset : 0, yOffset : -1, xAdvance : 12, page : 0, letter : "I", movieClip : null};
	GameFont.Font.chars[74] = { id : 74, x : 141, y : 138, width : 13, height : 23, xOffset : 0, yOffset : -1, xAdvance : 15, page : 0, letter : "J", movieClip : null};
	GameFont.Font.chars[75] = { id : 75, x : 26, y : 38, width : 21, height : 25, xOffset : 0, yOffset : -2, xAdvance : 23, page : 0, letter : "K", movieClip : null};
	GameFont.Font.chars[76] = { id : 76, x : 125, y : 84, width : 15, height : 21, xOffset : 0, yOffset : -1, xAdvance : 17, page : 0, letter : "L", movieClip : null};
	GameFont.Font.chars[77] = { id : 77, x : 24, y : 92, width : 22, height : 21, xOffset : 0, yOffset : -1, xAdvance : 24, page : 0, letter : "M", movieClip : null};
	GameFont.Font.chars[78] = { id : 78, x : 48, y : 22, width : 20, height : 21, xOffset : 0, yOffset : -1, xAdvance : 22, page : 0, letter : "N", movieClip : null};
	GameFont.Font.chars[79] = { id : 79, x : 0, y : 91, width : 23, height : 23, xOffset : 0, yOffset : -2, xAdvance : 25, page : 0, letter : "O", movieClip : null};
	GameFont.Font.chars[80] = { id : 80, x : 47, y : 92, width : 20, height : 21, xOffset : 0, yOffset : -1, xAdvance : 22, page : 0, letter : "P", movieClip : null};
	GameFont.Font.chars[81] = { id : 81, x : 0, y : 139, width : 23, height : 25, xOffset : 0, yOffset : -2, xAdvance : 25, page : 0, letter : "Q", movieClip : null};
	GameFont.Font.chars[82] = { id : 82, x : 24, y : 114, width : 22, height : 24, xOffset : 0, yOffset : -1, xAdvance : 24, page : 0, letter : "R", movieClip : null};
	GameFont.Font.chars[83] = { id : 83, x : 69, y : 22, width : 19, height : 23, xOffset : 0, yOffset : -2, xAdvance : 21, page : 0, letter : "S", movieClip : null};
	GameFont.Font.chars[84] = { id : 84, x : 69, y : 46, width : 19, height : 21, xOffset : 0, yOffset : -1, xAdvance : 21, page : 0, letter : "T", movieClip : null};
	GameFont.Font.chars[85] = { id : 85, x : 68, y : 141, width : 19, height : 22, xOffset : 0, yOffset : -1, xAdvance : 21, page : 0, letter : "U", movieClip : null};
	GameFont.Font.chars[86] = { id : 86, x : 0, y : 165, width : 23, height : 21, xOffset : 0, yOffset : -1, xAdvance : 25, page : 0, letter : "V", movieClip : null};
	GameFont.Font.chars[87] = { id : 87, x : 0, y : 0, width : 28, height : 21, xOffset : 0, yOffset : -1, xAdvance : 30, page : 0, letter : "W", movieClip : null};
	GameFont.Font.chars[88] = { id : 88, x : 24, y : 70, width : 23, height : 21, xOffset : 0, yOffset : -1, xAdvance : 25, page : 0, letter : "X", movieClip : null};
	GameFont.Font.chars[89] = { id : 89, x : 29, y : 0, width : 21, height : 21, xOffset : 0, yOffset : -1, xAdvance : 23, page : 0, letter : "Y", movieClip : null};
	GameFont.Font.chars[90] = { id : 90, x : 47, y : 158, width : 20, height : 21, xOffset : 0, yOffset : -1, xAdvance : 22, page : 0, letter : "Z", movieClip : null};
	GameFont.Font.chars[91] = { id : 91, x : 168, y : 65, width : 9, height : 27, xOffset : 0, yOffset : -4, xAdvance : 11, page : 0, letter : "[", movieClip : null};
	GameFont.Font.chars[92] = { id : 92, x : 155, y : 106, width : 11, height : 21, xOffset : 0, yOffset : -1, xAdvance : 13, page : 0, letter : "\\", movieClip : null};
	GameFont.Font.chars[93] = { id : 93, x : 167, y : 122, width : 10, height : 27, xOffset : 0, yOffset : -4, xAdvance : 12, page : 0, letter : "]", movieClip : null};
	GameFont.Font.chars[94] = { id : 94, x : 88, y : 175, width : 15, height : 12, xOffset : 0, yOffset : 0, xAdvance : 17, page : 0, letter : "^", movieClip : null};
	GameFont.Font.chars[95] = { id : 95, x : 43, y : 180, width : 16, height : 7, xOffset : 0, yOffset : 13, xAdvance : 18, page : 0, letter : "_", movieClip : null};
	GameFont.Font.chars[96] = { id : 96, x : 156, y : 95, width : 9, height : 8, xOffset : 0, yOffset : 0, xAdvance : 11, page : 0, letter : "`", movieClip : null};
	GameFont.Font.chars[97] = { id : 97, x : 88, y : 113, width : 18, height : 15, xOffset : 0, yOffset : -1, xAdvance : 20, page : 0, letter : "a", movieClip : null};
	GameFont.Font.chars[98] = { id : 98, x : 71, y : 0, width : 18, height : 15, xOffset : 0, yOffset : -1, xAdvance : 20, page : 0, letter : "b", movieClip : null};
	GameFont.Font.chars[99] = { id : 99, x : 107, y : 39, width : 17, height : 15, xOffset : 0, yOffset : -1, xAdvance : 19, page : 0, letter : "c", movieClip : null};
	GameFont.Font.chars[100] = { id : 100, x : 28, y : 22, width : 19, height : 15, xOffset : 0, yOffset : -1, xAdvance : 21, page : 0, letter : "d", movieClip : null};
	GameFont.Font.chars[101] = { id : 101, x : 0, y : 38, width : 25, height : 15, xOffset : 0, yOffset : -1, xAdvance : 27, page : 0, letter : "e", movieClip : null};
	GameFont.Font.chars[102] = { id : 102, x : 0, y : 22, width : 27, height : 15, xOffset : 0, yOffset : -1, xAdvance : 29, page : 0, letter : "f", movieClip : null};
	GameFont.Font.chars[103] = { id : 103, x : 141, y : 122, width : 13, height : 15, xOffset : 0, yOffset : -1, xAdvance : 15, page : 0, letter : "g", movieClip : null};
	GameFont.Font.chars[104] = { id : 104, x : 125, y : 46, width : 16, height : 21, xOffset : 0, yOffset : -1, xAdvance : 18, page : 0, letter : "h", movieClip : null};
	GameFont.Font.chars[105] = { id : 105, x : 155, y : 128, width : 11, height : 21, xOffset : 0, yOffset : -1, xAdvance : 13, page : 0, letter : "i", movieClip : null};
	GameFont.Font.chars[106] = { id : 106, x : 155, y : 150, width : 11, height : 26, xOffset : 0, yOffset : -1, xAdvance : 13, page : 0, letter : "j", movieClip : null};
	GameFont.Font.chars[107] = { id : 107, x : 107, y : 109, width : 17, height : 21, xOffset : 0, yOffset : -1, xAdvance : 19, page : 0, letter : "k", movieClip : null};
	GameFont.Font.chars[108] = { id : 108, x : 168, y : 22, width : 10, height : 21, xOffset : 0, yOffset : -1, xAdvance : 12, page : 0, letter : "l", movieClip : null};
	GameFont.Font.chars[109] = { id : 109, x : 0, y : 54, width : 24, height : 15, xOffset : 0, yOffset : 5, xAdvance : 26, page : 0, letter : "m", movieClip : null};
	GameFont.Font.chars[110] = { id : 110, x : 107, y : 76, width : 17, height : 15, xOffset : 0, yOffset : 5, xAdvance : 19, page : 0, letter : "n", movieClip : null};
	GameFont.Font.chars[111] = { id : 111, x : 125, y : 68, width : 15, height : 15, xOffset : 0, yOffset : 5, xAdvance : 17, page : 0, letter : "o", movieClip : null};
	GameFont.Font.chars[112] = { id : 112, x : 107, y : 55, width : 17, height : 20, xOffset : 0, yOffset : 5, xAdvance : 19, page : 0, letter : "p", movieClip : null};
	GameFont.Font.chars[113] = { id : 113, x : 107, y : 152, width : 16, height : 20, xOffset : 0, yOffset : 5, xAdvance : 18, page : 0, letter : "q", movieClip : null};
	GameFont.Font.chars[114] = { id : 114, x : 141, y : 106, width : 13, height : 15, xOffset : 0, yOffset : 5, xAdvance : 15, page : 0, letter : "r", movieClip : null};
	GameFont.Font.chars[115] = { id : 115, x : 142, y : 40, width : 12, height : 15, xOffset : 0, yOffset : 5, xAdvance : 14, page : 0, letter : "s", movieClip : null};
	GameFont.Font.chars[116] = { id : 116, x : 155, y : 48, width : 11, height : 19, xOffset : 0, yOffset : 1, xAdvance : 13, page : 0, letter : "t", movieClip : null};
	GameFont.Font.chars[117] = { id : 117, x : 107, y : 23, width : 17, height : 15, xOffset : 0, yOffset : 5, xAdvance : 19, page : 0, letter : "u", movieClip : null};
	GameFont.Font.chars[118] = { id : 118, x : 90, y : 0, width : 16, height : 15, xOffset : 0, yOffset : 5, xAdvance : 18, page : 0, letter : "v", movieClip : null};
	GameFont.Font.chars[119] = { id : 119, x : 24, y : 161, width : 22, height : 15, xOffset : 0, yOffset : 5, xAdvance : 24, page : 0, letter : "w", movieClip : null};
	GameFont.Font.chars[120] = { id : 120, x : 107, y : 173, width : 14, height : 14, xOffset : 0, yOffset : 4, xAdvance : 16, page : 0, letter : "x", movieClip : null};
	GameFont.Font.chars[121] = { id : 121, x : 107, y : 131, width : 17, height : 20, xOffset : 0, yOffset : 5, xAdvance : 19, page : 0, letter : "y", movieClip : null};
	GameFont.Font.chars[122] = { id : 122, x : 125, y : 106, width : 15, height : 15, xOffset : 0, yOffset : 5, xAdvance : 17, page : 0, letter : "z", movieClip : null};
	GameFont.Font.chars[123] = { id : 123, x : 167, y : 95, width : 11, height : 26, xOffset : 0, yOffset : -1, xAdvance : 13, page : 0, letter : "{", movieClip : null};
	GameFont.Font.chars[124] = { id : 124, x : 178, y : 122, width : 7, height : 27, xOffset : 0, yOffset : -4, xAdvance : 9, page : 0, letter : "|", movieClip : null};
	GameFont.Font.chars[125] = { id : 125, x : 142, y : 13, width : 12, height : 26, xOffset : 0, yOffset : -1, xAdvance : 14, page : 0, letter : "}", movieClip : null};
	GameFont.Font.chars[126] = { id : 126, x : 24, y : 177, width : 18, height : 7, xOffset : 0, yOffset : 8, xAdvance : 20, page : 0, letter : "~", movieClip : null};
	GameFont.Font.chars[32] = { id : 32, x : 0, y : 0, width : 0, height : 0, xOffset : 0, yOffset : 0, xAdvance : 12, page : 0, letter : " ", movieClip : null};
	GameFont.Font.chars[9] = { id : 9, x : 0, y : 0, width : 0, height : 0, xOffset : 0, yOffset : 0, xAdvance : 96, page : 0, letter : "\t", movieClip : null};
};
var NMEPreloader = function() {
	openfl_display_Sprite.call(this);
	var backgroundColor = this.getBackgroundColor();
	var r = backgroundColor >> 16 & 255;
	var g = backgroundColor >> 8 & 255;
	var b = backgroundColor & 255;
	var perceivedLuminosity = 0.299 * r + 0.587 * g + 0.114 * b;
	var color = 0;
	if(perceivedLuminosity < 70) color = 16777215;
	var x = 30;
	var height = 7;
	var y = this.getHeight() / 2 - height / 2;
	var width = this.getWidth() - x * 2;
	var padding = 2;
	this.outline = new openfl_display_Sprite();
	this.outline.get_graphics().beginFill(color,0.07);
	this.outline.get_graphics().drawRect(0,0,width,height);
	this.outline.set_x(x);
	this.outline.set_y(y);
	this.addChild(this.outline);
	this.progress = new openfl_display_Sprite();
	this.progress.get_graphics().beginFill(color,0.35);
	this.progress.get_graphics().drawRect(0,0,width - padding * 2,height - padding * 2);
	this.progress.set_x(x + padding);
	this.progress.set_y(y + padding);
	this.progress.set_scaleX(0);
	this.addChild(this.progress);
};
$hxClasses["NMEPreloader"] = NMEPreloader;
NMEPreloader.__name__ = ["NMEPreloader"];
NMEPreloader.__super__ = openfl_display_Sprite;
NMEPreloader.prototype = $extend(openfl_display_Sprite.prototype,{
	getBackgroundColor: function() {
		return 0;
	}
	,getHeight: function() {
		var height = 0;
		if(height > 0) return height; else return openfl_Lib.get_current().get_stage().get_stageHeight();
	}
	,getWidth: function() {
		var width = 0;
		if(width > 0) return width; else return openfl_Lib.get_current().get_stage().get_stageWidth();
	}
	,__class__: NMEPreloader
});
var Preloader = function() {
	this.didLoad = false;
	this.docClick = null;
	this.firstHeight = 0;
	this.firstWidth = 0;
	this._painted = false;
	this.PreloaderLogoVars = [];
	this.PreloaderLogo = null;
	this.PreloaderSizeVars = [];
	this.PreloaderBarVars = [];
	this.PreloaderBarBottom = null;
	this.PreloaderBarMiddle = null;
	this.PreloaderBarTop = null;
	this.PreloaderBarMiddleBMD = null;
	openfl_Lib.get_current().get_stage().component.id = "oz_game";
	Preloader.instance = this;
	this.firstWidth = Std["int"](this.getWidth());
	this.firstHeight = Std["int"](this.getHeight());
	NMEPreloader.call(this);
	this.addEventListener("enterFrame",$bind(this,this.updateFrame));
	var height = 20;
	var y = this.firstHeight / 2 - height / 2;
	var frameWidth = Math.min(this.firstWidth,this.firstHeight * 1.7791666666666666);
	var width = frameWidth * 0.8;
	var x = (this.firstWidth - width) / 2;
	var padding = 3;
	this.outline.get_graphics().clear();
	this.progress.get_graphics().clear();
	var preloaderSizeVarsStr = "512x512x50x50".split("x");
	var _g1 = 0;
	var _g = preloaderSizeVarsStr.length;
	while(_g1 < _g) {
		var i = _g1++;
		this.PreloaderSizeVars[i] = Std.parseInt(preloaderSizeVarsStr[i]);
	}
	var preloaderBarVarsStr = "480x210x440".split("x");
	var _g11 = 0;
	var _g2 = preloaderBarVarsStr.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		this.PreloaderBarVars[i1] = Std.parseInt(preloaderBarVarsStr[i1]);
	}
	var totalBmd = new PreloaderBarBMD(this.PreloaderBarVars[0],this.PreloaderBarVars[1]);
	var bmd = null;
	bmd = new openfl_display_BitmapData(this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3 | 0,true,-1);
	bmd.copyPixels(totalBmd,new openfl_geom_Rectangle(0,this.PreloaderBarVars[1] / 3,this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3),new openfl_geom_Point(0,0));
	this.PreloaderBarTop = this.putBitmap(bmd);
	bmd = new openfl_display_BitmapData(this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3 | 0,true,16777215);
	this.PreloaderBarMiddle = this.putBitmap(bmd);
	this.PreloaderBarMiddleBMD = new openfl_display_BitmapData(this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3 | 0,true,16777215);
	this.PreloaderBarMiddleBMD.copyPixels(totalBmd,new openfl_geom_Rectangle(0,0,this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3),new openfl_geom_Point(0,0));
	bmd = new openfl_display_BitmapData(this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3 | 0,true,-1);
	bmd.copyPixels(totalBmd,new openfl_geom_Rectangle(0,(this.PreloaderBarVars[1] / 3 | 0) * 2,this.PreloaderBarVars[0],this.PreloaderBarVars[1] / 3),new openfl_geom_Point(0,0));
	this.PreloaderBarBottom = this.putBitmap(bmd);
	Preloader.done = true;
	this.addEventListener("enterFrame",$bind(this,this.estimatePreloading));
	var logoVars = "400x208".split("x");
	var _g12 = 0;
	var _g3 = logoVars.length;
	while(_g12 < _g3) {
		var i2 = _g12++;
		this.PreloaderLogoVars[i2] = Std.parseInt(logoVars[i2]);
	}
	this.PreloaderLogo = this.putBitmap(new PreloaderLogoBMD(this.PreloaderLogoVars[0],this.PreloaderLogoVars[1]));
	haxe_Log.trace("user agent: ",{ fileName : "Preloader.hx", lineNumber : 564, className : "Preloader", methodName : "new", customParams : [window.navigator.userAgent.toLowerCase()]});
	haxe_Log.trace("needs audio ",{ fileName : "Preloader.hx", lineNumber : 568, className : "Preloader", methodName : "new", customParams : [Audio.needsAudio]});
	if(Audio.needsAudio) {
		var consoleLog = true;
		
					var plugins = [createjs.WebAudioPlugin, createjs.HTMLAudioPlugin];
					if (createjs.BrowserDetect.isFirefox) {
						plugins = [createjs.HTMLAudioPlugin];
					} 
					Audio.hasMusic = createjs.Sound.registerPlugins(plugins);
					//var activePlugin = createjs.Sound.activePlugin;
					
					if (createjs.Sound.activePlugin == null) {
						if(consoleLog)console.log("ActivePlugin is null");
						Audio.hasMusic = Audio.hasSound = false;
					}
					else if (navigator.userAgent.toLowerCase().indexOf("iemobile") >= 0) {
						Audio.hasSound = false;
						if(consoleLog)console.log("We're on IEMobile, disallowing sound if not WP");
					}
					else if (createjs.BrowserDetect.isIOS || createjs.BrowserDetect.isAndroid || createjs.BrowserDetect.isBlackberry) {
						if(consoleLog)console.log(createjs.Sound.activePlugin.toString(), createjs.Sound.activePlugin instanceof createjs.WebAudioPlugin);
						Audio.hasSound = (createjs.Sound.activePlugin.toString().indexOf("WebAudio") >= 0);
						Audio.hasMusic = Audio.hasSound;
					}
					else {
						Audio.hasSound = true;
						if(consoleLog)console.log("no browser type check detected, allowing sound");
					}
					
					//trollolol
					//Audio.hasSound = false;
				;
		this.preloadHTML5Audio();
		haxe_Log.trace("needsAudio: ",{ fileName : "Preloader.hx", lineNumber : 609, className : "Preloader", methodName : "new", customParams : [Audio.needsAudio," hasMusic: ",Audio.hasMusic," hasSound: ",Audio.hasSound]});
	}
	this.onResize();
};
$hxClasses["Preloader"] = Preloader;
Preloader.__name__ = ["Preloader"];
Preloader.CreateManifest = function(ids,assetsDir) {
	var ret = [];
	var _g1 = 0;
	var _g = ids.length;
	while(_g1 < _g) {
		var i = _g1++;
		ret.push({ id : ids[i], src : assetsDir + ids[i] + ".ogg"});
	}
	return ret;
};
Preloader.loadAudioFiles = function(sndAndMusManifest,musManifest,assetsDir) {
	if(assetsDir == null) assetsDir = "audioassetsweb/";
	var soundAndMusicManifest = Preloader.CreateManifest(sndAndMusManifest,assetsDir);
	var musicManifest = Preloader.CreateManifest(musManifest,assetsDir);
	
				if (Audio.hasMusic) {
					var queue = new createjs.LoadQueue();
					createjs.Sound.alternateExtensions = ["mp3"];
					queue.installPlugin(createjs.Sound);
					queue.on("error", Preloader.audioLoadError);
					queue.on("progress", Preloader.audioLoadProgress);
					queue.on("fileload", Preloader.audioLoadFile);
					queue.on("complete", Preloader.audioLoadComplete);
					if (Audio.hasSound) {
						queue.loadManifest(soundAndMusicManifest);
					}
					else {
						queue.loadManifest(musicManifest);
					}
					queue.load();
				}
				else {
					Audio.loaded = true;
				}
			;
};
Preloader.audioLoadError = function(event) {
	haxe_Log.trace("PreloadError",{ fileName : "Preloader.hx", lineNumber : 188, className : "Preloader", methodName : "audioLoadError", customParams : [event.message]});
};
Preloader.audioLoadFile = function(event) {
	haxe_Log.trace("PreloadFile",{ fileName : "Preloader.hx", lineNumber : 191, className : "Preloader", methodName : "audioLoadFile", customParams : [event.item.id,event.item.src]});
};
Preloader.audioLoadProgress = function(event) {
	haxe_Log.trace("PreloadProgress",{ fileName : "Preloader.hx", lineNumber : 194, className : "Preloader", methodName : "audioLoadProgress", customParams : [event.loaded]});
};
Preloader.audioLoadComplete = function(event) {
	haxe_Log.trace("sounds are loaded",{ fileName : "Preloader.hx", lineNumber : 198, className : "Preloader", methodName : "audioLoadComplete"});
	Audio.loaded = true;
	Preloader.Destroy();
	haxe_Log.trace("Audio.loaded = ",{ fileName : "Preloader.hx", lineNumber : 201, className : "Preloader", methodName : "audioLoadComplete", customParams : [Audio.loaded]});
};
Preloader.LoadTimePass = function() {
	Preloader.timePassed = true;
};
Preloader.goAway = function(e) {
	haxe_Log.trace("we cliccccck",{ fileName : "Preloader.hx", lineNumber : 811, className : "Preloader", methodName : "goAway"});
	Preloader.done = true;
	Preloader.Destroy();
};
Preloader.Destroy = function() {
	haxe_Log.trace("WE TRY DESTROY",{ fileName : "Preloader.hx", lineNumber : 817, className : "Preloader", methodName : "Destroy"});
	if(Preloader.done) {
		haxe_Log.trace("WE DONE BRO",{ fileName : "Preloader.hx", lineNumber : 819, className : "Preloader", methodName : "Destroy"});
		if(!Preloader.assetsLoaded || !Audio.loaded) return;
		if(Preloader.instance != null) Preloader.instance.removeEventListener("enterFrame",($_=Preloader.instance,$bind($_,$_.estimatePreloading)));
		var _g1 = 0;
		var _g = Preloader.BMPsToRemove.length;
		while(_g1 < _g) {
			var i = _g1++;
			haxe_Log.trace("WE REMOVE BMD",{ fileName : "Preloader.hx", lineNumber : 824, className : "Preloader", methodName : "Destroy", customParams : [Preloader.BMPsToRemove[i].bitmapData.component.width,i]});
			openfl_Lib.get_current().removeChild(Preloader.BMPsToRemove[i]);
		}
		if(Preloader.bm != null && Preloader.bm.parent != null) openfl_Lib.get_current().removeChild(Preloader.bm);
		if(Preloader._outline != null && Preloader._outline.parent != null) openfl_Lib.get_current().removeChild(Preloader._outline);
		if(Preloader._progress != null && Preloader._progress.parent != null) openfl_Lib.get_current().removeChild(Preloader._progress);
		document.body.style.background = "#000000";
		haxe_Log.trace("we destroy",{ fileName : "Preloader.hx", lineNumber : 853, className : "Preloader", methodName : "Destroy"});
	}
};
Preloader.__super__ = NMEPreloader;
Preloader.prototype = $extend(NMEPreloader.prototype,{
	updateFrame: function(e) {
		var w = Std["int"](this.getWidth());
		var h = Std["int"](this.getHeight());
		if(w != this.firstWidth || h != this.firstHeight) {
			this.firstWidth = w;
			this.firstHeight = h;
			this.onResize();
		}
	}
	,onResize: function(e) {
		haxe_Log.trace("RESIZING",{ fileName : "Preloader.hx", lineNumber : 251, className : "Preloader", methodName : "onResize", customParams : [this.getWidth(),this.getHeight()]});
		var ww = this.PreloaderSizeVars[0];
		var wh = this.PreloaderSizeVars[1];
		var ratio = ww / wh;
		var offX = 0;
		var offY = 0;
		var w = this.firstWidth;
		var h = this.firstHeight;
		if(this.firstWidth * 1.0 / this.firstHeight > ratio) {
			w = this.firstHeight * ratio;
			offX = (this.firstWidth - w) / 2;
		} else {
			h = this.firstWidth * ratio;
			offY = (this.firstHeight - h) / 2;
		}
		var scale = w / this.PreloaderSizeVars[0];
		var padVertical = 0;
		if(this.firstHeight > this.firstWidth) padVertical = (this.firstHeight - h) / 6;
		if(this.PreloaderLogo != null) {
			this.PreloaderLogo.set_x(offX + scale * (this.PreloaderSizeVars[0] - this.PreloaderLogoVars[0]) / 2);
			this.PreloaderLogo.set_y(offY + scale * this.PreloaderSizeVars[2] - padVertical);
			this.PreloaderLogo.set_scaleX(this.PreloaderLogo.set_scaleY(scale));
		}
		var barX = offX + scale * (this.PreloaderSizeVars[0] - this.PreloaderBarVars[0]) / 2;
		var barY = this.firstHeight - offY - scale * (this.PreloaderBarVars[1] / 3 + this.PreloaderSizeVars[3]) + padVertical;
		this.setXYScale(this.PreloaderBarTop,barX,barY,scale);
		this.setXYScale(this.PreloaderBarMiddle,barX,barY,scale);
		this.setXYScale(this.PreloaderBarBottom,barX,barY,scale);
		haxe_Log.trace("RESIZING RESULT",{ fileName : "Preloader.hx", lineNumber : 295, className : "Preloader", methodName : "onResize", customParams : [this.PreloaderLogo.x,this.PreloaderBarTop.x]});
	}
	,setXYScale: function(bm,x,y,scale) {
		bm.set_x(x);
		bm.set_y(y);
		bm.set_scaleX(bm.set_scaleY(scale));
	}
	,preloadHTML5Audio: function() {
	}
	,estimatePreloading: function(e) {
		Preloader.estimateLoaded += 0.005;
		Preloader.estimateLoaded = Math.min(Preloader.estimateLoaded,0.8);
		this.updateProgressBar(Preloader.estimateLoaded);
	}
	,updateProgressBar: function(percent) {
		var offX = (this.PreloaderBarVars[0] - this.PreloaderBarVars[2]) / 2;
		this.PreloaderBarMiddle.bitmapData.copyPixels(this.PreloaderBarMiddleBMD,new openfl_geom_Rectangle(offX,0,this.PreloaderBarVars[2] * percent,this.PreloaderBarVars[1]),new openfl_geom_Point(offX,0));
	}
	,mochiEnd: function() {
		this.didLoad = true;
	}
	,onUpdate: function(bytesLoaded,bytesTotal) {
		if(Preloader.ShowBlank) return;
		var percentLoaded = bytesLoaded / bytesTotal;
		haxe_Log.trace("updating",{ fileName : "Preloader.hx", lineNumber : 656, className : "Preloader", methodName : "onUpdate", customParams : [percentLoaded,bytesLoaded,bytesTotal]});
		if(Audio.needsAudio) percentLoaded *= 0.8; else {
		}
		if(percentLoaded > Preloader.estimateLoaded) Preloader.estimateLoaded = percentLoaded; else percentLoaded = Preloader.estimateLoaded;
		if(percentLoaded > 1) percentLoaded == 1;
		this.updateProgressBar(percentLoaded);
	}
	,putBitmap: function(bmd) {
		Preloader.SponsorBMDInstance = bmd;
		this.set_visible(true);
		Preloader.bm = new openfl_display_Bitmap(bmd);
		var frameWidth = Math.min(this.firstWidth,this.firstHeight * 1.7791666666666666);
		var targetScale = frameWidth / bmd.component.width;
		targetScale = Math.min(targetScale,2);
		Preloader.bm.set_x((this.firstWidth - bmd.component.width * targetScale) / 2);
		Preloader.bm.set_y((this.firstHeight * 0.7 - bmd.component.height * targetScale) / 2);
		Preloader.bm.set_scaleX(Preloader.bm.set_scaleY(targetScale));
		openfl_Lib.get_current().addChildAt(Preloader.bm,0);
		Preloader.BMPsToRemove.push(Preloader.bm);
		return Preloader.bm;
	}
	,putBGBitmap: function(bmd) {
		this.set_visible(true);
		Preloader.bm = new openfl_display_Bitmap(bmd);
		var targetScale = this.firstHeight / bmd.component.height;
		Preloader.bm.set_x((this.firstWidth - bmd.component.width * targetScale) / 2);
		Preloader.bm.set_y(0);
		Preloader.bm.set_scaleX(Preloader.bm.set_scaleY(targetScale));
		openfl_Lib.get_current().addChildAt(Preloader.bm,0);
		Preloader.BMPsToRemove.push(Preloader.bm);
		return Preloader.bm;
	}
	,putCenterBitmap: function(bmd) {
		this.set_visible(true);
		Preloader.bm = new openfl_display_Bitmap(bmd);
		var targetScale = Math.min(this.firstWidth / bmd.component.width,this.firstHeight / bmd.component.height);
		Preloader.bm.set_x((this.firstWidth - bmd.component.width * targetScale) / 2);
		Preloader.bm.set_y(this.firstHeight - targetScale * bmd.component.height);
		Preloader.bm.set_scaleX(Preloader.bm.set_scaleY(targetScale));
		openfl_Lib.get_current().addChildAt(Preloader.bm,0);
		Preloader.BMPsToRemove.push(Preloader.bm);
		return Preloader.bm;
	}
	,putLowerBitmap: function(bmd) {
		this.set_visible(true);
		Preloader.bm = new openfl_display_Bitmap(bmd);
		var targetScale = this.firstWidth / bmd.component.width;
		if(this.firstHeight * 0.2 < bmd.component.height * targetScale) targetScale = this.firstHeight * 0.2 / bmd.component.height;
		targetScale = Math.min(targetScale,2);
		Preloader.bm.set_x((this.firstWidth - bmd.component.width * targetScale) / 2);
		Preloader.bm.set_y(this.firstHeight - targetScale * bmd.component.height);
		Preloader.bm.set_scaleX(Preloader.bm.set_scaleY(targetScale));
		openfl_Lib.get_current().addChildAt(Preloader.bm,0);
		Preloader.BMPsToRemove.push(Preloader.bm);
	}
	,onInit: function() {
		haxe_Log.trace("we init preloader",{ fileName : "Preloader.hx", lineNumber : 778, className : "Preloader", methodName : "onInit"});
	}
	,onLoaded: function() {
		this.removeEventListener("enterFrame",$bind(this,this.updateFrame));
		if(Preloader.ShowBlank) return;
		Preloader.instance = null;
		haxe_Log.trace("we done assets",{ fileName : "Preloader.hx", lineNumber : 789, className : "Preloader", methodName : "onLoaded"});
		Preloader.assetsLoaded = true;
		Preloader.Destroy();
		this.dispatchEvent(new openfl_events_Event("complete"));
	}
	,__class__: Preloader
});
var GamePreloader = function() {
	Preloader.call(this);
};
$hxClasses["GamePreloader"] = GamePreloader;
GamePreloader.__name__ = ["GamePreloader"];
GamePreloader.__super__ = Preloader;
GamePreloader.prototype = $extend(Preloader.prototype,{
	preloadHTML5Audio: function() {
		Preloader.prototype.preloadHTML5Audio.call(this);
		Preloader.loadAudioFiles(GamePreloader.SM,GamePreloader.M);
	}
	,__class__: GamePreloader
});
var Globals = function() { };
$hxClasses["Globals"] = Globals;
Globals.__name__ = ["Globals"];
Globals.TextDock11 = function(doc,str,ta) {
	oz_OzSprite.TextToSprites(doc,str,Objects.ctxtDOCK11,"1234567890:\",./-+$LEVS",18,ta);
};
Globals.TextNeonWhiteSmall = function(doc,str,ta) {
	oz_OzSprite.TextToSprites(doc,str,Objects.ctxtNeonWhiteSmall,"1234567890:/-.v",12,ta);
};
Globals.TextNeonBlackSmall = function(doc,str,ta) {
	oz_OzSprite.TextToSprites(doc,str,Objects.ctxtNeonBlackSmall,"1234567890:/-",12,ta);
};
Globals.ChangeLiveAndSave = function(delta,setChange) {
	if(setChange == null) setChange = true;
};
Globals.Init = function() {
	Globals.levelsXML = Xml.parse(haxe_Resource.getString("levels")).firstElement();
	Globals.definitionsXML = Xml.parse(haxe_Resource.getString("definitions")).firstElement();
	Globals.componentsXML = Xml.parse("<components CameraBound=\"TopLeft,BottomRight\" Axis2D=\"Vertical,Horizontal\" Message=\"PLAYER_DIE,PLAYER_WIN,PLAYER_JUMP,SMASH_BRICK,ENEMY_DIE,SHOW_JUMP,GET_COIN,GET_BANANA,OPEN_DOOR,SPRING_JUMP,BARREL_SHOT,ENTER_BARREL,TELEPORT,FINISH,TRIGGER\" LevelMarkType=\"Start,End\" RightAngle=\"TopLeft,TopRight,BottomLeft,BottomRight\">\n\t<c n=\"OzCameraController\">\n\t\t<p v=\"Horizontal\" t=\"Axis2D\" n=\"axis\"/>\n\t\t<p v=\"BottomLeft\" t=\"RightAngle\" n=\"rightAngle\"/>\n\t\t<p v=\"0\" t=\"Float\" n=\"offset\"/>\n\t\t<p v=\"true\" t=\"Bool\" n=\"allowDisable\"/>\n\t</c>\n\t<c n=\"OzCar\">\n\t\t<p v=\"550\" t=\"Float\" pf=\"true\" n=\"velLimitGround\"/>\n\t\t<p v=\"60\" t=\"Float\" pf=\"true\" n=\"velLimitGroundInertia\"/>\n\t\t<p v=\"45\" t=\"Float\" pf=\"true\" n=\"velIncrease\"/>\n\t\t<p v=\"10\" t=\"Float\" pf=\"true\" n=\"rotImpulse\"/>\n\t\t<p v=\"3\" t=\"Int\" pf=\"true\" n=\"cntBeforeRot\"/>\n\t\t<p v=\"0.8\" t=\"Float\" pf=\"true\" n=\"rotDecelRatio\"/>\n\t\t<p v=\"0.7\" t=\"Float\" pf=\"true\" n=\"angIncrease\"/>\n\t\t<p v=\"0.6\" t=\"Float\" pf=\"true\" n=\"angDecrease\"/>\n\t\t<p v=\"7\" t=\"Float\" pf=\"true\" n=\"angLimit\"/>\n\t\t<p v=\"0.1\" t=\"Float\" pf=\"true\" n=\"velRotOffset\"/>\n\t\t<p v=\"900\" t=\"Float\" pf=\"true\" n=\"velLimit\"/>\n\t\t<p v=\"30\" t=\"Int\" pf=\"true\" n=\"boostDuration\"/>\n\t\t<p v=\"1000\" t=\"Float\" pf=\"true\" n=\"boostPower\"/>\n\t</c>\n\t<c n=\"OzTileObject\"/>\n\t<c n=\"OzDistanceJoint\"/>\n\t<c n=\"OzEventSender\">\n\t\t<p v=\"PLAYER_WIN\" t=\"Message\" n=\"message\"/>\n\t\t<p v=\"true\" t=\"Bool\" n=\"killOnDispatch\"/>\n\t\t<p v=\"false\" t=\"Bool\" n=\"visible\"/>\n\t</c>\n\t<c n=\"OzFallOnTouch\">\n\t\t<p v=\"20\" t=\"Int\" n=\"offsetFrames\"/>\n\t</c>\n\t<c n=\"OzMoveAndRotate\">\n\t\t<p v=\"null\" t=\"OzGameObject\" n=\"trigger\"/>\n\t\t<p v=\"null\" t=\"OzGameObject\" n=\"nextPosition\"/>\n\t\t<p v=\"0\" t=\"Int\" n=\"offsetFrames\"/>\n\t\t<p v=\"0\" t=\"Int\" n=\"delayForward\"/>\n\t\t<p v=\"30\" t=\"Int\" n=\"forwardFrames\"/>\n\t\t<p v=\"0\" t=\"Int\" n=\"delayBackward\"/>\n\t\t<p v=\"30\" t=\"Int\" n=\"backwardFrames\"/>\n\t\t<p v=\"true\" t=\"Bool\" n=\"onlyForward\"/>\n\t\t<p v=\"false\" t=\"Bool\" n=\"repeat\"/>\n\t\t<p v=\"true\" t=\"Bool\" n=\"triggerOnce\"/>\n\t</c>\n\t<c n=\"OzPath\">\n\t\t<p v=\"true\" t=\"Bool\" n=\"visible\"/>\n\t</c>\n\t<c n=\"OzPulleyJoint\"/>\n\t<c n=\"OzRevoluteJoint\">\n\t\t<p v=\"0\" t=\"Float\" n=\"rotation\"/>\n\t\t<p v=\"true\" t=\"Bool\" n=\"isVisible\"/>\n\t</c>\n\t<c n=\"OzTrigger\"/>\n\t<c n=\"OzBoost\"/>\n\t<c n=\"OzCameraBound\">\n\t\t<p v=\"TopLeft\" t=\"CameraBound\" n=\"type\"/>\n\t</c>\n\t<c n=\"OzCarWheel\"/>\n\t<c n=\"OzCoin\">\n\t\t<p v=\"30\" t=\"Int\" pf=\"true\" n=\"BubbleDuration\"/>\n\t</c>\n\t<c n=\"OzFinish\"/>\n\t<c n=\"OzLevelMark\">\n\t\t<p v=\"Start\" t=\"LevelMarkType\" n=\"type\"/>\n\t</c>\n\t<c n=\"OzRoad\"/>\n\t<c n=\"OzSpikeWheel\">\n\t\t<p v=\"null\" t=\"OzGameObject\" n=\"path\"/>\n\t\t<p v=\"false\" t=\"Bool\" n=\"loop\"/>\n\t\t<p v=\"true\" t=\"Bool\" n=\"reverse\"/>\n\t\t<p v=\"100\" t=\"Float\" n=\"speed\"/>\n\t</c>\n</components>\n").firstElement();
	Globals.levelsXMLLoaded = true;
	Globals.definitionsXMLLoaded = true;
	Globals.componentsXMLLoaded = true;
	Globals.load();
	Audio.muteMusic = Globals.muteMusic;
	Audio.muteSound = Globals.muteSound;
};
Globals.load = function() {
	Globals.so = openfl_net_SharedObject.getLocal("n555biker550");
	if(Globals.so.data == null || Globals.so.data.levelScores == null) {
		Globals.so.data.ratedGame = 0;
		Globals.so.data.edit_data = "<level/>";
		Globals.so.data.levelScores = [];
		var _g = 0;
		while(_g < 40) {
			var i = _g++;
			Globals.so.data.levelScores[i] = -1;
		}
		Globals.so.data.liveChange = -1;
		Globals.so.data.lives = Globals.MAX_LIVES;
		Globals.so.data.premiumUpgrade = "";
		Globals.so.data.currentSkin = 0;
		Globals.so.data.seenSkins = 1;
		Globals.so.data.upgrades = [];
		var _g1 = 0;
		while(_g1 < 4) {
			var i1 = _g1++;
			Globals.so.data.upgrades[i1] = 0;
		}
		Globals.so.data.cars = 1;
		Globals.so.data.currentCar = 0;
		Globals.so.data.coins = 0;
		Globals.so.data.numRuns = 0;
		Globals.so.data.totalScore = 0;
		Globals.so.data.lastScore = 0;
		Globals.so.data.bestScore = 0;
		Globals.so.data.achievements = 0;
		Globals.so.data.muteMusic = false;
		Globals.so.data.muteSound = false;
	}
	Globals.edit_data = Xml.parse(js_Boot.__cast(Globals.so.data.edit_data , String)).firstElement();
	Globals.levelScores = Globals.so.data.levelScores;
	Globals.ratedGame = Globals.so.data.ratedGame;
	Globals.liveChange = Globals.so.data.liveChange;
	Globals.lives = Globals.so.data.lives;
	Globals.premiumUpgrade = Globals.so.data.premiumUpgrade;
	Globals.currentSkin = Globals.so.data.currentSkin;
	Globals.seenSkins = Globals.so.data.seenSkins;
	Globals.upgrades = Globals.so.data.upgrades;
	Globals.cars = Globals.so.data.cars;
	Globals.currentCar = Globals.so.data.currentCar;
	Globals.coins = Globals.so.data.coins;
	Globals.numRuns = Globals.so.data.numRuns;
	Globals.totalScore = Globals.so.data.totalScore;
	Globals.lastScore = Globals.so.data.lastScore;
	Globals.bestScore = Globals.so.data.bestScore;
	Globals.currentColor = Globals.so.data.currentColor;
	Globals.overtakes = Globals.so.data.overtakes;
	Globals.achievements = Globals.so.data.achievements;
	Globals.muteMusic = Globals.so.data.muteMusic;
	Globals.muteSound = Globals.so.data.muteSound;
};
Globals.getTotalScore = function() {
	var res = 0;
	var _g = 0;
	while(_g < 40) {
		var i = _g++;
		if(Globals.levelScores[i] > 0) res += Globals.levelScores[i];
	}
	return res;
};
Globals.save = function() {
	Globals.so.data.edit_data = haxe_xml_Printer.print(Globals.edit_data);
	Globals.so.data.levelScores = Globals.levelScores;
	Globals.so.data.ratedGame = Globals.ratedGame;
	Globals.so.data.lives = Globals.lives;
	Globals.so.data.liveChange = Globals.liveChange;
	Globals.so.data.premiumUpgrade = Globals.premiumUpgrade;
	Globals.so.data.currentSkin = Globals.currentSkin;
	Globals.so.data.seenSkins = Globals.seenSkins;
	Globals.so.data.upgrades = Globals.upgrades;
	Globals.so.data.money = Globals.money;
	Globals.so.data.cars = Globals.cars;
	Globals.so.data.currentCar = Globals.currentCar;
	Globals.so.data.coins = Globals.coins;
	Globals.so.data.numRuns = Globals.numRuns;
	Globals.so.data.totalScore = Globals.totalScore;
	Globals.so.data.bestScore = Globals.bestScore;
	Globals.so.data.lastScore = Globals.lastScore;
	Globals.so.data.currentColor = Globals.currentColor;
	Globals.so.data.achievements = Globals.achievements;
	Globals.so.data.overtakes = Globals.overtakes;
	Globals.so.data.muteMusic = Globals.muteMusic;
	Globals.so.data.muteSound = Globals.muteSound;
	haxe_Log.trace("WE SAVED",{ fileName : "Globals.hx", lineNumber : 471, className : "Globals", methodName : "save", customParams : [Globals.so.data.muteMusic,Globals.so.data.muteSound]});
	var flushStatus = null;
	try {
		flushStatus = js_Boot.__cast(Globals.so.flush() , String);
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		haxe_Log.trace("couldnt write...",{ fileName : "Globals.hx", lineNumber : 492, className : "Globals", methodName : "save"});
	}
	if(flushStatus != null) {
		if(flushStatus == js_Boot.__cast(openfl_net_SharedObjectFlushStatus.PENDING , String)) haxe_Log.trace("requesting permission to save",{ fileName : "Globals.hx", lineNumber : 506, className : "Globals", methodName : "save"});
		if(flushStatus == js_Boot.__cast(openfl_net_SharedObjectFlushStatus.FLUSHED , String)) {
		}
	}
};
Globals.moreGames = function(e) {
	dev_DevUtil.getURL("https://codecanyon.net/user/devgru");
	return;
	if(Globals.isHooda) dev_DevUtil.getURL(""); else dev_DevUtil.getURL("");
};
Globals.solution = function(e) {
	dev_DevUtil.getURL("l");
};
Globals.facebook = function(e) {
	dev_DevUtil.getURL("");
};
Globals.twitter = function(e) {
	dev_DevUtil.getURL("");
};
Globals.amazon = function(e) {
	var goURL = Globals.AmazonURL;
	if(goURL == null || goURL.length == 0) goURL = Globals.DefaultMobileURL;
	dev_DevUtil.getURL(goURL);
};
Globals.googleplay = function(e) {
	var goURL = Globals.GooglePlayURL;
	if(goURL == null || goURL.length == 0) goURL = Globals.DefaultMobileURL;
	dev_DevUtil.getURL(goURL);
};
Globals.appstore = function(e) {
	var goURL = Globals.AppStoreURL;
	if(goURL == null || goURL.length == 0) goURL = Globals.DefaultMobileURL;
	dev_DevUtil.getURL(goURL);
};
var HolaverseAPI = function() { };
$hxClasses["HolaverseAPI"] = HolaverseAPI;
HolaverseAPI.__name__ = ["HolaverseAPI"];
HolaverseAPI.Init = function(appId) {
};
HolaverseAPI.ShowAd = function() {
};
HolaverseAPI.UpdateScore = function(score) {
};
HolaverseAPI.Comment = function(e) {
};
HolaverseAPI.Share = function(title,desc,shareUrl) {
};
var HxOverrides = function() { };
$hxClasses["HxOverrides"] = HxOverrides;
HxOverrides.__name__ = ["HxOverrides"];
HxOverrides.strDate = function(s) {
	var _g = s.length;
	switch(_g) {
	case 8:
		var k = s.split(":");
		var d = new Date();
		d.setTime(0);
		d.setUTCHours(k[0]);
		d.setUTCMinutes(k[1]);
		d.setUTCSeconds(k[2]);
		return d;
	case 10:
		var k1 = s.split("-");
		return new Date(k1[0],k1[1] - 1,k1[2],0,0,0);
	case 19:
		var k2 = s.split(" ");
		var y = k2[0].split("-");
		var t = k2[1].split(":");
		return new Date(y[0],y[1] - 1,y[2],t[0],t[1],t[2]);
	default:
		throw new js__$Boot_HaxeError("Invalid date format : " + s);
	}
};
HxOverrides.cca = function(s,index) {
	var x = s.charCodeAt(index);
	if(x != x) return undefined;
	return x;
};
HxOverrides.substr = function(s,pos,len) {
	if(pos != null && pos != 0 && len != null && len < 0) return "";
	if(len == null) len = s.length;
	if(pos < 0) {
		pos = s.length + pos;
		if(pos < 0) pos = 0;
	} else if(len < 0) len = s.length + len - pos;
	return s.substr(pos,len);
};
HxOverrides.indexOf = function(a,obj,i) {
	var len = a.length;
	if(i < 0) {
		i += len;
		if(i < 0) i = 0;
	}
	while(i < len) {
		if(a[i] === obj) return i;
		i++;
	}
	return -1;
};
HxOverrides.remove = function(a,obj) {
	var i = HxOverrides.indexOf(a,obj,0);
	if(i == -1) return false;
	a.splice(i,1);
	return true;
};
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var openfl_geom_Point = function(u,v) {
	this.x = u != null?u:0;
	this.y = v != null?v:0;
};
$hxClasses["openfl.geom.Point"] = openfl_geom_Point;
openfl_geom_Point.__name__ = ["openfl","geom","Point"];
openfl_geom_Point.prototype = {
	setTo: function(u,v) {
		this.x = u;
		this.y = v;
	}
	,__class__: openfl_geom_Point
};
var Input = function() { };
$hxClasses["Input"] = Input;
Input.__name__ = ["Input"];
Input.key = function(a) {
	return HxOverrides.cca(a,0);
};
Input["is"] = function(keyCode,proc,setProc) {
	if(setProc == null) setProc = true;
	if(proc == null) proc = false;
	if(Input.down[keyCode] && (!proc || Input.kproc[keyCode])) {
		if(proc && setProc) Input.kproc[keyCode] = true;
		return true;
	} else return false;
};
Input.isUP = function(proc,setProc) {
	if(setProc == null) setProc = true;
	if(proc == null) proc = false;
	return (Input.down[38] && (!proc || Input.kproc[38])?(function($this) {
		var $r;
		if(proc && setProc) Input.kproc[38] = true;
		$r = true;
		return $r;
	}(this)):false) || Input["is"](Input.key("W"),proc,setProc);
};
Input.init = function(doc) {
	Input.mouseWheelDelta = 0;
	Input.mctrl = false;
	Input.mshift = false;
	Input.kctrl = false;
	Input.kshift = false;
	Input.down = [];
	Input.kproc = [];
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
		Input.down.push(false);
		Input.kproc.push(false);
	}
	Input.hasFocus = true;
	Input.iDoc = doc;
	Input.iStage = doc.get_stage();
	doc.get_stage().addEventListener("keydown",Input.keyDownHandler);
	doc.get_stage().addEventListener("keyup",Input.keyUpHandler);
	doc.get_stage().addEventListener("mouseMove",Input.mouseMoveHandler);
	doc.get_stage().addEventListener("mouseDown",Input.mouseDownHandler);
	doc.get_stage().addEventListener("mouseUp",Input.mouseUpHandler);
	doc.get_stage().addEventListener("mouseWheel",Input.mouseWheelHandler);
	Input.tx = new haxe_ds_IntMap();
	Input.ty = new haxe_ds_IntMap();
	Input.tClickedSprite = new haxe_ds_IntMap();
	Input.tClicked = new haxe_ds_IntMap();
	openfl_ui_Multitouch.inputMode = openfl_ui_MultitouchInputMode.TOUCH_POINT;
	openfl_Lib.get_current().get_stage().addEventListener("touchMove",Input.touchMoveHandler);
	openfl_Lib.get_current().get_stage().addEventListener("touchBegin",Input.touchDownHandler);
	openfl_Lib.get_current().get_stage().addEventListener("touchEnd",Input.touchUpHandler);
	doc.get_stage().addEventListener("blur",Input.focusOutHandler);
	doc.get_stage().addEventListener("focus",Input.focusInHandler);
	if(window.navigator.userAgent.toLowerCase().indexOf("android") > -1) {
		window.removeEventListener("mousedown",($_=openfl_Lib.get_stage(),$bind($_,$_.onMouse)));
		window.removeEventListener("mouseup",($_=openfl_Lib.get_stage(),$bind($_,$_.onMouse)));
		window.removeEventListener("mousemove",($_=openfl_Lib.get_stage(),$bind($_,$_.onMouse)));
		haxe_Log.trace("We're on android",{ fileName : "Input.hx", lineNumber : 151, className : "Input", methodName : "init"});
	} else haxe_Log.trace("We're not on Android",{ fileName : "Input.hx", lineNumber : 154, className : "Input", methodName : "init"});
};
Input.reFocus = function(d) {
	if(Input.iStage.get_focus() != Input.iStage) Input.iStage.set_focus(Input.iStage);
};
Input.keyDownHandler = function(e) {
	var k = e.keyCode;
	Input.down[k % 256] = true;
	Input.kshift = e.shiftKey;
	Input.kctrl = e.ctrlKey;
};
Input.keyUpHandler = function(e) {
	var k = e.keyCode;
	Input.down[k % 256] = false;
	Input.kproc[k % 256] = false;
};
Input.SetMouseXY = function(px,py) {
	Input.mx = px - Input.mOffsetX;
	Input.my = py - Input.mOffsetY;
	Input.mx -= platforms_PlatformHTML5.offsetX;
	Input.my -= platforms_PlatformHTML5.offsetY;
	Input.mx /= Main.instance.scaleX;
	Input.my /= Main.instance.scaleY;
};
Input.SetTouchXY = function(touchID,px,py) {
	var touchX = px - Input.mOffsetX;
	var touchY = py - Input.mOffsetY;
	touchX -= platforms_PlatformHTML5.offsetX;
	touchY -= platforms_PlatformHTML5.offsetY;
	touchX /= Main.instance.scaleX;
	touchY /= Main.instance.scaleY;
	Input.tx.h[touchID] = touchX;
	Input.ty.h[touchID] = touchY;
};
Input.mouseMoveHandler = function(e) {
	Input.SetMouseXY(e.stageX,e.stageY);
};
Input.mouseWheelHandler = function(e) {
	Input.mouseWheelDelta = e.delta;
};
Input.UpdateSpriteUnder = function() {
	Input.spriteUnder = oz_OzSprite.GetSpriteAtPoint(Main.instance.doc,Input.mx,Input.my);
};
Input.mouseDownHandler = function(e) {
	Input.SetMouseXY(e.stageX,e.stageY);
	Input.UpdateSpriteUnder();
	if(Input.clicked && Input.lastClicked + 1 < Main.instance.frameCount) Input.clicked = false;
	if(!Input.clicked && Input.spriteUnder != null && Input.spriteUnder.eventListeners != null && Input.spriteUnder.eventListeners.h.hasOwnProperty(2)) {
		Input.spriteUnder.eventListeners.h[2](new oz_OzEvent(Input.spriteUnder));
		if(Input.ClickSound != null && (Input.spriteUnder.flags & 512) > 0) Audio.PlaySound(Input.ClickSound);
	} else if(!Input.clicked && Input.spriteUnder != null && Input.spriteUnder.eventListeners != null && Input.spriteUnder.eventListeners.h.hasOwnProperty(1)) {
	} else Input.mdown = true;
	Input.mup = false;
	Input.mctrl = e.ctrlKey;
	Input.mshift = e.shiftKey;
	Input.clicked = true;
	Input.lastClicked = Main.instance.frameCount;
};
Input.mouseUpHandler = function(e) {
	Input.clicked = false;
	Input.mdown = false;
	Input.mup = true;
};
Input.touchMoveHandler = function(e) {
	Input.SetTouchXY(e.touchPointID,e.stageX,e.stageY);
	Input.tClickedSprite.set(e.touchPointID,oz_OzSprite.GetSpriteAtPoint(Main.instance.doc,Input.tx.h[e.touchPointID],Input.ty.h[e.touchPointID]));
};
Input.GetTouchPointByFirstTouched = function(touched) {
	if(touched < 0 || touched >= Input.TouchIdArrayLength) return null; else {
		var tid = Input.TouchIdArray[touched];
		Input._pTouch.setTo(Input.tx.h[tid],Input.ty.h[tid]);
		return Input._pTouch;
	}
};
Input.GetLastTouchPoint = function() {
	var lid = Input.GetLastTouchId();
	if(lid >= 0) {
		Input._pTouch.setTo(Input.tx.h[lid],Input.ty.h[lid]);
		return Input._pTouch;
	}
	return null;
};
Input.AddTouchId = function(id) {
	var _g1 = 0;
	var _g = Input.TouchIdArrayLength;
	while(_g1 < _g) {
		var i = _g1++;
		var j = Input.TouchIdArrayLength - i - 1;
		Input.TouchIdArray[j + 1] = Input.TouchIdArray[j];
	}
	Input.TouchIdArrayLength++;
	Input.TouchIdArray[0] = id;
};
Input.RemoveTouchId = function(id) {
	var many = 0;
	var _g1 = 0;
	var _g = Input.TouchIdArrayLength;
	while(_g1 < _g) {
		var i = _g1++;
		if(Input.TouchIdArray[i] == id) many++; else Input.TouchIdArray[i - many] = Input.TouchIdArray[i];
	}
	Input.TouchIdArrayLength -= many;
};
Input.GetLastTouchId = function() {
	if(Input.TouchIdArrayLength > 0) return Input.TouchIdArray[0];
	return -1;
};
Input.touchDownHandler = function(e) {
	Input.AddTouchId(e.touchPointID);
	Input.SetTouchXY(e.touchPointID,e.stageX,e.stageY);
	Input.tClickedSprite.set(e.touchPointID,oz_OzSprite.GetSpriteAtPoint(Main.instance.doc,Input.tx.h[e.touchPointID],Input.ty.h[e.touchPointID]));
};
Input.touchUpHandler = function(e) {
	Input.tx.remove(e.touchPointID);
	Input.ty.remove(e.touchPointID);
	Input.RemoveTouchId(e.touchPointID);
	Input.tClickedSprite.remove(e.touchPointID);
};
Input.focusOutHandler = function(e) {
	Input.hasFocus = false;
	var _g = 0;
	while(_g < 256) {
		var i = _g++;
	}
};
Input.focusInHandler = function(e) {
	Input.hasFocus = true;
};
var List = function() {
	this.length = 0;
};
$hxClasses["List"] = List;
List.__name__ = ["List"];
List.prototype = {
	add: function(item) {
		var x = [item];
		if(this.h == null) this.h = x; else this.q[1] = x;
		this.q = x;
		this.length++;
	}
	,__class__: List
};
var OzScreenOrientation = $hxClasses["OzScreenOrientation"] = { __ename__ : ["OzScreenOrientation"], __constructs__ : ["PORTRAIT","LANDSCAPE"] };
OzScreenOrientation.PORTRAIT = ["PORTRAIT",0];
OzScreenOrientation.PORTRAIT.toString = $estr;
OzScreenOrientation.PORTRAIT.__enum__ = OzScreenOrientation;
OzScreenOrientation.LANDSCAPE = ["LANDSCAPE",1];
OzScreenOrientation.LANDSCAPE.toString = $estr;
OzScreenOrientation.LANDSCAPE.__enum__ = OzScreenOrientation;
Math.__name__ = ["Math"];
var oz_OzMovieClip = function(_name,_frames,_tilesheetId) {
	this.name = _name;
	this.frames = _frames;
	this.tilesheetId = _tilesheetId;
};
$hxClasses["oz.OzMovieClip"] = oz_OzMovieClip;
oz_OzMovieClip.__name__ = ["oz","OzMovieClip"];
oz_OzMovieClip.prototype = {
	__class__: oz_OzMovieClip
};
var Objects = function() { };
$hxClasses["Objects"] = Objects;
Objects.__name__ = ["Objects"];
Objects.Register = function() {
	Objects.MovieClips = [Objects.bmpBrick,Objects.bmpChain,Objects.bmpLine,Objects.bmpPathEdge,Objects.bmpPathEdgeRed,Objects.bmpRedChess,Objects.bmpRedFill,Objects.bmpSysFill,Objects.bmpTealFill,Objects.cbtnAwards1,Objects.cbtnBack1,Objects.cbtnBack4,Objects.cbtnChooseSkin,Objects.cbtnCredits1,Objects.cbtnFacebook,Objects.cbtnIconLock,Objects.cbtnLevel,Objects.cbtnLevels,Objects.cbtnLevels1,Objects.cbtnLevels2,Objects.cbtnMore1,Objects.cbtnMore2,Objects.cbtnMoreLevels,Objects.cbtnMusic1,Objects.cbtnNext,Objects.cbtnNext1,Objects.cbtnPause1,Objects.cbtnPlay1,Objects.cbtnPlay2,Objects.cbtnPlay3,Objects.cbtnRestart1,Objects.cbtnRestart2,Objects.cbtnRestore1,Objects.cbtnScores1,Objects.cbtnSide,Objects.cbtnSkin,Objects.cbtnSolution1,Objects.cbtnSound1,Objects.cbtnTrack,Objects.cbtnTwitter,Objects.cbtnWalkthrough,Objects.cbtnX2,Objects.cmcAimBall,Objects.cmcAmazon,Objects.cmcAppStore,Objects.cmcAwardHighlight,Objects.cmcBG,Objects.cmcBGFront0,Objects.cmcBGFront1,Objects.cmcBGFront2,Objects.cmcBGFrontRect,Objects.cmcBGGGG,Objects.cmcBackMountain0,Objects.cmcBackMountain1,Objects.cmcBackMountain2,Objects.cmcBarrier,Objects.cmcBaseUpgradeLine,Objects.cmcBestScore,Objects.cmcBoost,Objects.cmcCameraBound,Objects.cmcCarChassis,Objects.cmcCarWheel,Objects.cmcChooseARideTxt,Objects.cmcClickToStart,Objects.cmcCoin,Objects.cmcCoinIcon,Objects.cmcControlInstructions,Objects.cmcCrashStar,Objects.cmcCreatedBy,Objects.cmcCreditsText,Objects.cmcCross,Objects.cmcDashedCircle,Objects.cmcDashedLine,Objects.cmcDialog,Objects.cmcDialogBG,Objects.cmcFinish,Objects.cmcGoldStar,Objects.cmcGooglePlay,Objects.cmcGuiStar,Objects.cmcIconStarSmaller,Objects.cmcLevelMark,Objects.cmcLevelStars,Objects.cmcLineBonus,Objects.cmcLivesCounter,Objects.cmcLock,Objects.cmcMusicBy,Objects.cmcNewStar,Objects.cmcPathNode,Objects.cmcPathNodeRed,Objects.cmcPausedText,Objects.cmcRay1,Objects.cmcRotateDeviceSprite,Objects.cmcScore,Objects.cmcShowPlayer,Objects.cmcSmallerLock,Objects.cmcSpikeWheelBig,Objects.cmcSpikeWheelSmall,Objects.cmcSponsor,Objects.cmcStar,Objects.cmcStarBlue,Objects.cmcStarCount,Objects.cmcStarGold,Objects.cmcStarIcon,Objects.cmcSuperHoodaTitle,Objects.cmcTapToStart,Objects.cmcTick,Objects.cmcTotalUpgradeLine,Objects.cmcTouchDevice,Objects.cmcTryStars,Objects.cmcWheelFX,Objects.cmcWinStar,Objects.cmcWindowsStore,Objects.cmcYepi,Objects.cmcYes,Objects.ctxtBestTime,Objects.ctxtCompleted,Objects.ctxtDOCK11,Objects.ctxtDOCK11Gold,Objects.ctxtNeonBlackSmall,Objects.ctxtNeonWhiteBig,Objects.ctxtNeonWhiteSmall,Objects.ctxtTime,Objects.sponsorGGG,Objects.sysBlueArrow,Objects.sysRateStar,Objects.sysRectBlack,Objects.sysRedArrow,Objects.sysWhiteRect];
	oz_OzSprite.RegisterTilesheet(Objects.BitmapName,Objects.MovieClips,Objects.Frames);
};
var ObjectsLayouts = function() { };
$hxClasses["ObjectsLayouts"] = ObjectsLayouts;
ObjectsLayouts.__name__ = ["ObjectsLayouts"];
ObjectsLayouts.cmcCredits = function(doc) {
	var t;
	t = oz_OzSprite.New(Objects.cmcDialog);
	doc.addChild(t);
	t.name = "dlg";
	t.set_x(360);
	t.set_y(320);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnX2);
	doc.addChild(t);
	t.name = "btnBack";
	t.set_x(511);
	t.set_y(173);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcSponsor);
	doc.addChild(t);
	t.name = "sponsor";
	t.set_x(360);
	t.set_y(291);
	t.set_rotation(0);
	t.set_scaleX(1.9647216796875);
	t.set_scaleY(1.9647216796875);
	t.set_alpha(1);
};
ObjectsLayouts.cmcPaused = function(doc) {
	var t;
	t = oz_OzSprite.New(Objects.cmcDialog);
	doc.addChild(t);
	t.name = "dlg";
	t.set_x(360);
	t.set_y(320);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnLevels2);
	doc.addChild(t);
	t.name = "btnLevels";
	t.set_x(275);
	t.set_y(363);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcPausedText);
	doc.addChild(t);
	t.name = "pause";
	t.set_x(365);
	t.set_y(186);
	t.set_rotation(0);
	t.set_scaleX(1.40460205078125);
	t.set_scaleY(1.40460205078125);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnMusic1);
	doc.addChild(t);
	t.name = "btnMusic";
	t.set_x(-91);
	t.set_y(253);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnSound1);
	doc.addChild(t);
	t.name = "btnSound";
	t.set_x(372);
	t.set_y(254);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnMore2);
	doc.addChild(t);
	t.name = "btnMore";
	t.set_x(360);
	t.set_y(364);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnRestart2);
	doc.addChild(t);
	t.name = "btnRestart";
	t.set_x(451);
	t.set_y(364);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnX2);
	doc.addChild(t);
	t.name = "btnBack";
	t.set_x(511);
	t.set_y(173);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcSponsor);
	doc.addChild(t);
	t.name = "sponsor";
	t.set_x(360);
	t.set_y(452);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
};
ObjectsLayouts.cmcPlay = function(doc) {
	var t;
	t = oz_OzSprite.New(Objects.cmcBG);
	doc.addChild(t);
	t.name = "bg";
	t.set_x(-9);
	t.set_y(0);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnMusic1);
	doc.addChild(t);
	t.name = "btnMusic";
	t.set_x(-54);
	t.set_y(25);
	t.set_rotation(0);
	t.set_scaleX(0.7083740234375);
	t.set_scaleY(0.7073516845703125);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnSound1);
	doc.addChild(t);
	t.name = "btnSound";
	t.set_x(48);
	t.set_y(23);
	t.set_rotation(0);
	t.set_scaleX(0.7083740234375);
	t.set_scaleY(0.7073516845703125);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcSponsor);
	doc.addChild(t);
	t.name = "sponsor";
	t.set_x(189);
	t.set_y(588);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnPause1);
	doc.addChild(t);
	t.name = "btnPause";
	t.set_x(40);
	t.set_y(33);
	t.set_rotation(0);
	t.set_scaleX(0.903472900390625);
	t.set_scaleY(0.903472900390625);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcControlInstructions);
	doc.addChild(t);
	t.name = "instructions";
	t.set_x(365);
	t.set_y(568);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtCoins";
	t.set_x(687);
	t.set_y(15);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnPlay1);
	doc.addChild(t);
	t.name = "btnPlay";
	t.set_x(360);
	t.set_y(470);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtScore";
	t.set_x(359);
	t.set_y(117);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtBonus";
	t.set_x(399);
	t.set_y(117);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcSuperHoodaTitle);
	doc.addChild(t);
	t.name = "title";
	t.set_x(362);
	t.set_y(107);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcBestScore);
	doc.addChild(t);
	t.name = "bestScore";
	t.set_x(470);
	t.set_y(235);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtLastScore";
	t.set_x(250);
	t.set_y(195);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtBestScore";
	t.set_x(470);
	t.set_y(195);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcScore);
	doc.addChild(t);
	t.name = "lastScore";
	t.set_x(250);
	t.set_y(235);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnSkin);
	doc.addChild(t);
	t.name = "btnSkins";
	t.set_x(234);
	t.set_y(470);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcCoinIcon);
	doc.addChild(t);
	t.name = "iconCoins";
	t.set_x(706);
	t.set_y(15);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtStars";
	t.set_x(684);
	t.set_y(15);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnCredits1);
	doc.addChild(t);
	t.name = "btnCredits";
	t.set_x(360);
	t.set_y(580);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnLevels);
	doc.addChild(t);
	t.name = "btnLevels";
	t.set_x(473);
	t.set_y(468);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonWhiteSmall);
	doc.addChild(t);
	t.name = "txtTime";
	t.set_x(713);
	t.set_y(37);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonWhiteSmall);
	doc.addChild(t);
	t.name = "txtTargetTime";
	t.set_x(685);
	t.set_y(14);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnSide);
	doc.addChild(t);
	t.name = "right";
	t.set_x(560);
	t.set_y(320);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnSide);
	doc.addChild(t);
	t.name = "left";
	t.set_x(160);
	t.set_y(320);
	t.set_rotation(0);
	t.set_scaleX(-1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnBack4);
	doc.addChild(t);
	t.name = "btnLevelsBack";
	t.set_x(159);
	t.set_y(42);
	t.set_rotation(0);
	t.set_scaleX(0.8701324462890625);
	t.set_scaleY(0.8701324462890625);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcIconStarSmaller);
	doc.addChild(t);
	t.name = "iconStar";
	t.set_x(704);
	t.set_y(13);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcStarIcon);
	doc.addChild(t);
	t.name = "iconTargetStar";
	t.set_x(708);
	t.set_y(15);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonBlackSmall);
	doc.addChild(t);
	t.name = "txtTargetStars";
	t.set_x(705);
	t.set_y(14);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
};
ObjectsLayouts.cmcSkins = function(doc) {
	var t;
	t = oz_OzSprite.New(Objects.cmcDialog);
	doc.addChild(t);
	t.name = "dlg";
	t.set_x(360);
	t.set_y(320);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnPlay3);
	doc.addChild(t);
	t.name = "btnNext";
	t.set_x(360);
	t.set_y(440);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcChooseARideTxt);
	doc.addChild(t);
	t.name = "chooseARide";
	t.set_x(360);
	t.set_y(177);
	t.set_rotation(0);
	t.set_scaleX(1.027587890625);
	t.set_scaleY(1.027130126953125);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin1";
	t.set_x(232);
	t.set_y(260);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin2";
	t.set_x(317);
	t.set_y(260);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin3";
	t.set_x(404);
	t.set_y(260);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin4";
	t.set_x(491);
	t.set_y(260);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin5";
	t.set_x(231);
	t.set_y(345);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin6";
	t.set_x(317);
	t.set_y(345);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin7";
	t.set_x(404);
	t.set_y(345);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnChooseSkin);
	doc.addChild(t);
	t.name = "skin8";
	t.set_x(491);
	t.set_y(345);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
};
ObjectsLayouts.cmcYouWin = function(doc) {
	var t;
	t = oz_OzSprite.New(Objects.cbtnNext);
	doc.addChild(t);
	t.name = "btnNext";
	t.set_x(360);
	t.set_y(481);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnLevels2);
	doc.addChild(t);
	t.name = "btnLevels";
	t.set_x(250);
	t.set_y(545);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cbtnRestart2);
	doc.addChild(t);
	t.name = "btnRestart";
	t.set_x(471);
	t.set_y(545);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonWhiteSmall);
	doc.addChild(t);
	t.name = "txtBestTime";
	t.set_x(469);
	t.set_y(225);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonWhiteSmall);
	doc.addChild(t);
	t.name = "txtTime";
	t.set_x(240);
	t.set_y(225);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtDOCK11);
	doc.addChild(t);
	t.name = "txtLevelName";
	t.set_x(360);
	t.set_y(50);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcWinStar);
	doc.addChild(t);
	t.name = "star1";
	t.set_x(240);
	t.set_y(363);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtCompleted);
	doc.addChild(t);
	t.name = "";
	t.set_x(359);
	t.set_y(110);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtTime);
	doc.addChild(t);
	t.name = "";
	t.set_x(244);
	t.set_y(200);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtBestTime);
	doc.addChild(t);
	t.name = "bestTime";
	t.set_x(472);
	t.set_y(200);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcWinStar);
	doc.addChild(t);
	t.name = "star2";
	t.set_x(360);
	t.set_y(303);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.cmcWinStar);
	doc.addChild(t);
	t.name = "star3";
	t.set_x(480);
	t.set_y(363);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonWhiteSmall);
	doc.addChild(t);
	t.name = "txtSilverTime";
	t.set_x(360);
	t.set_y(351);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
	t = oz_OzSprite.New(Objects.ctxtNeonWhiteSmall);
	doc.addChild(t);
	t.name = "txtGoldTime";
	t.set_x(480);
	t.set_y(411);
	t.set_rotation(0);
	t.set_scaleX(1);
	t.set_scaleY(1);
	t.set_alpha(1);
};
var openfl_display_BitmapData = function(w,h,t,c) {
	if(t == null) t = true;
	this.__sync = 1;
	this.__transparent = t;
	this.__revision = 0;
	this.__rect = new openfl_geom_Rectangle(0,0,w,h);
	this.component = openfl_bitfive_NodeTools.createCanvasElement();
	this.component.width = w;
	this.component.height = h;
	this.context = this.component.getContext("2d");
	openfl_display_BitmapData.setSmoothing(this.context,true);
	this.__pixelData = this.context.createImageData(1,1);
	if(c == null) c = -1;
	if(!t) c |= -16777216;
	if((c & -16777216) != 0) this.fillRect(this.__rect,c);
};
$hxClasses["openfl.display.BitmapData"] = openfl_display_BitmapData;
openfl_display_BitmapData.__name__ = ["openfl","display","BitmapData"];
openfl_display_BitmapData.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_BitmapData.setSmoothing = function(o,v) {
	o.imageSmoothingEnabled = o.oImageSmoothingEnabled = o.msImageSmoothingEnabled = o.webkitImageSmoothingEnabled = o.mozImageSmoothingEnabled = v;
};
openfl_display_BitmapData.makeColor = function(color) {
	return "rgba(" + (color >> 16 & 255) + "," + (color >> 8 & 255) + "," + (color & 255) + "," + ((color >> 24 & 255) / 255).toFixed(4) + ")";
};
openfl_display_BitmapData.prototype = {
	fillRect: function(area,color) {
		if(area == null || area.width <= 0 || area.height <= 0) return;
		if(area.equals(this.__rect) && this.__transparent && (color & -16777216) == 0) {
			this.component.width = this.component.width;
			return;
		}
		if(!this.__transparent) color |= -16777216; else if((color & -16777216) != -16777216) this.context.clearRect(area.x,area.y,area.width,area.height);
		if((color & -16777216) != 0) {
			this.context.fillStyle = openfl_display_BitmapData.makeColor(color);
			this.context.fillRect(area.x,area.y,area.width,area.height);
		}
		this.__sync |= 5;
	}
	,clone: function() {
		this.syncCanvas();
		var r = new openfl_display_BitmapData(this.component.width,this.component.height,this.__transparent,0);
		r.context.drawImage(this.component,0,0);
		r.__sync |= 5;
		return r;
	}
	,handle: function() {
		this.syncCanvas();
		if((this.__sync & 4) != 0) {
			this.__revision++;
			this.__sync &= -5;
		}
		return this.component;
	}
	,drawToSurface: function(cnv,ctx,matrix,ctr,blendMode,clipRect,smoothing) {
		ctx.save();
		if(smoothing != null && ctx.imageSmoothingEnabled != smoothing) openfl_display_BitmapData.setSmoothing(ctx,smoothing);
		if(matrix != null) {
			if(matrix.a == 1 && matrix.b == 0 && matrix.c == 0 && matrix.d == 1) ctx.translate(matrix.tx,matrix.ty); else ctx.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
		}
		ctx.drawImage(this.handle(),0,0);
		ctx.restore();
	}
	,copyPixels: function(sourceBitmapData,sourceRect,destPoint,alphaBitmapData,alphaPoint,mergeAlpha) {
		if(mergeAlpha == null) mergeAlpha = false;
		this.syncCanvas();
		if(alphaBitmapData != null) throw new js__$Boot_HaxeError("alphaBitmapData is not supported yet.");
		var bit = sourceBitmapData.handle();
		var bw;
		var bh;
		var tw = this.component.width;
		var th = this.component.height;
		if(bit == null || (bw = bit.width) <= 0 || (bh = bit.height) <= 0) return;
		var dx = ~(~destPoint.x);
		var dy = ~(~destPoint.y);
		var sx;
		var sy;
		var sw;
		var sh;
		if(sourceRect != null) {
			sx = sourceRect.x;
			sy = sourceRect.y;
			sw = sourceRect.width;
			sh = sourceRect.height;
			if(sx < 0) {
				sw += sx;
				sx = 0;
			}
			if(sy < 0) {
				sh += sy;
				sy = 0;
			}
			if(sx + sw > bw) sw = bw - sx;
			if(sy + sh > bh) sh = bh - sy;
		} else {
			sx = sy = 0;
			sw = bw;
			sh = bh;
		}
		if(dx < 0) {
			sw += dx;
			sx -= dx;
			dx = 0;
		}
		if(dy < 0) {
			sh += dy;
			sy -= dy;
			dy = 0;
		}
		if(dx + sw > tw) sw = tw - dx;
		if(dy + sh > th) sh = th - dy;
		if(sw <= 0 || sh <= 0) return;
		if(this.__transparent && !mergeAlpha) this.context.clearRect(dx,dy,sw,sh);
		this.context.drawImage(bit,sx,sy,sw,sh,dx,dy,sw,sh);
		this.__sync |= 5;
	}
	,draw: function(source,matrix,colorTransform,blendMode,clipRect,smoothing) {
		this.syncCanvas();
		var a = 0;
		this.context.save();
		if(colorTransform != null) {
			a = colorTransform.alphaMultiplier;
			colorTransform.alphaMultiplier = 1;
			this.context.globalAlpha *= a;
		}
		if(clipRect != null) {
			this.context.beginPath();
			this.context.rect(clipRect.x,clipRect.y,clipRect.width,clipRect.height);
			this.context.clip();
			this.context.beginPath();
		}
		if(smoothing != null) openfl_display_BitmapData.setSmoothing(this.context,smoothing);
		source.drawToSurface(this.handle(),this.context,matrix,colorTransform,blendMode,clipRect,null);
		this.context.restore();
		if(colorTransform != null) colorTransform.alphaMultiplier = a;
		this.__sync |= 5;
	}
	,jeashOnLoad: function(data,e) {
		var canvas = data.texture;
		var width = data.image.width;
		var height = data.image.height;
		canvas.width = width;
		canvas.height = height;
		var ctx = canvas.getContext("2d");
		ctx.drawImage(data.image,0,0,width,height);
		data.bitmapData.width = width;
		data.bitmapData.height = height;
		data.bitmapData.__rect = new openfl_geom_Rectangle(0,0,width,height);
		if(data.inLoader != null) {
			var e1 = new openfl_events_Event("complete");
			e1.set_target(data.inLoader);
			data.inLoader.dispatchEvent(e1);
		}
	}
	,nmeLoadFromFile: function(inFilename,inLoader) {
		var _g = this;
		var image = window.document.createElement("img");
		if(inLoader != null) {
			var data = { image : image, texture : this.component, inLoader : inLoader, bitmapData : this};
			image.addEventListener("load",(function(f,a1) {
				return function(e) {
					f(a1,e);
				};
			})($bind(this,this.jeashOnLoad),data),false);
			image.addEventListener("error",function(e1) {
				if(!image.complete) _g.jeashOnLoad(data,e1);
			},false);
		}
		image.src = inFilename;
	}
	,syncCanvas: function() {
		if(!((this.__sync & 3) != 2)) {
			this.context.putImageData(this.__imageData,0,0);
			this.__sync = this.__sync & -4;
		}
	}
	,__class__: openfl_display_BitmapData
};
var Std = function() { };
$hxClasses["Std"] = Std;
Std.__name__ = ["Std"];
Std["is"] = function(v,t) {
	return js_Boot.__instanceof(v,t);
};
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
Std["int"] = function(x) {
	return x | 0;
};
Std.parseInt = function(x) {
	var v = parseInt(x,10);
	if(v == 0 && (HxOverrides.cca(x,1) == 120 || HxOverrides.cca(x,1) == 88)) v = parseInt(x);
	if(isNaN(v)) return null;
	return v;
};
Std.parseFloat = function(x) {
	return parseFloat(x);
};
var openfl_display_Stage = function() {
	this.intervalHandle = null;
	this.isTouchScreen = false;
	this.frameRate = null;
	openfl_display_DisplayObjectContainer.call(this);
	var s = this.component.style;
	var o = window;
	var i;
	s.position = "absolute";
	s.overflow = "hidden";
	s.left = s.top = "0";
	s.width = s.height = "100%";
	this.mousePos = new openfl_geom_Point();
	o.addEventListener("contextmenu",function(_) {
		_.preventDefault();
	});
	o.addEventListener("click",$bind(this,this.onMouse));
	o.addEventListener("mousedown",$bind(this,this.onMouse));
	o.addEventListener("mouseup",$bind(this,this.onMouse));
	o.addEventListener("mousemove",$bind(this,this.onMouse));
	o.addEventListener("mousewheel",$bind(this,this.onWheel));
	o.addEventListener("DOMMouseScroll",$bind(this,this.onWheel));
	o.addEventListener("touchmove",this.getOnTouch(0));
	o.addEventListener("touchstart",this.getOnTouch(1));
	o.addEventListener("touchend",this.getOnTouch(2));
	o.addEventListener("touchcancel",this.getOnTouch(2));
	this.mouseMtxDepth = [];
	this.mouseMtxStack = [];
	this.mouseMtxCache = [];
	this.mouseTriggered = [];
	this.mouseUntrigger = [];
	i = -1;
	while(++i < 3) {
		this.mouseTriggered[i] = false;
		this.mouseUntrigger[i] = this.getMouseUntrigger(i);
	}
};
$hxClasses["openfl.display.Stage"] = openfl_display_Stage;
openfl_display_Stage.__name__ = ["openfl","display","Stage"];
openfl_display_Stage.__super__ = openfl_display_DisplayObjectContainer;
openfl_display_Stage.prototype = $extend(openfl_display_DisplayObjectContainer.prototype,{
	_broadcastMouseEvent: function(f) {
		var o = this.mouseOver;
		var q;
		f.stageX = this.mousePos.x;
		f.stageY = this.mousePos.y;
		this.broadcastMouse(this.mouseMtxDepth,f,this.mouseMtxStack,this.mouseMtxCache);
		this.mouseOver = q = f.relatedObject;
		if(o != q) {
			if(o != null) o.dispatchEvent(this._alterMouseEvent(f,"mouseOut"));
			if(q != null) q.dispatchEvent(this._alterMouseEvent(f,"mouseOver"));
		}
	}
	,_broadcastTouchEvent: function(f,x,y) {
		f.stageX = x;
		f.stageY = y;
		this.broadcastMouse(this.mouseMtxDepth,f,this.mouseMtxStack,this.mouseMtxCache);
	}
	,getMouseUntrigger: function(i) {
		var _g = this;
		return function() {
			_g.mouseTriggered[i] = false;
		};
	}
	,_alterMouseEvent: function(e,type) {
		var r = new openfl_events_MouseEvent(type,e.bubbles,e.cancelable,e.localX,e.localY,e.relatedObject,e.ctrlKey,e.altKey,e.shiftKey,e.buttonDown,e.delta);
		r.stageX = e.stageX;
		r.stageY = e.stageY;
		return r;
	}
	,_translateMouseEvent: function(e,type) {
		return new openfl_events_MouseEvent(type,true,false,null,null,null,e.ctrlKey,e.altKey,e.shiftKey);
	}
	,_translateTouchEvent: function(e,o,type) {
		var r = new openfl_events_TouchEvent(type,true,false,o.identifier,false,null,null,o.radiusX,o.radiusY,o.force,null,e.ctrlKey,e.altKey,e.shiftKey);
		r.__jsEvent = e;
		return r;
	}
	,mouseEventPrevent: function(o,x,y) {
		var mp = this.mousePos;
		var q = mp.x == x && mp.y == y;
		if(o >= 0 && q && this.mouseTriggered[o]) return true;
		if(!q) this.mousePos.setTo(x,y);
		if(o >= 0 && !this.mouseTriggered[o]) {
			this.mouseTriggered[o] = true;
			window.setTimeout(this.mouseUntrigger[o],0);
		}
		if(o == 1) {
			if(this.mouseDown) this._broadcastMouseEvent(this._alterMouseEvent(this.mouseLastEvent,"mouseUp")); else this.mouseDown = true;
		} else if(o == 2) {
			if(!this.mouseDown) this._broadcastMouseEvent(new openfl_events_MouseEvent("mouseDown")); else this.mouseDown = false;
		}
		return false;
	}
	,getOnTouch: function(i) {
		var _g = this;
		return function(e) {
			_g.onTouch(e,i);
		};
	}
	,onTouch: function(e,m) {
		var lt = e.targetTouches;
		var nt = lt.length;
		var lc = e.changedTouches;
		var nc = lc.length;
		var qt;
		if(nt > 0) qt = lt[0]; else if(nc > 0) qt = lc[0]; else qt = null;
		var i;
		var t;
		var o;
		e.preventDefault();
		this.isTouchScreen = true;
		if(qt != null && (m == 0 || m == 1 && nt == nc || m == 2 && nt == 0 && nc > 0) && !this.mouseEventPrevent(m,qt.pageX,qt.pageY)) {
			this.mouseLastEvent = new openfl_events_MouseEvent(m == 1?"mouseDown":m == 2?"mouseUp":"mouseMove");
			this.mouseLastEvent.__jsEvent = e;
			this._broadcastMouseEvent(this.mouseLastEvent);
			if(m == 2) {
				var ec = new openfl_events_MouseEvent("mouseClick");
				ec.__jsEvent = e;
				this._broadcastMouseEvent(ec);
			}
		}
		if(nc > 0) {
			switch(m) {
			case 1:
				t = "touchBegin";
				break;
			case 2:
				t = "touchEnd";
				break;
			default:
				t = "touchMove";
			}
			i = -1;
			while(++i < nc) {
				o = lc[i];
				this._broadcastTouchEvent(this._translateTouchEvent(e,o,t),o.pageX,o.pageY);
			}
		}
	}
	,onWheel: function(e) {
		var f = this._translateMouseEvent(e,"mouseWheel");
		var d = e.wheelDelta;
		if(d != null) {
			if(Math.abs(d) > 40) d = Math.round(d / 40); else if(d < 0) d = -1; else if(d > 0) d = 1; else d = 0;
		} else d = -e.detail;
		f.delta = d;
		this.mousePos.setTo(e.pageX,e.pageY);
		this._broadcastMouseEvent(f);
	}
	,onMouse: function(e) {
		var t = null;
		var o = -1;
		var b;
		if(e.type == "mousemove") {
			t = "mouseMove";
			o = 0;
		} else {
			b = e.button;
			var _g = e.type;
			switch(_g) {
			case "click":
				if(b == 0) t = "mouseClick"; else if(b == 1) t = "rightClick"; else if(b == 2) t = "middleClick"; else t = t;
				break;
			case "mousedown":
				if(b == 0) t = "mouseDown"; else if(b == 1) t = "middleMouseDown"; else if(b == 2) t = "rightMouseDown"; else t = t;
				o = 1;
				break;
			case "mouseup":
				if(b == 0) t = "mouseUp"; else if(b == 1) t = "middleMouseUp"; else if(b == 2) t = "rightMouseUp"; else t = t;
				o = 2;
				break;
			default:
				return;
			}
		}
		if(!this.mouseEventPrevent(o,e.pageX,e.pageY)) {
			this.mouseLastEvent = new openfl_events_MouseEvent(t);
			this.mouseLastEvent.__jsEvent = e;
			this._broadcastMouseEvent(this.mouseLastEvent);
		}
	}
	,hitTestLocal: function(x,y,p,v) {
		return !v || this.visible;
	}
	,addEventListener: function(type,listener,useCapture,priority,useWeakReference) {
		if(useWeakReference == null) useWeakReference = false;
		if(priority == null) priority = 0;
		if(useCapture == null) useCapture = false;
		var o = this.component;
		this.component = window;
		openfl_display_DisplayObjectContainer.prototype.addEventListener.call(this,type,listener,useCapture,priority,useWeakReference);
		this.component = o;
	}
	,removeEventListener: function(type,listener,useCapture) {
		if(useCapture == null) useCapture = false;
		var o = this.component;
		this.component = window;
		openfl_display_DisplayObjectContainer.prototype.removeEventListener.call(this,type,listener,useCapture);
		this.component = o;
	}
	,get_focus: function() {
		var o = document.activeElement;
		if(o != null && Std["is"](o = o.node,openfl_display_InteractiveObject)) return o; else return null;
	}
	,set_focus: function(v) {
		if(v != null) v.giveFocus(); else this.component.blur();
		return v;
	}
	,get_stageWidth: function() {
		return window.innerWidth;
	}
	,get_stageHeight: function() {
		return window.innerHeight;
	}
	,get_stage: function() {
		return this;
	}
	,set_frameRate: function(v) {
		if(this.frameRate != v) {
			if(this.intervalHandle != null) {
				if(this.frameRate <= 0) window._cancelAnimationFrame(this.intervalHandle); else window.clearInterval(this.intervalHandle);
			}
			if((this.frameRate = v) <= 0) this.intervalHandle = window._requestAnimationFrame($bind(this,this.onTimer)); else this.intervalHandle = window.setInterval($bind(this,this.onTimer),Std["int"](Math.max(0,1000 / v)));
		}
		return v;
	}
	,onTimer: function() {
		var t = openfl_Lib.getTimer();
		var f;
		var i = -1;
		while(++i < openfl_Lib.schLength) {
			openfl_Lib.schList[i]();
			openfl_Lib.schList[i] = null;
		}
		openfl_Lib.schLength = 0;
		this.broadcastEvent(new openfl_events_Event("enterFrame"));
		f = this.frameRate;
		if(f <= 0) this.intervalHandle = window._requestAnimationFrame($bind(this,this.onTimer));
	}
	,__class__: openfl_display_Stage
});
var openfl_geom_Transform = function(displayObject) {
	if(displayObject == null) throw new js__$Boot_HaxeError("Cannot create Transform with no DisplayObject.");
	this._displayObject = displayObject;
	this._matrix = new openfl_geom_Matrix();
	this._fullMatrix = new openfl_geom_Matrix();
	this.set_colorTransform(new openfl_geom_ColorTransform());
};
$hxClasses["openfl.geom.Transform"] = openfl_geom_Transform;
openfl_geom_Transform.__name__ = ["openfl","geom","Transform"];
openfl_geom_Transform.prototype = {
	set_colorTransform: function(inValue) {
		this.colorTransform = inValue;
		return inValue;
	}
	,get_matrix: function() {
		return this._matrix.clone();
	}
	,__class__: openfl_geom_Transform
};
var openfl_geom_Matrix = function(a,b,c,d,tx,ty) {
	if(a == null) this.a = 1; else this.a = a;
	if(b == null) this.b = 0; else this.b = b;
	if(c == null) this.c = 0; else this.c = c;
	if(d == null) this.d = 1; else this.d = d;
	if(tx == null) this.tx = 0; else this.tx = tx;
	if(ty == null) this.ty = 0; else this.ty = ty;
};
$hxClasses["openfl.geom.Matrix"] = openfl_geom_Matrix;
openfl_geom_Matrix.__name__ = ["openfl","geom","Matrix"];
openfl_geom_Matrix.create = function() {
	var m = openfl_geom_Matrix.pool;
	if(m.length > 0) return m.pop(); else return new openfl_geom_Matrix();
};
openfl_geom_Matrix.prototype = {
	clone: function() {
		return new openfl_geom_Matrix(this.a,this.b,this.c,this.d,this.tx,this.ty);
	}
	,identity: function() {
		this.a = this.d = 1;
		this.b = this.c = this.tx = this.ty = 0;
	}
	,isIdentity: function() {
		return this.a == 1 && this.d == 1 && this.tx == 0 && this.ty == 0 && this.b == 0 && this.c == 0;
	}
	,copy: function(s) {
		this.a = s.a;
		this.b = s.b;
		this.c = s.c;
		this.d = s.d;
		this.tx = s.tx;
		this.ty = s.ty;
	}
	,invert: function() {
		var t;
		var n = this.a * this.d - this.b * this.c;
		if(n == 0) {
			this.a = this.b = this.c = this.d = 0;
			this.tx = -this.tx;
			this.ty = -this.ty;
		} else {
			n = 1 / n;
			t = this.d * n;
			this.d = this.a * n;
			this.a = t;
			this.b *= -n;
			this.c *= -n;
			t = -this.a * this.tx - this.c * this.ty;
			this.ty = -this.b * this.tx - this.d * this.ty;
			this.tx = t;
		}
	}
	,translate: function(x,y) {
		this.tx += x;
		this.ty += y;
	}
	,rotate: function(o) {
		var ox = Math.cos(o);
		var oy = Math.sin(o);
		var t;
		t = this.a * ox - this.b * oy;
		this.b = this.a * oy + this.b * ox;
		this.a = t;
		t = this.c * ox - this.d * oy;
		this.d = this.c * oy + this.d * ox;
		this.c = t;
		t = this.tx * ox - this.ty * oy;
		this.ty = this.tx * oy + this.ty * ox;
		this.tx = t;
	}
	,scale: function(x,y) {
		this.a *= x;
		this.b *= y;
		this.c *= x;
		this.d *= y;
		this.tx *= x;
		this.ty *= y;
	}
	,concat: function(o) {
		var t;
		t = this.a * o.a + this.b * o.c;
		this.b = this.a * o.b + this.b * o.d;
		this.a = t;
		t = this.c * o.a + this.d * o.c;
		this.d = this.c * o.b + this.d * o.d;
		this.c = t;
		t = this.tx * o.a + this.ty * o.c + o.tx;
		this.ty = this.tx * o.b + this.ty * o.d + o.ty;
		this.tx = t;
	}
	,__class__: openfl_geom_Matrix
};
var openfl_geom_ColorTransform = function(r,g,b,a,ro,go,bo,ao) {
	this.redMultiplier = r != null?r:1;
	this.greenMultiplier = g != null?g:1;
	this.blueMultiplier = b != null?b:1;
	this.alphaMultiplier = a != null?a:1;
	this.redOffset = ro != null?ro:0;
	this.greenOffset = go != null?go:0;
	this.blueOffset = bo != null?bo:0;
	this.alphaOffset = ao != null?ao:0;
};
$hxClasses["openfl.geom.ColorTransform"] = openfl_geom_ColorTransform;
openfl_geom_ColorTransform.__name__ = ["openfl","geom","ColorTransform"];
openfl_geom_ColorTransform.prototype = {
	__class__: openfl_geom_ColorTransform
};
var haxe_IMap = function() { };
$hxClasses["haxe.IMap"] = haxe_IMap;
haxe_IMap.__name__ = ["haxe","IMap"];
var haxe_ds_ObjectMap = function() {
	this.h = { };
	this.h.__keys__ = { };
};
$hxClasses["haxe.ds.ObjectMap"] = haxe_ds_ObjectMap;
haxe_ds_ObjectMap.__name__ = ["haxe","ds","ObjectMap"];
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) return false;
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h.__keys__ ) {
		if(this.h.hasOwnProperty(key)) a.push(this.h.__keys__[key]);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_ObjectMap
};
var openfl_Lib = function() { };
$hxClasses["openfl.Lib"] = openfl_Lib;
openfl_Lib.__name__ = ["openfl","Lib"];
openfl_Lib.__init = function() {
	var o;
	openfl_Lib.schList = [];
	openfl_Lib.schLength = 0;
	var wnd = window;
	var n = "equestAnimationFrame";
	var lrq = openfl_Lib.getTimer();
	wnd._requestAnimationFrame = wnd["r" + n] || wnd["webkitR" + n] || wnd["mozR" + n] || wnd["oR" + n] || wnd["msR" + n] || function(o1) {
		return wnd.setTimeout(o1,Std["int"](700 / openfl_Lib.get_stage().frameRate));
	};
	n = "ancelAnimationFrame";
	wnd._cancelAnimationFrame = wnd["c" + n] || wnd["webkitC" + n] || wnd["mozC" + n] || wnd["oC" + n] || wnd["msC" + n] || function(o2) {
		wnd.clearTimeout(o2);
		return;
	};
};
openfl_Lib.getTimer = function() {
	return Std["int"](new Date() - openfl_Lib.qTimeStamp);
};
openfl_Lib.getURL = function(url,target) {
	window.open(url.url,target);
};
openfl_Lib.jsNode = function(o) {
	var r = document.createElement(o);
	var s = r.style;
	s.position = "absolute";
	switch(o) {
	case "canvas":
		s.setProperty("-webkit-touch-callout","none",null);
		openfl_Lib.setCSSProperties(s,"user-select","none",47);
		break;
	case "input":case "textarea":
		s.outline = "none";
		break;
	}
	return r;
};
openfl_Lib.get_current = function() {
	if(openfl_Lib.qCurrent == null) openfl_Lib.get_stage().addChild(openfl_Lib.qCurrent = new openfl_display_MovieClip());
	return openfl_Lib.qCurrent;
};
openfl_Lib.get_stage = function() {
	if(openfl_Lib.qStage == null) document.body.appendChild((openfl_Lib.qStage = new openfl_display_Stage()).component);
	return openfl_Lib.qStage;
};
openfl_Lib.schedule = function(m) {
	openfl_Lib.schList[openfl_Lib.schLength++] = m;
};
openfl_Lib.rgbf = function(color,alpha) {
	return "rgba(" + (color >> 16 & 255) + "," + (color >> 8 & 255) + "," + (color & 255) + "," + alpha.toFixed(4) + ")";
};
openfl_Lib.setCSSProperties = function(o,k,v,f) {
	if(!f) f = 31;
	if(f & 1) o.setProperty(k,v,null);
	if(f & 2) o.setProperty("-webkit-" + k,v,null);
	if(f & 4) o.setProperty("-moz-" + k,v,null);
	if(f & 8) o.setProperty("-ms-" + k,v,null);
	if(f & 16) o.setProperty("-o-" + k,v,null);
	if(f & 32) o.setProperty("-khtml-" + k,v,null);
};
var openfl_display_MovieClip = function() {
	openfl_display_Sprite.call(this);
	this.enabled = true;
	this.qIndex = this.qTotal = 0;
	this.loaderInfo = openfl_display_LoaderInfo.create();
};
$hxClasses["openfl.display.MovieClip"] = openfl_display_MovieClip;
openfl_display_MovieClip.__name__ = ["openfl","display","MovieClip"];
openfl_display_MovieClip.__super__ = openfl_display_Sprite;
openfl_display_MovieClip.prototype = $extend(openfl_display_Sprite.prototype,{
	__class__: openfl_display_MovieClip
});
var openfl_display_LoaderInfo = function() {
	openfl_events_EventDispatcher.call(this);
	this.bytesLoaded = this.bytesTotal = 0;
	this.childAllowsParent = true;
	this.parameters = { };
};
$hxClasses["openfl.display.LoaderInfo"] = openfl_display_LoaderInfo;
openfl_display_LoaderInfo.__name__ = ["openfl","display","LoaderInfo"];
openfl_display_LoaderInfo.create = function(o) {
	var r = new openfl_display_LoaderInfo();
	if(o != null) r.loader = o; else r.url = "";
	return r;
};
openfl_display_LoaderInfo.__super__ = openfl_events_EventDispatcher;
openfl_display_LoaderInfo.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_display_LoaderInfo
});
var openfl_geom_Rectangle = function(a,b,c,d) {
	if(d == null) d = 0;
	if(c == null) c = 0;
	if(b == null) b = 0;
	if(a == null) a = 0;
	this.x = a;
	this.y = b;
	this.width = c;
	this.height = d;
};
$hxClasses["openfl.geom.Rectangle"] = openfl_geom_Rectangle;
openfl_geom_Rectangle.__name__ = ["openfl","geom","Rectangle"];
openfl_geom_Rectangle.prototype = {
	equals: function(o) {
		return this.x == o.x && this.y == o.y && this.width == o.width && this.height == o.height;
	}
	,setVoid: function() {
		this.width -= 2147483647 - this.x;
		this.x = 2147483647;
		this.width = -2147483648 - this.x;
		-2147483648;
		this.height -= 2147483647 - this.y;
		this.y = 2147483647;
		this.height = -2147483648 - this.y;
		-2147483648;
	}
	,get_right: function() {
		return this.x + this.width;
	}
	,get_bottom: function() {
		return this.y + this.height;
	}
	,contains: function(u,v) {
		return (u -= this.x) >= 0 && (v -= this.y) >= 0 && u < this.width && v < this.height;
	}
	,__class__: openfl_geom_Rectangle
};
var openfl_bitfive_NodeTools = function() { };
$hxClasses["openfl.bitfive.NodeTools"] = openfl_bitfive_NodeTools;
openfl_bitfive_NodeTools.__name__ = ["openfl","bitfive","NodeTools"];
openfl_bitfive_NodeTools.createCanvasElement = function() {
	var r;
	var _this = window.document;
	r = _this.createElement("canvas");
	var r_style = r.style;
	r_style.position = "absolute";
	r_style.setProperty("-webkit-touch-callout","none",null);
	openfl_bitfive_StyleTools.setProperties(r_style,"user-select","none",63);
	return r;
};
var openfl_bitfive_StyleTools = function() { };
$hxClasses["openfl.bitfive.StyleTools"] = openfl_bitfive_StyleTools;
openfl_bitfive_StyleTools.__name__ = ["openfl","bitfive","StyleTools"];
openfl_bitfive_StyleTools.setProperties = function(self,name,value,flags) {
	if(flags == null) flags = 31;
	if(flags & 1) self.setProperty("" + name,value,null);
	if(flags & 2) self.setProperty("-webkit-" + name,value,null);
	if(flags & 4) self.setProperty("-moz-" + name,value,null);
	if(flags & 8) self.setProperty("-ms-" + name,value,null);
	if(flags & 16) self.setProperty("-o-" + name,value,null);
	if(flags & 32) self.setProperty("-khtml-" + name,value,null);
};
var PreloaderLogoBMD = function(width,height,transparent,color) {
	var o = PreloaderLogoBMD.image;
	openfl_display_BitmapData.call(this,o.width,o.height,true,0);
	this.context.drawImage(o,0,0);
};
$hxClasses["PreloaderLogoBMD"] = PreloaderLogoBMD;
PreloaderLogoBMD.__name__ = ["PreloaderLogoBMD"];
PreloaderLogoBMD.preload = function() {
	var o = document.createElement("img");
	ApplicationMain.loadEmbed(PreloaderLogoBMD.image = o);
    o.src = "assets/game.png";
	
	};
PreloaderLogoBMD.__super__ = openfl_display_BitmapData;
PreloaderLogoBMD.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: PreloaderLogoBMD
});
var haxe_Log = function() { };
$hxClasses["haxe.Log"] = haxe_Log;
haxe_Log.__name__ = ["haxe","Log"];
haxe_Log.trace = function(v,infos) {
	js_Boot.__trace(v,infos);
};
var js_Boot = function() { };
$hxClasses["js.Boot"] = js_Boot;
js_Boot.__name__ = ["js","Boot"];
js_Boot.__unhtml = function(s) {
	return s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
};
js_Boot.__trace = function(v,i) {
	var msg;
	if(i != null) msg = i.fileName + ":" + i.lineNumber + ": "; else msg = "";
	msg += js_Boot.__string_rec(v,"");
	if(i != null && i.customParams != null) {
		var _g = 0;
		var _g1 = i.customParams;
		while(_g < _g1.length) {
			var v1 = _g1[_g];
			++_g;
			msg += "," + js_Boot.__string_rec(v1,"");
		}
	}
	var d;
	if(typeof(document) != "undefined" && (d = document.getElementById("haxe:trace")) != null) d.innerHTML += js_Boot.__unhtml(msg) + "<br/>"; else if(typeof console != "undefined" && console.log != null) console.log(msg);
};
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) return Array; else {
		var cl = o.__class__;
		if(cl != null) return cl;
		var name = js_Boot.__nativeClassName(o);
		if(name != null) return js_Boot.__resolveNativeClass(name);
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) return "null";
	if(s.length >= 5) return "<...>";
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) t = "object";
	switch(t) {
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) return o[0];
				var str2 = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i1 = _g1++;
					if(i1 != 2) str2 += "," + js_Boot.__string_rec(o[i1],s); else str2 += js_Boot.__string_rec(o[i1],s);
				}
				return str2 + ")";
			}
			var l = o.length;
			var i;
			var str1 = "[";
			s += "\t";
			var _g2 = 0;
			while(_g2 < l) {
				var i2 = _g2++;
				str1 += (i2 > 0?",":"") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") return s2;
		}
		var k = null;
		var str = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str.length != 2) str += ", \n";
		str += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str += "\n" + s + "}";
		return str;
	case "function":
		return "<function>";
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) return false;
	if(cc == cl) return true;
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) return true;
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) return false;
	switch(cl) {
	case Int:
		return (o|0) === o;
	case Float:
		return typeof(o) == "number";
	case Bool:
		return typeof(o) == "boolean";
	case String:
		return typeof(o) == "string";
	case Array:
		return (o instanceof Array) && o.__enum__ == null;
	case Dynamic:
		return true;
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) return true;
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) return true;
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) return true;
			}
		} else return false;
		if(cl == Class && o.__name__ != null) return true;
		if(cl == Enum && o.__ename__ != null) return true;
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) return o; else throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") return null;
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return (Function("return typeof " + name + " != \"undefined\" ? " + name + " : null"))();
};
var openfl_display_ILoader = function() { };
$hxClasses["openfl.display.ILoader"] = openfl_display_ILoader;
openfl_display_ILoader.__name__ = ["openfl","display","ILoader"];
openfl_display_ILoader.prototype = {
	__class__: openfl_display_ILoader
};
var openfl_display_Loader = function() {
	openfl_display_Sprite.call(this);
	this.contentLoaderInfo = openfl_display_LoaderInfo.create(this);
};
$hxClasses["openfl.display.Loader"] = openfl_display_Loader;
openfl_display_Loader.__name__ = ["openfl","display","Loader"];
openfl_display_Loader.__interfaces__ = [openfl_display_ILoader];
openfl_display_Loader.__super__ = openfl_display_Sprite;
openfl_display_Loader.prototype = $extend(openfl_display_Sprite.prototype,{
	load: function(request,context) {
		var extension = "";
		var i;
		var parts = request.url.split(".");
		if(parts.length > 0) extension = parts[parts.length - 1].toLowerCase();
		var url = request.url;
		var p = url.lastIndexOf(".");
		if(p < 0) throw new js__$Boot_HaxeError("Extension must be specified, got \"" + url + "\"");
		var ct;
		var bt = true;
		var ext = url.substring(p + 1);
		switch(ext) {
		case "swf":
			ct = "application/x-shockwave-flash";
			break;
		case "png":
			ct = "image/png";
			break;
		case "gif":
			ct = "image/gif";
			break;
		case "jpg":case "jpeg":
			bt = false;
			ct = "image/jpeg";
			break;
		default:
			throw new js__$Boot_HaxeError("Unrecognized extension \"" + ext + "\" in \"" + url + "\"");
		}
		this.contentLoaderInfo.url = url;
		this.contentLoaderInfo.contentType = ct;
		this.mImage = new openfl_display_BitmapData(0,0,bt);
		try {
			this.contentLoaderInfo.addEventListener("complete",$bind(this,this.handleLoad),false);
			this.mImage.nmeLoadFromFile(request.url,this.contentLoaderInfo);
			this.content = new openfl_display_Bitmap(this.mImage);
			this.contentLoaderInfo.content = this.content;
			this.addChild(this.content);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			haxe_Log.trace("Error " + Std.string(e),{ fileName : "Loader.hx", lineNumber : 62, className : "openfl.display.Loader", methodName : "load"});
			var evt = new openfl_events_IOErrorEvent("ioError");
			evt.set_currentTarget(this);
			this.contentLoaderInfo.dispatchEvent(evt);
			return;
		}
		if(this.mShape == null) {
			this.mShape = new openfl_display_Shape();
			this.addChild(this.mShape);
		}
	}
	,handleLoad: function(e) {
		e.set_currentTarget(this);
		this.contentLoaderInfo.removeEventListener("complete",$bind(this,this.handleLoad));
	}
	,__class__: openfl_display_Loader
});
var haxe_Resource = function() { };
$hxClasses["haxe.Resource"] = haxe_Resource;
haxe_Resource.__name__ = ["haxe","Resource"];
haxe_Resource.listNames = function() {
	var _g = [];
	var _g1 = 0;
	var _g2 = haxe_Resource.content;
	while(_g1 < _g2.length) {
		var x = _g2[_g1];
		++_g1;
		_g.push(x.name);
	}
	return _g;
};
haxe_Resource.getString = function(name) {
	var _g = 0;
	var _g1 = haxe_Resource.content;
	while(_g < _g1.length) {
		var x = _g1[_g];
		++_g;
		if(x.name == name) {
			if(x.str != null) return x.str;
			var b = haxe_crypto_Base64.decode(x.data);
			return b.toString();
		}
	}
	return null;
};
var StringTools = function() { };
$hxClasses["StringTools"] = StringTools;
StringTools.__name__ = ["StringTools"];
StringTools.urlEncode = function(s) {
	return encodeURIComponent(s);
};
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) return s.split("\"").join("&quot;").split("'").join("&#039;"); else return s;
};
StringTools.startsWith = function(s,start) {
	return s.length >= start.length && HxOverrides.substr(s,0,start.length) == start;
};
StringTools.isSpace = function(s,pos) {
	var c = HxOverrides.cca(s,pos);
	return c > 8 && c < 14 || c == 32;
};
StringTools.ltrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,r)) r++;
	if(r > 0) return HxOverrides.substr(s,r,l - r); else return s;
};
StringTools.rtrim = function(s) {
	var l = s.length;
	var r = 0;
	while(r < l && StringTools.isSpace(s,l - r - 1)) r++;
	if(r > 0) return HxOverrides.substr(s,0,l - r); else return s;
};
StringTools.trim = function(s) {
	return StringTools.ltrim(StringTools.rtrim(s));
};
StringTools.replace = function(s,sub,by) {
	return s.split(sub).join(by);
};
StringTools.fastCodeAt = function(s,index) {
	return s.charCodeAt(index);
};
var Type = function() { };
$hxClasses["Type"] = Type;
Type.__name__ = ["Type"];
Type.getClassName = function(c) {
	var a = c.__name__;
	if(a == null) return null;
	return a.join(".");
};
Type.getEnumName = function(e) {
	var a = e.__ename__;
	return a.join(".");
};
Type.resolveClass = function(name) {
	var cl = $hxClasses[name];
	if(cl == null || !cl.__name__) return null;
	return cl;
};
Type.resolveEnum = function(name) {
	var e = $hxClasses[name];
	if(e == null || !e.__ename__) return null;
	return e;
};
Type.createInstance = function(cl,args) {
	var _g = args.length;
	switch(_g) {
	case 0:
		return new cl();
	case 1:
		return new cl(args[0]);
	case 2:
		return new cl(args[0],args[1]);
	case 3:
		return new cl(args[0],args[1],args[2]);
	case 4:
		return new cl(args[0],args[1],args[2],args[3]);
	case 5:
		return new cl(args[0],args[1],args[2],args[3],args[4]);
	case 6:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5]);
	case 7:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6]);
	case 8:
		return new cl(args[0],args[1],args[2],args[3],args[4],args[5],args[6],args[7]);
	default:
		throw new js__$Boot_HaxeError("Too many arguments");
	}
	return null;
};
Type.createEmptyInstance = function(cl) {
	function empty() {}; empty.prototype = cl.prototype;
	return new empty();
};
Type.createEnum = function(e,constr,params) {
	var f = Reflect.field(e,constr);
	if(f == null) throw new js__$Boot_HaxeError("No such constructor " + constr);
	if(Reflect.isFunction(f)) {
		if(params == null) throw new js__$Boot_HaxeError("Constructor " + constr + " need parameters");
		return Reflect.callMethod(e,f,params);
	}
	if(params != null && params.length != 0) throw new js__$Boot_HaxeError("Constructor " + constr + " does not need parameters");
	return f;
};
Type.getEnumConstructs = function(e) {
	var a = e.__constructs__;
	return a.slice();
};
Type["typeof"] = function(v) {
	var _g = typeof(v);
	switch(_g) {
	case "boolean":
		return ValueType.TBool;
	case "string":
		return ValueType.TClass(String);
	case "number":
		if(Math.ceil(v) == v % 2147483648.0) return ValueType.TInt;
		return ValueType.TFloat;
	case "object":
		if(v == null) return ValueType.TNull;
		var e = v.__enum__;
		if(e != null) return ValueType.TEnum(e);
		var c = js_Boot.getClass(v);
		if(c != null) return ValueType.TClass(c);
		return ValueType.TObject;
	case "function":
		if(v.__name__ || v.__ename__) return ValueType.TObject;
		return ValueType.TFunction;
	case "undefined":
		return ValueType.TNull;
	default:
		return ValueType.TUnknown;
	}
};
var oz_OzSprite = function(mc,type) {
	this.animation = null;
	this.showRight = -1;
	this.colorTransform = null;
	this.reset();
	this.PoolId = -1;
	if(type == null) type = oz_SpriteType.EMPTY;
	this.mc = mc;
	if(mc != null) this.type = oz_SpriteType.BITMAP; else this.type = type;
	if(type == oz_SpriteType.POLYGON) this.flSprite = new openfl_display_Sprite(); else if(type == oz_SpriteType.TEXT) {
		this.textAlign = oz_TextAlign.LEFT;
		this.text = "";
	}
};
$hxClasses["oz.OzSprite"] = oz_OzSprite;
oz_OzSprite.__name__ = ["oz","OzSprite"];
oz_OzSprite.StaticInit = function() {
	oz_OzSprite.Sprites = [];
	oz_OzSprite.FreeId = 0;
	var _g = 0;
	while(_g < 1000) {
		var i = _g++;
		oz_OzSprite.Sprites[i] = new oz_OzSprite();
		oz_OzSprite.Sprites[i].PoolId = i;
	}
	oz_OzSprite.toRemove = [];
	oz_OzSprite.toRemoveId = 0;
	oz_OzSprite.TilesheetId = -1;
	oz_OzSprite.DrawingAlpha = false;
	oz_OzSprite.DrawingSmooth = Main.DEFAULT_SMOOTH;
	oz_OzSprite.FloatArrays = new haxe_ds_IntMap();
	oz_OzSprite.ShowRights = new haxe_ds_IntMap();
	oz_OzSprite.DrawArray = [];
	oz_OzSprite.DrawArrayLength = 0;
	oz_OzSprite.Tilesheets = [];
	oz_OzSprite.Bitmaps = [];
	oz_OzSprite.BitmapsIds = [];
	oz_OzSprite.BitmapsNames = [];
	oz_OzSprite.TilesheetFrames = [];
	oz_OzSprite.TilesheetBitmapDatas = [];
	oz_OzSprite.DrawMatrix = new openfl_geom_Matrix();
	oz_OzSprite.MainMatrix = new openfl_geom_Matrix();
	oz_OzSprite.DrawPoint = new openfl_geom_Point();
	oz_OzSprite.DrawRect = new openfl_geom_Rectangle();
	oz_OzSprite.AlphaColorTransform = new openfl_geom_ColorTransform();
};
oz_OzSprite.appendTilesheetFrame = function(mc,name,frame,x,y,width,height,drawPointX,drawPointY) {
	oz_OzSprite.DrawRect.x = x;
	oz_OzSprite.DrawRect.y = y;
	oz_OzSprite.DrawRect.width = width;
	oz_OzSprite.DrawRect.height = height;
	oz_OzSprite.DrawPoint.x = oz_OzSprite.DrawPoint.y = 0;
	var numPrevFrames = oz_OzSprite.TilesheetFrames[mc.tilesheetId].length;
	var newMc = new oz_OzMovieClip(name,[numPrevFrames],mc.tilesheetId);
	var tilesheetBMD = oz_OzSprite.TilesheetAssetBMDs[mc.tilesheetId];
	oz_OzSprite.TilesheetFrames[mc.tilesheetId].push([oz_OzSprite.DrawRect.x,oz_OzSprite.DrawRect.y,oz_OzSprite.DrawRect.width,oz_OzSprite.DrawRect.height,drawPointX,drawPointY]);
	oz_OzSprite.Tilesheets[mc.tilesheetId].addTileRect(new openfl_geom_Rectangle(oz_OzSprite.DrawRect.x,oz_OzSprite.DrawRect.y,oz_OzSprite.DrawRect.width,oz_OzSprite.DrawRect.height),new openfl_geom_Point(drawPointX,drawPointY));
	oz_OzSprite.Bitmaps.push(newMc);
	var len = oz_OzSprite.BitmapsIds.length;
	oz_OzSprite.BitmapsIds.push(len);
	oz_OzSprite.BitmapsNames.push(newMc.name);
	return numPrevFrames;
};
oz_OzSprite.ExpandTiles = function(defs) {
	dev_DevUtil.SortIdsByName(oz_OzSprite.BitmapsIds,oz_OzSprite.BitmapsNames);
	var expandedTileNames = new haxe_ds_StringMap();
	var objsXml = oz_Xu.fc(defs,"objects");
	var $it0 = objsXml.elements();
	while( $it0.hasNext() ) {
		var obj = $it0.next();
		var $it1 = obj.elementsNamed("graphics");
		while( $it1.hasNext() ) {
			var gfx = $it1.next();
			if(gfx.get("type") == "tile" && gfx.get("spriteTile") == "1") {
				var mcName = gfx.get("src");
				if(__map_reserved[mcName] != null?expandedTileNames.existsReserved(mcName):expandedTileNames.h.hasOwnProperty(mcName)) continue;
				var mc = oz_OzSprite.GetMCByString(mcName);
				if(mc == null) {
					haxe_Log.trace("ERROR: Cannot expand tile thats not found in bitmaps",{ fileName : "OzSprite.hx", lineNumber : 272, className : "oz.OzSprite", methodName : "ExpandTiles"});
					continue;
				}
				var tileSize = 40;
				if(gfx.get("size") == null) tileSize = Std.parseInt("240"); else tileSize = Std.parseInt(gfx.get("size"));
				oz_OzSprite.SliceExpandTile(mc,tileSize);
				dev_DevUtil.SortIdsByName(oz_OzSprite.BitmapsIds,oz_OzSprite.BitmapsNames);
			}
		}
	}
};
oz_OzSprite.SliceExpandTile = function(mc,tileSize,frameNum) {
	if(frameNum == null) frameNum = 1;
	var numPrevFrames = oz_OzSprite.TilesheetFrames[mc.tilesheetId].length;
	var frame = oz_OzSprite.TilesheetFrames[mc.tilesheetId][mc.frames[frameNum - 1]];
	var tilesheetBMD = oz_OzSprite.GetTilesheetBitmapData(mc.tilesheetId,mc.frames[frameNum - 1]);
	var N = Math.ceil((tilesheetBMD.component.height - 1) / tileSize);
	var M = Math.ceil((tilesheetBMD.component.width - 1) / tileSize);
	var ySlack = tilesheetBMD.component.height % tileSize;
	var _g = 0;
	while(_g < N) {
		var i = _g++;
		var _g1 = 0;
		while(_g1 < M) {
			var j = _g1++;
			if(ySlack != 0) {
				if(i == 0) {
					oz_OzSprite.DrawRect.x = j * tileSize;
					oz_OzSprite.DrawRect.y = 0;
					oz_OzSprite.DrawRect.width = Math.min(tileSize,tilesheetBMD.component.width - oz_OzSprite.DrawRect.x);
					oz_OzSprite.DrawRect.height = Math.min(tileSize,ySlack);
					oz_OzSprite.DrawPoint.x = 0;
					oz_OzSprite.DrawPoint.y = tileSize - ySlack;
				} else {
					oz_OzSprite.DrawRect.x = j * tileSize;
					oz_OzSprite.DrawRect.y = (i - 1) * tileSize + ySlack;
					oz_OzSprite.DrawRect.width = Math.min(tileSize,tilesheetBMD.component.width - oz_OzSprite.DrawRect.x);
					oz_OzSprite.DrawRect.height = Math.min(tileSize,tilesheetBMD.component.height - oz_OzSprite.DrawRect.y);
					oz_OzSprite.DrawPoint.x = 0;
					oz_OzSprite.DrawPoint.y = 0;
				}
			} else {
				oz_OzSprite.DrawRect.x = j * tileSize;
				oz_OzSprite.DrawRect.y = i * tileSize;
				oz_OzSprite.DrawRect.width = Math.min(tileSize,tilesheetBMD.component.width - oz_OzSprite.DrawRect.x);
				oz_OzSprite.DrawRect.height = Math.min(tileSize,tilesheetBMD.component.height - oz_OzSprite.DrawRect.y);
				oz_OzSprite.DrawPoint.x = 0;
				oz_OzSprite.DrawPoint.y = 0;
			}
			mc.frames.push(oz_OzSprite.TilesheetFrames[mc.tilesheetId].length);
			oz_OzSprite.TilesheetFrames[mc.tilesheetId].push([frame[0] + oz_OzSprite.DrawRect.x,frame[1] + oz_OzSprite.DrawRect.y,oz_OzSprite.DrawRect.width,oz_OzSprite.DrawRect.height,-oz_OzSprite.DrawPoint.x,-oz_OzSprite.DrawPoint.y]);
			oz_OzSprite.Tilesheets[mc.tilesheetId].addTileRect(new openfl_geom_Rectangle(frame[0] + oz_OzSprite.DrawRect.x,frame[1] + oz_OzSprite.DrawRect.y,oz_OzSprite.DrawRect.width,oz_OzSprite.DrawRect.height),new openfl_geom_Point(-oz_OzSprite.DrawPoint.x,-oz_OzSprite.DrawPoint.y));
		}
	}
};
oz_OzSprite.RegisterTilesheet = function(bitmapName,movieClips,frames,runtimeBMD,forcePreload,dontExpand) {
	if(dontExpand == null) dontExpand = false;
	if(forcePreload == null) forcePreload = false;
	var hasFilter = [];
	var tilesheetBMD = runtimeBMD;
	haxe_Log.trace("calling get bitmapdata with",{ fileName : "OzSprite.hx", lineNumber : 485, className : "oz.OzSprite", methodName : "RegisterTilesheet", customParams : ["assets/" + bitmapName]});
	if(runtimeBMD == null) tilesheetBMD = openfl_Assets.getBitmapData("assets/" + bitmapName);
	haxe_Log.trace("end of call of getbitmapdata",{ fileName : "OzSprite.hx", lineNumber : 491, className : "oz.OzSprite", methodName : "RegisterTilesheet"});
	var tilesheet = new openfl_display_Tilesheet(tilesheetBMD);
	haxe_Log.trace("end create tilesheet",{ fileName : "OzSprite.hx", lineNumber : 493, className : "oz.OzSprite", methodName : "RegisterTilesheet"});
	var framesAdjusted = [];
	var _g1 = 0;
	var _g = frames.length;
	while(_g1 < _g) {
		var i = _g1++;
		framesAdjusted[i] = false;
	}
	var currentId = oz_OzSprite.Tilesheets.length;
	haxe_Log.trace("got through",{ fileName : "OzSprite.hx", lineNumber : 499, className : "oz.OzSprite", methodName : "RegisterTilesheet", customParams : [movieClips.length," clips"]});
	var _g11 = 0;
	var _g2 = movieClips.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		movieClips[i1].tilesheetId = currentId;
		oz_OzSprite.Bitmaps.push(movieClips[i1]);
		var len = oz_OzSprite.BitmapsIds.length;
		oz_OzSprite.BitmapsIds.push(len);
		oz_OzSprite.BitmapsNames.push(movieClips[i1].name);
		var isTile = movieClips[i1].name.indexOf("tile") == 0;
		if(!dontExpand && !isTile && movieClips[i1].name.indexOf("bmp") != 0 && movieClips[i1].name.indexOf("sys") != 0 && movieClips[i1].name.indexOf("_f") != 0 && movieClips[i1].name.indexOf("oza") != 0) {
			var _g3 = 0;
			var _g21 = movieClips[i1].frames.length;
			while(_g3 < _g21) {
				var j = _g3++;
				var fid = movieClips[i1].frames[j];
				if(framesAdjusted[fid]) continue;
				framesAdjusted[fid] = true;
				frames[fid][0] -= 1;
				frames[fid][1] -= 1;
				frames[fid][2] += 2;
				frames[fid][3] += 2;
				frames[fid][4] += 1;
				frames[fid][5] += 1;
			}
		}
	}
	var _g12 = 0;
	var _g4 = frames.length;
	while(_g12 < _g4) {
		var i2 = _g12++;
		tilesheet.addTileRect(new openfl_geom_Rectangle(frames[i2][0],frames[i2][1],frames[i2][2],frames[i2][3]),new openfl_geom_Point(frames[i2][4],frames[i2][5]));
	}
	oz_OzSprite.Tilesheets.push(tilesheet);
	oz_OzSprite.TilesheetFrames.push(frames);
	oz_OzSprite.TilesheetBitmapDatas.push([]);
	oz_OzSprite.TilesheetAssetBMDs.push(tilesheetBMD);
	if(forcePreload) {
		var _g13 = 0;
		var _g5 = frames.length;
		while(_g13 < _g5) {
			var i3 = _g13++;
			oz_OzSprite.LoadSingleBitmapData(oz_OzSprite.TilesheetFrames.length - 1,i3);
		}
	}
	return currentId;
};
oz_OzSprite.LoadSingleBitmapData = function(tilesheetId,framesId) {
	var frames = oz_OzSprite.TilesheetFrames[tilesheetId];
	var i = framesId;
	if(frames[i][2] >= 1 && frames[i][3] >= 1) {
		var tilesheetBMD = oz_OzSprite.TilesheetAssetBMDs[tilesheetId];
		oz_OzSprite.DrawPoint.x = oz_OzSprite.DrawPoint.y = 0;
		oz_OzSprite.DrawRect.x = frames[i][0];
		oz_OzSprite.DrawRect.y = frames[i][1];
		oz_OzSprite.DrawRect.width = frames[i][2];
		oz_OzSprite.DrawRect.height = frames[i][3];
		if(oz_OzSprite.DrawRect.height < 1 || oz_OzSprite.DrawRect.width < 1) return true;
		var bmd = null;
		bmd = new openfl_display_BitmapData(Math.round(oz_OzSprite.DrawRect.width),Math.round(oz_OzSprite.DrawRect.height),true,-1);
		bmd.copyPixels(tilesheetBMD,oz_OzSprite.DrawRect,oz_OzSprite.DrawPoint,null,null,false);
		oz_OzSprite.TilesheetBitmapDatas[tilesheetId][i] = bmd;
		return true;
	} else return false;
};
oz_OzSprite.New = function(mc,type,stateBound,extBound) {
	if(extBound == null) extBound = true;
	if(stateBound == null) stateBound = true;
	var ozs = oz_OzSprite.Sprites[oz_OzSprite.FreeId++];
	ozs.reset();
	ozs.stateBound = stateBound;
	if(type == null) type = oz_SpriteType.EMPTY;
	if(mc != null) {
		ozs.type = oz_SpriteType.BITMAP;
		if(extBound && Globals.ext != null && Globals.ext.length > 0) {
			var idFound = dev_DevUtil.FindStringId(oz_OzSprite.BitmapsNames,mc.name + Globals.ext);
			if(idFound >= 0) mc = oz_OzSprite.Bitmaps[oz_OzSprite.BitmapsIds[idFound]];
		}
		ozs.mc = mc;
	} else ozs.type = type;
	if(type == oz_SpriteType.POLYGON) {
		ozs.flSprite = new openfl_display_Sprite();
		ozs.flSprite.set_visible(false);
	} else if(type == oz_SpriteType.TEXT) {
		ozs.textAlign = oz_TextAlign.LEFT;
		ozs.text = "";
	}
	return ozs;
};
oz_OzSprite.GetMCByString = function(id) {
	var idFound = dev_DevUtil.FindStringId(oz_OzSprite.BitmapsNames,id);
	if(idFound < 0) return null; else return oz_OzSprite.Bitmaps[oz_OzSprite.BitmapsIds[idFound]];
};
oz_OzSprite.GetTilesheetBitmapData = function(tilesheetId,tilesheetFrame) {
	if(oz_OzSprite.TilesheetBitmapDatas[tilesheetId][tilesheetFrame] == null) oz_OzSprite.LoadSingleBitmapData(tilesheetId,tilesheetFrame);
	return oz_OzSprite.TilesheetBitmapDatas[tilesheetId][tilesheetFrame];
};
oz_OzSprite.RemoveRequested = function() {
	var _g1 = 0;
	var _g = oz_OzSprite.toRemoveId;
	while(_g1 < _g) {
		var i = _g1++;
		var rmSprite = oz_OzSprite.toRemove[i];
		if(rmSprite.parent != null) rmSprite.parent.removeChild(rmSprite);
		oz_OzSprite.Dispose(rmSprite);
	}
	oz_OzSprite.toRemoveId = 0;
};
oz_OzSprite.Dispose = function(ozs) {
	if(ozs.parent != null) ozs.parent.removeChild(ozs);
	if(ozs.flSprite != null && ozs.flSprite.parent != null) ozs.flSprite.parent.removeChild(ozs.flSprite);
	ozs.flSprite = null;
	ozs.buttonFunc = null;
	ozs.funcEnd = null;
	ozs.prev = ozs.next = ozs;
	if(ozs.PoolId >= 0) {
		var i = oz_OzSprite.FreeId - 1;
		var j = ozs.PoolId;
		var temp = oz_OzSprite.Sprites[i];
		oz_OzSprite.Sprites[i] = oz_OzSprite.Sprites[j];
		oz_OzSprite.Sprites[j] = temp;
		ozs.PoolId = i;
		oz_OzSprite.Sprites[j].PoolId = j;
		oz_OzSprite.FreeId--;
	}
};
oz_OzSprite.TextToSprites = function(doc,str,mc,src,width,ta,kern) {
	if(kern == null) kern = 0;
	var shouldChange = false;
	var N = doc.numChildren();
	if(doc.type != oz_SpriteType.EMPTY || N != str.length) shouldChange = true; else {
		var iter1 = doc.child;
		var _g = 0;
		while(_g < N) {
			var i = _g++;
			if(iter1.mc != mc) {
				shouldChange = true;
				break;
			}
			iter1 = iter1.next;
		}
	}
	if(shouldChange) {
		doc.clear();
		doc.mouseEnabled = false;
		var offset = (str.length - 1) * width;
		var _g1 = 0;
		var _g2 = str.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			var letter = oz_OzSprite.New(mc);
			letter.set_x(i1 * width);
			letter.set_y(0);
			if(ta == oz_TextAlign.RIGHT) {
				var _g21 = letter;
				_g21.set_x(_g21.get_x() - offset);
			} else if(ta == oz_TextAlign.CENTER) {
				var _g22 = letter;
				_g22.set_x(_g22.get_x() - offset / 2);
			}
			doc.addChild(letter);
			letter.mouseEnabled = false;
			letter._updateOldValues();
		}
	}
	var iter = doc.child;
	var _g11 = 0;
	var _g3 = str.length;
	while(_g11 < _g3) {
		var i2 = _g11++;
		var c = str.charAt(i2);
		if(c == " ") {
			iter.gotoAndStop(1);
			iter.set_visible(false);
		} else {
			var fr = src.indexOf(c) + 1;
			iter.gotoAndStop(fr);
			iter.set_visible(true);
		}
		iter = iter.next;
	}
};
oz_OzSprite.GetRandomMC = function(arr) {
	return arr[Math.floor(Math.random() * arr.length)];
};
oz_OzSprite.UpdateHorizontalBgLine = function(doc,HX,arr,gapMin,gapMax,scrWidth,scaleHor,scaleVer) {
	if(scaleVer == null) scaleVer = 1;
	if(scaleHor == null) scaleHor = 1;
	var GAP_REMOVE = 40;
	var GAP_ADD = 40 + gapMax - gapMin;
	var numRemoved = 0;
	var numAdded = 0;
	if(doc.numChildren() > 0) {
		var N = doc.numChildren();
		var iter = doc.child;
		var _g = 0;
		while(_g < N) {
			var i = _g++;
			var next = iter.next;
			if(iter.getRightBound() < HX - GAP_REMOVE) {
				oz_OzSprite.Dispose(iter);
				numRemoved++;
			}
			iter = next;
		}
		N = doc.numChildren();
		iter = doc.child;
		var _g1 = 0;
		while(_g1 < N) {
			var i1 = _g1++;
			var next1 = iter.next;
			if(iter.getLeftBound() > HX + scrWidth + GAP_REMOVE) {
				oz_OzSprite.Dispose(iter);
				numRemoved++;
			}
			iter = next1;
		}
	}
	if(doc.numChildren() > 0) {
		var leftMost = doc.getChildAt(0);
		var rightMost = doc.getChildAt(doc.numChildren() - 1);
		var leftBorder = leftMost.getLeftBound();
		while(leftBorder > HX - GAP_ADD) {
			var gap = gapMin + (gapMax - gapMin) * Math.random();
			leftBorder -= gap;
			if(leftBorder <= HX - GAP_ADD) break;
			var newMC = oz_OzSprite.New(oz_OzSprite.GetRandomMC(arr));
			newMC.set_x(leftBorder - newMC.getRightBound());
			newMC.set_scaleX(scaleHor);
			newMC.set_scaleY(scaleVer);
			doc.addChild(newMC,0);
			newMC._updateOldValues();
			leftBorder -= newMC.width();
			numAdded++;
		}
		var rightBorder = rightMost.getRightBound();
		while(rightBorder < HX + scrWidth + GAP_ADD) {
			var gap1 = gapMin + (gapMax - gapMin) * Math.random();
			rightBorder += gap1;
			if(rightBorder >= HX + scrWidth + GAP_ADD) break;
			var newMC1 = oz_OzSprite.New(oz_OzSprite.GetRandomMC(arr));
			newMC1.set_x(rightBorder - newMC1.getLeftBound());
			newMC1.set_scaleX(scaleHor);
			newMC1.set_scaleY(scaleVer);
			doc.addChild(newMC1);
			newMC1._updateOldValues();
			rightBorder += newMC1.width();
			numAdded++;
		}
	} else if(doc.numChildren() == 0) {
		var rightBorder1 = HX - GAP_ADD;
		while(rightBorder1 < HX + scrWidth + GAP_ADD) {
			var gap2 = gapMin + (gapMax - gapMin) * Math.random();
			rightBorder1 += gap2;
			if(rightBorder1 >= HX + scrWidth + GAP_ADD) break;
			var newMC2 = oz_OzSprite.New(oz_OzSprite.GetRandomMC(arr));
			newMC2.set_scaleX(scaleHor);
			newMC2.set_scaleY(scaleVer);
			newMC2.set_x(rightBorder1 - newMC2.getLeftBound());
			doc.addChild(newMC2);
			newMC2._updateOldValues();
			rightBorder1 += newMC2.width();
			numAdded++;
		}
	}
};
oz_OzSprite.RemoveStateBounds = function() {
	var i = 0;
	while(i < oz_OzSprite.FreeId) {
		while(oz_OzSprite.Sprites[i].stateBound && i < oz_OzSprite.FreeId) oz_OzSprite.Dispose(oz_OzSprite.Sprites[i]);
		i++;
	}
};
oz_OzSprite.GetSpriteAtPoint = function(node,px,py,tx,ty,scaleX,scaleY,rot) {
	if(rot == null) rot = 0;
	if(scaleY == null) scaleY = 1;
	if(scaleX == null) scaleX = 1;
	if(ty == null) ty = 0;
	if(tx == null) tx = 0;
	if(node.get_alpha() < 0.0001 || node.get_visible() == false) return null;
	if(node.child != null) {
		var iter = node.child.prev;
		var stopIter = iter;
		do {
			var ret = oz_OzSprite.GetSpriteAtPoint(iter,px,py,tx + node.get_x() * scaleX,ty + node.get_y() * scaleY,scaleX * node.get_scaleX(),scaleY * node.get_scaleY(),rot * node.get_rotation());
			if(ret != null) return ret;
			iter = iter.prev;
		} while(iter != stopIter);
	}
	if(node.type == oz_SpriteType.BITMAP && node.mouseEnabled) {
		var arr = oz_OzSprite.TilesheetFrames[node.mc.tilesheetId][node.mc.frames[node.get_currentFrame() - 1]];
		var x1 = tx + node.get_x() - arr[4] * node.get_scaleX() * scaleX;
		var x2 = tx + node.get_x() + (arr[2] - arr[4]) * node.get_scaleX() * scaleX;
		if(x1 > x2) {
			var temp = x1;
			x1 = x2;
			x2 = temp;
		}
		if(x1 <= px && px <= x2) {
			var y1 = ty + node.get_y() - arr[5] * node.get_scaleY() * scaleY;
			var y2 = ty + node.get_y() + (arr[3] - arr[5]) * node.get_scaleY() * scaleY;
			if(y1 > y2) {
				var temp1 = y1;
				y1 = y2;
				y2 = temp1;
			}
			if(y1 <= py && py <= y2) return node;
		}
	}
	return null;
};
oz_OzSprite.UpdateBG = function(doc,x,y,minY,maxY) {
	if(doc == null) return;
	doc.set_x(x);
	doc.set_y(y);
	oz_OzSprite.BGMinY = minY;
	oz_OzSprite.BGMaxY = maxY;
	if(Input.down[49] && !Input.kproc[49]) {
		doc.arg1 = (doc.arg1 + 1) % 6;
		Input.kproc[49] = true;
	}
	return;
};
oz_OzSprite.Flush = function() {
	if(oz_OzSprite.DrawArrayLength > 0) {
		var skips = 0;
		if(oz_OzSprite.DrawingAlpha) {
			var SpriteDataLength;
			if(oz_OzSprite.CT == null) SpriteDataLength = 8; else SpriteDataLength = 11;
			var _g1 = 0;
			var _g = oz_OzSprite.DrawArrayLength / SpriteDataLength | 0;
			while(_g1 < _g) {
				var j = _g1++;
				var i = j * SpriteDataLength;
				var srcBMD = null;
				if(!oz_OzSprite.MinimumBMD) {
					srcBMD = oz_OzSprite.GetTilesheetBitmapData(oz_OzSprite.TilesheetId,oz_OzSprite.DrawArray[i + 2] | 0);
					if(srcBMD == null) continue;
				}
				oz_OzSprite.DrawMatrix.tx = oz_OzSprite.DrawArray[i];
				oz_OzSprite.DrawMatrix.ty = oz_OzSprite.DrawArray[i + 1];
				oz_OzSprite.DrawMatrix.a = oz_OzSprite.DrawArray[i + 3];
				oz_OzSprite.DrawMatrix.b = oz_OzSprite.DrawArray[i + 4];
				oz_OzSprite.DrawMatrix.c = oz_OzSprite.DrawArray[i + 5];
				oz_OzSprite.DrawMatrix.d = oz_OzSprite.DrawArray[i + 6];
				oz_OzSprite.AlphaColorTransform.alphaMultiplier = oz_OzSprite.DrawArray[i + 7];
				if(oz_OzSprite.MinimumBMD) {
					var frames = oz_OzSprite.TilesheetFrames[oz_OzSprite.TilesheetId][oz_OzSprite.DrawArray[i + 2] | 0];
					oz_OzSprite.DrawRect.x = frames[0];
					oz_OzSprite.DrawRect.y = frames[1];
					oz_OzSprite.DrawRect.width = frames[2];
					oz_OzSprite.DrawRect.height = frames[3];
					oz_OzSprite.DrawPart(Main.instance.ScreenBMD,oz_OzSprite.TilesheetAssetBMDs[oz_OzSprite.TilesheetId],oz_OzSprite.DrawMatrix,oz_OzSprite.AlphaColorTransform,null,oz_OzSprite.DrawRect,oz_OzSprite.DrawingSmooth);
				} else Main.instance.ScreenBMD.draw(srcBMD,oz_OzSprite.DrawMatrix,oz_OzSprite.AlphaColorTransform,null,null,oz_OzSprite.DrawingSmooth);
			}
		} else {
			var SpriteDataLength1;
			if(oz_OzSprite.CT == null) SpriteDataLength1 = 7; else SpriteDataLength1 = 10;
			var _g11 = 0;
			var _g2 = oz_OzSprite.DrawArrayLength / SpriteDataLength1 | 0;
			while(_g11 < _g2) {
				var j1 = _g11++;
				var i1 = j1 * SpriteDataLength1;
				oz_OzSprite.DrawMatrix.tx = oz_OzSprite.DrawArray[i1];
				oz_OzSprite.DrawMatrix.ty = oz_OzSprite.DrawArray[i1 + 1];
				oz_OzSprite.DrawMatrix.a = oz_OzSprite.DrawArray[i1 + 3];
				oz_OzSprite.DrawMatrix.b = oz_OzSprite.DrawArray[i1 + 4];
				oz_OzSprite.DrawMatrix.c = oz_OzSprite.DrawArray[i1 + 5];
				oz_OzSprite.DrawMatrix.d = oz_OzSprite.DrawArray[i1 + 6];
				if(!oz_OzSprite.DrawingSmooth && oz_OzSprite.FloatEqual(oz_OzSprite.DrawMatrix.a,1) && oz_OzSprite.FloatEqual(oz_OzSprite.DrawMatrix.d,1) && oz_OzSprite.FloatEqual(oz_OzSprite.DrawMatrix.c,0) && oz_OzSprite.FloatEqual(oz_OzSprite.DrawMatrix.b,0) && oz_OzSprite.CT == null) oz_OzSprite.CopyMcToBmd(Main.instance.ScreenBMD,oz_OzSprite.TilesheetId,oz_OzSprite.DrawArray[i1 + 2] | 0,oz_OzSprite.DrawMatrix.tx,oz_OzSprite.DrawMatrix.ty); else {
					var srcBMD1 = null;
					if(!oz_OzSprite.MinimumBMD) {
						srcBMD1 = oz_OzSprite.GetTilesheetBitmapData(oz_OzSprite.TilesheetId,oz_OzSprite.DrawArray[i1 + 2] | 0);
						if(srcBMD1 == null) continue;
					}
					if(oz_OzSprite.MinimumBMD) {
						var frames1 = oz_OzSprite.TilesheetFrames[oz_OzSprite.TilesheetId][oz_OzSprite.DrawArray[i1 + 2] | 0];
						oz_OzSprite.DrawRect.x = frames1[0];
						oz_OzSprite.DrawRect.y = frames1[1];
						oz_OzSprite.DrawRect.width = frames1[2];
						oz_OzSprite.DrawRect.height = frames1[3];
						oz_OzSprite.DrawPart(Main.instance.ScreenBMD,oz_OzSprite.TilesheetAssetBMDs[oz_OzSprite.TilesheetId],oz_OzSprite.DrawMatrix,oz_OzSprite.CT,null,oz_OzSprite.DrawRect,oz_OzSprite.DrawingSmooth);
					} else Main.instance.ScreenBMD.draw(srcBMD1,oz_OzSprite.DrawMatrix,oz_OzSprite.CT,null,null,oz_OzSprite.DrawingSmooth);
				}
			}
		}
		oz_OzSprite.DrawArrayLength = 0;
	}
	oz_OzSprite.ShowFlushInfo = -1;
};
oz_OzSprite.FloatEqual = function(a,eq) {
	var EPS = 0.0000006;
	return eq - EPS <= a && a <= eq + EPS;
};
oz_OzSprite.CopyMcToBmd = function(dest,tilesheetId,frame,x,y,drawSmooth) {
	if(drawSmooth == null) drawSmooth = true;
	var frames = oz_OzSprite.TilesheetFrames[tilesheetId][frame];
	oz_OzSprite.DrawRect.x = frames[0];
	oz_OzSprite.DrawRect.y = frames[1];
	oz_OzSprite.DrawRect.width = frames[2];
	oz_OzSprite.DrawRect.height = frames[3];
	oz_OzSprite.DrawPoint.x = Math.round(x + 0.0001);
	oz_OzSprite.DrawPoint.y = Math.round(y + 0.0001);
	dest.copyPixels(oz_OzSprite.TilesheetAssetBMDs[tilesheetId],oz_OzSprite.DrawRect,oz_OzSprite.DrawPoint,null,null,drawSmooth);
};
oz_OzSprite.DrawPart = function(self,source,matrix,colorTransform,blendMode,clipRect,smoothing) {
	var context = self.context;
	self.syncCanvas();
	var a = 0;
	context.save();
	if(colorTransform != null) context.globalAlpha *= colorTransform.alphaMultiplier;
	if(smoothing != null) openfl_display_BitmapData.setSmoothing(context,smoothing);
	if(matrix != null) context.setTransform(matrix.a,matrix.b,matrix.c,matrix.d,matrix.tx,matrix.ty);
	if(clipRect != null) {
		var clipRect_width = clipRect.width;
		var clipRect_height = clipRect.height;
		if(clipRect_height < 1 || clipRect_width < 1 || clipRect.x < 0 || clipRect.y < 0) haxe_Log.trace("ERROR DRAW IMAGE",{ fileName : "OzSprite.hx", lineNumber : 2719, className : "oz.OzSprite", methodName : "DrawPart", customParams : [clipRect_width,clipRect_height,clipRect.x,clipRect.y]});
		context.drawImage(source.handle(),clipRect.x,clipRect.y,clipRect_width,clipRect_height,0,0,clipRect_width,clipRect_height);
	} else context.drawImage(source.handle(),0,0);
	context.restore();
	self.__sync |= 5;
};
oz_OzSprite.prototype = {
	set: function(fl) {
		this.flags = this.flags | fl;
	}
	,width: function() {
		var _g = this.type;
		switch(_g[1]) {
		case 1:
			return oz_OzSprite.TilesheetFrames[this.mc.tilesheetId][this.mc.frames[this.get_currentFrame() - 1]][2];
		default:
			return 1;
		}
	}
	,height: function() {
		var _g = this.type;
		switch(_g[1]) {
		case 1:
			return oz_OzSprite.TilesheetFrames[this.mc.tilesheetId][this.mc.frames[this.get_currentFrame() - 1]][3];
		default:
			return 1;
		}
	}
	,setxy: function(x,y) {
		this.set_x(x);
		this.set_y(y);
	}
	,setFrameOnBool: function(shouldSet) {
		if(shouldSet) this.gotoAndStop(2); else this.gotoAndStop(1);
	}
	,disappearBig: function(time,scaleFactor,delay,stBound,shouldRemove) {
		if(shouldRemove == null) shouldRemove = true;
		if(stBound == null) stBound = true;
		if(delay == null) delay = 0;
		if(scaleFactor == null) scaleFactor = 2;
		if(time == null) time = 15;
		var _g = this;
		var odt = oz_OzTween.New();
		odt.startValue = this.get_scaleX();
		odt.endValue = scaleFactor;
		odt.duration = time;
		odt.cnt = -delay;
		odt.updateFunc = function(a) {
			var t = a;
			var b = odt.startValue;
			var c = odt.endValue - b;
			var d = 1;
			var s = 1.70158;
			_g.set_scaleX(c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = stBound;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.get_scaleY();
		odt1.endValue = scaleFactor;
		odt1.duration = time;
		odt1.cnt = -delay;
		odt1.updateFunc = function(a1) {
			var t1 = a1;
			var b1 = odt1.startValue;
			var c1 = odt1.endValue - b1;
			var d1 = 1;
			var s1 = 1.70158;
			_g.set_scaleY(c1 * ((t1 = t1 / d1 - 1) * t1 * ((s1 + 1) * t1 + s1) + 1) + b1);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = stBound;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		var odt2 = oz_OzTween.New();
		odt2.startValue = this.get_alpha();
		odt2.endValue = 0;
		odt2.duration = time;
		odt2.cnt = -delay;
		odt2.updateFunc = function(a2) {
			var t2 = a2;
			var b2 = odt2.startValue;
			var c2 = odt2.endValue - b2;
			var d2 = 1;
			var s2 = 1.70158;
			_g.set_alpha(c2 * ((t2 = t2 / d2 - 1) * t2 * ((s2 + 1) * t2 + s2) + 1) + b2);
		};
		odt2.repeat = 0;
		odt2.endFunc = null;
		odt2.stateBound = stBound;
		odt2.gameBound = true;
		oz_OzTween.Add(odt2);
		if(shouldRemove) oz_OzTween.DelayedCall($bind(this,this.removeMe),time + 1);
	}
	,appear: function(time,delay,stBound) {
		if(stBound == null) stBound = true;
		if(delay == null) delay = 0;
		if(time == null) time = 15;
		var _g = this;
		var startScaleX = this.get_scaleX();
		var startScaleY = this.get_scaleY();
		var startAlpha = this.get_alpha();
		this.set_scaleX(startScaleX * 0.1);
		this.set_scaleY(startScaleY * 0.1);
		this.set_alpha(0);
		var odt = oz_OzTween.New();
		odt.startValue = this.get_scaleX();
		odt.endValue = startScaleX;
		odt.duration = time;
		odt.cnt = -delay;
		odt.updateFunc = function(a) {
			var t = a;
			var b = odt.startValue;
			var c = odt.endValue - b;
			var d = 1;
			var s = 1.70158;
			_g.set_scaleX(c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = stBound;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.get_scaleY();
		odt1.endValue = startScaleY;
		odt1.duration = time;
		odt1.cnt = -delay;
		odt1.updateFunc = function(a1) {
			var t1 = a1;
			var b1 = odt1.startValue;
			var c1 = odt1.endValue - b1;
			var d1 = 1;
			var s1 = 1.70158;
			_g.set_scaleY(c1 * ((t1 = t1 / d1 - 1) * t1 * ((s1 + 1) * t1 + s1) + 1) + b1);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = stBound;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		var odt2 = oz_OzTween.New();
		odt2.startValue = this.get_alpha();
		odt2.endValue = startAlpha;
		odt2.duration = time;
		odt2.cnt = -delay;
		odt2.updateFunc = function(a2) {
			var t2 = a2;
			var b2 = odt2.startValue;
			var c2 = odt2.endValue - b2;
			var d2 = 1;
			var s2 = 1.70158;
			_g.set_alpha(c2 * ((t2 = t2 / d2 - 1) * t2 * ((s2 + 1) * t2 + s2) + 1) + b2);
		};
		odt2.repeat = 0;
		odt2.endFunc = null;
		odt2.stateBound = stBound;
		odt2.gameBound = true;
		oz_OzTween.Add(odt2);
	}
	,disappear: function(time,delay,stBound) {
		if(stBound == null) stBound = true;
		if(delay == null) delay = 0;
		if(time == null) time = 15;
		var _g = this;
		var odt = oz_OzTween.New();
		odt.startValue = this.get_scaleX();
		odt.endValue = 0;
		odt.duration = time;
		odt.cnt = -delay;
		odt.updateFunc = function(a) {
			var t = a;
			var b = odt.startValue;
			var c = odt.endValue - b;
			var d = 1;
			var s = 1.70158;
			_g.set_scaleX(c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = stBound;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.get_scaleY();
		odt1.endValue = 0;
		odt1.duration = time;
		odt1.cnt = -delay;
		odt1.updateFunc = function(a1) {
			var t1 = a1;
			var b1 = odt1.startValue;
			var c1 = odt1.endValue - b1;
			var d1 = 1;
			var s1 = 1.70158;
			_g.set_scaleY(c1 * ((t1 = t1 / d1 - 1) * t1 * ((s1 + 1) * t1 + s1) + 1) + b1);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = stBound;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		var odt2 = oz_OzTween.New();
		odt2.startValue = this.get_alpha();
		odt2.endValue = 0;
		odt2.duration = time;
		odt2.cnt = -delay;
		odt2.updateFunc = function(a2) {
			var t2 = a2;
			var b2 = odt2.startValue;
			var c2 = odt2.endValue - b2;
			var d2 = 1;
			var s2 = 1.70158;
			_g.set_alpha(c2 * ((t2 = t2 / d2 - 1) * t2 * ((s2 + 1) * t2 + s2) + 1) + b2);
		};
		odt2.repeat = 0;
		odt2.endFunc = null;
		odt2.stateBound = stBound;
		odt2.gameBound = true;
		oz_OzTween.Add(odt2);
	}
	,makeBubble2: function(duration) {
		if(duration == null) duration = 30;
		var ozt = oz_OzTween.New();
		ozt.duration = duration;
		this.startScaleX = this.get_scaleX();
		this.startScaleY = this.get_scaleY();
		ozt.updateFunc = $bind(this,this.bubbleScale2);
		ozt.repeat = -1;
		ozt.endFunc = null;
		oz_OzTween.Add(ozt);
		return ozt;
	}
	,bubbleScale2: function(a) {
		if(a >= 0.5) a = 1 - a;
		a *= 2;
		this.set_scaleX(this.startScaleX * (0.95 + a * 0.1));
		this.set_scaleY(this.get_scaleX());
	}
	,makeBubble2Big: function(duration) {
		if(duration == null) duration = 30;
		var ozt = oz_OzTween.New();
		ozt.duration = duration;
		this.startScaleX = this.get_scaleX();
		this.startScaleY = this.get_scaleY();
		ozt.updateFunc = $bind(this,this.bubbleScale2Big);
		ozt.repeat = -1;
		ozt.endFunc = null;
		oz_OzTween.Add(ozt);
		return ozt;
	}
	,bubbleScale2Big: function(a) {
		if(a >= 0.5) a = 1 - a;
		a *= 2;
		this.set_scaleX(this.startScaleX * (0.85 + a * 0.3));
		this.set_scaleY(this.get_scaleX());
	}
	,tweenScale: function(a) {
		if(a >= 0.5) a = 1 - a;
		a *= 2;
		this.set_scaleX(this.startScaleX * (1 - a) + this.endScaleX * a);
		this.set_scaleY(this.startScaleY * (1 - a) + this.endScaleY * a);
	}
	,makeLink: function(func,playSound) {
		if(playSound == null) playSound = true;
		if(playSound) this.flags = this.flags | 512;
		if(Globals.is4399) {
			if(func == Globals.solution || func == Globals.twitter || func == Globals.facebook || func == Globals.googleplay || func == Globals.appstore || func == Globals.amazon || this.name == "crossButton" || this.name == "btnMore") {
				this.set_visible(false);
				return;
			} else if(this.name == "btnMoreChinese") haxe_Log.trace("allowing more",{ fileName : "OzSprite.hx", lineNumber : 882, className : "oz.OzSprite", methodName : "makeLink"}); else {
				haxe_Log.trace("not allowing this link",{ fileName : "OzSprite.hx", lineNumber : 885, className : "oz.OzSprite", methodName : "makeLink"});
				return;
			}
		}
		this.flags = this.flags | 1;
		this.buttonFunc = func;
		this.addEventListener(2,$bind(this,this.buttonClick));
	}
	,unButtonLink: function() {
		if(this.eventListeners != null && this.eventListeners.h.hasOwnProperty(2)) this.removeEventListener(2,this.eventListeners.h[2]);
	}
	,makeButton: function(func,playSound) {
		if(playSound == null) playSound = true;
		if(playSound) this.flags = this.flags | 512;
		this.makeLink(func,playSound);
	}
	,voidButtonFunc: function() {
		this.flags = this.flags & 16777213;
		this.buttonFunc(new oz_OzEvent(this));
	}
	,buttonClick: function(e) {
		if((this.flags & 2) > 0) return;
		if((this.flags & 1) > 0) {
			this.buttonFunc(e);
			return;
		}
		this.flags = this.flags | 2;
		var ozt = oz_OzTween.New();
		ozt.duration = 6;
		this.startScaleX = this.get_scaleX();
		this.endScaleX = this.startScaleX * 0.95;
		this.startScaleY = this.get_scaleY();
		this.endScaleY = this.startScaleY * 0.95;
		ozt.updateFunc = $bind(this,this.tweenScale);
		ozt.endFunc = $bind(this,this.voidButtonFunc);
		oz_OzTween.Add(ozt);
	}
	,addEventListener: function(eventId,func) {
		if(this.eventListeners == null) this.eventListeners = new haxe_ds_IntMap();
		this.eventListeners.h[eventId] = func;
	}
	,removeEventListener: function(eventId,func) {
		if(this.eventListeners != null) {
			if(this.eventListeners.h.hasOwnProperty(eventId) && this.eventListeners.h[eventId] == func) this.eventListeners.remove(eventId);
		}
	}
	,reset: function() {
		this._reset();
		this.name = null;
		this.eventListeners = null;
		this.arg1 = 0;
		this.padFlags = 0;
		this.flags = 0;
		this.startX = this.startY = 0;
		this.stateBound = true;
		this.funcEnd = null;
		this.mc = null;
		this.child = null;
		this.parent = null;
		this.next = this;
		this.prev = this;
		this.type = oz_SpriteType.EMPTY;
		this._oldX = this._x = 0;
		this._oldY = this._y = 0;
		this._oldRotation = this._rotation = 0;
		this._oldScaleX = this._scaleX = 1;
		this._oldScaleY = this._scaleY = 1;
		this._oldAlpha = this._alpha = 1;
		this._oldVisible = this._visible = true;
		this._oldPlaying = this._playing = true;
		this._oldCurrentFrame = this._currentFrame = 1;
		this._oldLineLength = this._lineLength = 1;
		this.mouseEnabled = true;
		this.tileMap = null;
		this.colorTransform = null;
		this.smooth = Main.DEFAULT_SMOOTH;
		this.toBeRemoved = false;
		this.animation = null;
		this.showRight = -1;
	}
	,gotoAndStop: function(newFrame) {
		if(newFrame < 1 || newFrame > this.mc.frames.length) haxe_Log.trace("Error! Invalid frame",{ fileName : "OzSprite.hx", lineNumber : 1118, className : "oz.OzSprite", methodName : "gotoAndStop", customParams : [newFrame]}); else this.set_currentFrame(newFrame);
		this.set_playing(false);
	}
	,setFluid: function(flag,sx,sy) {
		if(sy == null) sy = -1000000;
		if(sx == null) sx = -1000000;
		if(flag == null) flag = 0;
		this.padFlags = flag;
		if(sx <= -99999) sx = this.get_x();
		if(sy <= -99999) sy = this.get_y();
		this.startX = sx;
		this.startY = sy;
	}
	,adjustAllLayouts: function() {
		if(this.padFlags > 0) this.adjustLayout();
		if(this.child != null) {
			var it = this.child;
			do {
				it.adjustAllLayouts();
				it = it.next;
			} while(it != this.child);
		}
	}
	,adjustLayout: function() {
		var vertDiff = Main.HEIGHT - Main.HEIGHT_MIN;
		if((this.padFlags & 1) > 0) this.set_y(Math.round(this.startY + vertDiff + oz_OzSprite.EPS)); else if((this.padFlags & 2) > 0) this.set_y(Math.round(this.startY + vertDiff / 2 + oz_OzSprite.EPS)); else if((this.padFlags & 4) > 0) this.set_y(Math.round(this.startY - vertDiff + oz_OzSprite.EPS)); else if((this.padFlags & 8) > 0) this.set_y(Math.round(this.startY - vertDiff / 2 + oz_OzSprite.EPS)); else if((this.padFlags & 16) > 0) this.set_y(Math.round(Main.HEIGHT / 2 + oz_OzSprite.EPS));
		var horDiff = Main.WIDTH - Main.WIDTH_MIN;
		if((this.padFlags & 32) > 0) this.set_x(Math.round(this.startX + horDiff + oz_OzSprite.EPS)); else if((this.padFlags & 64) > 0) this.set_x(Math.round(this.startX + horDiff / 2 + oz_OzSprite.EPS)); else if((this.padFlags & 128) > 0) this.set_x(Math.round(this.startX - horDiff + oz_OzSprite.EPS)); else if((this.padFlags & 256) > 0) this.set_x(Math.round(this.startX - horDiff / 2 + oz_OzSprite.EPS)); else if((this.padFlags & 512) > 0) this.set_x(Math.round(Main.WIDTH / 2 + oz_OzSprite.EPS));
	}
	,getChild: function(id) {
		if(this.child != null) {
			var iter = this.child;
			do {
				if(iter.name != null && iter.name == id) return iter;
				iter = iter.next;
			} while(iter != this.child);
		}
		return null;
	}
	,getChildMcAt: function(mc,id) {
		var i = 0;
		if(this.child != null) {
			var iter = this.child;
			do {
				if(iter.mc == mc) {
					if(i == id) return iter;
					i++;
				}
				iter = iter.next;
			} while(iter != this.child);
		}
		return null;
	}
	,getChildAt: function(id) {
		var i = 0;
		if(this.child != null) {
			var iter = this.child;
			do {
				if(i == id) return iter;
				i++;
				iter = iter.next;
			} while(iter != this.child);
		}
		return null;
	}
	,numChildren: function() {
		var ret = 0;
		if(this.child != null) {
			var iter = this.child;
			do {
				ret++;
				iter = iter.next;
			} while(iter != this.child);
		}
		return ret;
	}
	,createLineSegmentGFX: function(fillBmd,dist,x1,y1,x2,y2) {
		var lineWidth = fillBmd.component.height;
		var angle = Math.atan2(y2 - y1,x2 - x1);
		var h = lineWidth / 2;
		var cos = Math.cos(angle);
		var sin = Math.sin(angle);
		oz_OzSprite.PathMatrix.identity();
		oz_OzSprite.PathMatrix.translate(-dist,0);
		oz_OzSprite.PathMatrix.rotate(angle);
		oz_OzSprite.PathMatrix.translate(x1 + h * sin,y1 - h * cos);
		this.flSprite.get_graphics().beginBitmapFill(fillBmd,oz_OzSprite.PathMatrix,true,true);
		this.flSprite.get_graphics().moveTo(x1 + h * sin,y1 - h * cos);
		this.flSprite.get_graphics().lineTo(x2 + h * sin,y2 - h * cos);
		this.flSprite.get_graphics().lineTo(x2 - h * sin,y2 + h * cos);
		this.flSprite.get_graphics().lineTo(x1 - h * sin,y1 + h * cos);
		this.flSprite.get_graphics().lineTo(x1 + h * sin,y1 - h * cos);
		this.flSprite.get_graphics().endFill();
	}
	,createLineGFX: function(fillBmd,lineWidth,lineLength) {
		if(lineLength == null) lineLength = 10;
		if(lineWidth == null) lineWidth = -1;
		if(lineWidth < 0) lineWidth = fillBmd.component.height;
		this.flSprite.get_graphics().clear();
		oz_OzSprite.DrawMatrix.identity();
		oz_OzSprite.DrawMatrix.translate(0,lineWidth / 2);
		this.flSprite.get_graphics().beginBitmapFill(fillBmd,oz_OzSprite.DrawMatrix,true,true);
		this.flSprite.get_graphics().moveTo(-lineLength / 2,-lineWidth / 2);
		this.flSprite.get_graphics().lineTo(lineLength / 2,-lineWidth / 2);
		this.flSprite.get_graphics().lineTo(lineLength / 2,lineWidth / 2);
		this.flSprite.get_graphics().lineTo(-lineLength / 2,lineWidth / 2);
		this.flSprite.get_graphics().lineTo(-lineLength / 2,-lineWidth / 2);
		this.flSprite.get_graphics().endFill();
		this.fillLength = lineLength;
		this.set_lineLength(lineLength);
	}
	,adjustPath: function(bmd,cX,cY) {
		this.flSprite.get_graphics().clear();
		var dist = 0;
		var _g1 = 0;
		var _g = cX.length - 1;
		while(_g1 < _g) {
			var i = _g1++;
			var x1 = cX[i];
			var y1 = cY[i];
			var x2 = cX[i + 1];
			var y2 = cY[i + 1];
			var dx = x2 - x1;
			var dy = y2 - y1;
			var segLength = Math.sqrt(dx * dx + dy * dy);
			this.createLineSegmentGFX(bmd,dist,x1,y1,x2,y2);
			dist += segLength;
		}
		var n = this.numChildren();
		var _g2 = 0;
		while(_g2 < n) {
			var i1 = _g2++;
			var child = this.getChildAt(i1);
			child.set_x(cX[i1]);
			child.set_y(cY[i1]);
		}
	}
	,adjustLine: function(x1,y1,x2,y2,toScale,defaultLength) {
		if(defaultLength == null) defaultLength = 10;
		if(toScale == null) toScale = false;
		this.flags = this.flags | 4;
		this.set_x((x1 + x2) / 2);
		this.set_y((y1 + y2) / 2);
		var dx = x1 - x2;
		var dy = y1 - y2;
		var lineLengthSquared = dx * dx + dy * dy;
		if(lineLengthSquared > 0.0001) this._setSmartRotation(180.0 / Math.PI * Math.atan2(dy,dx));
		if(toScale) {
			this.flags = this.flags | 8;
			this.set_lineLength(Math.sqrt(lineLengthSquared));
			this.set_scaleX(this.get_lineLength() / defaultLength);
		}
	}
	,removeMe: function() {
		if(!this.toBeRemoved) {
			oz_OzSprite.toRemove[oz_OzSprite.toRemoveId++] = this;
			this.toBeRemoved = true;
		}
	}
	,removeChild: function(sprite) {
		if(sprite == null || sprite.parent != this) return;
		if(this.child == sprite) {
			if(this.child.next == this.child) this.child = null; else this.child = this.child.next;
		}
		var first = sprite.prev;
		var second = sprite.next;
		if(first != null) first.next = second;
		if(second != null) second.prev = first;
		sprite.prev = sprite;
		sprite.next = sprite;
		sprite.parent = null;
	}
	,clear: function() {
		this.clearChildren();
		this.mc = null;
		this.type = oz_SpriteType.EMPTY;
	}
	,clearChildren: function() {
		while(this.child != null) {
			this.child.clearChildren();
			oz_OzSprite.Dispose(this.child);
		}
	}
	,addChild: function(sprite,at) {
		if(at == null) at = -1;
		if(sprite == null) return;
		sprite._oldVisible = false;
		if(sprite.parent != null) sprite.parent.removeChild(sprite);
		sprite.parent = this;
		if(this.child == null) {
			this.child = sprite;
			sprite.prev = sprite;
			sprite.next = sprite;
		} else {
			var first = this.child.prev;
			var second = this.child;
			if(at > -1) {
				if(at == 0) this.child = sprite; else do {
					first = first.next;
					second = second.next;
					at--;
				} while(at > 0 && second != this.child);
			}
			first.next = sprite;
			second.prev = sprite;
			sprite.prev = first;
			sprite.next = second;
		}
	}
	,addChildrenFromParentByString: function(p,childrenIDs) {
		var _g = 0;
		while(_g < childrenIDs.length) {
			var s = childrenIDs[_g];
			++_g;
			var toAdd = p.getChild(s);
			var _g1 = toAdd;
			_g1.set_x(_g1.get_x() - this.get_x());
			var _g11 = toAdd;
			_g11.set_y(_g11.get_y() - this.get_y());
			var _g12 = toAdd;
			_g12.set_rotation(_g12.get_rotation() - this.get_rotation());
			this.addChild(toAdd);
		}
	}
	,getLeftBound: function() {
		var arr = oz_OzSprite.TilesheetFrames[this.mc.tilesheetId][this.mc.frames[this.get_currentFrame() - 1]];
		return Math.min(this.get_x() - arr[4] * this.get_scaleX(),this.get_x() + (arr[2] - arr[4]) * this.get_scaleX());
	}
	,getRightBound: function() {
		var arr = oz_OzSprite.TilesheetFrames[this.mc.tilesheetId][this.mc.frames[this.get_currentFrame() - 1]];
		return Math.max(this.get_x() - arr[4] * this.get_scaleX(),this.get_x() + (arr[2] - arr[4]) * this.get_scaleX());
	}
	,setTileLayer: function(layerId) {
		this.arg1 = layerId;
	}
	,getTileLayer: function() {
		return this.arg1;
	}
	,getTotalFrames: function() {
		return this.mc.frames.length;
	}
	,draw: function(oldAlpha) {
		if(oldAlpha == null) oldAlpha = 1;
		var skipMe = false;
		var newAlpha = oldAlpha * ((1 - oz_OzSprite.DeltaT) * this._oldAlpha + oz_OzSprite.DeltaT * this._alpha);
		if(!this._oldVisible || newAlpha < 0.001) return;
		oz_OzMatrix.PushMatrix();
		if(this.type == oz_SpriteType.EMPTY) {
			var cm = oz_OzMatrix.getCurrentMatrix();
			cm.PostTranslate(this.noInterpolation?this._x:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldX + oz_OzSprite.DeltaT * this._x) * 128) / 128,this.noInterpolation?this._y:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldY + oz_OzSprite.DeltaT * this._y) * 128) / 128);
			var rr;
			if(this.noInterpolation) rr = this._rotation; else rr = (1 - oz_OzSprite.DeltaT) * this._oldRotation + oz_OzSprite.DeltaT * this._rotation;
			cm.PostRotate(rr);
			cm.PostScale((1 - oz_OzSprite.DeltaT) * this._oldScaleX + oz_OzSprite.DeltaT * this._scaleX,(1 - oz_OzSprite.DeltaT) * this._oldScaleY + oz_OzSprite.DeltaT * this._scaleY);
		} else if(this.type == oz_SpriteType.BITMAP) {
			if(oz_OzSprite.TilesheetId == -1) oz_OzSprite.TilesheetId = this.mc.tilesheetId;
			if(oz_OzSprite.TilesheetId != this.mc.tilesheetId) {
				oz_OzSprite.Flush();
				oz_OzSprite.TilesheetId = this.mc.tilesheetId;
			}
			if(newAlpha < 0.999 && !oz_OzSprite.DrawingAlpha || newAlpha > 0.999 && oz_OzSprite.DrawingAlpha) {
				oz_OzSprite.Flush();
				oz_OzSprite.DrawingAlpha = !oz_OzSprite.DrawingAlpha;
			}
			if(oz_OzSprite.DrawingSmooth != this.smooth) {
				oz_OzSprite.Flush();
				oz_OzSprite.DrawingSmooth = this.smooth;
			}
			if(oz_OzSprite.CT != this.colorTransform) {
				oz_OzSprite.Flush();
				oz_OzSprite.CT = this.colorTransform;
			}
			var cm1 = oz_OzMatrix.getCurrentMatrix();
			cm1.PostTranslate(this.noInterpolation?this._x:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldX + oz_OzSprite.DeltaT * this._x) * 128) / 128,this.noInterpolation?this._y:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldY + oz_OzSprite.DeltaT * this._y) * 128) / 128);
			cm1.PostRotate(this.noInterpolation?this._rotation:(1 - oz_OzSprite.DeltaT) * this._oldRotation + oz_OzSprite.DeltaT * this._rotation);
			cm1.PostScale((1 - oz_OzSprite.DeltaT) * this._oldScaleX + oz_OzSprite.DeltaT * this._scaleX,(1 - oz_OzSprite.DeltaT) * this._oldScaleY + oz_OzSprite.DeltaT * this._scaleY);
			var cmToDraw;
			var src = oz_OzSprite.TilesheetFrames[this.mc.tilesheetId][this.mc.frames[this.get_currentFrame() - 1]];
			var rightFrame = this.mc.frames[this.get_currentFrame() - 1];
			if(this.showRight >= 0) {
				var amountRight = Std["int"](Math.min(src[2],Math.round(src[2] * this.showRight)));
				if(amountRight > 0) {
					var keyRight = this.mc.tilesheetId * 1000 * 10000 + this.mc.frames[this.get_currentFrame() - 1] * 10000 + amountRight;
					if(!oz_OzSprite.ShowRights.h.hasOwnProperty(keyRight)) {
						var newFrame = oz_OzSprite.appendTilesheetFrame(this.mc,this.mc.name + "_" + amountRight,this.get_currentFrame(),Math.round(src[0]),Math.round(src[1]),amountRight,Math.round(src[3]),Math.round(src[4]),Math.round(src[5]));
						oz_OzSprite.ShowRights.h[keyRight] = newFrame;
						dev_DevUtil.SortIdsByName(oz_OzSprite.BitmapsIds,oz_OzSprite.BitmapsNames);
					}
					rightFrame = oz_OzSprite.ShowRights.h[keyRight];
					src = oz_OzSprite.TilesheetFrames[this.mc.tilesheetId][rightFrame];
				} else skipMe = true;
			}
			var cmToDraw1 = oz_OzMatrix.getTemp(1);
			cmToDraw1.Translation(-src[4],-src[5]);
			oz_OzMatrix.Multiply(cmToDraw1,cm1,cmToDraw1);
			if(!skipMe) skipMe = cmToDraw1.outside(src[2],src[3],Main.WIDTH,Main.HEIGHT,false);
			if(!skipMe) {
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw1.m02;
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw1.m12;
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = rightFrame;
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw1.m00;
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw1.m10;
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw1.m01;
				oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw1.m11;
				if(this.colorTransform != null) {
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = this.colorTransform.redMultiplier;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = this.colorTransform.greenMultiplier;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = this.colorTransform.blueMultiplier;
				}
				if(oz_OzSprite.DrawingAlpha) oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = newAlpha;
			}
		} else if(this.type == oz_SpriteType.POLYGON) {
			oz_OzSprite.Flush();
			var cm2 = oz_OzMatrix.getCurrentMatrix();
			if(newAlpha < 0.999 && !oz_OzSprite.DrawingAlpha || newAlpha > 0.999 && oz_OzSprite.DrawingAlpha) oz_OzSprite.DrawingAlpha = !oz_OzSprite.DrawingAlpha;
			if(oz_OzSprite.DrawingSmooth != this.smooth) oz_OzSprite.DrawingSmooth = this.smooth;
			if((this.flags & 4) > 0) {
				var oldCos = Math.cos(this._oldRotation / 180.0 * Math.PI);
				var oldSin = Math.sin(this._oldRotation / 180.0 * Math.PI);
				var oldX1 = oldCos * this._oldLineLength / 2;
				var oldY1 = oldSin * this._oldLineLength / 2;
				var newCos = Math.cos(this._rotation / 180.0 * Math.PI);
				var newSin = Math.sin(this._rotation / 180.0 * Math.PI);
				var newX1 = newCos * this._lineLength / 2;
				var newY1 = newSin * this._lineLength / 2;
				var realX1 = (oldX1 + this._oldX) * (1 - oz_OzSprite.DeltaT) + (newX1 + this._x) * oz_OzSprite.DeltaT;
				var realY1 = (oldY1 + this._oldY) * (1 - oz_OzSprite.DeltaT) + (newY1 + this._y) * oz_OzSprite.DeltaT;
				var realX2 = (-oldX1 + this._oldX) * (1 - oz_OzSprite.DeltaT) + (-newX1 + this._x) * oz_OzSprite.DeltaT;
				var realY2 = (-oldY1 + this._oldY) * (1 - oz_OzSprite.DeltaT) + (-newY1 + this._y) * oz_OzSprite.DeltaT;
				var putX = (realX1 + realX2) / 2;
				var putY = (realY1 + realY2) / 2;
				var dx = realX1 - realX2;
				var dy = realY1 - realY2;
				var lineLengthSquared = dx * dx + dy * dy;
				var realRot = 0;
				if(lineLengthSquared > 0.0001) realRot = 180.0 / Math.PI * Math.atan2(dy,dx);
				var realScaleX = 1;
				var thislineLength = Math.sqrt(lineLengthSquared);
				if((this.flags & 8) > 0) realScaleX = thislineLength / this.fillLength; else {
				}
				cm2.PostTranslate(putX,putY);
				cm2.PostRotate(realRot);
				cm2.PostScale(realScaleX,(1 - oz_OzSprite.DeltaT) * this._oldScaleY + oz_OzSprite.DeltaT * this._scaleY);
			} else {
				cm2.PostTranslate(this.noInterpolation?this._x:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldX + oz_OzSprite.DeltaT * this._x) * 128) / 128,this.noInterpolation?this._y:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldY + oz_OzSprite.DeltaT * this._y) * 128) / 128);
				cm2.PostRotate(this.noInterpolation?this._rotation:(1 - oz_OzSprite.DeltaT) * this._oldRotation + oz_OzSprite.DeltaT * this._rotation);
				cm2.PostScale((1 - oz_OzSprite.DeltaT) * this._oldScaleX + oz_OzSprite.DeltaT * this._scaleX,(1 - oz_OzSprite.DeltaT) * this._oldScaleY + oz_OzSprite.DeltaT * this._scaleY);
			}
			var cmToDraw2 = cm2;
			cmToDraw2.toMatrix(oz_OzSprite.DrawMatrix);
			if(oz_OzSprite.DrawingAlpha) {
				oz_OzSprite.AlphaColorTransform.alphaMultiplier = newAlpha;
				Main.instance.ScreenBMD.draw(this.flSprite,oz_OzSprite.DrawMatrix,oz_OzSprite.AlphaColorTransform,null,null,true);
			} else Main.instance.ScreenBMD.draw(this.flSprite,oz_OzSprite.DrawMatrix,null,null,null,true);
		} else if(this.type == oz_SpriteType.TEXT) {
			if(oz_OzSprite.TilesheetId == -1) oz_OzSprite.TilesheetId = this.font.tilesheetId;
			if(oz_OzSprite.TilesheetId != this.font.tilesheetId) {
				oz_OzSprite.Flush();
				oz_OzSprite.TilesheetId = this.font.tilesheetId;
			}
			if(newAlpha < 0.999 && !oz_OzSprite.DrawingAlpha || newAlpha > 0.999 && oz_OzSprite.DrawingAlpha) {
				oz_OzSprite.Flush();
				oz_OzSprite.DrawingAlpha = !oz_OzSprite.DrawingAlpha;
			}
			if(oz_OzSprite.DrawingSmooth != this.smooth) {
				oz_OzSprite.Flush();
				oz_OzSprite.DrawingSmooth = this.smooth;
			}
			oz_OzMatrix.PushMatrix();
			var cmToDraw3 = oz_OzMatrix.getCurrentMatrix();
			var startX = 0;
			if(this.textAlign == oz_TextAlign.CENTER) startX = -Math.round(this.getLineLength() / 2); else if(this.textAlign == oz_TextAlign.RIGHT) startX = -this.getLineLength();
			var startY = 0;
			startX *= this.get_scaleX();
			startY *= this.get_scaleY();
			var curX = startX;
			var curY = startY;
			var curLineY = 0;
			var cm3 = oz_OzMatrix.getCurrentMatrix();
			cm3.PostTranslate((this.noInterpolation?this._x:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldX + oz_OzSprite.DeltaT * this._x) * 128) / 128) + startX,(this.noInterpolation?this._y:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldY + oz_OzSprite.DeltaT * this._y) * 128) / 128) + startY);
			cm3.PostRotate(this.noInterpolation?this._rotation:(1 - oz_OzSprite.DeltaT) * this._oldRotation + oz_OzSprite.DeltaT * this._rotation);
			cm3.PostScale((1 - oz_OzSprite.DeltaT) * this._oldScaleX + oz_OzSprite.DeltaT * this._scaleX,(1 - oz_OzSprite.DeltaT) * this._oldScaleY + oz_OzSprite.DeltaT * this._scaleY);
			var _g1 = 0;
			var _g = this.text.length;
			while(_g1 < _g) {
				var i = _g1++;
				var curCC = HxOverrides.cca(this.text,i);
				var c = this.font.chars[curCC];
				var goX = c.xOffset + this.font.defaultKern;
				if(i > 0) {
					var prevCC = HxOverrides.cca(this.text,i - 1);
					var prevC = this.font.chars[prevCC];
					goX += prevC.xAdvance;
					if(this.font.kernings[prevCC] != null && !isNaN(this.font.kernings[prevCC][curCC])) goX += this.font.kernings[prevCC][curCC];
				}
				var goY = curLineY + c.yOffset - curY;
				curX += goX;
				curY += goY;
				cm3.PostTranslate(goX,goY);
				if(curCC != 32) {
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw3.m02;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw3.m12;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = this.font.chars[HxOverrides.cca(this.text,i)].movieClip.frames[0];
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw3.m00;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw3.m10;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw3.m01;
					oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = cmToDraw3.m11;
					if(oz_OzSprite.DrawingAlpha) oz_OzSprite.DrawArray[oz_OzSprite.DrawArrayLength++] = newAlpha;
				}
			}
			oz_OzMatrix.PopMatrix();
		} else if(this.type == oz_SpriteType.TILEMAP) {
			oz_OzSprite.Flush();
			var prevSmooth = oz_OzSprite.DrawingSmooth;
			var prevAlpha = oz_OzSprite.DrawingAlpha;
			oz_OzSprite.DrawingSmooth = true;
			oz_OzSprite.DrawingAlpha = false;
			this.tileMap.draw(this,this.getTileLayer());
			oz_OzSprite.Flush();
			oz_OzSprite.DrawingSmooth = prevSmooth;
			oz_OzSprite.DrawingAlpha = prevAlpha;
		} else if(this.type == oz_SpriteType.BACKGROUND) {
			oz_OzSprite.Flush();
			var prevSmooth1 = oz_OzSprite.DrawingSmooth;
			var prevAlpha1 = oz_OzSprite.DrawingAlpha;
			oz_OzSprite.DrawingSmooth = true;
			oz_OzSprite.DrawingAlpha = (1 - oz_OzSprite.DeltaT) * this._oldAlpha + oz_OzSprite.DeltaT * this._alpha < 0.999;
			ozity_OzBG.DrawBG(this.arg1,this.noInterpolation?this._x:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldX + oz_OzSprite.DeltaT * this._x) * 128) / 128,this.noInterpolation?this._y:Math.round(((1 - oz_OzSprite.DeltaT) * this._oldY + oz_OzSprite.DeltaT * this._y) * 128) / 128,this.get_alpha());
			oz_OzSprite.Flush();
			oz_OzSprite.DrawingSmooth = prevSmooth1;
			oz_OzSprite.DrawingAlpha = prevAlpha1;
		}
		if(this.child != null) {
			var iter = this.child;
			do {
				iter.draw(newAlpha);
				iter = iter.next;
			} while(iter != this.child);
		}
		oz_OzMatrix.PopMatrix();
	}
	,getLineLength: function(offset) {
		if(offset == null) offset = 0;
		var ret = 0;
		var i = offset;
		while(i < this.text.length && HxOverrides.cca("\n",0) != HxOverrides.cca(this.text,i)) {
			var curCC = HxOverrides.cca(this.text,i);
			var c = this.font.chars[curCC];
			var goX = c.xOffset + c.xAdvance + this.font.defaultKern;
			if(i > 0) {
				var prevCC = HxOverrides.cca(this.text,i - 1);
				if(this.font.kernings[prevCC] != null && !isNaN(this.font.kernings[prevCC][curCC])) goX += this.font.kernings[prevCC][curCC];
			}
			ret += goX;
			i++;
		}
		return ret;
	}
	,updateAnimations: function(deltaTime) {
		if(deltaTime == null) deltaTime = -1;
		if(this.animation != null) this.animation.Update(deltaTime);
		if(this.child != null) {
			var iter = this.child;
			do {
				iter.updateAnimations();
				iter = iter.next;
			} while(iter != this.child);
		}
	}
	,get_x: function() {
		return this._x;
	}
	,set_x: function(val) {
		this._x = val;
		return this._x;
	}
	,_realX: function() {
		if(this.noInterpolation) return this._x; else return Math.round(((1 - oz_OzSprite.DeltaT) * this._oldX + oz_OzSprite.DeltaT * this._x) * 128) / 128;
	}
	,get_y: function() {
		return this._y;
	}
	,set_y: function(val) {
		this._y = val;
		return this._y;
	}
	,_realY: function() {
		if(this.noInterpolation) return this._y; else return Math.round(((1 - oz_OzSprite.DeltaT) * this._oldY + oz_OzSprite.DeltaT * this._y) * 128) / 128;
	}
	,get_rotation: function() {
		return this._rotation;
	}
	,set_rotation: function(val) {
		this._rotation = val;
		return this._rotation;
	}
	,_setSmartRotation: function(newRot) {
		if(newRot < this._oldRotation) {
			var newNewRot = newRot + 360;
			if(Math.abs(newNewRot - this._oldRotation) < Math.abs(newRot - this._oldRotation)) this._rotation = newNewRot; else this._rotation = newRot;
		} else {
			var newNewRot1 = newRot - 360;
			if(Math.abs(newNewRot1 - this._oldRotation) < Math.abs(newRot - this._oldRotation)) this._rotation = newNewRot1; else this._rotation = newRot;
		}
	}
	,get_scaleX: function() {
		return this._scaleX;
	}
	,set_scaleX: function(val) {
		this._scaleX = val;
		return this._scaleX;
	}
	,get_scaleY: function() {
		return this._scaleY;
	}
	,set_scaleY: function(val) {
		this._scaleY = val;
		return this._scaleY;
	}
	,get_alpha: function() {
		return this._alpha;
	}
	,set_alpha: function(val) {
		this._alpha = val;
		return this._alpha;
	}
	,get_visible: function() {
		return this._visible;
	}
	,set_visible: function(val) {
		this._visible = val;
		return this._visible;
	}
	,get_playing: function() {
		return this._playing;
	}
	,set_playing: function(val) {
		this._playing = val;
		return this._playing;
	}
	,get_currentFrame: function() {
		return this._currentFrame;
	}
	,set_currentFrame: function(val) {
		this._currentFrame = val;
		return this._currentFrame;
	}
	,get_lineLength: function() {
		return this._lineLength;
	}
	,set_lineLength: function(val) {
		this._lineLength = val;
		return this._lineLength;
	}
	,_reset: function() {
		this._oldVisible = false;
		this._oldPlaying = false;
	}
	,_updateOldValues: function() {
		this._oldX = this._x;
		this._oldY = this._y;
		this._oldRotation = this._rotation;
		this._oldScaleX = this._scaleX;
		this._oldScaleY = this._scaleY;
		this._oldAlpha = this._alpha;
		this._oldVisible = this._visible;
		this._oldPlaying = this._playing;
		this._oldCurrentFrame = this._currentFrame;
		this._oldLineLength = this._lineLength;
		this.noInterpolation = false;
		if(this.type == oz_SpriteType.BITMAP) {
			if(this.get_currentFrame() == this.mc.frames.length && this.funcEnd != null) this.funcEnd();
			if(this.get_playing()) this.set_currentFrame(1 + this.get_currentFrame() % this.mc.frames.length);
		}
		if(this.child != null) {
			var iter = this.child;
			do {
				iter._updateOldValues();
				iter = iter.next;
			} while(iter != this.child);
		}
	}
	,__class__: oz_OzSprite
};
var dev_DevUtil = function() { };
$hxClasses["oz.OzUtil"] = dev_DevUtil;
dev_DevUtil.__name__ = ["oz","OzUtil"];
dev_DevUtil.getURL = function(url) {
	openfl_Lib.getURL(new openfl_net_URLRequest(url));
};
dev_DevUtil.StringReplace = function(str,from,to) {
	var a = str.split(from);
	var res = null;
	if(a.length > 0) res = a[0];
	var _g1 = 1;
	var _g = a.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(a[i] == null || a[i].length < 1) continue;
		res = res + to + a[i];
	}
	return res;
};
dev_DevUtil.CommaStringToArray = function(str) {
	var ret = [];
	var _g = 0;
	var _g1 = str.split(",");
	while(_g < _g1.length) {
		var a = _g1[_g];
		++_g;
		while(a.charAt(0) == " ") a = HxOverrides.substr(a,1,null);
		while(a.charAt(a.length - 1) == " ") a = HxOverrides.substr(a,0,a.length - 1);
		if(a != null && a.length > 0) ret.push(a);
	}
	return ret;
};
dev_DevUtil.BitCount = function(a) {
	var ret = 0;
	while(a != 0) {
		a = a & a - 1;
		ret++;
	}
	return ret;
};
dev_DevUtil.StringToIntArray = function(str) {
	if(str == null) return [];
	var strArr = str.split(",");
	var i = 0;
	var ret = [];
	var _g = 0;
	while(_g < strArr.length) {
		var s = strArr[_g];
		++_g;
		if(s != null && s.length > 0) {
			ret[i] = Std.parseInt(s);
			i++;
		}
	}
	return ret;
};
dev_DevUtil.IndexOfInt = function(ar,val) {
	var _g1 = 0;
	var _g = ar.length;
	while(_g1 < _g) {
		var i = _g1++;
		if(ar[i] == val) return i;
	}
	return -1;
};
dev_DevUtil.RadianNormalizeSlow = function(angle) {
	return Math.atan2(Math.sin(angle),Math.cos(angle));
};
dev_DevUtil.RadianDifferenceSlow = function(rad1,rad2) {
	if(rad1 < 0 || rad1 > Math.PI * 2) rad1 = dev_DevUtil.RadianNormalizeSlow(rad1);
	if(rad2 < 0 || rad2 > Math.PI * 2) rad2 = dev_DevUtil.RadianNormalizeSlow(rad2);
	var ret = rad1 - rad2;
	if(ret > Math.PI) ret -= Math.PI * 2; else if(ret < -Math.PI) ret += Math.PI * 2;
	return ret;
};
dev_DevUtil.SortIdsByName = function(ids,names) {
	var i;
	var j;
	var n = ids.length;
	i = n - 1;
	while(i >= 0) {
		j = 0;
		while(j < i) {
			if(names[j] > names[j + 1]) {
				var tempString = names[j];
				names[j] = names[j + 1];
				names[j + 1] = tempString;
				var tempInt = ids[j];
				ids[j] = ids[j + 1];
				ids[j + 1] = tempInt;
			}
			j++;
		}
		i--;
	}
};
dev_DevUtil.FindStringId = function(names,name) {
	var left = -1;
	var right = names.length;
	while(left + 1 < right) {
		var middle = Math.floor((left + right) / 2);
		if(names[middle] < name) left = middle; else if(names[middle] > name) right = middle; else return middle;
	}
	return -1;
};
dev_DevUtil.round = function(num,digs) {
	if(digs == null) digs = 2;
	var mult = 1.0;
	var _g = 0;
	while(_g < digs) {
		var i = _g++;
		mult *= 10;
	}
	return Math.round(num * mult) / mult;
};
dev_DevUtil.rotateAroundPoint = function(px,py,deg,cpx,cpy,res) {
	var sinr = Math.sin(deg / 180.0 * Math.PI);
	var cosr = Math.cos(deg / 180.0 * Math.PI);
	var dx = px - cpx;
	var dy = py - cpy;
	res[0] = cpx + dx * cosr - dy * sinr;
	res[1] = cpy + dy * cosr + dx * sinr;
};
dev_DevUtil.DotPoints = function(ax,ay,bx,by,cx,cy,dx,dy) {
	var abx = bx - ax;
	var aby = by - ay;
	var cdx = dx - cx;
	var cdy = dy - cy;
	var dot = abx * cdx + aby * cdy;
	return dot;
};
dev_DevUtil.CrossPoints = function(ax,ay,bx,by,cx,cy) {
	var abx = bx - ax;
	var aby = by - ay;
	var acx = cx - ax;
	var acy = cy - ay;
	return abx * acy - aby * acx;
};
dev_DevUtil.AngleFromSegment = function(x1,y1,x2,y2) {
	var dx = x1 - x2;
	var dy = y1 - y2;
	var lineLengthSquared = dx * dx + dy * dy;
	if(lineLengthSquared < 0.000001) return 0; else return 180.0 / Math.PI * Math.atan2(dy,dx);
};
dev_DevUtil.DistancePoints = function(ax,ay,bx,by) {
	var d1 = ax - bx;
	var d2 = ay - by;
	return Math.sqrt(d1 * d1 + d2 * d2);
};
dev_DevUtil.PointLineDistance = function(ax,ay,bx,by,px,py,isSegment) {
	var dist = dev_DevUtil.CrossPoints(ax,ay,bx,by,px,py) / dev_DevUtil.DistancePoints(ax,ay,bx,by);
	if(isSegment) {
		var dot1 = dev_DevUtil.DotPoints(ax,ay,bx,by,bx,by,px,py);
		if(dot1 > 0) {
			dev_DevUtil.PLDNearest = 2;
			return dev_DevUtil.DistancePoints(bx,by,px,py);
		}
		var dot2 = dev_DevUtil.DotPoints(bx,by,ax,ay,ax,ay,px,py);
		if(dot2 > 0) {
			dev_DevUtil.PLDNearest = 1;
			return dev_DevUtil.DistancePoints(ax,ay,px,py);
		}
	}
	dev_DevUtil.PLDNearest = 0;
	return Math.abs(dist);
};
dev_DevUtil.ReachMaxSpeed2D = function(srcX,srcY,destX,destY,maxSpeed,ret) {
	var deltaX = destX - srcX;
	var deltaY = destY - srcY;
	var delta = Math.sqrt(deltaX * deltaX + deltaY * deltaY);
	if(delta <= maxSpeed) {
		ret[0] = destX;
		ret[1] = destY;
	} else {
		var t = maxSpeed / delta;
		ret[0] = srcX + deltaX * t;
		ret[1] = srcY + deltaY * t;
	}
};
dev_DevUtil.GenerateControlPointsFromPath = function(vx,vy) {
	var ret = [];
	var X = dev_DevUtil.ComputeControlPoints(vx);
	var Y = dev_DevUtil.ComputeControlPoints(vy);
	var _g1 = 0;
	var _g = X.length;
	while(_g1 < _g) {
		var i = _g1++;
		ret.push(new oz_Point2(X[i].x,Y[i].x,X[i].y,Y[i].y));
	}
	return ret;
};
dev_DevUtil.ComputeControlPoints = function(K) {
	var p1 = [];
	var p2 = [];
	var n = K.length - 1;
	var a = [];
	var b = [];
	var c = [];
	var r = [];
	a[0] = 0;
	b[0] = 2;
	c[0] = 1;
	r[0] = K[0] + 2 * K[1];
	var _g1 = 1;
	var _g = n - 1;
	while(_g1 < _g) {
		var i = _g1++;
		a[i] = 1;
		b[i] = 4;
		c[i] = 1;
		r[i] = 4 * K[i] + 2 * K[i + 1];
	}
	a[n - 1] = 2;
	b[n - 1] = 7;
	c[n - 1] = 0;
	r[n - 1] = 8 * K[n - 1] + K[n];
	var _g2 = 1;
	while(_g2 < n) {
		var i1 = _g2++;
		var m = a[i1] / b[i1 - 1];
		b[i1] = b[i1] - m * c[i1 - 1];
		r[i1] = r[i1] - m * r[i1 - 1];
	}
	p1[n - 1] = r[n - 1] / b[n - 1];
	var _g11 = 0;
	var _g3 = n - 1;
	while(_g11 < _g3) {
		var j = _g11++;
		var i2 = n - 2 - j;
		p1[i2] = (r[i2] - c[i2] * p1[i2 + 1]) / b[i2];
	}
	var _g12 = 0;
	var _g4 = n - 1;
	while(_g12 < _g4) {
		var i3 = _g12++;
		p2[i3] = 2 * K[i3 + 1] - p1[i3 + 1];
	}
	p2[n - 1] = 0.5 * (K[n] + p1[n - 1]);
	var ret = [];
	var _g5 = 0;
	while(_g5 < n) {
		var i4 = _g5++;
		ret.push(new openfl_geom_Point(p1[i4],p2[i4]));
	}
	return ret;
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.StringMap"] = haxe_ds_StringMap;
haxe_ds_StringMap.__name__ = ["haxe","ds","StringMap"];
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	set: function(key,value) {
		if(__map_reserved[key] != null) this.setReserved(key,value); else this.h[key] = value;
	}
	,get: function(key) {
		if(__map_reserved[key] != null) return this.getReserved(key);
		return this.h[key];
	}
	,exists: function(key) {
		if(__map_reserved[key] != null) return this.existsReserved(key);
		return this.h.hasOwnProperty(key);
	}
	,setReserved: function(key,value) {
		if(this.rh == null) this.rh = { };
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) return null; else return this.rh["$" + key];
	}
	,existsReserved: function(key) {
		if(this.rh == null) return false;
		return this.rh.hasOwnProperty("$" + key);
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) return false;
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) return false;
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		var _this = this.arrayKeys();
		return HxOverrides.iter(_this);
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) out.push(key);
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) out.push(key.substr(1));
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var oz_Xu = function() { };
$hxClasses["oz.Xu"] = oz_Xu;
oz_Xu.__name__ = ["oz","Xu"];
oz_Xu.fc = function(xml,childname) {
	var ret = null;
	if(xml != null) {
		var $it0 = xml.elementsNamed(childname);
		while( $it0.hasNext() ) {
			var el = $it0.next();
			ret = el;
			break;
		}
	}
	return ret;
};
oz_Xu.cwav = function(xml,childname,att,val) {
	var ret = null;
	if(xml != null) {
		var $it0 = xml.elementsNamed(childname);
		while( $it0.hasNext() ) {
			var el = $it0.next();
			var a = el.get(att);
			if(a != null && a == val) {
				ret = el;
				break;
			}
		}
	}
	return ret;
};
var oz_SpriteType = $hxClasses["oz.SpriteType"] = { __ename__ : ["oz","SpriteType"], __constructs__ : ["EMPTY","BITMAP","TEXT","POLYGON","TILEMAP","BACKGROUND"] };
oz_SpriteType.EMPTY = ["EMPTY",0];
oz_SpriteType.EMPTY.toString = $estr;
oz_SpriteType.EMPTY.__enum__ = oz_SpriteType;
oz_SpriteType.BITMAP = ["BITMAP",1];
oz_SpriteType.BITMAP.toString = $estr;
oz_SpriteType.BITMAP.__enum__ = oz_SpriteType;
oz_SpriteType.TEXT = ["TEXT",2];
oz_SpriteType.TEXT.toString = $estr;
oz_SpriteType.TEXT.__enum__ = oz_SpriteType;
oz_SpriteType.POLYGON = ["POLYGON",3];
oz_SpriteType.POLYGON.toString = $estr;
oz_SpriteType.POLYGON.__enum__ = oz_SpriteType;
oz_SpriteType.TILEMAP = ["TILEMAP",4];
oz_SpriteType.TILEMAP.toString = $estr;
oz_SpriteType.TILEMAP.__enum__ = oz_SpriteType;
oz_SpriteType.BACKGROUND = ["BACKGROUND",5];
oz_SpriteType.BACKGROUND.toString = $estr;
oz_SpriteType.BACKGROUND.__enum__ = oz_SpriteType;
var oz_TextAlign = $hxClasses["oz.TextAlign"] = { __ename__ : ["oz","TextAlign"], __constructs__ : ["LEFT","RIGHT","CENTER","JUSTIFIED"] };
oz_TextAlign.LEFT = ["LEFT",0];
oz_TextAlign.LEFT.toString = $estr;
oz_TextAlign.LEFT.__enum__ = oz_TextAlign;
oz_TextAlign.RIGHT = ["RIGHT",1];
oz_TextAlign.RIGHT.toString = $estr;
oz_TextAlign.RIGHT.__enum__ = oz_TextAlign;
oz_TextAlign.CENTER = ["CENTER",2];
oz_TextAlign.CENTER.toString = $estr;
oz_TextAlign.CENTER.__enum__ = oz_TextAlign;
oz_TextAlign.JUSTIFIED = ["JUSTIFIED",3];
oz_TextAlign.JUSTIFIED.toString = $estr;
oz_TextAlign.JUSTIFIED.__enum__ = oz_TextAlign;
var platforms_WindowsPhone = function() { };
$hxClasses["platforms.WindowsPhone"] = platforms_WindowsPhone;
platforms_WindowsPhone.__name__ = ["platforms","WindowsPhone"];
platforms_WindowsPhone.ScriptNotify = function(arg) {
};
var openfl_net_URLRequest = function(inURL) {
	if(inURL != null) this.url = inURL;
	this.requestHeaders = [];
	this.method = "GET";
	this.contentType = null;
};
$hxClasses["openfl.net.URLRequest"] = openfl_net_URLRequest;
openfl_net_URLRequest.__name__ = ["openfl","net","URLRequest"];
openfl_net_URLRequest.prototype = {
	formatRequestHeaders: function() {
		var res = this.requestHeaders;
		if(res == null) res = [];
		if(this.method == "GET" || this.data == null) return res;
		if(typeof(this.data) == "string" || js_Boot.__instanceof(this.data,openfl_utils_ByteArray)) (res = res.slice()).push(new openfl_net_URLRequestHeader("Content-Type",this.contentType != null?this.contentType:"application/x-www-form-urlencoded"));
		return res;
	}
	,__class__: openfl_net_URLRequest
};
var PreloaderBarBMD = function(width,height,transparent,color) {
	var o = PreloaderBarBMD.image;
	openfl_display_BitmapData.call(this,o.width,o.height,true,0);
	this.context.drawImage(o,0,0);
};
$hxClasses["PreloaderBarBMD"] = PreloaderBarBMD;
PreloaderBarBMD.__name__ = ["PreloaderBarBMD"];
PreloaderBarBMD.preload = function() {
	var o = document.createElement("img");
	ApplicationMain.loadEmbed(PreloaderBarBMD.image = o);
	o.src = "assets/loading.png";
};
PreloaderBarBMD.__super__ = openfl_display_BitmapData;
PreloaderBarBMD.prototype = $extend(openfl_display_BitmapData.prototype,{
	__class__: PreloaderBarBMD
});
var Reflect = function() { };
$hxClasses["Reflect"] = Reflect;
Reflect.__name__ = ["Reflect"];
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
Reflect.callMethod = function(o,func,args) {
	return func.apply(o,args);
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) a.push(f);
		}
	}
	return a;
};
Reflect.isFunction = function(f) {
	return typeof(f) == "function" && !(f.__name__ || f.__ename__);
};
Reflect.compare = function(a,b) {
	if(a == b) return 0; else if(a > b) return 1; else return -1;
};
Reflect.compareMethods = function(f1,f2) {
	if(f1 == f2) return true;
	if(!Reflect.isFunction(f1) || !Reflect.isFunction(f2)) return false;
	return f1.scope == f2.scope && f1.method == f2.method && f1.method != null;
};
Reflect.isEnumValue = function(v) {
	return v != null && v.__enum__ != null;
};
Reflect.deleteField = function(o,field) {
	if(!Object.prototype.hasOwnProperty.call(o,field)) return false;
	delete(o[field]);
	return true;
};
var StringBuf = function() {
	this.b = "";
};
$hxClasses["StringBuf"] = StringBuf;
StringBuf.__name__ = ["StringBuf"];
StringBuf.prototype = {
	add: function(x) {
		this.b += Std.string(x);
	}
	,addSub: function(s,pos,len) {
		if(len == null) this.b += HxOverrides.substr(s,pos,null); else this.b += HxOverrides.substr(s,pos,len);
	}
	,__class__: StringBuf
};
var ValueType = $hxClasses["ValueType"] = { __ename__ : ["ValueType"], __constructs__ : ["TNull","TInt","TFloat","TBool","TObject","TFunction","TClass","TEnum","TUnknown"] };
ValueType.TNull = ["TNull",0];
ValueType.TNull.toString = $estr;
ValueType.TNull.__enum__ = ValueType;
ValueType.TInt = ["TInt",1];
ValueType.TInt.toString = $estr;
ValueType.TInt.__enum__ = ValueType;
ValueType.TFloat = ["TFloat",2];
ValueType.TFloat.toString = $estr;
ValueType.TFloat.__enum__ = ValueType;
ValueType.TBool = ["TBool",3];
ValueType.TBool.toString = $estr;
ValueType.TBool.__enum__ = ValueType;
ValueType.TObject = ["TObject",4];
ValueType.TObject.toString = $estr;
ValueType.TObject.__enum__ = ValueType;
ValueType.TFunction = ["TFunction",5];
ValueType.TFunction.toString = $estr;
ValueType.TFunction.__enum__ = ValueType;
ValueType.TClass = function(c) { var $x = ["TClass",6,c]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TEnum = function(e) { var $x = ["TEnum",7,e]; $x.__enum__ = ValueType; $x.toString = $estr; return $x; };
ValueType.TUnknown = ["TUnknown",8];
ValueType.TUnknown.toString = $estr;
ValueType.TUnknown.__enum__ = ValueType;
var Xml = function(nodeType) {
	this.nodeType = nodeType;
	this.children = [];
	this.attributeMap = new haxe_ds_StringMap();
};
$hxClasses["Xml"] = Xml;
Xml.__name__ = ["Xml"];
Xml.parse = function(str) {
	return haxe_xml_Parser.parse(str);
};
Xml.createElement = function(name) {
	var xml = new Xml(Xml.Element);
	if(xml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + xml.nodeType);
	xml.nodeName = name;
	return xml;
};
Xml.createPCData = function(data) {
	var xml = new Xml(Xml.PCData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createCData = function(data) {
	var xml = new Xml(Xml.CData);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createComment = function(data) {
	var xml = new Xml(Xml.Comment);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocType = function(data) {
	var xml = new Xml(Xml.DocType);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createProcessingInstruction = function(data) {
	var xml = new Xml(Xml.ProcessingInstruction);
	if(xml.nodeType == Xml.Document || xml.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + xml.nodeType);
	xml.nodeValue = data;
	return xml;
};
Xml.createDocument = function() {
	return new Xml(Xml.Document);
};
Xml.prototype = {
	get_nodeName: function() {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.nodeName;
	}
	,get: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.get(att);
	}
	,set: function(att,value) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		this.attributeMap.set(att,value);
	}
	,exists: function(att) {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.exists(att);
	}
	,attributes: function() {
		if(this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + this.nodeType);
		return this.attributeMap.keys();
	}
	,elements: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var ret;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element) _g.push(child);
		}
		ret = _g;
		return HxOverrides.iter(ret);
	}
	,elementsNamed: function(name) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var ret;
		var _g = [];
		var _g1 = 0;
		var _g2 = this.children;
		while(_g1 < _g2.length) {
			var child = _g2[_g1];
			++_g1;
			if(child.nodeType == Xml.Element && (function($this) {
				var $r;
				if(child.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + child.nodeType);
				$r = child.nodeName;
				return $r;
			}(this)) == name) _g.push(child);
		}
		ret = _g;
		return HxOverrides.iter(ret);
	}
	,firstElement: function() {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		var _g = 0;
		var _g1 = this.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.nodeType == Xml.Element) return child;
		}
		return null;
	}
	,addChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(x.parent != null) x.parent.removeChild(x);
		this.children.push(x);
		x.parent = this;
	}
	,removeChild: function(x) {
		if(this.nodeType != Xml.Document && this.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + this.nodeType);
		if(HxOverrides.remove(this.children,x)) {
			x.parent = null;
			return true;
		}
		return false;
	}
	,__class__: Xml
};
var haxe__$Int64__$_$_$Int64 = function(high,low) {
	this.high = high;
	this.low = low;
};
$hxClasses["haxe._Int64.___Int64"] = haxe__$Int64__$_$_$Int64;
haxe__$Int64__$_$_$Int64.__name__ = ["haxe","_Int64","___Int64"];
haxe__$Int64__$_$_$Int64.prototype = {
	__class__: haxe__$Int64__$_$_$Int64
};
var haxe_Serializer = function() {
	this.buf = new StringBuf();
	this.cache = [];
	this.useCache = haxe_Serializer.USE_CACHE;
	this.useEnumIndex = haxe_Serializer.USE_ENUM_INDEX;
	this.shash = new haxe_ds_StringMap();
	this.scount = 0;
};
$hxClasses["haxe.Serializer"] = haxe_Serializer;
haxe_Serializer.__name__ = ["haxe","Serializer"];
haxe_Serializer.run = function(v) {
	var s = new haxe_Serializer();
	s.serialize(v);
	return s.toString();
};
haxe_Serializer.prototype = {
	toString: function() {
		return this.buf.b;
	}
	,serializeString: function(s) {
		var x = this.shash.get(s);
		if(x != null) {
			this.buf.b += "R";
			if(x == null) this.buf.b += "null"; else this.buf.b += "" + x;
			return;
		}
		this.shash.set(s,this.scount++);
		this.buf.b += "y";
		s = encodeURIComponent(s);
		if(s.length == null) this.buf.b += "null"; else this.buf.b += "" + s.length;
		this.buf.b += ":";
		if(s == null) this.buf.b += "null"; else this.buf.b += "" + s;
	}
	,serializeRef: function(v) {
		var vt = typeof(v);
		var _g1 = 0;
		var _g = this.cache.length;
		while(_g1 < _g) {
			var i = _g1++;
			var ci = this.cache[i];
			if(typeof(ci) == vt && ci == v) {
				this.buf.b += "r";
				if(i == null) this.buf.b += "null"; else this.buf.b += "" + i;
				return true;
			}
		}
		this.cache.push(v);
		return false;
	}
	,serializeFields: function(v) {
		var _g = 0;
		var _g1 = Reflect.fields(v);
		while(_g < _g1.length) {
			var f = _g1[_g];
			++_g;
			this.serializeString(f);
			this.serialize(Reflect.field(v,f));
		}
		this.buf.b += "g";
	}
	,serialize: function(v) {
		{
			var _g = Type["typeof"](v);
			switch(_g[1]) {
			case 0:
				this.buf.b += "n";
				break;
			case 1:
				var v1 = v;
				if(v1 == 0) {
					this.buf.b += "z";
					return;
				}
				this.buf.b += "i";
				if(v1 == null) this.buf.b += "null"; else this.buf.b += "" + v1;
				break;
			case 2:
				var v2 = v;
				if(isNaN(v2)) this.buf.b += "k"; else if(!isFinite(v2)) if(v2 < 0) this.buf.b += "m"; else this.buf.b += "p"; else {
					this.buf.b += "d";
					if(v2 == null) this.buf.b += "null"; else this.buf.b += "" + v2;
				}
				break;
			case 3:
				if(v) this.buf.b += "t"; else this.buf.b += "f";
				break;
			case 6:
				var c = _g[2];
				if(c == String) {
					this.serializeString(v);
					return;
				}
				if(this.useCache && this.serializeRef(v)) return;
				switch(c) {
				case Array:
					var ucount = 0;
					this.buf.b += "a";
					var l = v.length;
					var _g1 = 0;
					while(_g1 < l) {
						var i = _g1++;
						if(v[i] == null) ucount++; else {
							if(ucount > 0) {
								if(ucount == 1) this.buf.b += "n"; else {
									this.buf.b += "u";
									if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
								}
								ucount = 0;
							}
							this.serialize(v[i]);
						}
					}
					if(ucount > 0) {
						if(ucount == 1) this.buf.b += "n"; else {
							this.buf.b += "u";
							if(ucount == null) this.buf.b += "null"; else this.buf.b += "" + ucount;
						}
					}
					this.buf.b += "h";
					break;
				case List:
					this.buf.b += "l";
					var v3 = v;
					var _g1_head = v3.h;
					var _g1_val = null;
					while(_g1_head != null) {
						var i1;
						_g1_val = _g1_head[0];
						_g1_head = _g1_head[1];
						i1 = _g1_val;
						this.serialize(i1);
					}
					this.buf.b += "h";
					break;
				case Date:
					var d = v;
					this.buf.b += "v";
					this.buf.add(d.getTime());
					break;
				case haxe_ds_StringMap:
					this.buf.b += "b";
					var v4 = v;
					var $it0 = v4.keys();
					while( $it0.hasNext() ) {
						var k = $it0.next();
						this.serializeString(k);
						this.serialize(__map_reserved[k] != null?v4.getReserved(k):v4.h[k]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_IntMap:
					this.buf.b += "q";
					var v5 = v;
					var $it1 = v5.keys();
					while( $it1.hasNext() ) {
						var k1 = $it1.next();
						this.buf.b += ":";
						if(k1 == null) this.buf.b += "null"; else this.buf.b += "" + k1;
						this.serialize(v5.h[k1]);
					}
					this.buf.b += "h";
					break;
				case haxe_ds_ObjectMap:
					this.buf.b += "M";
					var v6 = v;
					var $it2 = v6.keys();
					while( $it2.hasNext() ) {
						var k2 = $it2.next();
						var id = Reflect.field(k2,"__id__");
						Reflect.deleteField(k2,"__id__");
						this.serialize(k2);
						k2.__id__ = id;
						this.serialize(v6.h[k2.__id__]);
					}
					this.buf.b += "h";
					break;
				case haxe_io_Bytes:
					var v7 = v;
					var i2 = 0;
					var max = v7.length - 2;
					var charsBuf = new StringBuf();
					var b64 = haxe_Serializer.BASE64;
					while(i2 < max) {
						var b1 = v7.get(i2++);
						var b2 = v7.get(i2++);
						var b3 = v7.get(i2++);
						charsBuf.add(b64.charAt(b1 >> 2));
						charsBuf.add(b64.charAt((b1 << 4 | b2 >> 4) & 63));
						charsBuf.add(b64.charAt((b2 << 2 | b3 >> 6) & 63));
						charsBuf.add(b64.charAt(b3 & 63));
					}
					if(i2 == max) {
						var b11 = v7.get(i2++);
						var b21 = v7.get(i2++);
						charsBuf.add(b64.charAt(b11 >> 2));
						charsBuf.add(b64.charAt((b11 << 4 | b21 >> 4) & 63));
						charsBuf.add(b64.charAt(b21 << 2 & 63));
					} else if(i2 == max + 1) {
						var b12 = v7.get(i2++);
						charsBuf.add(b64.charAt(b12 >> 2));
						charsBuf.add(b64.charAt(b12 << 4 & 63));
					}
					var chars = charsBuf.b;
					this.buf.b += "s";
					if(chars.length == null) this.buf.b += "null"; else this.buf.b += "" + chars.length;
					this.buf.b += ":";
					if(chars == null) this.buf.b += "null"; else this.buf.b += "" + chars;
					break;
				default:
					if(this.useCache) this.cache.pop();
					if(v.hxSerialize != null) {
						this.buf.b += "C";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						v.hxSerialize(this);
						this.buf.b += "g";
					} else {
						this.buf.b += "c";
						this.serializeString(Type.getClassName(c));
						if(this.useCache) this.cache.push(v);
						this.serializeFields(v);
					}
				}
				break;
			case 4:
				if(js_Boot.__instanceof(v,Class)) {
					var className = Type.getClassName(v);
					this.buf.b += "A";
					this.serializeString(className);
				} else if(js_Boot.__instanceof(v,Enum)) {
					this.buf.b += "B";
					this.serializeString(Type.getEnumName(v));
				} else {
					if(this.useCache && this.serializeRef(v)) return;
					this.buf.b += "o";
					this.serializeFields(v);
				}
				break;
			case 7:
				var e = _g[2];
				if(this.useCache) {
					if(this.serializeRef(v)) return;
					this.cache.pop();
				}
				if(this.useEnumIndex) this.buf.b += "j"; else this.buf.b += "w";
				this.serializeString(Type.getEnumName(e));
				if(this.useEnumIndex) {
					this.buf.b += ":";
					this.buf.b += Std.string(v[1]);
				} else this.serializeString(v[0]);
				this.buf.b += ":";
				var l1 = v.length;
				this.buf.b += Std.string(l1 - 2);
				var _g11 = 2;
				while(_g11 < l1) {
					var i3 = _g11++;
					this.serialize(v[i3]);
				}
				if(this.useCache) this.cache.push(v);
				break;
			case 5:
				throw new js__$Boot_HaxeError("Cannot serialize function");
				break;
			default:
				throw new js__$Boot_HaxeError("Cannot serialize " + Std.string(v));
			}
		}
	}
	,__class__: haxe_Serializer
};
var haxe_Timer = function(time_ms) {
	var me = this;
	this.id = setInterval(function() {
		me.run();
	},time_ms);
};
$hxClasses["haxe.Timer"] = haxe_Timer;
haxe_Timer.__name__ = ["haxe","Timer"];
haxe_Timer.stamp = function() {
	return new Date().getTime() / 1000;
};
haxe_Timer.prototype = {
	run: function() {
	}
	,__class__: haxe_Timer
};
var haxe_Unserializer = function(buf) {
	this.buf = buf;
	this.length = buf.length;
	this.pos = 0;
	this.scache = [];
	this.cache = [];
	var r = haxe_Unserializer.DEFAULT_RESOLVER;
	if(r == null) {
		r = Type;
		haxe_Unserializer.DEFAULT_RESOLVER = r;
	}
	this.setResolver(r);
};
$hxClasses["haxe.Unserializer"] = haxe_Unserializer;
haxe_Unserializer.__name__ = ["haxe","Unserializer"];
haxe_Unserializer.initCodes = function() {
	var codes = [];
	var _g1 = 0;
	var _g = haxe_Unserializer.BASE64.length;
	while(_g1 < _g) {
		var i = _g1++;
		codes[haxe_Unserializer.BASE64.charCodeAt(i)] = i;
	}
	return codes;
};
haxe_Unserializer.prototype = {
	setResolver: function(r) {
		if(r == null) this.resolver = { resolveClass : function(_) {
			return null;
		}, resolveEnum : function(_1) {
			return null;
		}}; else this.resolver = r;
	}
	,get: function(p) {
		return this.buf.charCodeAt(p);
	}
	,readDigits: function() {
		var k = 0;
		var s = false;
		var fpos = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c != c) break;
			if(c == 45) {
				if(this.pos != fpos) break;
				s = true;
				this.pos++;
				continue;
			}
			if(c < 48 || c > 57) break;
			k = k * 10 + (c - 48);
			this.pos++;
		}
		if(s) k *= -1;
		return k;
	}
	,readFloat: function() {
		var p1 = this.pos;
		while(true) {
			var c = this.buf.charCodeAt(this.pos);
			if(c >= 43 && c < 58 || c == 101 || c == 69) this.pos++; else break;
		}
		return Std.parseFloat(HxOverrides.substr(this.buf,p1,this.pos - p1));
	}
	,unserializeObject: function(o) {
		while(true) {
			if(this.pos >= this.length) throw new js__$Boot_HaxeError("Invalid object");
			if(this.buf.charCodeAt(this.pos) == 103) break;
			var k = this.unserialize();
			if(!(typeof(k) == "string")) throw new js__$Boot_HaxeError("Invalid object key");
			var v = this.unserialize();
			o[k] = v;
		}
		this.pos++;
	}
	,unserializeEnum: function(edecl,tag) {
		if(this.get(this.pos++) != 58) throw new js__$Boot_HaxeError("Invalid enum format");
		var nargs = this.readDigits();
		if(nargs == 0) return Type.createEnum(edecl,tag);
		var args = [];
		while(nargs-- > 0) args.push(this.unserialize());
		return Type.createEnum(edecl,tag,args);
	}
	,unserialize: function() {
		var _g = this.get(this.pos++);
		switch(_g) {
		case 110:
			return null;
		case 116:
			return true;
		case 102:
			return false;
		case 122:
			return 0;
		case 105:
			return this.readDigits();
		case 100:
			return this.readFloat();
		case 121:
			var len = this.readDigits();
			if(this.get(this.pos++) != 58 || this.length - this.pos < len) throw new js__$Boot_HaxeError("Invalid string length");
			var s = HxOverrides.substr(this.buf,this.pos,len);
			this.pos += len;
			s = decodeURIComponent(s.split("+").join(" "));
			this.scache.push(s);
			return s;
		case 107:
			return NaN;
		case 109:
			return -Infinity;
		case 112:
			return Infinity;
		case 97:
			var buf = this.buf;
			var a = [];
			this.cache.push(a);
			while(true) {
				var c = this.buf.charCodeAt(this.pos);
				if(c == 104) {
					this.pos++;
					break;
				}
				if(c == 117) {
					this.pos++;
					var n = this.readDigits();
					a[a.length + n - 1] = null;
				} else a.push(this.unserialize());
			}
			return a;
		case 111:
			var o = { };
			this.cache.push(o);
			this.unserializeObject(o);
			return o;
		case 114:
			var n1 = this.readDigits();
			if(n1 < 0 || n1 >= this.cache.length) throw new js__$Boot_HaxeError("Invalid reference");
			return this.cache[n1];
		case 82:
			var n2 = this.readDigits();
			if(n2 < 0 || n2 >= this.scache.length) throw new js__$Boot_HaxeError("Invalid string reference");
			return this.scache[n2];
		case 120:
			throw new js__$Boot_HaxeError(this.unserialize());
			break;
		case 99:
			var name = this.unserialize();
			var cl = this.resolver.resolveClass(name);
			if(cl == null) throw new js__$Boot_HaxeError("Class not found " + name);
			var o1 = Type.createEmptyInstance(cl);
			this.cache.push(o1);
			this.unserializeObject(o1);
			return o1;
		case 119:
			var name1 = this.unserialize();
			var edecl = this.resolver.resolveEnum(name1);
			if(edecl == null) throw new js__$Boot_HaxeError("Enum not found " + name1);
			var e = this.unserializeEnum(edecl,this.unserialize());
			this.cache.push(e);
			return e;
		case 106:
			var name2 = this.unserialize();
			var edecl1 = this.resolver.resolveEnum(name2);
			if(edecl1 == null) throw new js__$Boot_HaxeError("Enum not found " + name2);
			this.pos++;
			var index = this.readDigits();
			var tag = Type.getEnumConstructs(edecl1)[index];
			if(tag == null) throw new js__$Boot_HaxeError("Unknown enum index " + name2 + "@" + index);
			var e1 = this.unserializeEnum(edecl1,tag);
			this.cache.push(e1);
			return e1;
		case 108:
			var l = new List();
			this.cache.push(l);
			var buf1 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) l.add(this.unserialize());
			this.pos++;
			return l;
		case 98:
			var h = new haxe_ds_StringMap();
			this.cache.push(h);
			var buf2 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s1 = this.unserialize();
				h.set(s1,this.unserialize());
			}
			this.pos++;
			return h;
		case 113:
			var h1 = new haxe_ds_IntMap();
			this.cache.push(h1);
			var buf3 = this.buf;
			var c1 = this.get(this.pos++);
			while(c1 == 58) {
				var i = this.readDigits();
				h1.set(i,this.unserialize());
				c1 = this.get(this.pos++);
			}
			if(c1 != 104) throw new js__$Boot_HaxeError("Invalid IntMap format");
			return h1;
		case 77:
			var h2 = new haxe_ds_ObjectMap();
			this.cache.push(h2);
			var buf4 = this.buf;
			while(this.buf.charCodeAt(this.pos) != 104) {
				var s2 = this.unserialize();
				h2.set(s2,this.unserialize());
			}
			this.pos++;
			return h2;
		case 118:
			var d;
			if(this.buf.charCodeAt(this.pos) >= 48 && this.buf.charCodeAt(this.pos) <= 57 && this.buf.charCodeAt(this.pos + 1) >= 48 && this.buf.charCodeAt(this.pos + 1) <= 57 && this.buf.charCodeAt(this.pos + 2) >= 48 && this.buf.charCodeAt(this.pos + 2) <= 57 && this.buf.charCodeAt(this.pos + 3) >= 48 && this.buf.charCodeAt(this.pos + 3) <= 57 && this.buf.charCodeAt(this.pos + 4) == 45) {
				var s3 = HxOverrides.substr(this.buf,this.pos,19);
				d = HxOverrides.strDate(s3);
				this.pos += 19;
			} else {
				var t = this.readFloat();
				var d1 = new Date();
				d1.setTime(t);
				d = d1;
			}
			this.cache.push(d);
			return d;
		case 115:
			var len1 = this.readDigits();
			var buf5 = this.buf;
			if(this.get(this.pos++) != 58 || this.length - this.pos < len1) throw new js__$Boot_HaxeError("Invalid bytes length");
			var codes = haxe_Unserializer.CODES;
			if(codes == null) {
				codes = haxe_Unserializer.initCodes();
				haxe_Unserializer.CODES = codes;
			}
			var i1 = this.pos;
			var rest = len1 & 3;
			var size;
			size = (len1 >> 2) * 3 + (rest >= 2?rest - 1:0);
			var max = i1 + (len1 - rest);
			var bytes = haxe_io_Bytes.alloc(size);
			var bpos = 0;
			while(i1 < max) {
				var c11 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c2 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c11 << 2 | c2 >> 4);
				var c3 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c2 << 4 | c3 >> 2);
				var c4 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c3 << 6 | c4);
			}
			if(rest >= 2) {
				var c12 = codes[StringTools.fastCodeAt(buf5,i1++)];
				var c21 = codes[StringTools.fastCodeAt(buf5,i1++)];
				bytes.set(bpos++,c12 << 2 | c21 >> 4);
				if(rest == 3) {
					var c31 = codes[StringTools.fastCodeAt(buf5,i1++)];
					bytes.set(bpos++,c21 << 4 | c31 >> 2);
				}
			}
			this.pos += len1;
			this.cache.push(bytes);
			return bytes;
		case 67:
			var name3 = this.unserialize();
			var cl1 = this.resolver.resolveClass(name3);
			if(cl1 == null) throw new js__$Boot_HaxeError("Class not found " + name3);
			var o2 = Type.createEmptyInstance(cl1);
			this.cache.push(o2);
			o2.hxUnserialize(this);
			if(this.get(this.pos++) != 103) throw new js__$Boot_HaxeError("Invalid custom data");
			return o2;
		case 65:
			var name4 = this.unserialize();
			var cl2 = this.resolver.resolveClass(name4);
			if(cl2 == null) throw new js__$Boot_HaxeError("Class not found " + name4);
			return cl2;
		case 66:
			var name5 = this.unserialize();
			var e2 = this.resolver.resolveEnum(name5);
			if(e2 == null) throw new js__$Boot_HaxeError("Enum not found " + name5);
			return e2;
		default:
		}
		this.pos--;
		throw new js__$Boot_HaxeError("Invalid char " + this.buf.charAt(this.pos) + " at position " + this.pos);
	}
	,__class__: haxe_Unserializer
};
var haxe_io_Bytes = function(data) {
	this.length = data.byteLength;
	this.b = new Uint8Array(data);
	this.b.bufferValue = data;
	data.hxBytes = this;
	data.bytes = this.b;
};
$hxClasses["haxe.io.Bytes"] = haxe_io_Bytes;
haxe_io_Bytes.__name__ = ["haxe","io","Bytes"];
haxe_io_Bytes.alloc = function(length) {
	return new haxe_io_Bytes(new ArrayBuffer(length));
};
haxe_io_Bytes.ofString = function(s) {
	var a = [];
	var i = 0;
	while(i < s.length) {
		var c = StringTools.fastCodeAt(s,i++);
		if(55296 <= c && c <= 56319) c = c - 55232 << 10 | StringTools.fastCodeAt(s,i++) & 1023;
		if(c <= 127) a.push(c); else if(c <= 2047) {
			a.push(192 | c >> 6);
			a.push(128 | c & 63);
		} else if(c <= 65535) {
			a.push(224 | c >> 12);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		} else {
			a.push(240 | c >> 18);
			a.push(128 | c >> 12 & 63);
			a.push(128 | c >> 6 & 63);
			a.push(128 | c & 63);
		}
	}
	return new haxe_io_Bytes(new Uint8Array(a).buffer);
};
haxe_io_Bytes.prototype = {
	get: function(pos) {
		return this.b[pos];
	}
	,set: function(pos,v) {
		this.b[pos] = v & 255;
	}
	,getString: function(pos,len) {
		if(pos < 0 || len < 0 || pos + len > this.length) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
		var s = "";
		var b = this.b;
		var fcc = String.fromCharCode;
		var i = pos;
		var max = pos + len;
		while(i < max) {
			var c = b[i++];
			if(c < 128) {
				if(c == 0) break;
				s += fcc(c);
			} else if(c < 224) s += fcc((c & 63) << 6 | b[i++] & 127); else if(c < 240) {
				var c2 = b[i++];
				s += fcc((c & 31) << 12 | (c2 & 127) << 6 | b[i++] & 127);
			} else {
				var c21 = b[i++];
				var c3 = b[i++];
				var u = (c & 15) << 18 | (c21 & 127) << 12 | (c3 & 127) << 6 | b[i++] & 127;
				s += fcc((u >> 10) + 55232);
				s += fcc(u & 1023 | 56320);
			}
		}
		return s;
	}
	,toString: function() {
		return this.getString(0,this.length);
	}
	,__class__: haxe_io_Bytes
};
var haxe_crypto_Base64 = function() { };
$hxClasses["haxe.crypto.Base64"] = haxe_crypto_Base64;
haxe_crypto_Base64.__name__ = ["haxe","crypto","Base64"];
haxe_crypto_Base64.decode = function(str,complement) {
	if(complement == null) complement = true;
	if(complement) while(HxOverrides.cca(str,str.length - 1) == 61) str = HxOverrides.substr(str,0,-1);
	return new haxe_crypto_BaseCode(haxe_crypto_Base64.BYTES).decodeBytes(haxe_io_Bytes.ofString(str));
};
var haxe_crypto_BaseCode = function(base) {
	var len = base.length;
	var nbits = 1;
	while(len > 1 << nbits) nbits++;
	if(nbits > 8 || len != 1 << nbits) throw new js__$Boot_HaxeError("BaseCode : base length must be a power of two.");
	this.base = base;
	this.nbits = nbits;
};
$hxClasses["haxe.crypto.BaseCode"] = haxe_crypto_BaseCode;
haxe_crypto_BaseCode.__name__ = ["haxe","crypto","BaseCode"];
haxe_crypto_BaseCode.prototype = {
	initTable: function() {
		var tbl = [];
		var _g = 0;
		while(_g < 256) {
			var i = _g++;
			tbl[i] = -1;
		}
		var _g1 = 0;
		var _g2 = this.base.length;
		while(_g1 < _g2) {
			var i1 = _g1++;
			tbl[this.base.b[i1]] = i1;
		}
		this.tbl = tbl;
	}
	,decodeBytes: function(b) {
		var nbits = this.nbits;
		var base = this.base;
		if(this.tbl == null) this.initTable();
		var tbl = this.tbl;
		var size = b.length * nbits >> 3;
		var out = haxe_io_Bytes.alloc(size);
		var buf = 0;
		var curbits = 0;
		var pin = 0;
		var pout = 0;
		while(pout < size) {
			while(curbits < 8) {
				curbits += nbits;
				buf <<= nbits;
				var i = tbl[b.get(pin++)];
				if(i == -1) throw new js__$Boot_HaxeError("BaseCode : invalid encoded char");
				buf |= i;
			}
			curbits -= 8;
			out.set(pout++,buf >> curbits & 255);
		}
		return out;
	}
	,__class__: haxe_crypto_BaseCode
};
var haxe_ds_BalancedTree = function() {
};
$hxClasses["haxe.ds.BalancedTree"] = haxe_ds_BalancedTree;
haxe_ds_BalancedTree.__name__ = ["haxe","ds","BalancedTree"];
haxe_ds_BalancedTree.prototype = {
	set: function(key,value) {
		this.root = this.setLoop(key,value,this.root);
	}
	,get: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) return node.value;
			if(c < 0) node = node.left; else node = node.right;
		}
		return null;
	}
	,exists: function(key) {
		var node = this.root;
		while(node != null) {
			var c = this.compare(key,node.key);
			if(c == 0) return true; else if(c < 0) node = node.left; else node = node.right;
		}
		return false;
	}
	,setLoop: function(k,v,node) {
		if(node == null) return new haxe_ds_TreeNode(null,k,v,null);
		var c = this.compare(k,node.key);
		if(c == 0) return new haxe_ds_TreeNode(node.left,k,v,node.right,node == null?0:node._height); else if(c < 0) {
			var nl = this.setLoop(k,v,node.left);
			return this.balance(nl,node.key,node.value,node.right);
		} else {
			var nr = this.setLoop(k,v,node.right);
			return this.balance(node.left,node.key,node.value,nr);
		}
	}
	,balance: function(l,k,v,r) {
		var hl;
		if(l == null) hl = 0; else hl = l._height;
		var hr;
		if(r == null) hr = 0; else hr = r._height;
		if(hl > hr + 2) {
			if((function($this) {
				var $r;
				var _this = l.left;
				$r = _this == null?0:_this._height;
				return $r;
			}(this)) >= (function($this) {
				var $r;
				var _this1 = l.right;
				$r = _this1 == null?0:_this1._height;
				return $r;
			}(this))) return new haxe_ds_TreeNode(l.left,l.key,l.value,new haxe_ds_TreeNode(l.right,k,v,r)); else return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l.left,l.key,l.value,l.right.left),l.right.key,l.right.value,new haxe_ds_TreeNode(l.right.right,k,v,r));
		} else if(hr > hl + 2) {
			if((function($this) {
				var $r;
				var _this2 = r.right;
				$r = _this2 == null?0:_this2._height;
				return $r;
			}(this)) > (function($this) {
				var $r;
				var _this3 = r.left;
				$r = _this3 == null?0:_this3._height;
				return $r;
			}(this))) return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left),r.key,r.value,r.right); else return new haxe_ds_TreeNode(new haxe_ds_TreeNode(l,k,v,r.left.left),r.left.key,r.left.value,new haxe_ds_TreeNode(r.left.right,r.key,r.value,r.right));
		} else return new haxe_ds_TreeNode(l,k,v,r,(hl > hr?hl:hr) + 1);
	}
	,compare: function(k1,k2) {
		return Reflect.compare(k1,k2);
	}
	,__class__: haxe_ds_BalancedTree
};
var haxe_ds_TreeNode = function(l,k,v,r,h) {
	if(h == null) h = -1;
	this.left = l;
	this.key = k;
	this.value = v;
	this.right = r;
	if(h == -1) this._height = ((function($this) {
		var $r;
		var _this = $this.left;
		$r = _this == null?0:_this._height;
		return $r;
	}(this)) > (function($this) {
		var $r;
		var _this1 = $this.right;
		$r = _this1 == null?0:_this1._height;
		return $r;
	}(this))?(function($this) {
		var $r;
		var _this2 = $this.left;
		$r = _this2 == null?0:_this2._height;
		return $r;
	}(this)):(function($this) {
		var $r;
		var _this3 = $this.right;
		$r = _this3 == null?0:_this3._height;
		return $r;
	}(this))) + 1; else this._height = h;
};
$hxClasses["haxe.ds.TreeNode"] = haxe_ds_TreeNode;
haxe_ds_TreeNode.__name__ = ["haxe","ds","TreeNode"];
haxe_ds_TreeNode.prototype = {
	__class__: haxe_ds_TreeNode
};
var haxe_ds_EnumValueMap = function() {
	haxe_ds_BalancedTree.call(this);
};
$hxClasses["haxe.ds.EnumValueMap"] = haxe_ds_EnumValueMap;
haxe_ds_EnumValueMap.__name__ = ["haxe","ds","EnumValueMap"];
haxe_ds_EnumValueMap.__interfaces__ = [haxe_IMap];
haxe_ds_EnumValueMap.__super__ = haxe_ds_BalancedTree;
haxe_ds_EnumValueMap.prototype = $extend(haxe_ds_BalancedTree.prototype,{
	compare: function(k1,k2) {
		var d = k1[1] - k2[1];
		if(d != 0) return d;
		var p1 = k1.slice(2);
		var p2 = k2.slice(2);
		if(p1.length == 0 && p2.length == 0) return 0;
		return this.compareArgs(p1,p2);
	}
	,compareArgs: function(a1,a2) {
		var ld = a1.length - a2.length;
		if(ld != 0) return ld;
		var _g1 = 0;
		var _g = a1.length;
		while(_g1 < _g) {
			var i = _g1++;
			var d = this.compareArg(a1[i],a2[i]);
			if(d != 0) return d;
		}
		return 0;
	}
	,compareArg: function(v1,v2) {
		if(Reflect.isEnumValue(v1) && Reflect.isEnumValue(v2)) return this.compare(v1,v2); else if((v1 instanceof Array) && v1.__enum__ == null && ((v2 instanceof Array) && v2.__enum__ == null)) return this.compareArgs(v1,v2); else return Reflect.compare(v1,v2);
	}
	,__class__: haxe_ds_EnumValueMap
});
var haxe_ds_IntMap = function() {
	this.h = { };
};
$hxClasses["haxe.ds.IntMap"] = haxe_ds_IntMap;
haxe_ds_IntMap.__name__ = ["haxe","ds","IntMap"];
haxe_ds_IntMap.__interfaces__ = [haxe_IMap];
haxe_ds_IntMap.prototype = {
	set: function(key,value) {
		this.h[key] = value;
	}
	,remove: function(key) {
		if(!this.h.hasOwnProperty(key)) return false;
		delete(this.h[key]);
		return true;
	}
	,keys: function() {
		var a = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) a.push(key | 0);
		}
		return HxOverrides.iter(a);
	}
	,__class__: haxe_ds_IntMap
};
var haxe_io_Eof = function() { };
$hxClasses["haxe.io.Eof"] = haxe_io_Eof;
haxe_io_Eof.__name__ = ["haxe","io","Eof"];
haxe_io_Eof.prototype = {
	toString: function() {
		return "Eof";
	}
	,__class__: haxe_io_Eof
};
var haxe_io_Error = $hxClasses["haxe.io.Error"] = { __ename__ : ["haxe","io","Error"], __constructs__ : ["Blocked","Overflow","OutsideBounds","Custom"] };
haxe_io_Error.Blocked = ["Blocked",0];
haxe_io_Error.Blocked.toString = $estr;
haxe_io_Error.Blocked.__enum__ = haxe_io_Error;
haxe_io_Error.Overflow = ["Overflow",1];
haxe_io_Error.Overflow.toString = $estr;
haxe_io_Error.Overflow.__enum__ = haxe_io_Error;
haxe_io_Error.OutsideBounds = ["OutsideBounds",2];
haxe_io_Error.OutsideBounds.toString = $estr;
haxe_io_Error.OutsideBounds.__enum__ = haxe_io_Error;
haxe_io_Error.Custom = function(e) { var $x = ["Custom",3,e]; $x.__enum__ = haxe_io_Error; $x.toString = $estr; return $x; };
var haxe_io_FPHelper = function() { };
$hxClasses["haxe.io.FPHelper"] = haxe_io_FPHelper;
haxe_io_FPHelper.__name__ = ["haxe","io","FPHelper"];
haxe_io_FPHelper.i32ToFloat = function(i) {
	var sign = 1 - (i >>> 31 << 1);
	var exp = i >>> 23 & 255;
	var sig = i & 8388607;
	if(sig == 0 && exp == 0) return 0.0;
	return sign * (1 + Math.pow(2,-23) * sig) * Math.pow(2,exp - 127);
};
haxe_io_FPHelper.floatToI32 = function(f) {
	if(f == 0) return 0;
	var af;
	if(f < 0) af = -f; else af = f;
	var exp = Math.floor(Math.log(af) / 0.6931471805599453);
	if(exp < -127) exp = -127; else if(exp > 128) exp = 128;
	var sig = Math.round((af / Math.pow(2,exp) - 1) * 8388608) & 8388607;
	return (f < 0?-2147483648:0) | exp + 127 << 23 | sig;
};
haxe_io_FPHelper.i64ToDouble = function(low,high) {
	var sign = 1 - (high >>> 31 << 1);
	var exp = (high >> 20 & 2047) - 1023;
	var sig = (high & 1048575) * 4294967296. + (low >>> 31) * 2147483648. + (low & 2147483647);
	if(sig == 0 && exp == -1023) return 0.0;
	return sign * (1.0 + Math.pow(2,-52) * sig) * Math.pow(2,exp);
};
haxe_io_FPHelper.doubleToI64 = function(v) {
	var i64 = haxe_io_FPHelper.i64tmp;
	if(v == 0) {
		i64.low = 0;
		i64.high = 0;
	} else {
		var av;
		if(v < 0) av = -v; else av = v;
		var exp = Math.floor(Math.log(av) / 0.6931471805599453);
		var sig;
		var v1 = (av / Math.pow(2,exp) - 1) * 4503599627370496.;
		sig = Math.round(v1);
		var sig_l = sig | 0;
		var sig_h = sig / 4294967296.0 | 0;
		i64.low = sig_l;
		i64.high = (v < 0?-2147483648:0) | exp + 1023 << 20 | sig_h;
	}
	return i64;
};
var haxe_xml_Parser = function() { };
$hxClasses["haxe.xml.Parser"] = haxe_xml_Parser;
haxe_xml_Parser.__name__ = ["haxe","xml","Parser"];
haxe_xml_Parser.parse = function(str,strict) {
	if(strict == null) strict = false;
	var doc = Xml.createDocument();
	haxe_xml_Parser.doParse(str,strict,0,doc);
	return doc;
};
haxe_xml_Parser.doParse = function(str,strict,p,parent) {
	if(p == null) p = 0;
	var xml = null;
	var state = 1;
	var next = 1;
	var aname = null;
	var start = 0;
	var nsubs = 0;
	var nbrackets = 0;
	var c = str.charCodeAt(p);
	var buf = new StringBuf();
	var escapeNext = 1;
	var attrValQuote = -1;
	while(!(c != c)) {
		switch(state) {
		case 0:
			switch(c) {
			case 10:case 13:case 9:case 32:
				break;
			default:
				state = next;
				continue;
			}
			break;
		case 1:
			switch(c) {
			case 60:
				state = 0;
				next = 2;
				break;
			default:
				start = p;
				state = 13;
				continue;
			}
			break;
		case 13:
			if(c == 60) {
				buf.addSub(str,start,p - start);
				var child = Xml.createPCData(buf.b);
				buf = new StringBuf();
				parent.addChild(child);
				nsubs++;
				state = 0;
				next = 2;
			} else if(c == 38) {
				buf.addSub(str,start,p - start);
				state = 18;
				escapeNext = 13;
				start = p + 1;
			}
			break;
		case 17:
			if(c == 93 && str.charCodeAt(p + 1) == 93 && str.charCodeAt(p + 2) == 62) {
				var child1 = Xml.createCData(HxOverrides.substr(str,start,p - start));
				parent.addChild(child1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 2:
			switch(c) {
			case 33:
				if(str.charCodeAt(p + 1) == 91) {
					p += 2;
					if(HxOverrides.substr(str,p,6).toUpperCase() != "CDATA[") throw new js__$Boot_HaxeError("Expected <![CDATA[");
					p += 5;
					state = 17;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) == 68 || str.charCodeAt(p + 1) == 100) {
					if(HxOverrides.substr(str,p + 2,6).toUpperCase() != "OCTYPE") throw new js__$Boot_HaxeError("Expected <!DOCTYPE");
					p += 8;
					state = 16;
					start = p + 1;
				} else if(str.charCodeAt(p + 1) != 45 || str.charCodeAt(p + 2) != 45) throw new js__$Boot_HaxeError("Expected <!--"); else {
					p += 2;
					state = 15;
					start = p + 1;
				}
				break;
			case 63:
				state = 14;
				start = p;
				break;
			case 47:
				if(parent == null) throw new js__$Boot_HaxeError("Expected node name");
				start = p + 1;
				state = 0;
				next = 10;
				break;
			default:
				state = 3;
				start = p;
				continue;
			}
			break;
		case 3:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(p == start) throw new js__$Boot_HaxeError("Expected node name");
				xml = Xml.createElement(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml);
				nsubs++;
				state = 0;
				next = 4;
				continue;
			}
			break;
		case 4:
			switch(c) {
			case 47:
				state = 11;
				break;
			case 62:
				state = 9;
				break;
			default:
				state = 5;
				start = p;
				continue;
			}
			break;
		case 5:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				var tmp;
				if(start == p) throw new js__$Boot_HaxeError("Expected attribute name");
				tmp = HxOverrides.substr(str,start,p - start);
				aname = tmp;
				if(xml.exists(aname)) throw new js__$Boot_HaxeError("Duplicate attribute");
				state = 0;
				next = 6;
				continue;
			}
			break;
		case 6:
			switch(c) {
			case 61:
				state = 0;
				next = 7;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected =");
			}
			break;
		case 7:
			switch(c) {
			case 34:case 39:
				buf = new StringBuf();
				state = 8;
				start = p + 1;
				attrValQuote = c;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected \"");
			}
			break;
		case 8:
			switch(c) {
			case 38:
				buf.addSub(str,start,p - start);
				state = 18;
				escapeNext = 8;
				start = p + 1;
				break;
			case 62:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val = buf.b;
					buf = new StringBuf();
					xml.set(aname,val);
					state = 0;
					next = 4;
				}
				break;
			case 60:
				if(strict) throw new js__$Boot_HaxeError("Invalid unescaped " + String.fromCharCode(c) + " in attribute value"); else if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val1 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val1);
					state = 0;
					next = 4;
				}
				break;
			default:
				if(c == attrValQuote) {
					buf.addSub(str,start,p - start);
					var val2 = buf.b;
					buf = new StringBuf();
					xml.set(aname,val2);
					state = 0;
					next = 4;
				}
			}
			break;
		case 9:
			p = haxe_xml_Parser.doParse(str,strict,p,xml);
			start = p;
			state = 1;
			break;
		case 11:
			switch(c) {
			case 62:
				state = 1;
				break;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 12:
			switch(c) {
			case 62:
				if(nsubs == 0) parent.addChild(Xml.createPCData(""));
				return p;
			default:
				throw new js__$Boot_HaxeError("Expected >");
			}
			break;
		case 10:
			if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45)) {
				if(start == p) throw new js__$Boot_HaxeError("Expected node name");
				var v = HxOverrides.substr(str,start,p - start);
				if(v != (function($this) {
					var $r;
					if(parent.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + parent.nodeType);
					$r = parent.nodeName;
					return $r;
				}(this))) throw new js__$Boot_HaxeError("Expected </" + (function($this) {
					var $r;
					if(parent.nodeType != Xml.Element) throw "Bad node type, expected Element but found " + parent.nodeType;
					$r = parent.nodeName;
					return $r;
				}(this)) + ">");
				state = 0;
				next = 12;
				continue;
			}
			break;
		case 15:
			if(c == 45 && str.charCodeAt(p + 1) == 45 && str.charCodeAt(p + 2) == 62) {
				var xml1 = Xml.createComment(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml1);
				nsubs++;
				p += 2;
				state = 1;
			}
			break;
		case 16:
			if(c == 91) nbrackets++; else if(c == 93) nbrackets--; else if(c == 62 && nbrackets == 0) {
				var xml2 = Xml.createDocType(HxOverrides.substr(str,start,p - start));
				parent.addChild(xml2);
				nsubs++;
				state = 1;
			}
			break;
		case 14:
			if(c == 63 && str.charCodeAt(p + 1) == 62) {
				p++;
				var str1 = HxOverrides.substr(str,start + 1,p - start - 2);
				var xml3 = Xml.createProcessingInstruction(str1);
				parent.addChild(xml3);
				nsubs++;
				state = 1;
			}
			break;
		case 18:
			if(c == 59) {
				var s = HxOverrides.substr(str,start,p - start);
				if(s.charCodeAt(0) == 35) {
					var c1;
					if(s.charCodeAt(1) == 120) c1 = Std.parseInt("0" + HxOverrides.substr(s,1,s.length - 1)); else c1 = Std.parseInt(HxOverrides.substr(s,1,s.length - 1));
					buf.b += String.fromCharCode(c1);
				} else if(!haxe_xml_Parser.escapes.exists(s)) {
					if(strict) throw new js__$Boot_HaxeError("Undefined entity: " + s);
					buf.b += Std.string("&" + s + ";");
				} else buf.add(haxe_xml_Parser.escapes.get(s));
				start = p + 1;
				state = escapeNext;
			} else if(!(c >= 97 && c <= 122 || c >= 65 && c <= 90 || c >= 48 && c <= 57 || c == 58 || c == 46 || c == 95 || c == 45) && c != 35) {
				if(strict) throw new js__$Boot_HaxeError("Invalid character in entity: " + String.fromCharCode(c));
				buf.b += "&";
				buf.addSub(str,start,p - start);
				p--;
				start = p + 1;
				state = escapeNext;
			}
			break;
		}
		c = StringTools.fastCodeAt(str,++p);
	}
	if(state == 1) {
		start = p;
		state = 13;
	}
	if(state == 13) {
		if(p != start || nsubs == 0) {
			buf.addSub(str,start,p - start);
			var xml4 = Xml.createPCData(buf.b);
			parent.addChild(xml4);
			nsubs++;
		}
		return p;
	}
	if(!strict && state == 18 && escapeNext == 13) {
		buf.b += "&";
		buf.addSub(str,start,p - start);
		var xml5 = Xml.createPCData(buf.b);
		parent.addChild(xml5);
		nsubs++;
		return p;
	}
	throw new js__$Boot_HaxeError("Unexpected end");
};
var haxe_xml_Printer = function(pretty) {
	this.output = new StringBuf();
	this.pretty = pretty;
};
$hxClasses["haxe.xml.Printer"] = haxe_xml_Printer;
haxe_xml_Printer.__name__ = ["haxe","xml","Printer"];
haxe_xml_Printer.print = function(xml,pretty) {
	if(pretty == null) pretty = false;
	var printer = new haxe_xml_Printer(pretty);
	printer.writeNode(xml,"");
	return printer.output.b;
};
haxe_xml_Printer.prototype = {
	writeNode: function(value,tabs) {
		var _g = value.nodeType;
		switch(_g) {
		case 2:
			this.output.b += Std.string(tabs + "<![CDATA[");
			this.write(StringTools.trim((function($this) {
				var $r;
				if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
				$r = value.nodeValue;
				return $r;
			}(this))));
			this.output.b += "]]>";
			if(this.pretty) this.output.b += "";
			break;
		case 3:
			var commentContent;
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			commentContent = value.nodeValue;
			commentContent = new EReg("[\n\r\t]+","g").replace(commentContent,"");
			commentContent = "<!--" + commentContent + "-->";
			if(tabs == null) this.output.b += "null"; else this.output.b += "" + tabs;
			this.write(StringTools.trim(commentContent));
			if(this.pretty) this.output.b += "";
			break;
		case 6:
			var $it0 = (function($this) {
				var $r;
				if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
				$r = HxOverrides.iter(value.children);
				return $r;
			}(this));
			while( $it0.hasNext() ) {
				var child = $it0.next();
				this.writeNode(child,tabs);
			}
			break;
		case 0:
			this.output.b += Std.string(tabs + "<");
			this.write((function($this) {
				var $r;
				if(value.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
				$r = value.nodeName;
				return $r;
			}(this)));
			var $it1 = value.attributes();
			while( $it1.hasNext() ) {
				var attribute = $it1.next();
				this.output.b += Std.string(" " + attribute + "=\"");
				this.write(StringTools.htmlEscape(value.get(attribute),true));
				this.output.b += "\"";
			}
			if(this.hasChildren(value)) {
				this.output.b += ">";
				if(this.pretty) this.output.b += "";
				var $it2 = (function($this) {
					var $r;
					if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
					$r = HxOverrides.iter(value.children);
					return $r;
				}(this));
				while( $it2.hasNext() ) {
					var child1 = $it2.next();
					this.writeNode(child1,this.pretty?tabs + "\t":tabs);
				}
				this.output.b += Std.string(tabs + "</");
				this.write((function($this) {
					var $r;
					if(value.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + value.nodeType);
					$r = value.nodeName;
					return $r;
				}(this)));
				this.output.b += ">";
				if(this.pretty) this.output.b += "";
			} else {
				this.output.b += "/>";
				if(this.pretty) this.output.b += "";
			}
			break;
		case 1:
			var nodeValue;
			if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
			nodeValue = value.nodeValue;
			if(nodeValue.length != 0) {
				this.write(tabs + StringTools.htmlEscape(nodeValue));
				if(this.pretty) this.output.b += "";
			}
			break;
		case 5:
			this.write("<?" + (function($this) {
				var $r;
				if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
				$r = value.nodeValue;
				return $r;
			}(this)) + "?>");
			break;
		case 4:
			this.write("<!DOCTYPE " + (function($this) {
				var $r;
				if(value.nodeType == Xml.Document || value.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + value.nodeType);
				$r = value.nodeValue;
				return $r;
			}(this)) + ">");
			break;
		}
	}
	,write: function(input) {
		if(input == null) this.output.b += "null"; else this.output.b += "" + input;
	}
	,hasChildren: function(value) {
		var $it0 = (function($this) {
			var $r;
			if(value.nodeType != Xml.Document && value.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element or Document but found " + value.nodeType);
			$r = HxOverrides.iter(value.children);
			return $r;
		}(this));
		while( $it0.hasNext() ) {
			var child = $it0.next();
			var _g = child.nodeType;
			switch(_g) {
			case 0:case 1:
				return true;
			case 2:case 3:
				if(StringTools.ltrim((function($this) {
					var $r;
					if(child.nodeType == Xml.Document || child.nodeType == Xml.Element) throw new js__$Boot_HaxeError("Bad node type, unexpected " + child.nodeType);
					$r = child.nodeValue;
					return $r;
				}(this))).length != 0) return true;
				break;
			default:
			}
		}
		return false;
	}
	,__class__: haxe_xml_Printer
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Object.prototype.hasOwnProperty.call(val,"name")) this.name = Reflect.field(val,"name"); else this.name = "Error";
	if(Object.prototype.hasOwnProperty.call(val,"message")) this.message = Reflect.field(val,"message"); else this.message = Std.string(val);
	if(Error.captureStackTrace) Error.captureStackTrace(this,js__$Boot_HaxeError);
};
$hxClasses["js._Boot.HaxeError"] = js__$Boot_HaxeError;
js__$Boot_HaxeError.__name__ = ["js","_Boot","HaxeError"];
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Browser = function() { };
$hxClasses["js.Browser"] = js_Browser;
js_Browser.__name__ = ["js","Browser"];
js_Browser.getLocalStorage = function() {
	try {
		var s = window.localStorage;
		s.getItem("");
		return s;
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
		return null;
	}
};
var js_html_compat_ArrayBuffer = function(a) {
	if((a instanceof Array) && a.__enum__ == null) {
		this.a = a;
		this.byteLength = a.length;
	} else {
		var len = a;
		this.a = [];
		var _g = 0;
		while(_g < len) {
			var i = _g++;
			this.a[i] = 0;
		}
		this.byteLength = len;
	}
};
$hxClasses["js.html.compat.ArrayBuffer"] = js_html_compat_ArrayBuffer;
js_html_compat_ArrayBuffer.__name__ = ["js","html","compat","ArrayBuffer"];
js_html_compat_ArrayBuffer.sliceImpl = function(begin,end) {
	var u = new Uint8Array(this,begin,end == null?null:end - begin);
	var result = new ArrayBuffer(u.byteLength);
	var resultArray = new Uint8Array(result);
	resultArray.set(u);
	return result;
};
js_html_compat_ArrayBuffer.prototype = {
	slice: function(begin,end) {
		return new js_html_compat_ArrayBuffer(this.a.slice(begin,end));
	}
	,__class__: js_html_compat_ArrayBuffer
};
var js_html_compat_DataView = function(buffer,byteOffset,byteLength) {
	this.buf = buffer;
	if(byteOffset == null) this.offset = 0; else this.offset = byteOffset;
	if(byteLength == null) this.length = buffer.byteLength - this.offset; else this.length = byteLength;
	if(this.offset < 0 || this.length < 0 || this.offset + this.length > buffer.byteLength) throw new js__$Boot_HaxeError(haxe_io_Error.OutsideBounds);
};
$hxClasses["js.html.compat.DataView"] = js_html_compat_DataView;
js_html_compat_DataView.__name__ = ["js","html","compat","DataView"];
js_html_compat_DataView.prototype = {
	getInt8: function(byteOffset) {
		var v = this.buf.a[this.offset + byteOffset];
		if(v >= 128) return v - 256; else return v;
	}
	,getUint8: function(byteOffset) {
		return this.buf.a[this.offset + byteOffset];
	}
	,getInt16: function(byteOffset,littleEndian) {
		var v = this.getUint16(byteOffset,littleEndian);
		if(v >= 32768) return v - 65536; else return v;
	}
	,getUint16: function(byteOffset,littleEndian) {
		if(littleEndian) return this.buf.a[this.offset + byteOffset] | this.buf.a[this.offset + byteOffset + 1] << 8; else return this.buf.a[this.offset + byteOffset] << 8 | this.buf.a[this.offset + byteOffset + 1];
	}
	,getInt32: function(byteOffset,littleEndian) {
		var p = this.offset + byteOffset;
		var a = this.buf.a[p++];
		var b = this.buf.a[p++];
		var c = this.buf.a[p++];
		var d = this.buf.a[p++];
		if(littleEndian) return a | b << 8 | c << 16 | d << 24; else return d | c << 8 | b << 16 | a << 24;
	}
	,getUint32: function(byteOffset,littleEndian) {
		var v = this.getInt32(byteOffset,littleEndian);
		if(v < 0) return v + 4294967296.; else return v;
	}
	,getFloat32: function(byteOffset,littleEndian) {
		return haxe_io_FPHelper.i32ToFloat(this.getInt32(byteOffset,littleEndian));
	}
	,getFloat64: function(byteOffset,littleEndian) {
		var a = this.getInt32(byteOffset,littleEndian);
		var b = this.getInt32(byteOffset + 4,littleEndian);
		return haxe_io_FPHelper.i64ToDouble(littleEndian?a:b,littleEndian?b:a);
	}
	,setInt8: function(byteOffset,value) {
		if(value < 0) this.buf.a[byteOffset + this.offset] = value + 128 & 255; else this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setUint8: function(byteOffset,value) {
		this.buf.a[byteOffset + this.offset] = value & 255;
	}
	,setInt16: function(byteOffset,value,littleEndian) {
		this.setUint16(byteOffset,value < 0?value + 65536:value,littleEndian);
	}
	,setUint16: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
		} else {
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p] = value & 255;
		}
	}
	,setInt32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,value,littleEndian);
	}
	,setUint32: function(byteOffset,value,littleEndian) {
		var p = byteOffset + this.offset;
		if(littleEndian) {
			this.buf.a[p++] = value & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >>> 24;
		} else {
			this.buf.a[p++] = value >>> 24;
			this.buf.a[p++] = value >> 16 & 255;
			this.buf.a[p++] = value >> 8 & 255;
			this.buf.a[p++] = value & 255;
		}
	}
	,setFloat32: function(byteOffset,value,littleEndian) {
		this.setUint32(byteOffset,haxe_io_FPHelper.floatToI32(value),littleEndian);
	}
	,setFloat64: function(byteOffset,value,littleEndian) {
		var i64 = haxe_io_FPHelper.doubleToI64(value);
		if(littleEndian) {
			this.setUint32(byteOffset,i64.low);
			this.setUint32(byteOffset,i64.high);
		} else {
			this.setUint32(byteOffset,i64.high);
			this.setUint32(byteOffset,i64.low);
		}
	}
	,__class__: js_html_compat_DataView
};
var js_html_compat_Uint8Array = function() { };
$hxClasses["js.html.compat.Uint8Array"] = js_html_compat_Uint8Array;
js_html_compat_Uint8Array.__name__ = ["js","html","compat","Uint8Array"];
js_html_compat_Uint8Array._new = function(arg1,offset,length) {
	var arr;
	if(typeof(arg1) == "number") {
		arr = [];
		var _g = 0;
		while(_g < arg1) {
			var i = _g++;
			arr[i] = 0;
		}
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else if(js_Boot.__instanceof(arg1,js_html_compat_ArrayBuffer)) {
		var buffer = arg1;
		if(offset == null) offset = 0;
		if(length == null) length = buffer.byteLength - offset;
		if(offset == 0) arr = buffer.a; else arr = buffer.a.slice(offset,offset + length);
		arr.byteLength = arr.length;
		arr.byteOffset = offset;
		arr.buffer = buffer;
	} else if((arg1 instanceof Array) && arg1.__enum__ == null) {
		arr = arg1.slice();
		arr.byteLength = arr.length;
		arr.byteOffset = 0;
		arr.buffer = new js_html_compat_ArrayBuffer(arr);
	} else throw new js__$Boot_HaxeError("TODO " + Std.string(arg1));
	arr.subarray = js_html_compat_Uint8Array._subarray;
	arr.set = js_html_compat_Uint8Array._set;
	return arr;
};
js_html_compat_Uint8Array._set = function(arg,offset) {
	var t = this;
	if(js_Boot.__instanceof(arg.buffer,js_html_compat_ArrayBuffer)) {
		var a = arg;
		if(arg.byteLength + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g1 = 0;
		var _g = arg.byteLength;
		while(_g1 < _g) {
			var i = _g1++;
			t[i + offset] = a[i];
		}
	} else if((arg instanceof Array) && arg.__enum__ == null) {
		var a1 = arg;
		if(a1.length + offset > t.byteLength) throw new js__$Boot_HaxeError("set() outside of range");
		var _g11 = 0;
		var _g2 = a1.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			t[i1 + offset] = a1[i1];
		}
	} else throw new js__$Boot_HaxeError("TODO");
};
js_html_compat_Uint8Array._subarray = function(start,end) {
	var t = this;
	var a = js_html_compat_Uint8Array._new(t.slice(start,end));
	a.byteOffset = start;
	return a;
};
var nape_Config = function() { };
$hxClasses["nape.Config"] = nape_Config;
nape_Config.__name__ = ["nape","Config"];
var nape_callbacks_Callback = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_callbacks_ZPP_$Callback.internal) throw new js__$Boot_HaxeError("Error: Callback cannot be instantiated derp!");
};
$hxClasses["nape.callbacks.Callback"] = nape_callbacks_Callback;
nape_callbacks_Callback.__name__ = ["nape","callbacks","Callback"];
nape_callbacks_Callback.prototype = {
	toString: function() {
		return "";
	}
	,__class__: nape_callbacks_Callback
};
var nape_callbacks_BodyCallback = function() {
	nape_callbacks_Callback.call(this);
};
$hxClasses["nape.callbacks.BodyCallback"] = nape_callbacks_BodyCallback;
nape_callbacks_BodyCallback.__name__ = ["nape","callbacks","BodyCallback"];
nape_callbacks_BodyCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_BodyCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:";
		ret += ["WAKE","SLEEP"][this.zpp_inner.event - zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE];
		ret += ":" + this.zpp_inner.body.outer.toString();
		ret += " : listener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_BodyCallback
});
var nape_callbacks_Listener = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_callbacks_ZPP_$Listener.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate Listener derp!");
};
$hxClasses["nape.callbacks.Listener"] = nape_callbacks_Listener;
nape_callbacks_Listener.__name__ = ["nape","callbacks","Listener"];
nape_callbacks_Listener.prototype = {
	toString: function() {
		var event = ["BEGIN","END","WAKE","SLEEP","BREAK","PRE","ONGOING"][this.zpp_inner.event];
		if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_BODY) {
			var body = this.zpp_inner.body;
			return "BodyListener{" + event + "::" + Std.string(body.outer_zn.zpp_inner_zn.options.outer) + "}";
		} else if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_CONSTRAINT) {
			var con = this.zpp_inner.constraint;
			return "ConstraintListener{" + event + "::" + Std.string(con.outer_zn.zpp_inner_zn.options.outer) + "}";
		} else {
			var con1 = this.zpp_inner.interaction;
			var itype;
			var _g = con1.itype;
			switch(_g) {
			case 1:
				itype = "COLLISION";
				break;
			case 2:
				itype = "SENSOR";
				break;
			case 4:
				itype = "FLUID";
				break;
			default:
				itype = "ALL";
			}
			return (this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_INTERACTION?"InteractionListener{" + event + "#" + itype + "::" + Std.string(con1.outer_zni.zpp_inner_zn.options1.outer) + ":" + Std.string(con1.outer_zni.zpp_inner_zn.options2.outer) + "}":"PreListener{" + itype + "::" + Std.string(con1.outer_znp.zpp_inner_zn.options1.outer) + ":" + Std.string(con1.outer_znp.zpp_inner_zn.options2.outer) + "}") + " precedence=" + this.zpp_inner.precedence;
		}
	}
	,__class__: nape_callbacks_Listener
};
var nape_callbacks_BodyListener = function() {
	this.zpp_inner_zn = null;
};
$hxClasses["nape.callbacks.BodyListener"] = nape_callbacks_BodyListener;
nape_callbacks_BodyListener.__name__ = ["nape","callbacks","BodyListener"];
nape_callbacks_BodyListener.__super__ = nape_callbacks_Listener;
nape_callbacks_BodyListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	__class__: nape_callbacks_BodyListener
});
var nape_callbacks_CbEvent = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "CbEvent" + " derp!");
};
$hxClasses["nape.callbacks.CbEvent"] = nape_callbacks_CbEvent;
nape_callbacks_CbEvent.__name__ = ["nape","callbacks","CbEvent"];
nape_callbacks_CbEvent.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_PRE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_PRE = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_PRE;
			return $r;
		}(this))) return "PRE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN;
			return $r;
		}(this))) return "BEGIN"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING;
			return $r;
		}(this))) return "ONGOING"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_END == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_END = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_END;
			return $r;
		}(this))) return "END"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_WAKE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_WAKE = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_WAKE;
			return $r;
		}(this))) return "WAKE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_SLEEP == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_SLEEP = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_SLEEP;
			return $r;
		}(this))) return "SLEEP"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.CbEvent_BREAK == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.CbEvent_BREAK = new nape_callbacks_CbEvent();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.CbEvent_BREAK;
			return $r;
		}(this))) return "BREAK"; else return "";
	}
	,__class__: nape_callbacks_CbEvent
};
var nape_callbacks_CbType = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_callbacks_ZPP_$CbType();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.callbacks.CbType"] = nape_callbacks_CbType;
nape_callbacks_CbType.__name__ = ["nape","callbacks","CbType"];
nape_callbacks_CbType.prototype = {
	toString: function() {
		if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY) return "ANY_BODY"; else if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE) return "ANY_SHAPE"; else if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_COMPOUND) return "ANY_COMPOUND"; else if(this == zpp_$nape_callbacks_ZPP_$CbType.ANY_CONSTRAINT) return "ANY_CONSTRAINT"; else return "CbType#" + this.zpp_inner.id;
	}
	,__class__: nape_callbacks_CbType
};
var nape_callbacks_CbTypeIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$CbTypeList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "CbType" + "Iterator derp!");
};
$hxClasses["nape.callbacks.CbTypeIterator"] = nape_callbacks_CbTypeIterator;
nape_callbacks_CbTypeIterator.__name__ = ["nape","callbacks","CbTypeIterator"];
nape_callbacks_CbTypeIterator.get = function(list) {
	var ret;
	if(nape_callbacks_CbTypeIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$CbTypeList.internal = true;
		var ret1 = new nape_callbacks_CbTypeIterator();
		zpp_$nape_util_ZPP_$CbTypeList.internal = false;
		ret = ret1;
	} else {
		var r = nape_callbacks_CbTypeIterator.zpp_pool;
		nape_callbacks_CbTypeIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_callbacks_CbTypeIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_callbacks_CbTypeIterator.zpp_pool;
			nape_callbacks_CbTypeIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_callbacks_CbTypeIterator
};
var nape_callbacks_CbTypeList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$CbTypeList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.callbacks.CbTypeList"] = nape_callbacks_CbTypeList;
nape_callbacks_CbTypeList.__name__ = ["nape","callbacks","CbTypeList"];
nape_callbacks_CbTypeList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "CbType" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,unshift: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "CbType" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			} else this.zpp_inner.inner.add(obj.zpp_inner);
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,add: function(obj) {
		if(this.zpp_inner.reverse_flag) return this.push(obj); else return this.unshift(obj);
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_callbacks_CbTypeIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_callbacks_CbTypeList
};
var nape_callbacks_ConstraintCallback = function() {
	nape_callbacks_Callback.call(this);
};
$hxClasses["nape.callbacks.ConstraintCallback"] = nape_callbacks_ConstraintCallback;
nape_callbacks_ConstraintCallback.__name__ = ["nape","callbacks","ConstraintCallback"];
nape_callbacks_ConstraintCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_ConstraintCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:";
		ret += ["WAKE","SLEEP","BREAK"][this.zpp_inner.event - zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE];
		ret += ":" + this.zpp_inner.constraint.outer.toString();
		ret += " : listener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_ConstraintCallback
});
var nape_callbacks_ConstraintListener = function() {
	this.zpp_inner_zn = null;
};
$hxClasses["nape.callbacks.ConstraintListener"] = nape_callbacks_ConstraintListener;
nape_callbacks_ConstraintListener.__name__ = ["nape","callbacks","ConstraintListener"];
nape_callbacks_ConstraintListener.__super__ = nape_callbacks_Listener;
nape_callbacks_ConstraintListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	__class__: nape_callbacks_ConstraintListener
});
var nape_callbacks_InteractionCallback = function() {
	nape_callbacks_Callback.call(this);
};
$hxClasses["nape.callbacks.InteractionCallback"] = nape_callbacks_InteractionCallback;
nape_callbacks_InteractionCallback.__name__ = ["nape","callbacks","InteractionCallback"];
nape_callbacks_InteractionCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_InteractionCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:";
		ret += ["BEGIN","END","","","","","ONGOING"][this.zpp_inner.event];
		ret += ":" + this.zpp_inner.int1.outer_i.toString() + "/" + this.zpp_inner.int2.outer_i.toString();
		ret += " : " + this.zpp_inner.wrap_arbiters.toString();
		ret += " : listener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_InteractionCallback
});
var nape_callbacks_InteractionListener = function(event,interactionType,options1,options2,handler,precedence) {
	if(precedence == null) precedence = 0;
	this.zpp_inner_zn = null;
	zpp_$nape_callbacks_ZPP_$Listener.internal = true;
	nape_callbacks_Listener.call(this);
	zpp_$nape_callbacks_ZPP_$Listener.internal = false;
	if(handler == null) throw new js__$Boot_HaxeError("Error: InteractionListener::handler cannot be null");
	if(event == null) throw new js__$Boot_HaxeError("Error: CbEvent cannot be null for InteractionListener");
	var xevent = -1;
	if(event == (function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN = new nape_callbacks_CbEvent();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN;
		return $r;
	}(this))) xevent = zpp_$nape_util_ZPP_$Flags.id_CbEvent_BEGIN; else if(event == (function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.CbEvent_END == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.CbEvent_END = new nape_callbacks_CbEvent();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.CbEvent_END;
		return $r;
	}(this))) xevent = zpp_$nape_util_ZPP_$Flags.id_CbEvent_END; else if(event == (function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING = new nape_callbacks_CbEvent();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING;
		return $r;
	}(this))) xevent = zpp_$nape_util_ZPP_$Flags.id_CbEvent_ONGOING; else throw new js__$Boot_HaxeError("Error: CbEvent '" + event.toString() + "' is not a valid event type for InteractionListener");
	this.zpp_inner_zn = new zpp_$nape_callbacks_ZPP_$InteractionListener(zpp_$nape_callbacks_ZPP_$OptionType.argument(options1),zpp_$nape_callbacks_ZPP_$OptionType.argument(options2),xevent,zpp_$nape_util_ZPP_$Flags.id_ListenerType_INTERACTION);
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_zni = this;
	this.zpp_inner.precedence = precedence;
	this.zpp_inner_zn.handleri = handler;
	this.set_interactionType(interactionType);
};
$hxClasses["nape.callbacks.InteractionListener"] = nape_callbacks_InteractionListener;
nape_callbacks_InteractionListener.__name__ = ["nape","callbacks","InteractionListener"];
nape_callbacks_InteractionListener.__super__ = nape_callbacks_Listener;
nape_callbacks_InteractionListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	get_interactionType: function() {
		var ret = this.zpp_inner_zn.itype;
		if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_COLLISION) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
		} else if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_SENSOR) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR;
		} else if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_FLUID) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID;
		} else if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_ANY == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_ANY = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_ANY;
		} else return null;
	}
	,set_interactionType: function(interactionType) {
		if(interactionType == null) throw new js__$Boot_HaxeError("Error: Cannot set listener interaction type to null");
		if(this.get_interactionType() != interactionType) {
			var xtype;
			if(interactionType == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
				return $r;
			}(this))) xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_COLLISION; else if(interactionType == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR;
				return $r;
			}(this))) xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_SENSOR; else if(interactionType == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID;
				return $r;
			}(this))) xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_FLUID; else xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY;
			this.zpp_inner_zn.itype = xtype;
		}
		return this.get_interactionType();
	}
	,__class__: nape_callbacks_InteractionListener
});
var nape_callbacks_InteractionType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "InteractionType" + " derp!");
};
$hxClasses["nape.callbacks.InteractionType"] = nape_callbacks_InteractionType;
nape_callbacks_InteractionType.__name__ = ["nape","callbacks","InteractionType"];
nape_callbacks_InteractionType.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
			return $r;
		}(this))) return "COLLISION"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR;
			return $r;
		}(this))) return "SENSOR"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID;
			return $r;
		}(this))) return "FLUID"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_ANY == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_ANY = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.InteractionType_ANY;
			return $r;
		}(this))) return "ANY"; else return "";
	}
	,__class__: nape_callbacks_InteractionType
};
var nape_callbacks_ListenerIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ListenerList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Listener" + "Iterator derp!");
};
$hxClasses["nape.callbacks.ListenerIterator"] = nape_callbacks_ListenerIterator;
nape_callbacks_ListenerIterator.__name__ = ["nape","callbacks","ListenerIterator"];
nape_callbacks_ListenerIterator.get = function(list) {
	var ret;
	if(nape_callbacks_ListenerIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ListenerList.internal = true;
		var ret1 = new nape_callbacks_ListenerIterator();
		zpp_$nape_util_ZPP_$ListenerList.internal = false;
		ret = ret1;
	} else {
		var r = nape_callbacks_ListenerIterator.zpp_pool;
		nape_callbacks_ListenerIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_callbacks_ListenerIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_callbacks_ListenerIterator.zpp_pool;
			nape_callbacks_ListenerIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_callbacks_ListenerIterator
};
var nape_callbacks_ListenerList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$ListenerList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.callbacks.ListenerList"] = nape_callbacks_ListenerList;
nape_callbacks_ListenerList.__name__ = ["nape","callbacks","ListenerList"];
nape_callbacks_ListenerList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Listener" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,unshift: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Listener" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			} else this.zpp_inner.inner.add(obj.zpp_inner);
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,add: function(obj) {
		if(this.zpp_inner.reverse_flag) return this.push(obj); else return this.unshift(obj);
	}
	,remove: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Listener" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var ret;
		ret = false;
		var cx_ite = this.zpp_inner.inner.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x == obj.zpp_inner) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(ret) {
			if(this.zpp_inner.subber != null) this.zpp_inner.subber(obj);
			if(!this.zpp_inner.dontremove) this.zpp_inner.inner.remove(obj.zpp_inner);
			this.zpp_inner.invalidate();
		}
		return ret;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_callbacks_ListenerIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_callbacks_ListenerList
};
var nape_callbacks_ListenerType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ListenerType" + " derp!");
};
$hxClasses["nape.callbacks.ListenerType"] = nape_callbacks_ListenerType;
nape_callbacks_ListenerType.__name__ = ["nape","callbacks","ListenerType"];
nape_callbacks_ListenerType.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ListenerType_BODY == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ListenerType_BODY = new nape_callbacks_ListenerType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ListenerType_BODY;
			return $r;
		}(this))) return "BODY"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ListenerType_CONSTRAINT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ListenerType_CONSTRAINT = new nape_callbacks_ListenerType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ListenerType_CONSTRAINT;
			return $r;
		}(this))) return "CONSTRAINT"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ListenerType_INTERACTION == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ListenerType_INTERACTION = new nape_callbacks_ListenerType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ListenerType_INTERACTION;
			return $r;
		}(this))) return "INTERACTION"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ListenerType_PRE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ListenerType_PRE = new nape_callbacks_ListenerType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ListenerType_PRE;
			return $r;
		}(this))) return "PRE"; else return "";
	}
	,__class__: nape_callbacks_ListenerType
};
var nape_callbacks_OptionType = function(includes,excludes) {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_callbacks_ZPP_$OptionType();
	this.zpp_inner.outer = this;
	if(includes != null) this.including(includes);
	if(excludes != null) this.excluding(excludes);
};
$hxClasses["nape.callbacks.OptionType"] = nape_callbacks_OptionType;
nape_callbacks_OptionType.__name__ = ["nape","callbacks","OptionType"];
nape_callbacks_OptionType.prototype = {
	including: function(includes) {
		this.zpp_inner.append(this.zpp_inner.includes,includes);
		return this;
	}
	,excluding: function(excludes) {
		this.zpp_inner.append(this.zpp_inner.excludes,excludes);
		return this;
	}
	,toString: function() {
		var inc = ((function($this) {
			var $r;
			if($this.zpp_inner.wrap_includes == null) $this.zpp_inner.setup_includes();
			$r = $this.zpp_inner.wrap_includes;
			return $r;
		}(this))).toString();
		var exc = ((function($this) {
			var $r;
			if($this.zpp_inner.wrap_excludes == null) $this.zpp_inner.setup_excludes();
			$r = $this.zpp_inner.wrap_excludes;
			return $r;
		}(this))).toString();
		return "@{" + inc + " excluding " + exc + "}";
	}
	,__class__: nape_callbacks_OptionType
};
var nape_callbacks_PreCallback = function() {
	nape_callbacks_Callback.call(this);
};
$hxClasses["nape.callbacks.PreCallback"] = nape_callbacks_PreCallback;
nape_callbacks_PreCallback.__name__ = ["nape","callbacks","PreCallback"];
nape_callbacks_PreCallback.__super__ = nape_callbacks_Callback;
nape_callbacks_PreCallback.prototype = $extend(nape_callbacks_Callback.prototype,{
	toString: function() {
		var ret = "Cb:PRE:";
		ret += ":" + this.zpp_inner.int1.outer_i.toString() + "/" + this.zpp_inner.int2.outer_i.toString();
		ret += " : " + this.zpp_inner.pre_arbiter.wrapper().toString();
		ret += " : listnener: " + Std.string(this.zpp_inner.listener.outer);
		return ret;
	}
	,__class__: nape_callbacks_PreCallback
});
var nape_callbacks_PreFlag = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "PreFlag" + " derp!");
};
$hxClasses["nape.callbacks.PreFlag"] = nape_callbacks_PreFlag;
nape_callbacks_PreFlag.__name__ = ["nape","callbacks","PreFlag"];
nape_callbacks_PreFlag.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
			return $r;
		}(this))) return "ACCEPT"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
			return $r;
		}(this))) return "IGNORE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE;
			return $r;
		}(this))) return "ACCEPT_ONCE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE = new nape_callbacks_PreFlag();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE;
			return $r;
		}(this))) return "IGNORE_ONCE"; else return "";
	}
	,__class__: nape_callbacks_PreFlag
};
var nape_callbacks_PreListener = function(interactionType,options1,options2,handler,precedence,pure) {
	if(pure == null) pure = false;
	if(precedence == null) precedence = 0;
	this.zpp_inner_zn = null;
	zpp_$nape_callbacks_ZPP_$Listener.internal = true;
	nape_callbacks_Listener.call(this);
	zpp_$nape_callbacks_ZPP_$Listener.internal = false;
	if(handler == null) throw new js__$Boot_HaxeError("Error: PreListener must take a handler!");
	this.zpp_inner_zn = new zpp_$nape_callbacks_ZPP_$InteractionListener(zpp_$nape_callbacks_ZPP_$OptionType.argument(options1),zpp_$nape_callbacks_ZPP_$OptionType.argument(options2),zpp_$nape_util_ZPP_$Flags.id_CbEvent_PRE,zpp_$nape_util_ZPP_$Flags.id_ListenerType_PRE);
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_znp = this;
	this.zpp_inner.precedence = precedence;
	this.zpp_inner_zn.pure = pure;
	this.zpp_inner_zn.handlerp = handler;
	this.set_interactionType(interactionType);
};
$hxClasses["nape.callbacks.PreListener"] = nape_callbacks_PreListener;
nape_callbacks_PreListener.__name__ = ["nape","callbacks","PreListener"];
nape_callbacks_PreListener.__super__ = nape_callbacks_Listener;
nape_callbacks_PreListener.prototype = $extend(nape_callbacks_Listener.prototype,{
	get_interactionType: function() {
		var ret = this.zpp_inner_zn.itype;
		if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_COLLISION) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
		} else if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_SENSOR) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR;
		} else if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_FLUID) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID;
		} else if(ret == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
			if(zpp_$nape_util_ZPP_$Flags.InteractionType_ANY == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InteractionType_ANY = new nape_callbacks_InteractionType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.InteractionType_ANY;
		} else return null;
	}
	,set_interactionType: function(interactionType) {
		if(interactionType == null) throw new js__$Boot_HaxeError("Error: Cannot set listener interaction type to null");
		if(this.get_interactionType() != interactionType) {
			var xtype;
			if(interactionType == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
				return $r;
			}(this))) xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_COLLISION; else if(interactionType == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR;
				return $r;
			}(this))) xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_SENSOR; else if(interactionType == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID;
				return $r;
			}(this))) xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_FLUID; else xtype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY;
			this.zpp_inner_zn.itype = xtype;
		}
		return this.get_interactionType();
	}
	,__class__: nape_callbacks_PreListener
});
var nape_constraint_Constraint = function() {
	this.zpp_inner.insert_cbtype(zpp_$nape_callbacks_ZPP_$CbType.ANY_CONSTRAINT.zpp_inner);
	if(!nape_constraint_Constraint.zpp_internalAlloc) throw new js__$Boot_HaxeError("Error: Constraint cannot be instantiated derp!");
};
$hxClasses["nape.constraint.Constraint"] = nape_constraint_Constraint;
nape_constraint_Constraint.__name__ = ["nape","constraint","Constraint"];
nape_constraint_Constraint.prototype = {
	get_userData: function() {
		if(this.zpp_inner.userData == null) this.zpp_inner.userData = { };
		return this.zpp_inner.userData;
	}
	,set_space: function(space) {
		if(this.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Constraint belonging to" + " a Compound, only the root Compound space can be set");
		if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != space) {
			if(this.zpp_inner.component != null) this.zpp_inner.component.woken = false;
			this.zpp_inner.clearcache();
			if(this.zpp_inner.space != null) this.zpp_inner.space.outer.zpp_inner.wrap_constraints.remove(this);
			if(space != null) space.zpp_inner.wrap_constraints.add(this); else this.zpp_inner.space = null;
		}
		if(this.zpp_inner.space == null) return null; else return this.zpp_inner.space.outer;
	}
	,set_ignore: function(ignore) {
		if(this.zpp_inner.ignore != ignore) {
			this.zpp_inner.ignore = ignore;
			this.zpp_inner.wake();
		}
		return this.zpp_inner.ignore;
	}
	,toString: function() {
		return "{Constraint}";
	}
	,__class__: nape_constraint_Constraint
};
var nape_constraint_ConstraintIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ConstraintList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Constraint" + "Iterator derp!");
};
$hxClasses["nape.constraint.ConstraintIterator"] = nape_constraint_ConstraintIterator;
nape_constraint_ConstraintIterator.__name__ = ["nape","constraint","ConstraintIterator"];
nape_constraint_ConstraintIterator.get = function(list) {
	var ret;
	if(nape_constraint_ConstraintIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ConstraintList.internal = true;
		var ret1 = new nape_constraint_ConstraintIterator();
		zpp_$nape_util_ZPP_$ConstraintList.internal = false;
		ret = ret1;
	} else {
		var r = nape_constraint_ConstraintIterator.zpp_pool;
		nape_constraint_ConstraintIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_constraint_ConstraintIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_constraint_ConstraintIterator.zpp_pool;
			nape_constraint_ConstraintIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_constraint_ConstraintIterator
};
var nape_constraint_ConstraintList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$ConstraintList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.constraint.ConstraintList"] = nape_constraint_ConstraintList;
nape_constraint_ConstraintList.__name__ = ["nape","constraint","ConstraintList"];
nape_constraint_ConstraintList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Constraint" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,unshift: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Constraint" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			} else this.zpp_inner.inner.add(obj.zpp_inner);
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,add: function(obj) {
		if(this.zpp_inner.reverse_flag) return this.push(obj); else return this.unshift(obj);
	}
	,remove: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Constraint" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var ret;
		ret = false;
		var cx_ite = this.zpp_inner.inner.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x == obj.zpp_inner) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(ret) {
			if(this.zpp_inner.subber != null) this.zpp_inner.subber(obj);
			if(!this.zpp_inner.dontremove) this.zpp_inner.inner.remove(obj.zpp_inner);
			this.zpp_inner.invalidate();
		}
		return ret;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_constraint_ConstraintIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_constraint_ConstraintList
};
var nape_constraint_DistanceJoint = function(body1,body2,anchor1,anchor2,jointMin,jointMax) {
	this.zpp_inner_zn = null;
	this.zpp_inner_zn = new zpp_$nape_constraint_ZPP_$DistanceJoint();
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	nape_constraint_Constraint.zpp_internalAlloc = true;
	nape_constraint_Constraint.call(this);
	nape_constraint_Constraint.zpp_internalAlloc = false;
	this.set_body1(body1);
	this.set_body2(body2);
	if(anchor1 != null && anchor1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor1 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor1" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a1 == null) $this.zpp_inner_zn.setup_a1();
		$r = $this.zpp_inner_zn.wrap_a1;
		return $r;
	}(this))).set(anchor1);
	if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
	this.zpp_inner_zn.wrap_a1;
	if(anchor2 != null && anchor2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor2 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor2" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a2 == null) $this.zpp_inner_zn.setup_a2();
		$r = $this.zpp_inner_zn.wrap_a2;
		return $r;
	}(this))).set(anchor2);
	if(this.zpp_inner_zn.wrap_a2 == null) this.zpp_inner_zn.setup_a2();
	this.zpp_inner_zn.wrap_a2;
	this.zpp_inner.immutable_midstep("DistanceJoint::jointMin");
	if(jointMin != jointMin) throw new js__$Boot_HaxeError("Error: DistanceJoint::jointMin cannot be NaN");
	if(jointMin < 0) throw new js__$Boot_HaxeError("Error: DistanceJoint::jointMin must be >= 0");
	if(this.zpp_inner_zn.jointMin != jointMin) {
		this.zpp_inner_zn.jointMin = jointMin;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.jointMin;
	this.zpp_inner.immutable_midstep("DistanceJoint::jointMax");
	if(jointMax != jointMax) throw new js__$Boot_HaxeError("Error: DistanceJoint::jointMax cannot be NaN");
	if(jointMax < 0) throw new js__$Boot_HaxeError("Error: DistanceJoint::jointMax must be >= 0");
	if(this.zpp_inner_zn.jointMax != jointMax) {
		this.zpp_inner_zn.jointMax = jointMax;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.jointMax;
};
$hxClasses["nape.constraint.DistanceJoint"] = nape_constraint_DistanceJoint;
nape_constraint_DistanceJoint.__name__ = ["nape","constraint","DistanceJoint"];
nape_constraint_DistanceJoint.__super__ = nape_constraint_Constraint;
nape_constraint_DistanceJoint.prototype = $extend(nape_constraint_Constraint.prototype,{
	get_body1: function() {
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,set_body1: function(body1) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body1");
		var inbody1;
		if(body1 == null) inbody1 = null; else inbody1 = body1.zpp_inner;
		if(inbody1 != this.zpp_inner_zn.b1) {
			if(this.zpp_inner_zn.b1 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1) {
					if(this.zpp_inner_zn.b1 != null) this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b1.wake();
			}
			this.zpp_inner_zn.b1 = inbody1;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody1 != null && this.zpp_inner_zn.b2 != inbody1) {
				if(inbody1 != null) inbody1.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody1 != null) inbody1.wake();
			}
		}
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,get_body2: function() {
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,set_body2: function(body2) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body2");
		var inbody2;
		if(body2 == null) inbody2 = null; else inbody2 = body2.zpp_inner;
		if(inbody2 != this.zpp_inner_zn.b2) {
			if(this.zpp_inner_zn.b2 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2) {
					if(this.zpp_inner_zn.b2 != null) this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b2.wake();
			}
			this.zpp_inner_zn.b2 = inbody2;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody2 != null && this.zpp_inner_zn.b1 != inbody2) {
				if(inbody2 != null) inbody2.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody2 != null) inbody2.wake();
			}
		}
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,get_anchor1: function() {
		if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
		return this.zpp_inner_zn.wrap_a1;
	}
	,get_anchor2: function() {
		if(this.zpp_inner_zn.wrap_a2 == null) this.zpp_inner_zn.setup_a2();
		return this.zpp_inner_zn.wrap_a2;
	}
	,__class__: nape_constraint_DistanceJoint
});
var nape_constraint_LineJoint = function(body1,body2,anchor1,anchor2,direction,jointMin,jointMax) {
	this.zpp_inner_zn = null;
	this.zpp_inner_zn = new zpp_$nape_constraint_ZPP_$LineJoint();
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	nape_constraint_Constraint.zpp_internalAlloc = true;
	nape_constraint_Constraint.call(this);
	nape_constraint_Constraint.zpp_internalAlloc = false;
	this.set_body1(body1);
	this.set_body2(body2);
	if(anchor1 != null && anchor1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor1 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor1" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a1 == null) $this.zpp_inner_zn.setup_a1();
		$r = $this.zpp_inner_zn.wrap_a1;
		return $r;
	}(this))).set(anchor1);
	if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
	this.zpp_inner_zn.wrap_a1;
	if(anchor2 != null && anchor2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor2 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor2" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a2 == null) $this.zpp_inner_zn.setup_a2();
		$r = $this.zpp_inner_zn.wrap_a2;
		return $r;
	}(this))).set(anchor2);
	if(this.zpp_inner_zn.wrap_a2 == null) this.zpp_inner_zn.setup_a2();
	this.zpp_inner_zn.wrap_a2;
	if(direction != null && direction.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(direction == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "direction" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_n == null) $this.zpp_inner_zn.setup_n();
		$r = $this.zpp_inner_zn.wrap_n;
		return $r;
	}(this))).set(direction);
	if(this.zpp_inner_zn.wrap_n == null) this.zpp_inner_zn.setup_n();
	this.zpp_inner_zn.wrap_n;
	this.zpp_inner.immutable_midstep("LineJoint::jointMin");
	if(jointMin != jointMin) throw new js__$Boot_HaxeError("Error: AngleJoint::jointMin cannot be NaN");
	if(this.zpp_inner_zn.jointMin != jointMin) {
		this.zpp_inner_zn.jointMin = jointMin;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.jointMin;
	this.zpp_inner.immutable_midstep("LineJoint::jointMax");
	if(jointMax != jointMax) throw new js__$Boot_HaxeError("Error: AngleJoint::jointMax cannot be NaN");
	if(this.zpp_inner_zn.jointMax != jointMax) {
		this.zpp_inner_zn.jointMax = jointMax;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.jointMax;
};
$hxClasses["nape.constraint.LineJoint"] = nape_constraint_LineJoint;
nape_constraint_LineJoint.__name__ = ["nape","constraint","LineJoint"];
nape_constraint_LineJoint.__super__ = nape_constraint_Constraint;
nape_constraint_LineJoint.prototype = $extend(nape_constraint_Constraint.prototype,{
	set_body1: function(body1) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body1");
		var inbody1;
		if(body1 == null) inbody1 = null; else inbody1 = body1.zpp_inner;
		if(inbody1 != this.zpp_inner_zn.b1) {
			if(this.zpp_inner_zn.b1 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1) {
					if(this.zpp_inner_zn.b1 != null) this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b1.wake();
			}
			this.zpp_inner_zn.b1 = inbody1;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody1 != null && this.zpp_inner_zn.b2 != inbody1) {
				if(inbody1 != null) inbody1.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody1 != null) inbody1.wake();
			}
		}
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,set_body2: function(body2) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body2");
		var inbody2;
		if(body2 == null) inbody2 = null; else inbody2 = body2.zpp_inner;
		if(inbody2 != this.zpp_inner_zn.b2) {
			if(this.zpp_inner_zn.b2 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2) {
					if(this.zpp_inner_zn.b2 != null) this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b2.wake();
			}
			this.zpp_inner_zn.b2 = inbody2;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody2 != null && this.zpp_inner_zn.b1 != inbody2) {
				if(inbody2 != null) inbody2.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody2 != null) inbody2.wake();
			}
		}
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,__class__: nape_constraint_LineJoint
});
var nape_constraint_MotorJoint = function(body1,body2,rate,ratio) {
	if(ratio == null) ratio = 1.0;
	if(rate == null) rate = 0.0;
	this.zpp_inner_zn = null;
	this.zpp_inner_zn = new zpp_$nape_constraint_ZPP_$MotorJoint();
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	nape_constraint_Constraint.zpp_internalAlloc = true;
	nape_constraint_Constraint.call(this);
	nape_constraint_Constraint.zpp_internalAlloc = false;
	this.set_body1(body1);
	this.set_body2(body2);
	this.zpp_inner.immutable_midstep("MotorJoint::rate");
	if(rate != rate) throw new js__$Boot_HaxeError("Error: MotorJoint::rate cannot be NaN");
	if(this.zpp_inner_zn.rate != rate) {
		this.zpp_inner_zn.rate = rate;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.rate;
	this.zpp_inner.immutable_midstep("MotorJoint::ratio");
	if(ratio != ratio) throw new js__$Boot_HaxeError("Error: MotorJoint::ratio cannot be NaN");
	if(this.zpp_inner_zn.ratio != ratio) {
		this.zpp_inner_zn.ratio = ratio;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.ratio;
};
$hxClasses["nape.constraint.MotorJoint"] = nape_constraint_MotorJoint;
nape_constraint_MotorJoint.__name__ = ["nape","constraint","MotorJoint"];
nape_constraint_MotorJoint.__super__ = nape_constraint_Constraint;
nape_constraint_MotorJoint.prototype = $extend(nape_constraint_Constraint.prototype,{
	set_body1: function(body1) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body1");
		var inbody1;
		if(body1 == null) inbody1 = null; else inbody1 = body1.zpp_inner;
		if(inbody1 != this.zpp_inner_zn.b1) {
			if(this.zpp_inner_zn.b1 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1) {
					if(this.zpp_inner_zn.b1 != null) this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b1.wake();
			}
			this.zpp_inner_zn.b1 = inbody1;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody1 != null && this.zpp_inner_zn.b2 != inbody1) {
				if(inbody1 != null) inbody1.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody1 != null) inbody1.wake();
			}
		}
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,set_body2: function(body2) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body2");
		var inbody2;
		if(body2 == null) inbody2 = null; else inbody2 = body2.zpp_inner;
		if(inbody2 != this.zpp_inner_zn.b2) {
			if(this.zpp_inner_zn.b2 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2) {
					if(this.zpp_inner_zn.b2 != null) this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b2.wake();
			}
			this.zpp_inner_zn.b2 = inbody2;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody2 != null && this.zpp_inner_zn.b1 != inbody2) {
				if(inbody2 != null) inbody2.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody2 != null) inbody2.wake();
			}
		}
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,__class__: nape_constraint_MotorJoint
});
var nape_constraint_PivotJoint = function(body1,body2,anchor1,anchor2) {
	this.zpp_inner_zn = null;
	this.zpp_inner_zn = new zpp_$nape_constraint_ZPP_$PivotJoint();
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	nape_constraint_Constraint.zpp_internalAlloc = true;
	nape_constraint_Constraint.call(this);
	nape_constraint_Constraint.zpp_internalAlloc = false;
	this.set_body1(body1);
	this.set_body2(body2);
	if(anchor1 != null && anchor1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor1 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor1" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a1 == null) $this.zpp_inner_zn.setup_a1();
		$r = $this.zpp_inner_zn.wrap_a1;
		return $r;
	}(this))).set(anchor1);
	if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
	this.zpp_inner_zn.wrap_a1;
	if(anchor2 != null && anchor2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor2 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor2" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a2 == null) $this.zpp_inner_zn.setup_a2();
		$r = $this.zpp_inner_zn.wrap_a2;
		return $r;
	}(this))).set(anchor2);
	if(this.zpp_inner_zn.wrap_a2 == null) this.zpp_inner_zn.setup_a2();
	this.zpp_inner_zn.wrap_a2;
};
$hxClasses["nape.constraint.PivotJoint"] = nape_constraint_PivotJoint;
nape_constraint_PivotJoint.__name__ = ["nape","constraint","PivotJoint"];
nape_constraint_PivotJoint.__super__ = nape_constraint_Constraint;
nape_constraint_PivotJoint.prototype = $extend(nape_constraint_Constraint.prototype,{
	get_body1: function() {
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,set_body1: function(body1) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body1");
		var inbody1;
		if(body1 == null) inbody1 = null; else inbody1 = body1.zpp_inner;
		if(inbody1 != this.zpp_inner_zn.b1) {
			if(this.zpp_inner_zn.b1 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1) {
					if(this.zpp_inner_zn.b1 != null) this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b1.wake();
			}
			this.zpp_inner_zn.b1 = inbody1;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody1 != null && this.zpp_inner_zn.b2 != inbody1) {
				if(inbody1 != null) inbody1.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody1 != null) inbody1.wake();
			}
		}
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,set_body2: function(body2) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body2");
		var inbody2;
		if(body2 == null) inbody2 = null; else inbody2 = body2.zpp_inner;
		if(inbody2 != this.zpp_inner_zn.b2) {
			if(this.zpp_inner_zn.b2 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2) {
					if(this.zpp_inner_zn.b2 != null) this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b2.wake();
			}
			this.zpp_inner_zn.b2 = inbody2;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody2 != null && this.zpp_inner_zn.b1 != inbody2) {
				if(inbody2 != null) inbody2.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody2 != null) inbody2.wake();
			}
		}
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,get_anchor1: function() {
		if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
		return this.zpp_inner_zn.wrap_a1;
	}
	,__class__: nape_constraint_PivotJoint
});
var nape_constraint_PulleyJoint = function(body1,body2,body3,body4,anchor1,anchor2,anchor3,anchor4,jointMin,jointMax,ratio) {
	if(ratio == null) ratio = 1.0;
	this.zpp_inner_zn = null;
	this.zpp_inner_zn = new zpp_$nape_constraint_ZPP_$PulleyJoint();
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	nape_constraint_Constraint.zpp_internalAlloc = true;
	nape_constraint_Constraint.call(this);
	nape_constraint_Constraint.zpp_internalAlloc = false;
	this.set_body1(body1);
	this.set_body2(body2);
	this.set_body3(body3);
	this.set_body4(body4);
	if(anchor1 != null && anchor1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor1 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor1" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a1 == null) $this.zpp_inner_zn.setup_a1();
		$r = $this.zpp_inner_zn.wrap_a1;
		return $r;
	}(this))).set(anchor1);
	if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
	this.zpp_inner_zn.wrap_a1;
	if(anchor2 != null && anchor2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor2 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor2" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a2 == null) $this.zpp_inner_zn.setup_a2();
		$r = $this.zpp_inner_zn.wrap_a2;
		return $r;
	}(this))).set(anchor2);
	if(this.zpp_inner_zn.wrap_a2 == null) this.zpp_inner_zn.setup_a2();
	this.zpp_inner_zn.wrap_a2;
	if(anchor3 != null && anchor3.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor3 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor3" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a3 == null) $this.zpp_inner_zn.setup_a3();
		$r = $this.zpp_inner_zn.wrap_a3;
		return $r;
	}(this))).set(anchor3);
	if(this.zpp_inner_zn.wrap_a3 == null) this.zpp_inner_zn.setup_a3();
	this.zpp_inner_zn.wrap_a3;
	if(anchor4 != null && anchor4.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	if(anchor4 == null) throw new js__$Boot_HaxeError("Error: Constraint::" + "anchor4" + " cannot be null");
	((function($this) {
		var $r;
		if($this.zpp_inner_zn.wrap_a4 == null) $this.zpp_inner_zn.setup_a4();
		$r = $this.zpp_inner_zn.wrap_a4;
		return $r;
	}(this))).set(anchor4);
	if(this.zpp_inner_zn.wrap_a4 == null) this.zpp_inner_zn.setup_a4();
	this.zpp_inner_zn.wrap_a4;
	this.zpp_inner.immutable_midstep("PulleyJoint::ratio");
	if(ratio != ratio) throw new js__$Boot_HaxeError("Error: PulleyJoint::ratio cannot be NaN");
	if(this.zpp_inner_zn.ratio != ratio) {
		this.zpp_inner_zn.ratio = ratio;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.ratio;
	this.zpp_inner.immutable_midstep("PulleyJoint::jointMin");
	if(jointMin != jointMin) throw new js__$Boot_HaxeError("Error: PulleyJoint::jointMin cannot be NaN");
	if(jointMin < 0) throw new js__$Boot_HaxeError("Error: PulleyJoint::jointMin must be >= 0");
	if(this.zpp_inner_zn.jointMin != jointMin) {
		this.zpp_inner_zn.jointMin = jointMin;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.jointMin;
	this.zpp_inner.immutable_midstep("PulleyJoint::jointMax");
	if(jointMax != jointMax) throw new js__$Boot_HaxeError("Error: PulleyJoint::jointMax cannot be NaN");
	if(jointMax < 0) throw new js__$Boot_HaxeError("Error: PulleyJoint::jointMax must be >= 0");
	if(this.zpp_inner_zn.jointMax != jointMax) {
		this.zpp_inner_zn.jointMax = jointMax;
		this.zpp_inner.wake();
	}
	this.zpp_inner_zn.jointMax;
};
$hxClasses["nape.constraint.PulleyJoint"] = nape_constraint_PulleyJoint;
nape_constraint_PulleyJoint.__name__ = ["nape","constraint","PulleyJoint"];
nape_constraint_PulleyJoint.__super__ = nape_constraint_Constraint;
nape_constraint_PulleyJoint.prototype = $extend(nape_constraint_Constraint.prototype,{
	get_body1: function() {
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,set_body1: function(body1) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body1");
		var inbody1;
		if(body1 == null) inbody1 = null; else inbody1 = body1.zpp_inner;
		if(inbody1 != this.zpp_inner_zn.b1) {
			if(this.zpp_inner_zn.b1 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b3 != this.zpp_inner_zn.b1 && this.zpp_inner_zn.b4 != this.zpp_inner_zn.b1) {
					if(this.zpp_inner_zn.b1 != null) this.zpp_inner_zn.b1.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b1.wake();
			}
			this.zpp_inner_zn.b1 = inbody1;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody1 != null && this.zpp_inner_zn.b2 != inbody1 && this.zpp_inner_zn.b3 != inbody1 && this.zpp_inner_zn.b4 != inbody1) {
				if(inbody1 != null) inbody1.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody1 != null) inbody1.wake();
			}
		}
		if(this.zpp_inner_zn.b1 == null) return null; else return this.zpp_inner_zn.b1.outer;
	}
	,get_body2: function() {
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,set_body2: function(body2) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body2");
		var inbody2;
		if(body2 == null) inbody2 = null; else inbody2 = body2.zpp_inner;
		if(inbody2 != this.zpp_inner_zn.b2) {
			if(this.zpp_inner_zn.b2 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b3 != this.zpp_inner_zn.b2 && this.zpp_inner_zn.b4 != this.zpp_inner_zn.b2) {
					if(this.zpp_inner_zn.b2 != null) this.zpp_inner_zn.b2.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b2.wake();
			}
			this.zpp_inner_zn.b2 = inbody2;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody2 != null && this.zpp_inner_zn.b1 != inbody2 && this.zpp_inner_zn.b3 != inbody2 && this.zpp_inner_zn.b4 != inbody2) {
				if(inbody2 != null) inbody2.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody2 != null) inbody2.wake();
			}
		}
		if(this.zpp_inner_zn.b2 == null) return null; else return this.zpp_inner_zn.b2.outer;
	}
	,get_body3: function() {
		if(this.zpp_inner_zn.b3 == null) return null; else return this.zpp_inner_zn.b3.outer;
	}
	,set_body3: function(body3) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body3");
		var inbody3;
		if(body3 == null) inbody3 = null; else inbody3 = body3.zpp_inner;
		if(inbody3 != this.zpp_inner_zn.b3) {
			if(this.zpp_inner_zn.b3 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b3 && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b3 && this.zpp_inner_zn.b4 != this.zpp_inner_zn.b3) {
					if(this.zpp_inner_zn.b3 != null) this.zpp_inner_zn.b3.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b3.wake();
			}
			this.zpp_inner_zn.b3 = inbody3;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody3 != null && this.zpp_inner_zn.b1 != inbody3 && this.zpp_inner_zn.b2 != inbody3 && this.zpp_inner_zn.b4 != inbody3) {
				if(inbody3 != null) inbody3.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody3 != null) inbody3.wake();
			}
		}
		if(this.zpp_inner_zn.b3 == null) return null; else return this.zpp_inner_zn.b3.outer;
	}
	,get_body4: function() {
		if(this.zpp_inner_zn.b4 == null) return null; else return this.zpp_inner_zn.b4.outer;
	}
	,set_body4: function(body4) {
		this.zpp_inner.immutable_midstep("Constraint::" + "body4");
		var inbody4;
		if(body4 == null) inbody4 = null; else inbody4 = body4.zpp_inner;
		if(inbody4 != this.zpp_inner_zn.b4) {
			if(this.zpp_inner_zn.b4 != null) {
				if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && this.zpp_inner_zn.b1 != this.zpp_inner_zn.b4 && this.zpp_inner_zn.b2 != this.zpp_inner_zn.b4 && this.zpp_inner_zn.b3 != this.zpp_inner_zn.b4) {
					if(this.zpp_inner_zn.b4 != null) this.zpp_inner_zn.b4.constraints.remove(this.zpp_inner);
				}
				if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner_zn.b4.wake();
			}
			this.zpp_inner_zn.b4 = inbody4;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null && inbody4 != null && this.zpp_inner_zn.b1 != inbody4 && this.zpp_inner_zn.b2 != inbody4 && this.zpp_inner_zn.b3 != inbody4) {
				if(inbody4 != null) inbody4.constraints.add(this.zpp_inner);
			}
			if(this.zpp_inner.active && (this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) {
				this.zpp_inner.wake();
				if(inbody4 != null) inbody4.wake();
			}
		}
		if(this.zpp_inner_zn.b4 == null) return null; else return this.zpp_inner_zn.b4.outer;
	}
	,get_anchor1: function() {
		if(this.zpp_inner_zn.wrap_a1 == null) this.zpp_inner_zn.setup_a1();
		return this.zpp_inner_zn.wrap_a1;
	}
	,get_anchor2: function() {
		if(this.zpp_inner_zn.wrap_a2 == null) this.zpp_inner_zn.setup_a2();
		return this.zpp_inner_zn.wrap_a2;
	}
	,get_anchor3: function() {
		if(this.zpp_inner_zn.wrap_a3 == null) this.zpp_inner_zn.setup_a3();
		return this.zpp_inner_zn.wrap_a3;
	}
	,get_anchor4: function() {
		if(this.zpp_inner_zn.wrap_a4 == null) this.zpp_inner_zn.setup_a4();
		return this.zpp_inner_zn.wrap_a4;
	}
	,__class__: nape_constraint_PulleyJoint
});
var nape_dynamics_Arbiter = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_dynamics_ZPP_$Arbiter.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate Arbiter derp!");
};
$hxClasses["nape.dynamics.Arbiter"] = nape_dynamics_Arbiter;
nape_dynamics_Arbiter.__name__ = ["nape","dynamics","Arbiter"];
nape_dynamics_Arbiter.prototype = {
	get_collisionArbiter: function() {
		if(this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) return this.zpp_inner.colarb.outer_zn; else return null;
	}
	,get_state: function() {
		if(!this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
		var _g = this.zpp_inner.immState;
		var x = _g;
		if(x == (zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS)) {
			if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			return zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
		} else {
			var x1 = _g;
			switch(_g) {
			case 1:
				if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				return zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE;
			default:
				if(x1 == (zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS)) {
					if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					return zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
				} else {
					if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE = new nape_callbacks_PreFlag();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					return zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE_ONCE;
				}
			}
		}
	}
	,toString: function() {
		var ret;
		if(this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) ret = "CollisionArbiter"; else if(this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID) ret = "FluidArbiter"; else ret = "SensorArbiter";
		if(this.zpp_inner.cleared) return ret + "(object-pooled)"; else return ret + "(" + ((function($this) {
			var $r;
			if(!$this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			$r = $this.zpp_inner.ws1.id > $this.zpp_inner.ws2.id?$this.zpp_inner.ws2.outer:$this.zpp_inner.ws1.outer;
			return $r;
		}(this))).toString() + "|" + ((function($this) {
			var $r;
			if(!$this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			$r = $this.zpp_inner.ws1.id > $this.zpp_inner.ws2.id?$this.zpp_inner.ws1.outer:$this.zpp_inner.ws2.outer;
			return $r;
		}(this))).toString() + ")" + (this.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL?"[" + ["SD","DD"][this.zpp_inner.colarb.stat?0:1] + "]":"") + "<-" + this.get_state().toString();
	}
	,__class__: nape_dynamics_Arbiter
};
var nape_dynamics_ArbiterIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ArbiterList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Arbiter" + "Iterator derp!");
};
$hxClasses["nape.dynamics.ArbiterIterator"] = nape_dynamics_ArbiterIterator;
nape_dynamics_ArbiterIterator.__name__ = ["nape","dynamics","ArbiterIterator"];
nape_dynamics_ArbiterIterator.get = function(list) {
	var ret;
	if(nape_dynamics_ArbiterIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ArbiterList.internal = true;
		var ret1 = new nape_dynamics_ArbiterIterator();
		zpp_$nape_util_ZPP_$ArbiterList.internal = false;
		ret = ret1;
	} else {
		var r = nape_dynamics_ArbiterIterator.zpp_pool;
		nape_dynamics_ArbiterIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_dynamics_ArbiterIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.zpp_gl();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_dynamics_ArbiterIterator.zpp_pool;
			nape_dynamics_ArbiterIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_dynamics_ArbiterIterator
};
var nape_dynamics_ArbiterList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$ArbiterList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.dynamics.ArbiterList"] = nape_dynamics_ArbiterList;
nape_dynamics_ArbiterList.__name__ = ["nape","dynamics","ArbiterList"];
nape_dynamics_ArbiterList.prototype = {
	get_length: function() {
		return this.zpp_gl();
	}
	,zpp_gl: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = 0;
			var cx_ite = this.zpp_inner.inner.head;
			while(cx_ite != null) {
				var i = cx_ite.elt;
				if(i.active) this.zpp_inner.user_length++;
				cx_ite = cx_ite.next;
			}
		}
		return this.zpp_inner.user_length;
	}
	,zpp_vm: function() {
		this.zpp_inner.valmod();
	}
	,at: function(index) {
		this.zpp_vm();
		if(index < 0 || index >= this.zpp_gl()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.zpp_gl() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = 0;
			this.zpp_inner.at_ite = this.zpp_inner.inner.head;
			while(true) {
				var x = this.zpp_inner.at_ite.elt;
				if(x.active) break;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			while(true) {
				var x1 = this.zpp_inner.at_ite.elt;
				if(x1.active) break;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.elt.wrapper();
	}
	,iterator: function() {
		this.zpp_vm();
		return nape_dynamics_ArbiterIterator.get(this);
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g = this.iterator();
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_dynamics_ArbiterList
};
var nape_dynamics_ArbiterType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ArbiterType" + " derp!");
};
$hxClasses["nape.dynamics.ArbiterType"] = nape_dynamics_ArbiterType;
nape_dynamics_ArbiterType.__name__ = ["nape","dynamics","ArbiterType"];
nape_dynamics_ArbiterType.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION = new nape_dynamics_ArbiterType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION;
			return $r;
		}(this))) return "COLLISION"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR = new nape_dynamics_ArbiterType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR;
			return $r;
		}(this))) return "SENSOR"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID = new nape_dynamics_ArbiterType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID;
			return $r;
		}(this))) return "FLUID"; else return "";
	}
	,__class__: nape_dynamics_ArbiterType
};
var nape_dynamics_CollisionArbiter = function() {
	if(!zpp_$nape_dynamics_ZPP_$Arbiter.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate CollisionArbiter derp!");
	nape_dynamics_Arbiter.call(this);
};
$hxClasses["nape.dynamics.CollisionArbiter"] = nape_dynamics_CollisionArbiter;
nape_dynamics_CollisionArbiter.__name__ = ["nape","dynamics","CollisionArbiter"];
nape_dynamics_CollisionArbiter.__super__ = nape_dynamics_Arbiter;
nape_dynamics_CollisionArbiter.prototype = $extend(nape_dynamics_Arbiter.prototype,{
	get_contacts: function() {
		if(!this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
		if(this.zpp_inner.colarb.wrap_contacts == null) this.zpp_inner.colarb.setupcontacts();
		return this.zpp_inner.colarb.wrap_contacts;
	}
	,get_referenceEdge1: function() {
		if(!this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
		var edge = this.zpp_inner.colarb.__ref_edge1;
		if(edge != null && (!((function($this) {
			var $r;
			if(!$this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			$r = $this.zpp_inner.ws1.id > $this.zpp_inner.ws2.id?$this.zpp_inner.ws2.outer:$this.zpp_inner.ws1.outer;
			return $r;
		}(this))).isPolygon() || ((function($this) {
			var $r;
			if(!$this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			$r = $this.zpp_inner.ws1.id > $this.zpp_inner.ws2.id?$this.zpp_inner.ws2.outer:$this.zpp_inner.ws1.outer;
			return $r;
		}(this))).zpp_inner != edge.polygon)) edge = this.zpp_inner.colarb.__ref_edge2;
		if(edge == null) return null; else return edge.wrapper();
	}
	,get_referenceEdge2: function() {
		if(!this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
		var edge = this.zpp_inner.colarb.__ref_edge1;
		if(edge != null && (!((function($this) {
			var $r;
			if(!$this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			$r = $this.zpp_inner.ws1.id > $this.zpp_inner.ws2.id?$this.zpp_inner.ws1.outer:$this.zpp_inner.ws2.outer;
			return $r;
		}(this))).isPolygon() || ((function($this) {
			var $r;
			if(!$this.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
			$r = $this.zpp_inner.ws1.id > $this.zpp_inner.ws2.id?$this.zpp_inner.ws1.outer:$this.zpp_inner.ws2.outer;
			return $r;
		}(this))).zpp_inner != edge.polygon)) edge = this.zpp_inner.colarb.__ref_edge2;
		if(edge == null) return null; else return edge.wrapper();
	}
	,__class__: nape_dynamics_CollisionArbiter
});
var nape_dynamics_Contact = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_dynamics_ZPP_$Contact.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate Contact derp!");
};
$hxClasses["nape.dynamics.Contact"] = nape_dynamics_Contact;
nape_dynamics_Contact.__name__ = ["nape","dynamics","Contact"];
nape_dynamics_Contact.prototype = {
	get_position: function() {
		if(this.zpp_inner.inactiveme()) throw new js__$Boot_HaxeError("Error: Contact not currently in use");
		if(this.zpp_inner.wrap_position == null) this.zpp_inner.getposition();
		return this.zpp_inner.wrap_position;
	}
	,toString: function() {
		if(this.zpp_inner.arbiter == null || this.zpp_inner.arbiter.cleared) return "{object-pooled}"; else return "{Contact}";
	}
	,__class__: nape_dynamics_Contact
};
var nape_dynamics_ContactIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ContactList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Contact" + "Iterator derp!");
};
$hxClasses["nape.dynamics.ContactIterator"] = nape_dynamics_ContactIterator;
nape_dynamics_ContactIterator.__name__ = ["nape","dynamics","ContactIterator"];
nape_dynamics_ContactIterator.get = function(list) {
	var ret;
	if(nape_dynamics_ContactIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ContactList.internal = true;
		var ret1 = new nape_dynamics_ContactIterator();
		zpp_$nape_util_ZPP_$ContactList.internal = false;
		ret = ret1;
	} else {
		var r = nape_dynamics_ContactIterator.zpp_pool;
		nape_dynamics_ContactIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_dynamics_ContactIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_dynamics_ContactIterator.zpp_pool;
			nape_dynamics_ContactIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_dynamics_ContactIterator
};
var nape_dynamics_ContactList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$ContactList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.dynamics.ContactList"] = nape_dynamics_ContactList;
nape_dynamics_ContactList.__name__ = ["nape","dynamics","ContactList"];
nape_dynamics_ContactList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = 0;
			var cx_ite = this.zpp_inner.inner.next;
			while(cx_ite != null) {
				var i = cx_ite;
				if(i.active && i.arbiter.active) this.zpp_inner.user_length++;
				cx_ite = cx_ite.next;
			}
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = 0;
			this.zpp_inner.at_ite = this.zpp_inner.inner.next;
			while(true) {
				var x = this.zpp_inner.at_ite;
				if(x.active && x.arbiter.active) break;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			while(true) {
				var x1 = this.zpp_inner.at_ite;
				if(x1.active && x1.arbiter.active) break;
				this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
			}
		}
		return this.zpp_inner.at_ite.wrapper();
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_dynamics_ContactIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_dynamics_ContactList
};
var nape_dynamics_FluidArbiter = function() {
	if(!zpp_$nape_dynamics_ZPP_$Arbiter.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate FluidArbiter derp!");
	nape_dynamics_Arbiter.call(this);
};
$hxClasses["nape.dynamics.FluidArbiter"] = nape_dynamics_FluidArbiter;
nape_dynamics_FluidArbiter.__name__ = ["nape","dynamics","FluidArbiter"];
nape_dynamics_FluidArbiter.__super__ = nape_dynamics_Arbiter;
nape_dynamics_FluidArbiter.prototype = $extend(nape_dynamics_Arbiter.prototype,{
	__class__: nape_dynamics_FluidArbiter
});
var nape_dynamics_InteractionFilter = function(collisionGroup,collisionMask,sensorGroup,sensorMask,fluidGroup,fluidMask) {
	if(fluidMask == null) fluidMask = -1;
	if(fluidGroup == null) fluidGroup = 1;
	if(sensorMask == null) sensorMask = -1;
	if(sensorGroup == null) sensorGroup = 1;
	if(collisionMask == null) collisionMask = -1;
	if(collisionGroup == null) collisionGroup = 1;
	this.zpp_inner = null;
	if(zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool == null) this.zpp_inner = new zpp_$nape_dynamics_ZPP_$InteractionFilter(); else {
		this.zpp_inner = zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool;
		zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool = this.zpp_inner.next;
		this.zpp_inner.next = null;
	}
	null;
	this.zpp_inner.outer = this;
	if(this.zpp_inner.collisionGroup != collisionGroup) {
		this.zpp_inner.collisionGroup = collisionGroup;
		this.zpp_inner.invalidate();
	}
	this.zpp_inner.collisionGroup;
	if(this.zpp_inner.collisionMask != collisionMask) {
		this.zpp_inner.collisionMask = collisionMask;
		this.zpp_inner.invalidate();
	}
	this.zpp_inner.collisionMask;
	if(this.zpp_inner.sensorGroup != sensorGroup) {
		this.zpp_inner.sensorGroup = sensorGroup;
		this.zpp_inner.invalidate();
	}
	this.zpp_inner.sensorGroup;
	if(this.zpp_inner.sensorMask != sensorMask) {
		this.zpp_inner.sensorMask = sensorMask;
		this.zpp_inner.invalidate();
	}
	this.zpp_inner.sensorMask;
	if(this.zpp_inner.fluidGroup != fluidGroup) {
		this.zpp_inner.fluidGroup = fluidGroup;
		this.zpp_inner.invalidate();
	}
	this.zpp_inner.fluidGroup;
	if(this.zpp_inner.fluidMask != fluidMask) {
		this.zpp_inner.fluidMask = fluidMask;
		this.zpp_inner.invalidate();
	}
	this.zpp_inner.fluidMask;
};
$hxClasses["nape.dynamics.InteractionFilter"] = nape_dynamics_InteractionFilter;
nape_dynamics_InteractionFilter.__name__ = ["nape","dynamics","InteractionFilter"];
nape_dynamics_InteractionFilter.prototype = {
	set_collisionGroup: function(collisionGroup) {
		if(this.zpp_inner.collisionGroup != collisionGroup) {
			this.zpp_inner.collisionGroup = collisionGroup;
			this.zpp_inner.invalidate();
		}
		return this.zpp_inner.collisionGroup;
	}
	,set_collisionMask: function(collisionMask) {
		if(this.zpp_inner.collisionMask != collisionMask) {
			this.zpp_inner.collisionMask = collisionMask;
			this.zpp_inner.invalidate();
		}
		return this.zpp_inner.collisionMask;
	}
	,__class__: nape_dynamics_InteractionFilter
};
var nape_dynamics_InteractionGroup = function(ignore) {
	if(ignore == null) ignore = false;
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_dynamics_ZPP_$InteractionGroup();
	this.zpp_inner.outer = this;
	if(this.zpp_inner.ignore != ignore) {
		this.zpp_inner.invalidate(true);
		this.zpp_inner.ignore = ignore;
	}
	this.zpp_inner.ignore;
};
$hxClasses["nape.dynamics.InteractionGroup"] = nape_dynamics_InteractionGroup;
nape_dynamics_InteractionGroup.__name__ = ["nape","dynamics","InteractionGroup"];
nape_dynamics_InteractionGroup.prototype = {
	set_ignore: function(ignore) {
		if(this.zpp_inner.ignore != ignore) {
			this.zpp_inner.invalidate(true);
			this.zpp_inner.ignore = ignore;
		}
		return this.zpp_inner.ignore;
	}
	,toString: function() {
		var ret = "InteractionGroup";
		if(this.zpp_inner.ignore) ret += ":ignore";
		return ret;
	}
	,__class__: nape_dynamics_InteractionGroup
};
var nape_dynamics_InteractionGroupIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$InteractionGroupList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "InteractionGroup" + "Iterator derp!");
};
$hxClasses["nape.dynamics.InteractionGroupIterator"] = nape_dynamics_InteractionGroupIterator;
nape_dynamics_InteractionGroupIterator.__name__ = ["nape","dynamics","InteractionGroupIterator"];
nape_dynamics_InteractionGroupIterator.get = function(list) {
	var ret;
	if(nape_dynamics_InteractionGroupIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$InteractionGroupList.internal = true;
		var ret1 = new nape_dynamics_InteractionGroupIterator();
		zpp_$nape_util_ZPP_$InteractionGroupList.internal = false;
		ret = ret1;
	} else {
		var r = nape_dynamics_InteractionGroupIterator.zpp_pool;
		nape_dynamics_InteractionGroupIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_dynamics_InteractionGroupIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_dynamics_InteractionGroupIterator.zpp_pool;
			nape_dynamics_InteractionGroupIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_dynamics_InteractionGroupIterator
};
var nape_dynamics_InteractionGroupList = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.dynamics.InteractionGroupList"] = nape_dynamics_InteractionGroupList;
nape_dynamics_InteractionGroupList.__name__ = ["nape","dynamics","InteractionGroupList"];
nape_dynamics_InteractionGroupList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_dynamics_InteractionGroupIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_dynamics_InteractionGroupList
};
var nape_geom_AABB = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.AABB"] = nape_geom_AABB;
nape_geom_AABB.__name__ = ["nape","geom","AABB"];
nape_geom_AABB.prototype = {
	toString: function() {
		this.zpp_inner.validate();
		return this.zpp_inner.toString();
	}
	,__class__: nape_geom_AABB
};
var nape_geom_ConvexResult = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.ConvexResult"] = nape_geom_ConvexResult;
nape_geom_ConvexResult.__name__ = ["nape","geom","ConvexResult"];
nape_geom_ConvexResult.prototype = {
	toString: function() {
		if(this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		return "{ shape: " + Std.string((function($this) {
			var $r;
			if($this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
			$r = $this.zpp_inner.shape;
			return $r;
		}(this))) + " toi: " + (function($this) {
			var $r;
			if($this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
			$r = $this.zpp_inner.toiDistance;
			return $r;
		}(this)) + " }";
	}
	,__class__: nape_geom_ConvexResult
};
var nape_geom_ConvexResultIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ConvexResultList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ConvexResult" + "Iterator derp!");
};
$hxClasses["nape.geom.ConvexResultIterator"] = nape_geom_ConvexResultIterator;
nape_geom_ConvexResultIterator.__name__ = ["nape","geom","ConvexResultIterator"];
nape_geom_ConvexResultIterator.get = function(list) {
	var ret;
	if(nape_geom_ConvexResultIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ConvexResultList.internal = true;
		var ret1 = new nape_geom_ConvexResultIterator();
		zpp_$nape_util_ZPP_$ConvexResultList.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_ConvexResultIterator.zpp_pool;
		nape_geom_ConvexResultIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_ConvexResultIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_geom_ConvexResultIterator.zpp_pool;
			nape_geom_ConvexResultIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_ConvexResultIterator
};
var nape_geom_ConvexResultList = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.ConvexResultList"] = nape_geom_ConvexResultList;
nape_geom_ConvexResultList.__name__ = ["nape","geom","ConvexResultList"];
nape_geom_ConvexResultList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_geom_ConvexResultIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_ConvexResultList
};
var nape_geom_GeomPoly = function(vertices) {
	this.zpp_inner = null;
	this.zpp_pool = null;
	this.zpp_inner = new zpp_$nape_geom_ZPP_$GeomPoly(this);
	if(vertices != null) {
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv = vertices;
			var _g = 0;
			while(_g < lv.length) {
				var vite = lv[_g];
				++_g;
				if(vite == null) throw new js__$Boot_HaxeError("Error: Array<Vec2> contains null objects");
				if(!js_Boot.__instanceof(vite,nape_geom_Vec2)) throw new js__$Boot_HaxeError("Error: Array<Vec2> contains non Vec2 objects");
				var v = vite;
				if(v != null && v.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				var obj = zpp_$nape_geom_ZPP_$GeomVert.get((function($this) {
					var $r;
					if(v != null && v.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v.zpp_inner.validate();
					$r = v.zpp_inner.x;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(v != null && v.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v.zpp_inner.validate();
					$r = v.zpp_inner.y;
					return $r;
				}(this)));
				if(this.zpp_inner.vertices == null) this.zpp_inner.vertices = obj.prev = obj.next = obj; else {
					obj.prev = this.zpp_inner.vertices;
					obj.next = this.zpp_inner.vertices.next;
					this.zpp_inner.vertices.next.prev = obj;
					this.zpp_inner.vertices.next = obj;
				}
				this.zpp_inner.vertices = obj;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv1 = vertices;
			var _g1 = lv1.iterator();
			while(_g1.hasNext()) {
				var v1;
				_g1.zpp_critical = false;
				v1 = _g1.zpp_inner.at(_g1.zpp_i++);
				if(v1 == null) throw new js__$Boot_HaxeError("Error: Vec2List contains null objects");
				if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				var obj1 = zpp_$nape_geom_ZPP_$GeomVert.get((function($this) {
					var $r;
					if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v1.zpp_inner.validate();
					$r = v1.zpp_inner.x;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v1.zpp_inner.validate();
					$r = v1.zpp_inner.y;
					return $r;
				}(this)));
				if(this.zpp_inner.vertices == null) this.zpp_inner.vertices = obj1.prev = obj1.next = obj1; else {
					obj1.prev = this.zpp_inner.vertices;
					obj1.next = this.zpp_inner.vertices.next;
					this.zpp_inner.vertices.next.prev = obj1;
					this.zpp_inner.vertices.next = obj1;
				}
				this.zpp_inner.vertices = obj1;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_GeomPoly)) {
			var lv2 = vertices;
			if(lv2 != null && lv2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
			var verts = lv2.zpp_inner.vertices;
			if(verts != null) {
				var vite1 = verts;
				do {
					var v2 = nape_geom_Vec2.get(vite1.x,vite1.y,null);
					vite1 = vite1.next;
					var obj2 = zpp_$nape_geom_ZPP_$GeomVert.get((function($this) {
						var $r;
						if(v2 != null && v2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						v2.zpp_inner.validate();
						$r = v2.zpp_inner.x;
						return $r;
					}(this)),(function($this) {
						var $r;
						if(v2 != null && v2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						v2.zpp_inner.validate();
						$r = v2.zpp_inner.y;
						return $r;
					}(this)));
					if(this.zpp_inner.vertices == null) this.zpp_inner.vertices = obj2.prev = obj2.next = obj2; else {
						obj2.prev = this.zpp_inner.vertices;
						obj2.next = this.zpp_inner.vertices.next;
						this.zpp_inner.vertices.next.prev = obj2;
						this.zpp_inner.vertices.next = obj2;
					}
					this.zpp_inner.vertices = obj2;
					v2.dispose();
				} while(vite1 != verts);
			}
		} else throw new js__$Boot_HaxeError("Error: Invalid type for polygon object, should be Array<Vec2>, Vec2List, GeomPoly or for flash10+ flash.Vector<Vec2>");
		this.skipForward(1);
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv3 = vertices;
			var i = 0;
			while(i < lv3.length) {
				var cur = lv3[i];
				if(cur.zpp_inner.weak?(function($this) {
					var $r;
					cur.dispose();
					$r = true;
					return $r;
				}(this)):false) {
					lv3.splice(i,1);
					continue;
				}
				i++;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv4 = vertices;
			if(lv4.zpp_inner._validate != null) lv4.zpp_inner._validate();
			var ins = lv4.zpp_inner.inner;
			var pre = null;
			var cur1 = ins.head;
			while(cur1 != null) {
				var x = cur1.elt;
				if(x.outer.zpp_inner.weak) {
					cur1 = ins.erase(pre);
					if(x.outer.zpp_inner.weak) {
						x.outer.dispose();
						true;
					} else false;
				} else {
					pre = cur1;
					cur1 = cur1.next;
				}
			}
		}
	}
};
$hxClasses["nape.geom.GeomPoly"] = nape_geom_GeomPoly;
nape_geom_GeomPoly.__name__ = ["nape","geom","GeomPoly"];
nape_geom_GeomPoly.get = function(vertices) {
	var ret;
	if(zpp_$nape_util_ZPP_$PubPool.poolGeomPoly == null) ret = new nape_geom_GeomPoly(); else {
		ret = zpp_$nape_util_ZPP_$PubPool.poolGeomPoly;
		zpp_$nape_util_ZPP_$PubPool.poolGeomPoly = ret.zpp_pool;
		ret.zpp_pool = null;
		ret.zpp_disp = false;
		if(ret == zpp_$nape_util_ZPP_$PubPool.nextGeomPoly) zpp_$nape_util_ZPP_$PubPool.nextGeomPoly = null;
	}
	if(vertices != null) {
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv = vertices;
			var _g = 0;
			while(_g < lv.length) {
				var vite = lv[_g];
				++_g;
				if(vite == null) throw new js__$Boot_HaxeError("Error: Array<Vec2> contains null objects");
				if(!js_Boot.__instanceof(vite,nape_geom_Vec2)) throw new js__$Boot_HaxeError("Error: Array<Vec2> contains non Vec2 objects");
				var v = vite;
				if(v != null && v.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				var obj = zpp_$nape_geom_ZPP_$GeomVert.get((function($this) {
					var $r;
					if(v != null && v.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v.zpp_inner.validate();
					$r = v.zpp_inner.x;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(v != null && v.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v.zpp_inner.validate();
					$r = v.zpp_inner.y;
					return $r;
				}(this)));
				if(ret.zpp_inner.vertices == null) ret.zpp_inner.vertices = obj.prev = obj.next = obj; else {
					obj.prev = ret.zpp_inner.vertices;
					obj.next = ret.zpp_inner.vertices.next;
					ret.zpp_inner.vertices.next.prev = obj;
					ret.zpp_inner.vertices.next = obj;
				}
				ret.zpp_inner.vertices = obj;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv1 = vertices;
			var _g1 = lv1.iterator();
			while(_g1.hasNext()) {
				var v1;
				_g1.zpp_critical = false;
				v1 = _g1.zpp_inner.at(_g1.zpp_i++);
				if(v1 == null) throw new js__$Boot_HaxeError("Error: Vec2List contains null objects");
				if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				var obj1 = zpp_$nape_geom_ZPP_$GeomVert.get((function($this) {
					var $r;
					if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v1.zpp_inner.validate();
					$r = v1.zpp_inner.x;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					v1.zpp_inner.validate();
					$r = v1.zpp_inner.y;
					return $r;
				}(this)));
				if(ret.zpp_inner.vertices == null) ret.zpp_inner.vertices = obj1.prev = obj1.next = obj1; else {
					obj1.prev = ret.zpp_inner.vertices;
					obj1.next = ret.zpp_inner.vertices.next;
					ret.zpp_inner.vertices.next.prev = obj1;
					ret.zpp_inner.vertices.next = obj1;
				}
				ret.zpp_inner.vertices = obj1;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_GeomPoly)) {
			var lv2 = vertices;
			if(lv2 != null && lv2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
			var verts = lv2.zpp_inner.vertices;
			if(verts != null) {
				var vite1 = verts;
				do {
					var v2 = nape_geom_Vec2.get(vite1.x,vite1.y,null);
					vite1 = vite1.next;
					var obj2 = zpp_$nape_geom_ZPP_$GeomVert.get((function($this) {
						var $r;
						if(v2 != null && v2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						v2.zpp_inner.validate();
						$r = v2.zpp_inner.x;
						return $r;
					}(this)),(function($this) {
						var $r;
						if(v2 != null && v2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						v2.zpp_inner.validate();
						$r = v2.zpp_inner.y;
						return $r;
					}(this)));
					if(ret.zpp_inner.vertices == null) ret.zpp_inner.vertices = obj2.prev = obj2.next = obj2; else {
						obj2.prev = ret.zpp_inner.vertices;
						obj2.next = ret.zpp_inner.vertices.next;
						ret.zpp_inner.vertices.next.prev = obj2;
						ret.zpp_inner.vertices.next = obj2;
					}
					ret.zpp_inner.vertices = obj2;
					v2.dispose();
				} while(vite1 != verts);
			}
		} else throw new js__$Boot_HaxeError("Error: Invalid type for polygon object, should be Array<Vec2>, Vec2List, GeomPoly or for flash10+ flash.Vector<Vec2>");
		ret.skipForward(1);
		if((vertices instanceof Array) && vertices.__enum__ == null) {
			var lv3 = vertices;
			var i = 0;
			while(i < lv3.length) {
				var cur = lv3[i];
				if(cur.zpp_inner.weak?(function($this) {
					var $r;
					cur.dispose();
					$r = true;
					return $r;
				}(this)):false) {
					lv3.splice(i,1);
					continue;
				}
				i++;
			}
		} else if(js_Boot.__instanceof(vertices,nape_geom_Vec2List)) {
			var lv4 = vertices;
			if(lv4.zpp_inner._validate != null) lv4.zpp_inner._validate();
			var ins = lv4.zpp_inner.inner;
			var pre = null;
			var cur1 = ins.head;
			while(cur1 != null) {
				var x = cur1.elt;
				if(x.outer.zpp_inner.weak) {
					cur1 = ins.erase(pre);
					if(x.outer.zpp_inner.weak) {
						x.outer.dispose();
						true;
					} else false;
				} else {
					pre = cur1;
					cur1 = cur1.next;
				}
			}
		}
	}
	return ret;
};
nape_geom_GeomPoly.prototype = {
	skipForward: function(times) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
		if(!(this.zpp_inner.vertices == null)) {
			if(times > 0) while(times-- > 0) this.zpp_inner.vertices = this.zpp_inner.vertices.next; else if(times < 0) while(times++ < 0) this.zpp_inner.vertices = this.zpp_inner.vertices.prev;
		}
		return this;
	}
	,toString: function() {
		var ret = "GeomPoly[";
		var F = this.zpp_inner.vertices;
		var L = this.zpp_inner.vertices;
		if(F != null) {
			var nite = F;
			do {
				var v = nite;
				if(v != this.zpp_inner.vertices) ret += ",";
				ret += "{" + v.x + "," + v.y + "}";
				nite = nite.next;
			} while(nite != L);
		}
		return ret + "]";
	}
	,convexDecomposition: function(delaunay,output) {
		if(delaunay == null) delaunay = false;
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
		if(this.zpp_inner.vertices == null || this.zpp_inner.vertices.next == null || this.zpp_inner.vertices.prev == this.zpp_inner.vertices.next) throw new js__$Boot_HaxeError("Error: Cannot decompose a degenerate polygon");
		var poly = zpp_$nape_geom_ZPP_$Monotone.decompose(this.zpp_inner.vertices,(function($this) {
			var $r;
			if(zpp_$nape_geom_ZPP_$Monotone.sharedPPoly == null) zpp_$nape_geom_ZPP_$Monotone.sharedPPoly = new zpp_$nape_geom_ZPP_$PartitionedPoly();
			$r = zpp_$nape_geom_ZPP_$Monotone.sharedPPoly;
			return $r;
		}(this)));
		var MPs = poly.extract_partitions((function($this) {
			var $r;
			if(zpp_$nape_geom_ZPP_$PartitionedPoly.sharedPPList == null) zpp_$nape_geom_ZPP_$PartitionedPoly.sharedPPList = new zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly();
			$r = zpp_$nape_geom_ZPP_$PartitionedPoly.sharedPPList;
			return $r;
		}(this)));
		var ret;
		if(output == null) ret = new nape_geom_GeomPolyList(); else ret = output;
		while(!(MPs.head == null)) {
			var MP = MPs.pop_unsafe();
			zpp_$nape_geom_ZPP_$Triangular.triangulate(MP);
			if(delaunay) zpp_$nape_geom_ZPP_$Triangular.optimise(MP);
			zpp_$nape_geom_ZPP_$Convex.optimise(MP);
			var MQs = MP.extract((function($this) {
				var $r;
				if(zpp_$nape_geom_ZPP_$PartitionedPoly.sharedGVList == null) zpp_$nape_geom_ZPP_$PartitionedPoly.sharedGVList = new zpp_$nape_util_ZNPList_$ZPP_$GeomVert();
				$r = zpp_$nape_geom_ZPP_$PartitionedPoly.sharedGVList;
				return $r;
			}(this)));
			var o = MP;
			o.next = zpp_$nape_geom_ZPP_$PartitionedPoly.zpp_pool;
			zpp_$nape_geom_ZPP_$PartitionedPoly.zpp_pool = o;
			while(!(MQs.head == null)) {
				var MQ = MQs.pop_unsafe();
				var x = nape_geom_GeomPoly.get();
				x.zpp_inner.vertices = MQ;
				if(ret.zpp_inner.reverse_flag) ret.push(x); else ret.unshift(x);
			}
		}
		return ret;
	}
	,__class__: nape_geom_GeomPoly
};
var nape_geom_GeomPolyIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$GeomPolyList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "GeomPoly" + "Iterator derp!");
};
$hxClasses["nape.geom.GeomPolyIterator"] = nape_geom_GeomPolyIterator;
nape_geom_GeomPolyIterator.__name__ = ["nape","geom","GeomPolyIterator"];
nape_geom_GeomPolyIterator.get = function(list) {
	var ret;
	if(nape_geom_GeomPolyIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$GeomPolyList.internal = true;
		var ret1 = new nape_geom_GeomPolyIterator();
		zpp_$nape_util_ZPP_$GeomPolyList.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_GeomPolyIterator.zpp_pool;
		nape_geom_GeomPolyIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_GeomPolyIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_geom_GeomPolyIterator.zpp_pool;
			nape_geom_GeomPolyIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_GeomPolyIterator
};
var nape_geom_GeomPolyList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$GeomPolyList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.geom.GeomPolyList"] = nape_geom_GeomPolyList;
nape_geom_GeomPolyList.__name__ = ["nape","geom","GeomPolyList"];
nape_geom_GeomPolyList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,unshift: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			} else this.zpp_inner.inner.add(obj.zpp_inner);
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_geom_GeomPolyIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,foreach: function(lambda) {
		if(lambda == null) throw new js__$Boot_HaxeError("Error: Cannot execute null on list elements");
		var it;
		this.zpp_inner.valmod();
		it = nape_geom_GeomPolyIterator.get(this);
		while(it.hasNext()) try {
			lambda((function($this) {
				var $r;
				it.zpp_critical = false;
				$r = it.zpp_inner.at(it.zpp_i++);
				return $r;
			}(this)));
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			it.zpp_next = nape_geom_GeomPolyIterator.zpp_pool;
			nape_geom_GeomPolyIterator.zpp_pool = it;
			it.zpp_inner = null;
			break;
		}
		return this;
	}
	,__class__: nape_geom_GeomPolyList
};
var nape_geom_GeomVertexIterator = function() {
	if(!zpp_$nape_geom_ZPP_$GeomVertexIterator.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate GeomVertexIterator");
};
$hxClasses["nape.geom.GeomVertexIterator"] = nape_geom_GeomVertexIterator;
nape_geom_GeomVertexIterator.__name__ = ["nape","geom","GeomVertexIterator"];
nape_geom_GeomVertexIterator.prototype = {
	hasNext: function() {
		if(this.zpp_inner == null) throw new js__$Boot_HaxeError("Error: Iterator has been disposed");
		var ret = this.zpp_inner.ptr != this.zpp_inner.start || this.zpp_inner.first;
		this.zpp_inner.first = false;
		if(!ret) {
			var o = this.zpp_inner;
			o.outer.zpp_inner = null;
			o.ptr = o.start = null;
			o.next = zpp_$nape_geom_ZPP_$GeomVertexIterator.zpp_pool;
			zpp_$nape_geom_ZPP_$GeomVertexIterator.zpp_pool = o;
		}
		return ret;
	}
	,next: function() {
		if(this.zpp_inner == null) throw new js__$Boot_HaxeError("Error: Iterator has been disposed");
		var ret = this.zpp_inner.ptr.wrapper();
		if(this.zpp_inner.forward) this.zpp_inner.ptr = this.zpp_inner.ptr.next; else this.zpp_inner.ptr = this.zpp_inner.ptr.prev;
		return ret;
	}
	,__class__: nape_geom_GeomVertexIterator
};
var nape_geom_Mat23 = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.Mat23"] = nape_geom_Mat23;
nape_geom_Mat23.__name__ = ["nape","geom","Mat23"];
nape_geom_Mat23.prototype = {
	toString: function() {
		return "{ a: " + this.zpp_inner.a + " b: " + this.zpp_inner.b + " c: " + this.zpp_inner.c + " d: " + this.zpp_inner.d + " tx: " + this.zpp_inner.tx + " ty: " + this.zpp_inner.ty + " }";
	}
	,__class__: nape_geom_Mat23
};
var nape_geom_MatMN = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.MatMN"] = nape_geom_MatMN;
nape_geom_MatMN.__name__ = ["nape","geom","MatMN"];
nape_geom_MatMN.prototype = {
	toString: function() {
		var ret = "{ ";
		var fst = true;
		var _g1 = 0;
		var _g = this.zpp_inner.m;
		while(_g1 < _g) {
			var i = _g1++;
			if(!fst) ret += "; ";
			fst = false;
			var _g3 = 0;
			var _g2 = this.zpp_inner.n;
			while(_g3 < _g2) {
				var j = _g3++;
				ret += (function($this) {
					var $r;
					if(i < 0 || j < 0 || i >= $this.zpp_inner.m || j >= $this.zpp_inner.n) throw new js__$Boot_HaxeError("Error: MatMN indices out of range");
					$r = $this.zpp_inner.x[i * $this.zpp_inner.n + j];
					return $r;
				}(this)) + " ";
			}
		}
		ret += "}";
		return ret;
	}
	,__class__: nape_geom_MatMN
};
var nape_geom_RayResult = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.RayResult"] = nape_geom_RayResult;
nape_geom_RayResult.__name__ = ["nape","geom","RayResult"];
nape_geom_RayResult.prototype = {
	toString: function() {
		if(this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
		return "{ shape: " + Std.string((function($this) {
			var $r;
			if($this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
			$r = $this.zpp_inner.shape;
			return $r;
		}(this))) + " distance: " + (function($this) {
			var $r;
			if($this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
			$r = $this.zpp_inner.toiDistance;
			return $r;
		}(this)) + " ?inner: " + Std.string((function($this) {
			var $r;
			if($this.zpp_inner.next != null) throw new js__$Boot_HaxeError("Error: This object has been disposed of and cannot be used");
			$r = $this.zpp_inner.inner;
			return $r;
		}(this))) + " }";
	}
	,__class__: nape_geom_RayResult
};
var nape_geom_RayResultIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$RayResultList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "RayResult" + "Iterator derp!");
};
$hxClasses["nape.geom.RayResultIterator"] = nape_geom_RayResultIterator;
nape_geom_RayResultIterator.__name__ = ["nape","geom","RayResultIterator"];
nape_geom_RayResultIterator.get = function(list) {
	var ret;
	if(nape_geom_RayResultIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$RayResultList.internal = true;
		var ret1 = new nape_geom_RayResultIterator();
		zpp_$nape_util_ZPP_$RayResultList.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_RayResultIterator.zpp_pool;
		nape_geom_RayResultIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_RayResultIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_geom_RayResultIterator.zpp_pool;
			nape_geom_RayResultIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_RayResultIterator
};
var nape_geom_RayResultList = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.RayResultList"] = nape_geom_RayResultList;
nape_geom_RayResultList.__name__ = ["nape","geom","RayResultList"];
nape_geom_RayResultList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_geom_RayResultIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_RayResultList
};
var nape_geom_Vec2 = function(x,y) {
	if(y == null) y = 0;
	if(x == null) x = 0;
	this.zpp_pool = null;
	this.zpp_inner = null;
	if(x != x || y != y) throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
	this.zpp_inner = zpp_$nape_geom_ZPP_$Vec2.get(x,y,null);
	this.zpp_inner.outer = this;
};
$hxClasses["nape.geom.Vec2"] = nape_geom_Vec2;
nape_geom_Vec2.__name__ = ["nape","geom","Vec2"];
nape_geom_Vec2.get = function(x,y,weak) {
	if(weak == null) weak = false;
	if(y == null) y = 0;
	if(x == null) x = 0;
	if(x != x || y != y) throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
	var ret;
	if(zpp_$nape_util_ZPP_$PubPool.poolVec2 == null) ret = new nape_geom_Vec2(); else {
		ret = zpp_$nape_util_ZPP_$PubPool.poolVec2;
		zpp_$nape_util_ZPP_$PubPool.poolVec2 = ret.zpp_pool;
		ret.zpp_pool = null;
		ret.zpp_disp = false;
		if(ret == zpp_$nape_util_ZPP_$PubPool.nextVec2) zpp_$nape_util_ZPP_$PubPool.nextVec2 = null;
	}
	if(ret.zpp_inner == null) {
		ret.zpp_inner = zpp_$nape_geom_ZPP_$Vec2.get(x,y,null);
		ret.zpp_inner.outer = ret;
	} else {
		if(ret != null && ret.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		ret.zpp_inner.immutable();
		if(x != x || y != y) throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
		if(!((function($this) {
			var $r;
			if(ret != null && ret.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			ret.zpp_inner.validate();
			$r = ret.zpp_inner.x;
			return $r;
		}(this)) == x && (function($this) {
			var $r;
			if(ret != null && ret.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			ret.zpp_inner.validate();
			$r = ret.zpp_inner.y;
			return $r;
		}(this)) == y)) {
			ret.zpp_inner.x = x;
			ret.zpp_inner.y = y;
			ret.zpp_inner.invalidate();
		}
		ret;
	}
	ret.zpp_inner.weak = weak;
	return ret;
};
nape_geom_Vec2.prototype = {
	dispose: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if(this.zpp_inner._inuse) throw new js__$Boot_HaxeError("Error: This Vec2 is not disposable");
		var inner = this.zpp_inner;
		this.zpp_inner.outer = null;
		this.zpp_inner = null;
		var o = this;
		o.zpp_pool = null;
		if(zpp_$nape_util_ZPP_$PubPool.nextVec2 != null) zpp_$nape_util_ZPP_$PubPool.nextVec2.zpp_pool = o; else zpp_$nape_util_ZPP_$PubPool.poolVec2 = o;
		zpp_$nape_util_ZPP_$PubPool.nextVec2 = o;
		o.zpp_disp = true;
		var o1 = inner;
		if(o1.outer != null) {
			o1.outer.zpp_inner = null;
			o1.outer = null;
		}
		o1._isimmutable = null;
		o1._validate = null;
		o1._invalidate = null;
		o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
	}
	,copy: function(weak) {
		if(weak == null) weak = false;
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		return nape_geom_Vec2.get((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)),(function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)),weak);
	}
	,get_x: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.validate();
		return this.zpp_inner.x;
	}
	,set_x: function(x) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) != x) {
			if(x != x) throw new js__$Boot_HaxeError("Error: Vec2::" + "x" + " cannot be NaN");
			this.zpp_inner.x = x;
			this.zpp_inner.invalidate();
		}
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.validate();
		return this.zpp_inner.x;
	}
	,get_y: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.validate();
		return this.zpp_inner.y;
	}
	,set_y: function(y) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) != y) {
			if(y != y) throw new js__$Boot_HaxeError("Error: Vec2::" + "y" + " cannot be NaN");
			this.zpp_inner.y = y;
			this.zpp_inner.invalidate();
		}
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.validate();
		return this.zpp_inner.y;
	}
	,get_length: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		return Math.sqrt((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)));
	}
	,set_length: function(length) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if(length != length) throw new js__$Boot_HaxeError("Error: Vec2::length cannot be NaN");
		if((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) == 0) throw new js__$Boot_HaxeError("Error: Cannot set length of a zero vector");
		var t = length / Math.sqrt((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)));
		var _g = this;
		_g.set_x((function($this) {
			var $r;
			if(_g != null && _g.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			_g.zpp_inner.validate();
			$r = _g.zpp_inner.x;
			return $r;
		}(this)) * t);
		var _g1 = this;
		_g1.set_y((function($this) {
			var $r;
			if(_g1 != null && _g1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			_g1.zpp_inner.validate();
			$r = _g1.zpp_inner.y;
			return $r;
		}(this)) * t);
		this.zpp_inner.invalidate();
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		return Math.sqrt((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)));
	}
	,lsq: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		return (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this));
	}
	,set: function(vector) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if(vector == null) throw new js__$Boot_HaxeError("Error: Cannot assign null Vec2");
		var ret = this.setxy((function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.x;
			return $r;
		}(this)),(function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.y;
			return $r;
		}(this)));
		if(vector.zpp_inner.weak) {
			vector.dispose();
			true;
		} else false;
		return ret;
	}
	,setxy: function(x,y) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if(x != x || y != y) throw new js__$Boot_HaxeError("Error: Vec2 components cannot be NaN");
		if(!((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) == x && (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) == y)) {
			this.zpp_inner.x = x;
			this.zpp_inner.y = y;
			this.zpp_inner.invalidate();
		}
		return this;
	}
	,subeq: function(vector) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if(vector == null) throw new js__$Boot_HaxeError("Error: Cannot subtract null vectors");
		this.setxy((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) - (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.x;
			return $r;
		}(this)),(function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) - (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.y;
			return $r;
		}(this)));
		if(vector.zpp_inner.weak) {
			vector.dispose();
			true;
		} else false;
		return this;
	}
	,muleq: function(scalar) {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.immutable();
		if(scalar != scalar) throw new js__$Boot_HaxeError("Error: Cannot multiply with NaN");
		return this.setxy((function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) * scalar,(function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) * scalar);
	}
	,toString: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		this.zpp_inner.validate();
		return this.zpp_inner.toString();
	}
	,__class__: nape_geom_Vec2
};
var nape_geom_Vec2Iterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$Vec2List.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Vec2" + "Iterator derp!");
};
$hxClasses["nape.geom.Vec2Iterator"] = nape_geom_Vec2Iterator;
nape_geom_Vec2Iterator.__name__ = ["nape","geom","Vec2Iterator"];
nape_geom_Vec2Iterator.get = function(list) {
	var ret;
	if(nape_geom_Vec2Iterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$Vec2List.internal = true;
		var ret1 = new nape_geom_Vec2Iterator();
		zpp_$nape_util_ZPP_$Vec2List.internal = false;
		ret = ret1;
	} else {
		var r = nape_geom_Vec2Iterator.zpp_pool;
		nape_geom_Vec2Iterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_geom_Vec2Iterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.zpp_gl();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_geom_Vec2Iterator.zpp_pool;
			nape_geom_Vec2Iterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_geom_Vec2Iterator
};
var nape_geom_Vec2List = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$Vec2List();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.geom.Vec2List"] = nape_geom_Vec2List;
nape_geom_Vec2List.__name__ = ["nape","geom","Vec2List"];
nape_geom_Vec2List.prototype = {
	zpp_gl: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,zpp_vm: function() {
		this.zpp_inner.valmod();
	}
	,at: function(index) {
		this.zpp_vm();
		if(index < 0 || index >= this.zpp_gl()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.zpp_gl() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.wrapper();
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Vec2" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_vm();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.empty()) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.zpp_gl() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,empty: function() {
		return this.zpp_gl() == 0;
	}
	,iterator: function() {
		this.zpp_vm();
		return nape_geom_Vec2Iterator.get(this);
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g = this.iterator();
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_geom_Vec2List
};
var nape_geom_Vec3 = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.geom.Vec3"] = nape_geom_Vec3;
nape_geom_Vec3.__name__ = ["nape","geom","Vec3"];
nape_geom_Vec3.prototype = {
	toString: function() {
		if(this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
		return "{ x: " + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.x;
			return $r;
		}(this)) + " y: " + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.y;
			return $r;
		}(this)) + " z: " + (function($this) {
			var $r;
			if($this.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec3" + " has been disposed and cannot be used!");
			$this.zpp_inner.validate();
			$r = $this.zpp_inner.z;
			return $r;
		}(this)) + " }";
	}
	,__class__: nape_geom_Vec3
};
var nape_geom_Winding = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Winding" + " derp!");
};
$hxClasses["nape.geom.Winding"] = nape_geom_Winding;
nape_geom_Winding.__name__ = ["nape","geom","Winding"];
nape_geom_Winding.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.Winding_UNDEFINED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Winding_UNDEFINED = new nape_geom_Winding();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.Winding_UNDEFINED;
			return $r;
		}(this))) return "UNDEFINED"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.Winding_CLOCKWISE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Winding_CLOCKWISE = new nape_geom_Winding();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.Winding_CLOCKWISE;
			return $r;
		}(this))) return "CLOCKWISE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.Winding_ANTICLOCKWISE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Winding_ANTICLOCKWISE = new nape_geom_Winding();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.Winding_ANTICLOCKWISE;
			return $r;
		}(this))) return "ANTICLOCKWISE"; else return "";
	}
	,__class__: nape_geom_Winding
};
var nape_phys_Interactor = function() {
	this.zpp_inner_i = null;
	if(!nape_phys_Interactor.zpp_internalAlloc) throw new js__$Boot_HaxeError("Error: Cannot instantiate an Interactor, only Shape/Body/Compound");
};
$hxClasses["nape.phys.Interactor"] = nape_phys_Interactor;
nape_phys_Interactor.__name__ = ["nape","phys","Interactor"];
nape_phys_Interactor.prototype = {
	get_userData: function() {
		if(this.zpp_inner_i.userData == null) this.zpp_inner_i.userData = { };
		return this.zpp_inner_i.userData;
	}
	,get_castBody: function() {
		if(this.zpp_inner_i.ibody != null) return this.zpp_inner_i.ibody.outer; else return null;
	}
	,set_group: function(group) {
		this.zpp_inner_i.immutable_midstep("Interactor::group");
		this.zpp_inner_i.setGroup(group == null?null:group.zpp_inner);
		if(this.zpp_inner_i.group == null) return null; else return this.zpp_inner_i.group.outer;
	}
	,get_cbTypes: function() {
		if(this.zpp_inner_i.wrap_cbTypes == null) this.zpp_inner_i.setupcbTypes();
		return this.zpp_inner_i.wrap_cbTypes;
	}
	,toString: function() {
		return "";
	}
	,__class__: nape_phys_Interactor
};
var nape_phys_Body = function(type,position) {
	this.zpp_inner = null;
	nape_phys_Interactor.zpp_internalAlloc = true;
	nape_phys_Interactor.call(this);
	nape_phys_Interactor.zpp_internalAlloc = false;
	this.zpp_inner = new zpp_$nape_phys_ZPP_$Body();
	this.zpp_inner.outer = this;
	this.zpp_inner.outer_i = this;
	this.zpp_inner_i = this.zpp_inner;
	if(position != null) {
		if(position != null && position.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(position != null && position.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		position.zpp_inner.validate();
		this.zpp_inner.posx = position.zpp_inner.x;
		if(position != null && position.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		position.zpp_inner.validate();
		this.zpp_inner.posy = position.zpp_inner.y;
	} else {
		this.zpp_inner.posx = 0;
		this.zpp_inner.posy = 0;
	}
	this.set_type(type == null?(function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC;
		return $r;
	}(this)):type);
	if(position != null) {
		if(position.zpp_inner.weak) {
			position.dispose();
			true;
		} else false;
	}
	this.zpp_inner_i.insert_cbtype(zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY.zpp_inner);
};
$hxClasses["nape.phys.Body"] = nape_phys_Body;
nape_phys_Body.__name__ = ["nape","phys","Body"];
nape_phys_Body.__super__ = nape_phys_Interactor;
nape_phys_Body.prototype = $extend(nape_phys_Interactor.prototype,{
	set_type: function(type) {
		this.zpp_inner.immutable_midstep("Body::type");
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if(zpp_$nape_phys_ZPP_$Body.types[this.zpp_inner.type] != type) {
			if(type == null) throw new js__$Boot_HaxeError("Error: Cannot use null BodyType");
			var ntype;
			if(type == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC;
				return $r;
			}(this))) ntype = zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC; else if(type == (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC;
				return $r;
			}(this))) ntype = zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC; else ntype = zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC;
			if(ntype == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.zpp_inner.space != null) {
				this.zpp_inner.velx = 0;
				this.zpp_inner.vely = 0;
				this.zpp_inner.angvel = 0;
			}
			this.zpp_inner.invalidate_type();
			if(this.zpp_inner.space != null) this.zpp_inner.space.transmitType(this.zpp_inner,ntype); else this.zpp_inner.type = ntype;
		}
		return zpp_$nape_phys_ZPP_$Body.types[this.zpp_inner.type];
	}
	,set_isBullet: function(isBullet) {
		this.zpp_inner.bulletEnabled = isBullet;
		return this.zpp_inner.bulletEnabled;
	}
	,set_disableCCD: function(disableCCD) {
		this.zpp_inner.disableCCD = disableCCD;
		return this.zpp_inner.disableCCD;
	}
	,isStatic: function() {
		return this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC;
	}
	,isKinematic: function() {
		return this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC;
	}
	,get_space: function() {
		if(this.zpp_inner.space == null) return null; else return this.zpp_inner.space.outer;
	}
	,set_space: function(space) {
		if(this.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
		this.zpp_inner.immutable_midstep("Body::space");
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != space) {
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) this.zpp_inner.component.woken = false;
			if((this.zpp_inner.space == null?null:this.zpp_inner.space.outer) != null) (this.zpp_inner.space == null?null:this.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(this);
			if(space != null) space.zpp_inner.wrap_bodies.add(this);
		}
		if(this.zpp_inner.space == null) return null; else return this.zpp_inner.space.outer;
	}
	,get_arbiters: function() {
		if(this.zpp_inner.wrap_arbiters == null) this.zpp_inner.wrap_arbiters = zpp_$nape_util_ZPP_$ArbiterList.get(this.zpp_inner.arbiters,true);
		return this.zpp_inner.wrap_arbiters;
	}
	,get_constraints: function() {
		if(this.zpp_inner.wrap_constraints == null) this.zpp_inner.wrap_constraints = zpp_$nape_util_ZPP_$ConstraintList.get(this.zpp_inner.constraints,true);
		return this.zpp_inner.wrap_constraints;
	}
	,get_position: function() {
		if(this.zpp_inner.wrap_pos == null) this.zpp_inner.setupPosition();
		return this.zpp_inner.wrap_pos;
	}
	,get_velocity: function() {
		if(this.zpp_inner.wrap_vel == null) this.zpp_inner.setupVelocity();
		return this.zpp_inner.wrap_vel;
	}
	,set_rotation: function(rotation) {
		this.zpp_inner.immutable_midstep("Body::rotation");
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.zpp_inner.space != null) throw new js__$Boot_HaxeError("Error: Static objects cannot be rotated once inside a Space");
		if(this.zpp_inner.rot != rotation) {
			if(rotation != rotation) throw new js__$Boot_HaxeError("Error: Body::rotation cannot be NaN");
			this.zpp_inner.rot = rotation;
			this.zpp_inner.invalidate_rot();
			this.zpp_inner.wake();
		}
		return this.zpp_inner.rot;
	}
	,set_angularVel: function(angularVel) {
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if(this.zpp_inner.angvel != angularVel) {
			if(angularVel != angularVel) throw new js__$Boot_HaxeError("Error: Body::angularVel cannot be NaN");
			if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) throw new js__$Boot_HaxeError("Error: A static object cannot be given a velocity");
			this.zpp_inner.angvel = angularVel;
			this.zpp_inner.wake();
		}
		return this.zpp_inner.angvel;
	}
	,localPointToWorld: function(point,weak) {
		if(weak == null) weak = false;
		if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(point == null) throw new js__$Boot_HaxeError("Error: Cannot transform null Vec2");
		this.zpp_inner.validate_axis();
		var tempx = 0.0;
		var tempy = 0.0;
		tempx = this.zpp_inner.axisy * (function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.x;
			return $r;
		}(this)) - this.zpp_inner.axisx * (function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.y;
			return $r;
		}(this));
		tempy = (function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.x;
			return $r;
		}(this)) * this.zpp_inner.axisx + (function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.y;
			return $r;
		}(this)) * this.zpp_inner.axisy;
		if(point.zpp_inner.weak) {
			point.dispose();
			true;
		} else false;
		return nape_geom_Vec2.get(tempx + this.zpp_inner.posx,tempy + this.zpp_inner.posy,weak);
	}
	,worldPointToLocal: function(point,weak) {
		if(weak == null) weak = false;
		if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(point == null) throw new js__$Boot_HaxeError("Error: Cannot transform null Vec2");
		this.zpp_inner.validate_axis();
		var tempx = 0.0;
		var tempy = 0.0;
		var pointx = 0.0;
		var pointy = 0.0;
		pointx = (function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.x;
			return $r;
		}(this)) - this.zpp_inner.posx;
		pointy = (function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.y;
			return $r;
		}(this)) - this.zpp_inner.posy;
		tempx = pointx * this.zpp_inner.axisy + pointy * this.zpp_inner.axisx;
		tempy = pointy * this.zpp_inner.axisy - pointx * this.zpp_inner.axisx;
		if(point.zpp_inner.weak) {
			point.dispose();
			true;
		} else false;
		return nape_geom_Vec2.get(tempx,tempy,weak);
	}
	,localVectorToWorld: function(vector,weak) {
		if(weak == null) weak = false;
		if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(vector == null) throw new js__$Boot_HaxeError("Error: Cannot transform null Vec2");
		this.zpp_inner.validate_axis();
		var tempx = 0.0;
		var tempy = 0.0;
		tempx = this.zpp_inner.axisy * (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.x;
			return $r;
		}(this)) - this.zpp_inner.axisx * (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.y;
			return $r;
		}(this));
		tempy = (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.x;
			return $r;
		}(this)) * this.zpp_inner.axisx + (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.y;
			return $r;
		}(this)) * this.zpp_inner.axisy;
		if(vector.zpp_inner.weak) {
			vector.dispose();
			true;
		} else false;
		return nape_geom_Vec2.get(tempx,tempy,weak);
	}
	,worldVectorToLocal: function(vector,weak) {
		if(weak == null) weak = false;
		if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(vector == null) throw new js__$Boot_HaxeError("Error: Cannot transform null Vec2");
		this.zpp_inner.validate_axis();
		var tempx = 0.0;
		var tempy = 0.0;
		tempx = (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.x;
			return $r;
		}(this)) * this.zpp_inner.axisy + (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.y;
			return $r;
		}(this)) * this.zpp_inner.axisx;
		tempy = (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.y;
			return $r;
		}(this)) * this.zpp_inner.axisy - (function($this) {
			var $r;
			if(vector != null && vector.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			vector.zpp_inner.validate();
			$r = vector.zpp_inner.x;
			return $r;
		}(this)) * this.zpp_inner.axisx;
		if(vector.zpp_inner.weak) {
			vector.dispose();
			true;
		} else false;
		return nape_geom_Vec2.get(tempx,tempy,weak);
	}
	,applyImpulse: function(impulse,pos,sleepable) {
		if(sleepable == null) sleepable = false;
		if(impulse != null && impulse.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(pos != null && pos.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if(impulse == null) throw new js__$Boot_HaxeError("Error: Cannot apply null impulse to Body");
		if(sleepable && (function($this) {
			var $r;
			if($this.zpp_inner.space == null) throw new js__$Boot_HaxeError("Error: isSleeping makes no sense if the object is not contained within a Space");
			$r = $this.zpp_inner.component.sleeping;
			return $r;
		}(this))) {
			if(impulse.zpp_inner.weak) {
				impulse.dispose();
				true;
			} else false;
			if(pos != null) {
				if(pos.zpp_inner.weak) {
					pos.dispose();
					true;
				} else false;
			}
			return this;
		}
		this.zpp_inner.validate_mass();
		var t = this.zpp_inner.imass;
		this.zpp_inner.velx += (function($this) {
			var $r;
			if(impulse != null && impulse.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			impulse.zpp_inner.validate();
			$r = impulse.zpp_inner.x;
			return $r;
		}(this)) * t;
		this.zpp_inner.vely += (function($this) {
			var $r;
			if(impulse != null && impulse.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			impulse.zpp_inner.validate();
			$r = impulse.zpp_inner.y;
			return $r;
		}(this)) * t;
		if(pos != null) {
			var rx = 0.0;
			var ry = 0.0;
			rx = (function($this) {
				var $r;
				if(pos != null && pos.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				pos.zpp_inner.validate();
				$r = pos.zpp_inner.x;
				return $r;
			}(this)) - this.zpp_inner.posx;
			ry = (function($this) {
				var $r;
				if(pos != null && pos.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				pos.zpp_inner.validate();
				$r = pos.zpp_inner.y;
				return $r;
			}(this)) - this.zpp_inner.posy;
			this.zpp_inner.validate_inertia();
			this.zpp_inner.angvel += ((function($this) {
				var $r;
				if(impulse != null && impulse.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				impulse.zpp_inner.validate();
				$r = impulse.zpp_inner.y;
				return $r;
			}(this)) * rx - (function($this) {
				var $r;
				if(impulse != null && impulse.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				impulse.zpp_inner.validate();
				$r = impulse.zpp_inner.x;
				return $r;
			}(this)) * ry) * this.zpp_inner.iinertia;
			if(pos.zpp_inner.weak) {
				pos.dispose();
				true;
			} else false;
		}
		if(!sleepable) {
			if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.zpp_inner.wake();
		}
		if(impulse.zpp_inner.weak) {
			impulse.dispose();
			true;
		} else false;
		return this;
	}
	,translateShapes: function(translation) {
		this.zpp_inner.immutable_midstep("Body::translateShapes()");
		if(translation != null && translation.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if(translation == null) throw new js__$Boot_HaxeError("Error: Cannot displace by null Vec2");
		var weak = translation.zpp_inner.weak;
		translation.zpp_inner.weak = false;
		var cx_ite = this.zpp_inner.shapes.head;
		while(cx_ite != null) {
			var s = cx_ite.elt;
			s.outer.translate(translation);
			cx_ite = cx_ite.next;
		}
		translation.zpp_inner.weak = weak;
		if(translation.zpp_inner.weak) {
			translation.dispose();
			true;
		} else false;
		return this;
	}
	,align: function() {
		this.zpp_inner.immutable_midstep("Body::align()");
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if(this.zpp_inner.shapes.head == null) throw new js__$Boot_HaxeError("Error: Cannot align empty Body");
		this.zpp_inner.validate_localCOM();
		var dx = nape_geom_Vec2.get(-this.zpp_inner.localCOMx,-this.zpp_inner.localCOMy,null);
		this.translateShapes(dx);
		var dx2 = this.localVectorToWorld(dx);
		((function($this) {
			var $r;
			if($this.zpp_inner.wrap_pos == null) $this.zpp_inner.setupPosition();
			$r = $this.zpp_inner.wrap_pos;
			return $r;
		}(this))).subeq(dx2);
		if(this.zpp_inner.pre_posx < Infinity) {
			var t = 1.0;
			this.zpp_inner.pre_posx -= (function($this) {
				var $r;
				if(dx2 != null && dx2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				dx2.zpp_inner.validate();
				$r = dx2.zpp_inner.x;
				return $r;
			}(this)) * t;
			this.zpp_inner.pre_posy -= (function($this) {
				var $r;
				if(dx2 != null && dx2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				dx2.zpp_inner.validate();
				$r = dx2.zpp_inner.y;
				return $r;
			}(this)) * t;
		}
		dx.dispose();
		dx2.dispose();
		return this;
	}
	,get_localCOM: function() {
		if(this.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world has no " + "localCOM");
		if(this.zpp_inner.wrap_localCOM == null) {
			this.zpp_inner.wrap_localCOM = nape_geom_Vec2.get(this.zpp_inner.localCOMx,this.zpp_inner.localCOMy,null);
			this.zpp_inner.wrap_localCOM.zpp_inner._inuse = true;
			this.zpp_inner.wrap_localCOM.zpp_inner._immutable = true;
			this.zpp_inner.wrap_localCOM.zpp_inner._validate = ($_=this.zpp_inner,$bind($_,$_.getlocalCOM));
		}
		return this.zpp_inner.wrap_localCOM;
	}
	,toString: function() {
		return (this.zpp_inner.world?"(space::world":"(" + (this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC?"dynamic":this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC?"static":"kinematic")) + ")#" + this.zpp_inner_i.id;
	}
	,__class__: nape_phys_Body
});
var nape_phys_BodyIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$BodyList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Body" + "Iterator derp!");
};
$hxClasses["nape.phys.BodyIterator"] = nape_phys_BodyIterator;
nape_phys_BodyIterator.__name__ = ["nape","phys","BodyIterator"];
nape_phys_BodyIterator.get = function(list) {
	var ret;
	if(nape_phys_BodyIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$BodyList.internal = true;
		var ret1 = new nape_phys_BodyIterator();
		zpp_$nape_util_ZPP_$BodyList.internal = false;
		ret = ret1;
	} else {
		var r = nape_phys_BodyIterator.zpp_pool;
		nape_phys_BodyIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_phys_BodyIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_phys_BodyIterator.zpp_pool;
			nape_phys_BodyIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_phys_BodyIterator
};
var nape_phys_BodyList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$BodyList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.phys.BodyList"] = nape_phys_BodyList;
nape_phys_BodyList.__name__ = ["nape","phys","BodyList"];
nape_phys_BodyList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,has: function(obj) {
		this.zpp_inner.valmod();
		return this.zpp_inner.inner.has(obj.zpp_inner);
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Body" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,unshift: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Body" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			} else this.zpp_inner.inner.add(obj.zpp_inner);
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,add: function(obj) {
		if(this.zpp_inner.reverse_flag) return this.push(obj); else return this.unshift(obj);
	}
	,remove: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Body" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var ret;
		ret = false;
		var cx_ite = this.zpp_inner.inner.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x == obj.zpp_inner) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(ret) {
			if(this.zpp_inner.subber != null) this.zpp_inner.subber(obj);
			if(!this.zpp_inner.dontremove) this.zpp_inner.inner.remove(obj.zpp_inner);
			this.zpp_inner.invalidate();
		}
		return ret;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_phys_BodyIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_phys_BodyList
};
var nape_phys_BodyType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "BodyType" + " derp!");
};
$hxClasses["nape.phys.BodyType"] = nape_phys_BodyType;
nape_phys_BodyType.__name__ = ["nape","phys","BodyType"];
nape_phys_BodyType.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
			return $r;
		}(this))) return "STATIC"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC;
			return $r;
		}(this))) return "DYNAMIC"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC;
			return $r;
		}(this))) return "KINEMATIC"; else return "";
	}
	,__class__: nape_phys_BodyType
};
var nape_phys_Compound = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.phys.Compound"] = nape_phys_Compound;
nape_phys_Compound.__name__ = ["nape","phys","Compound"];
nape_phys_Compound.__super__ = nape_phys_Interactor;
nape_phys_Compound.prototype = $extend(nape_phys_Interactor.prototype,{
	toString: function() {
		return "Compound" + this.zpp_inner_i.id;
	}
	,__class__: nape_phys_Compound
});
var nape_phys_CompoundIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$CompoundList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Compound" + "Iterator derp!");
};
$hxClasses["nape.phys.CompoundIterator"] = nape_phys_CompoundIterator;
nape_phys_CompoundIterator.__name__ = ["nape","phys","CompoundIterator"];
nape_phys_CompoundIterator.get = function(list) {
	var ret;
	if(nape_phys_CompoundIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$CompoundList.internal = true;
		var ret1 = new nape_phys_CompoundIterator();
		zpp_$nape_util_ZPP_$CompoundList.internal = false;
		ret = ret1;
	} else {
		var r = nape_phys_CompoundIterator.zpp_pool;
		nape_phys_CompoundIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_phys_CompoundIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_phys_CompoundIterator.zpp_pool;
			nape_phys_CompoundIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_phys_CompoundIterator
};
var nape_phys_CompoundList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$CompoundList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.phys.CompoundList"] = nape_phys_CompoundList;
nape_phys_CompoundList.__name__ = ["nape","phys","CompoundList"];
nape_phys_CompoundList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,remove: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Compound" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var ret;
		ret = false;
		var cx_ite = this.zpp_inner.inner.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x == obj.zpp_inner) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(ret) {
			if(this.zpp_inner.subber != null) this.zpp_inner.subber(obj);
			if(!this.zpp_inner.dontremove) this.zpp_inner.inner.remove(obj.zpp_inner);
			this.zpp_inner.invalidate();
		}
		return ret;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_phys_CompoundIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_phys_CompoundList
};
var nape_phys_FluidProperties = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.phys.FluidProperties"] = nape_phys_FluidProperties;
nape_phys_FluidProperties.__name__ = ["nape","phys","FluidProperties"];
nape_phys_FluidProperties.prototype = {
	toString: function() {
		return "{ density: " + this.zpp_inner.density * 1000 + " viscosity: " + this.zpp_inner.viscosity + " gravity: " + Std.string(this.zpp_inner.wrap_gravity) + " }";
	}
	,__class__: nape_phys_FluidProperties
};
var nape_phys_GravMassMode = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "GravMassMode" + " derp!");
};
$hxClasses["nape.phys.GravMassMode"] = nape_phys_GravMassMode;
nape_phys_GravMassMode.__name__ = ["nape","phys","GravMassMode"];
nape_phys_GravMassMode.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.GravMassMode_DEFAULT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.GravMassMode_DEFAULT = new nape_phys_GravMassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.GravMassMode_DEFAULT;
			return $r;
		}(this))) return "DEFAULT"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.GravMassMode_FIXED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.GravMassMode_FIXED = new nape_phys_GravMassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.GravMassMode_FIXED;
			return $r;
		}(this))) return "FIXED"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.GravMassMode_SCALED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.GravMassMode_SCALED = new nape_phys_GravMassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.GravMassMode_SCALED;
			return $r;
		}(this))) return "SCALED"; else return "";
	}
	,__class__: nape_phys_GravMassMode
};
var nape_phys_InertiaMode = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "InertiaMode" + " derp!");
};
$hxClasses["nape.phys.InertiaMode"] = nape_phys_InertiaMode;
nape_phys_InertiaMode.__name__ = ["nape","phys","InertiaMode"];
nape_phys_InertiaMode.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.InertiaMode_DEFAULT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InertiaMode_DEFAULT = new nape_phys_InertiaMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.InertiaMode_DEFAULT;
			return $r;
		}(this))) return "DEFAULT"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.InertiaMode_FIXED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.InertiaMode_FIXED = new nape_phys_InertiaMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.InertiaMode_FIXED;
			return $r;
		}(this))) return "FIXED"; else return "";
	}
	,__class__: nape_phys_InertiaMode
};
var nape_phys_InteractorIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$InteractorList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Interactor" + "Iterator derp!");
};
$hxClasses["nape.phys.InteractorIterator"] = nape_phys_InteractorIterator;
nape_phys_InteractorIterator.__name__ = ["nape","phys","InteractorIterator"];
nape_phys_InteractorIterator.get = function(list) {
	var ret;
	if(nape_phys_InteractorIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$InteractorList.internal = true;
		var ret1 = new nape_phys_InteractorIterator();
		zpp_$nape_util_ZPP_$InteractorList.internal = false;
		ret = ret1;
	} else {
		var r = nape_phys_InteractorIterator.zpp_pool;
		nape_phys_InteractorIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_phys_InteractorIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_phys_InteractorIterator.zpp_pool;
			nape_phys_InteractorIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_phys_InteractorIterator
};
var nape_phys_InteractorList = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.phys.InteractorList"] = nape_phys_InteractorList;
nape_phys_InteractorList.__name__ = ["nape","phys","InteractorList"];
nape_phys_InteractorList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer_i;
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_phys_InteractorIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_phys_InteractorList
};
var nape_phys_MassMode = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "MassMode" + " derp!");
};
$hxClasses["nape.phys.MassMode"] = nape_phys_MassMode;
nape_phys_MassMode.__name__ = ["nape","phys","MassMode"];
nape_phys_MassMode.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.MassMode_DEFAULT == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.MassMode_DEFAULT = new nape_phys_MassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.MassMode_DEFAULT;
			return $r;
		}(this))) return "DEFAULT"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.MassMode_FIXED == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.MassMode_FIXED = new nape_phys_MassMode();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.MassMode_FIXED;
			return $r;
		}(this))) return "FIXED"; else return "";
	}
	,__class__: nape_phys_MassMode
};
var nape_phys_Material = function(elasticity,dynamicFriction,staticFriction,density,rollingFriction) {
	if(rollingFriction == null) rollingFriction = 0.001;
	if(density == null) density = 1;
	if(staticFriction == null) staticFriction = 2.0;
	if(dynamicFriction == null) dynamicFriction = 1.0;
	if(elasticity == null) elasticity = 0.0;
	this.zpp_inner = null;
	if(zpp_$nape_phys_ZPP_$Material.zpp_pool == null) this.zpp_inner = new zpp_$nape_phys_ZPP_$Material(); else {
		this.zpp_inner = zpp_$nape_phys_ZPP_$Material.zpp_pool;
		zpp_$nape_phys_ZPP_$Material.zpp_pool = this.zpp_inner.next;
		this.zpp_inner.next = null;
	}
	null;
	this.zpp_inner.outer = this;
	if(elasticity != this.zpp_inner.elasticity) {
		if(elasticity != elasticity) throw new js__$Boot_HaxeError("Error: Material::" + "elasticity" + " cannot be NaN");
		this.zpp_inner.elasticity = elasticity / 1;
		this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ARBITERS);
	}
	this.zpp_inner.elasticity;
	if(dynamicFriction != this.zpp_inner.dynamicFriction) {
		if(dynamicFriction != dynamicFriction) throw new js__$Boot_HaxeError("Error: Material::" + "dynamicFriction" + " cannot be NaN");
		if(dynamicFriction < 0) throw new js__$Boot_HaxeError("Error: Material::" + "dynamicFriction" + " cannot be negative");
		this.zpp_inner.dynamicFriction = dynamicFriction / 1;
		this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ANGDRAG | zpp_$nape_phys_ZPP_$Material.ARBITERS);
	}
	this.zpp_inner.dynamicFriction;
	if(staticFriction != this.zpp_inner.staticFriction) {
		if(staticFriction != staticFriction) throw new js__$Boot_HaxeError("Error: Material::" + "staticFriction" + " cannot be NaN");
		if(staticFriction < 0) throw new js__$Boot_HaxeError("Error: Material::" + "staticFriction" + " cannot be negative");
		this.zpp_inner.staticFriction = staticFriction / 1;
		this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ARBITERS);
	}
	this.zpp_inner.staticFriction;
	if(density != this.zpp_inner.density * 1000) {
		if(density != density) throw new js__$Boot_HaxeError("Error: Material::" + "density" + " cannot be NaN");
		if(density < 0) throw new js__$Boot_HaxeError("Error: Material::density must be positive");
		if(density < 0) throw new js__$Boot_HaxeError("Error: Material::" + "density" + " cannot be negative");
		this.zpp_inner.density = density / 1000;
		this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.PROPS);
	}
	this.zpp_inner.density * 1000;
	if(rollingFriction != this.zpp_inner.rollingFriction) {
		if(rollingFriction != rollingFriction) throw new js__$Boot_HaxeError("Error: Material::" + "rollingFriction" + " cannot be NaN");
		if(rollingFriction < 0) throw new js__$Boot_HaxeError("Error: Material::" + "rollingFriction" + " cannot be negative");
		this.zpp_inner.rollingFriction = rollingFriction / 1;
		this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ARBITERS);
	}
	this.zpp_inner.rollingFriction;
};
$hxClasses["nape.phys.Material"] = nape_phys_Material;
nape_phys_Material.__name__ = ["nape","phys","Material"];
nape_phys_Material.prototype = {
	set_elasticity: function(elasticity) {
		if(elasticity != this.zpp_inner.elasticity) {
			if(elasticity != elasticity) throw new js__$Boot_HaxeError("Error: Material::" + "elasticity" + " cannot be NaN");
			this.zpp_inner.elasticity = elasticity / 1;
			this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ARBITERS);
		}
		return this.zpp_inner.elasticity;
	}
	,set_dynamicFriction: function(dynamicFriction) {
		if(dynamicFriction != this.zpp_inner.dynamicFriction) {
			if(dynamicFriction != dynamicFriction) throw new js__$Boot_HaxeError("Error: Material::" + "dynamicFriction" + " cannot be NaN");
			if(dynamicFriction < 0) throw new js__$Boot_HaxeError("Error: Material::" + "dynamicFriction" + " cannot be negative");
			this.zpp_inner.dynamicFriction = dynamicFriction / 1;
			this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ANGDRAG | zpp_$nape_phys_ZPP_$Material.ARBITERS);
		}
		return this.zpp_inner.dynamicFriction;
	}
	,set_staticFriction: function(staticFriction) {
		if(staticFriction != this.zpp_inner.staticFriction) {
			if(staticFriction != staticFriction) throw new js__$Boot_HaxeError("Error: Material::" + "staticFriction" + " cannot be NaN");
			if(staticFriction < 0) throw new js__$Boot_HaxeError("Error: Material::" + "staticFriction" + " cannot be negative");
			this.zpp_inner.staticFriction = staticFriction / 1;
			this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ARBITERS);
		}
		return this.zpp_inner.staticFriction;
	}
	,set_density: function(density) {
		if(density != this.zpp_inner.density * 1000) {
			if(density != density) throw new js__$Boot_HaxeError("Error: Material::" + "density" + " cannot be NaN");
			if(density < 0) throw new js__$Boot_HaxeError("Error: Material::density must be positive");
			if(density < 0) throw new js__$Boot_HaxeError("Error: Material::" + "density" + " cannot be negative");
			this.zpp_inner.density = density / 1000;
			this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.PROPS);
		}
		return this.zpp_inner.density * 1000;
	}
	,set_rollingFriction: function(rollingFriction) {
		if(rollingFriction != this.zpp_inner.rollingFriction) {
			if(rollingFriction != rollingFriction) throw new js__$Boot_HaxeError("Error: Material::" + "rollingFriction" + " cannot be NaN");
			if(rollingFriction < 0) throw new js__$Boot_HaxeError("Error: Material::" + "rollingFriction" + " cannot be negative");
			this.zpp_inner.rollingFriction = rollingFriction / 1;
			this.zpp_inner.invalidate(zpp_$nape_phys_ZPP_$Material.WAKE | zpp_$nape_phys_ZPP_$Material.ARBITERS);
		}
		return this.zpp_inner.rollingFriction;
	}
	,toString: function() {
		return "{ elasticity: " + this.zpp_inner.elasticity + " dynamicFriction: " + this.zpp_inner.dynamicFriction + " staticFriction: " + this.zpp_inner.staticFriction + " density: " + this.zpp_inner.density * 1000 + " rollingFriction: " + this.zpp_inner.rollingFriction + " }";
	}
	,__class__: nape_phys_Material
};
var nape_shape_Shape = function() {
	this.zpp_inner = null;
	nape_phys_Interactor.zpp_internalAlloc = true;
	nape_phys_Interactor.call(this);
	nape_phys_Interactor.zpp_internalAlloc = false;
	if(!nape_shape_Shape.zpp_internalAlloc) throw new js__$Boot_HaxeError("Error: Shape cannot be instantiated derp!");
};
$hxClasses["nape.shape.Shape"] = nape_shape_Shape;
nape_shape_Shape.__name__ = ["nape","shape","Shape"];
nape_shape_Shape.__super__ = nape_phys_Interactor;
nape_shape_Shape.prototype = $extend(nape_phys_Interactor.prototype,{
	isPolygon: function() {
		return this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON;
	}
	,set_filter: function(filter) {
		this.zpp_inner.immutable_midstep("Shape::filter");
		if(filter == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
		this.zpp_inner.setFilter(filter.zpp_inner);
		return this.zpp_inner.filter.wrapper();
	}
	,get_sensorEnabled: function() {
		return this.zpp_inner.sensorEnabled;
	}
	,set_sensorEnabled: function(sensorEnabled) {
		this.zpp_inner.immutable_midstep("Shape::sensorEnabled");
		this.zpp_inner.sensorEnabled = sensorEnabled;
		this.zpp_inner.wake();
		return this.zpp_inner.sensorEnabled;
	}
	,translate: function(translation) {
		this.zpp_inner.immutable_midstep("Shape::translate()");
		if(translation != null && translation.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(this.zpp_inner.body != null && this.zpp_inner.body.space != null && this.zpp_inner.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) throw new js__$Boot_HaxeError("Error: Cannot modify Shape belonging to a static Object once inside a Space");
		if(translation == null) throw new js__$Boot_HaxeError("Error: Cannot displace Shape by null Vec2");
		if(translation.lsq() > 0) {
			if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.zpp_inner.circle.__translate((function($this) {
				var $r;
				if(translation != null && translation.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				translation.zpp_inner.validate();
				$r = translation.zpp_inner.x;
				return $r;
			}(this)),(function($this) {
				var $r;
				if(translation != null && translation.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				translation.zpp_inner.validate();
				$r = translation.zpp_inner.y;
				return $r;
			}(this))); else this.zpp_inner.polygon.__translate((function($this) {
				var $r;
				if(translation != null && translation.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				translation.zpp_inner.validate();
				$r = translation.zpp_inner.x;
				return $r;
			}(this)),(function($this) {
				var $r;
				if(translation != null && translation.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				translation.zpp_inner.validate();
				$r = translation.zpp_inner.y;
				return $r;
			}(this)));
		}
		if(translation.zpp_inner.weak) {
			translation.dispose();
			true;
		} else false;
		return this;
	}
	,rotate: function(angle) {
		this.zpp_inner.immutable_midstep("Shape::rotate()");
		if(this.zpp_inner.body != null && this.zpp_inner.body.space != null && this.zpp_inner.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) throw new js__$Boot_HaxeError("Error: Cannot modify Shape belonging to a static Object once inside a Space");
		if(angle != angle) throw new js__$Boot_HaxeError("Error: Cannot rotate Shape by NaN");
		var dr = angle % (2 * Math.PI);
		if(dr != 0.0) {
			var cos = Math.cos(angle);
			var sin = Math.sin(angle);
			if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.zpp_inner.circle.__rotate(sin,cos); else this.zpp_inner.polygon.__rotate(sin,cos);
		}
		return this;
	}
	,toString: function() {
		var ret;
		if(this.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) ret = "Circle"; else ret = "Polygon";
		return ret + "#" + this.zpp_inner_i.id;
	}
	,__class__: nape_shape_Shape
});
var nape_shape_Circle = function(radius,localCOM,material,filter) {
	this.zpp_inner_zn = null;
	nape_shape_Shape.zpp_internalAlloc = true;
	nape_shape_Shape.call(this);
	nape_shape_Shape.zpp_internalAlloc = false;
	this.zpp_inner_zn = new zpp_$nape_shape_ZPP_$Circle();
	this.zpp_inner_zn.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner_i = this.zpp_inner;
	this.zpp_inner_i.outer_i = this;
	this.zpp_inner.immutable_midstep("Circle::radius");
	if(this.zpp_inner.body != null && this.zpp_inner.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.zpp_inner.body.space != null) throw new js__$Boot_HaxeError("Error: Cannot modifiy radius of Circle contained in static object once added to space");
	if(radius != this.zpp_inner_zn.radius) {
		if(radius != radius) throw new js__$Boot_HaxeError("Error: Circle::radius cannot be NaN");
		if(radius < nape_Config.epsilon) throw new js__$Boot_HaxeError("Error: Circle::radius (" + radius + ") must be > Config.epsilon");
		if(radius > 1e100) throw new js__$Boot_HaxeError("Error: Circle::radius (" + radius + ") must be < PR(Const).FMAX");
		this.zpp_inner_zn.radius = radius;
		this.zpp_inner_zn.invalidate_radius();
	}
	this.zpp_inner_zn.radius;
	if(localCOM == null) {
		this.zpp_inner.localCOMx = 0;
		this.zpp_inner.localCOMy = 0;
	} else {
		if(localCOM != null && localCOM.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(localCOM != null && localCOM.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		localCOM.zpp_inner.validate();
		this.zpp_inner.localCOMx = localCOM.zpp_inner.x;
		if(localCOM != null && localCOM.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		localCOM.zpp_inner.validate();
		this.zpp_inner.localCOMy = localCOM.zpp_inner.y;
		if(localCOM.zpp_inner.weak) {
			localCOM.dispose();
			true;
		} else false;
	}
	if(material == null) {
		if(zpp_$nape_phys_ZPP_$Material.zpp_pool == null) this.zpp_inner.material = new zpp_$nape_phys_ZPP_$Material(); else {
			this.zpp_inner.material = zpp_$nape_phys_ZPP_$Material.zpp_pool;
			zpp_$nape_phys_ZPP_$Material.zpp_pool = this.zpp_inner.material.next;
			this.zpp_inner.material.next = null;
		}
		null;
	} else {
		this.zpp_inner.immutable_midstep("Shape::material");
		if(material == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
		this.zpp_inner.setMaterial(material.zpp_inner);
		this.zpp_inner.material.wrapper();
	}
	if(filter == null) {
		if(zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool == null) this.zpp_inner.filter = new zpp_$nape_dynamics_ZPP_$InteractionFilter(); else {
			this.zpp_inner.filter = zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool;
			zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool = this.zpp_inner.filter.next;
			this.zpp_inner.filter.next = null;
		}
		null;
	} else {
		this.zpp_inner.immutable_midstep("Shape::filter");
		if(filter == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
		this.zpp_inner.setFilter(filter.zpp_inner);
		this.zpp_inner.filter.wrapper();
	}
	this.zpp_inner_i.insert_cbtype(zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE.zpp_inner);
};
$hxClasses["nape.shape.Circle"] = nape_shape_Circle;
nape_shape_Circle.__name__ = ["nape","shape","Circle"];
nape_shape_Circle.__super__ = nape_shape_Shape;
nape_shape_Circle.prototype = $extend(nape_shape_Shape.prototype,{
	__class__: nape_shape_Circle
});
var nape_shape_Edge = function() {
	this.zpp_inner = null;
	if(!zpp_$nape_shape_ZPP_$Edge.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate an Edge derp!");
};
$hxClasses["nape.shape.Edge"] = nape_shape_Edge;
nape_shape_Edge.__name__ = ["nape","shape","Edge"];
nape_shape_Edge.prototype = {
	toString: function() {
		if(this.zpp_inner.polygon == null) return "Edge(object-pooled)"; else if(this.zpp_inner.polygon.body == null) {
			this.zpp_inner.polygon.validate_laxi();
			return "{ localNormal : " + ("{ x: " + this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " }") + " }";
		} else {
			this.zpp_inner.polygon.validate_gaxi();
			return "{ localNormal : " + ("{ x: " + this.zpp_inner.lnormx + " y: " + this.zpp_inner.lnormy + " }") + " worldNormal : " + ("{ x: " + this.zpp_inner.gnormx + " y: " + this.zpp_inner.gnormy + " }") + " }";
		}
	}
	,__class__: nape_shape_Edge
};
var nape_shape_EdgeIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$EdgeList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Edge" + "Iterator derp!");
};
$hxClasses["nape.shape.EdgeIterator"] = nape_shape_EdgeIterator;
nape_shape_EdgeIterator.__name__ = ["nape","shape","EdgeIterator"];
nape_shape_EdgeIterator.get = function(list) {
	var ret;
	if(nape_shape_EdgeIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$EdgeList.internal = true;
		var ret1 = new nape_shape_EdgeIterator();
		zpp_$nape_util_ZPP_$EdgeList.internal = false;
		ret = ret1;
	} else {
		var r = nape_shape_EdgeIterator.zpp_pool;
		nape_shape_EdgeIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_shape_EdgeIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_shape_EdgeIterator.zpp_pool;
			nape_shape_EdgeIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_shape_EdgeIterator
};
var nape_shape_EdgeList = function() {
	this.zpp_inner = null;
};
$hxClasses["nape.shape.EdgeList"] = nape_shape_EdgeList;
nape_shape_EdgeList.__name__ = ["nape","shape","EdgeList"];
nape_shape_EdgeList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) if(index == this.get_length() - 1) index = index; else index = this.get_length() - 2 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.wrapper();
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_shape_EdgeIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_shape_EdgeList
};
var nape_shape_Polygon = function(localVerts,material,filter) {
	this.zpp_inner_zn = null;
	nape_shape_Shape.zpp_internalAlloc = true;
	nape_shape_Shape.call(this);
	nape_shape_Shape.zpp_internalAlloc = false;
	if(localVerts == null) throw new js__$Boot_HaxeError("Error: localVerts cannot be null");
	this.zpp_inner_zn = new zpp_$nape_shape_ZPP_$Polygon();
	this.zpp_inner_zn.outer = this;
	this.zpp_inner_zn.outer_zn = this;
	this.zpp_inner = this.zpp_inner_zn;
	this.zpp_inner_i = this.zpp_inner;
	this.zpp_inner_i.outer_i = this;
	if((localVerts instanceof Array) && localVerts.__enum__ == null) {
		var lv = localVerts;
		var _g = 0;
		while(_g < lv.length) {
			var vite = lv[_g];
			++_g;
			if(vite == null) throw new js__$Boot_HaxeError("Error: Array<Vec2> contains null objects");
			if(!js_Boot.__instanceof(vite,nape_geom_Vec2)) throw new js__$Boot_HaxeError("Error: Array<Vec2> contains non Vec2 objects");
			var x = vite;
			if(x != null && x.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			((function($this) {
				var $r;
				if($this.zpp_inner_zn.wrap_lverts == null) $this.zpp_inner_zn.getlverts();
				$r = $this.zpp_inner_zn.wrap_lverts;
				return $r;
			}(this))).push((function($this) {
				var $r;
				if(x != null && x.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				$r = nape_geom_Vec2.get((function($this) {
					var $r;
					if(x != null && x.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					x.zpp_inner.validate();
					$r = x.zpp_inner.x;
					return $r;
				}($this)),(function($this) {
					var $r;
					if(x != null && x.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					x.zpp_inner.validate();
					$r = x.zpp_inner.y;
					return $r;
				}($this)),false);
				return $r;
			}(this)));
		}
	} else if(js_Boot.__instanceof(localVerts,nape_geom_Vec2List)) {
		var lv1 = localVerts;
		var _g1 = lv1.iterator();
		while(_g1.hasNext()) {
			var x1;
			_g1.zpp_critical = false;
			x1 = _g1.zpp_inner.at(_g1.zpp_i++);
			if(x1 == null) throw new js__$Boot_HaxeError("Error: Vec2List contains null objects");
			if(x1 != null && x1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			((function($this) {
				var $r;
				if($this.zpp_inner_zn.wrap_lverts == null) $this.zpp_inner_zn.getlverts();
				$r = $this.zpp_inner_zn.wrap_lverts;
				return $r;
			}(this))).push((function($this) {
				var $r;
				if(x1 != null && x1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				$r = nape_geom_Vec2.get((function($this) {
					var $r;
					if(x1 != null && x1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					x1.zpp_inner.validate();
					$r = x1.zpp_inner.x;
					return $r;
				}($this)),(function($this) {
					var $r;
					if(x1 != null && x1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					x1.zpp_inner.validate();
					$r = x1.zpp_inner.y;
					return $r;
				}($this)),false);
				return $r;
			}(this)));
		}
	} else if(js_Boot.__instanceof(localVerts,nape_geom_GeomPoly)) {
		var lv2 = localVerts;
		if(lv2 != null && lv2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
		var verts = lv2.zpp_inner.vertices;
		if(verts != null) {
			var vite1 = verts;
			do {
				var x2 = nape_geom_Vec2.get(vite1.x,vite1.y,null);
				vite1 = vite1.next;
				((function($this) {
					var $r;
					if($this.zpp_inner_zn.wrap_lverts == null) $this.zpp_inner_zn.getlverts();
					$r = $this.zpp_inner_zn.wrap_lverts;
					return $r;
				}(this))).push((function($this) {
					var $r;
					if(x2 != null && x2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					$r = nape_geom_Vec2.get((function($this) {
						var $r;
						if(x2 != null && x2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						x2.zpp_inner.validate();
						$r = x2.zpp_inner.x;
						return $r;
					}($this)),(function($this) {
						var $r;
						if(x2 != null && x2.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						x2.zpp_inner.validate();
						$r = x2.zpp_inner.y;
						return $r;
					}($this)),false);
					return $r;
				}(this)));
				x2.dispose();
			} while(vite1 != verts);
		}
	} else throw new js__$Boot_HaxeError("Error: Invalid type for polygon object, should be Array<Vec2>, Vec2List, GeomPoly or for flash10+ flash.Vector<Vec2>");
	if((localVerts instanceof Array) && localVerts.__enum__ == null) {
		var lv3 = localVerts;
		var i = 0;
		while(i < lv3.length) {
			var cur = lv3[i];
			if(cur.zpp_inner.weak?(function($this) {
				var $r;
				cur.dispose();
				$r = true;
				return $r;
			}(this)):false) {
				lv3.splice(i,1);
				continue;
			}
			i++;
		}
	} else if(js_Boot.__instanceof(localVerts,nape_geom_Vec2List)) {
		var lv4 = localVerts;
		if(lv4.zpp_inner._validate != null) lv4.zpp_inner._validate();
		var ins = lv4.zpp_inner.inner;
		var pre = null;
		var cur1 = ins.head;
		while(cur1 != null) {
			var x3 = cur1.elt;
			if(x3.outer.zpp_inner.weak) {
				cur1 = ins.erase(pre);
				if(x3.outer.zpp_inner.weak) {
					x3.outer.dispose();
					true;
				} else false;
			} else {
				pre = cur1;
				cur1 = cur1.next;
			}
		}
	}
	if(material == null) {
		if(zpp_$nape_phys_ZPP_$Material.zpp_pool == null) this.zpp_inner.material = new zpp_$nape_phys_ZPP_$Material(); else {
			this.zpp_inner.material = zpp_$nape_phys_ZPP_$Material.zpp_pool;
			zpp_$nape_phys_ZPP_$Material.zpp_pool = this.zpp_inner.material.next;
			this.zpp_inner.material.next = null;
		}
		null;
	} else {
		this.zpp_inner.immutable_midstep("Shape::material");
		if(material == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
		this.zpp_inner.setMaterial(material.zpp_inner);
		this.zpp_inner.material.wrapper();
	}
	if(filter == null) {
		if(zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool == null) this.zpp_inner.filter = new zpp_$nape_dynamics_ZPP_$InteractionFilter(); else {
			this.zpp_inner.filter = zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool;
			zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool = this.zpp_inner.filter.next;
			this.zpp_inner.filter.next = null;
		}
		null;
	} else {
		this.zpp_inner.immutable_midstep("Shape::filter");
		if(filter == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
		this.zpp_inner.setFilter(filter.zpp_inner);
		this.zpp_inner.filter.wrapper();
	}
	this.zpp_inner_i.insert_cbtype(zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE.zpp_inner);
};
$hxClasses["nape.shape.Polygon"] = nape_shape_Polygon;
nape_shape_Polygon.__name__ = ["nape","shape","Polygon"];
nape_shape_Polygon.rect = function(x,y,width,height,weak) {
	if(weak == null) weak = false;
	if(x != x || y != y || width != width || height != height) throw new js__$Boot_HaxeError("Error: Polygon.rect cannot accept NaN arguments");
	return [nape_geom_Vec2.get(x,y,weak),nape_geom_Vec2.get(x + width,y,weak),nape_geom_Vec2.get(x + width,y + height,weak),nape_geom_Vec2.get(x,y + height,weak)];
};
nape_shape_Polygon.box = function(width,height,weak) {
	if(weak == null) weak = false;
	if(width != width || height != height) throw new js__$Boot_HaxeError("Error: Polygon.box cannot accept NaN arguments");
	return nape_shape_Polygon.rect(-width / 2,-height / 2,width,height,weak);
};
nape_shape_Polygon.__super__ = nape_shape_Shape;
nape_shape_Polygon.prototype = $extend(nape_shape_Shape.prototype,{
	__class__: nape_shape_Polygon
});
var nape_shape_ShapeIterator = function() {
	this.zpp_next = null;
	this.zpp_critical = false;
	this.zpp_i = 0;
	this.zpp_inner = null;
	if(!zpp_$nape_util_ZPP_$ShapeList.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Shape" + "Iterator derp!");
};
$hxClasses["nape.shape.ShapeIterator"] = nape_shape_ShapeIterator;
nape_shape_ShapeIterator.__name__ = ["nape","shape","ShapeIterator"];
nape_shape_ShapeIterator.get = function(list) {
	var ret;
	if(nape_shape_ShapeIterator.zpp_pool == null) {
		zpp_$nape_util_ZPP_$ShapeList.internal = true;
		var ret1 = new nape_shape_ShapeIterator();
		zpp_$nape_util_ZPP_$ShapeList.internal = false;
		ret = ret1;
	} else {
		var r = nape_shape_ShapeIterator.zpp_pool;
		nape_shape_ShapeIterator.zpp_pool = r.zpp_next;
		ret = r;
	}
	ret.zpp_i = 0;
	ret.zpp_inner = list;
	ret.zpp_critical = false;
	return ret;
};
nape_shape_ShapeIterator.prototype = {
	hasNext: function() {
		this.zpp_inner.zpp_inner.valmod();
		var length = this.zpp_inner.get_length();
		this.zpp_critical = true;
		if(this.zpp_i < length) return true; else {
			this.zpp_next = nape_shape_ShapeIterator.zpp_pool;
			nape_shape_ShapeIterator.zpp_pool = this;
			this.zpp_inner = null;
			return false;
		}
	}
	,next: function() {
		this.zpp_critical = false;
		return this.zpp_inner.at(this.zpp_i++);
	}
	,__class__: nape_shape_ShapeIterator
};
var nape_shape_ShapeList = function() {
	this.zpp_inner = null;
	this.zpp_inner = new zpp_$nape_util_ZPP_$ShapeList();
	this.zpp_inner.outer = this;
};
$hxClasses["nape.shape.ShapeList"] = nape_shape_ShapeList;
nape_shape_ShapeList.__name__ = ["nape","shape","ShapeList"];
nape_shape_ShapeList.prototype = {
	get_length: function() {
		this.zpp_inner.valmod();
		if(this.zpp_inner.zip_length) {
			this.zpp_inner.zip_length = false;
			this.zpp_inner.user_length = this.zpp_inner.inner.length;
		}
		return this.zpp_inner.user_length;
	}
	,at: function(index) {
		this.zpp_inner.valmod();
		if(index < 0 || index >= this.get_length()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.get_length() - 1 - index;
		if(index < this.zpp_inner.at_index || this.zpp_inner.at_ite == null) {
			this.zpp_inner.at_index = index;
			this.zpp_inner.at_ite = this.zpp_inner.inner.iterator_at(index);
		} else while(this.zpp_inner.at_index != index) {
			this.zpp_inner.at_index++;
			this.zpp_inner.at_ite = this.zpp_inner.at_ite.next;
		}
		return this.zpp_inner.at_ite.elt.outer;
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Shape" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.zpp_inner.inner.add(obj.zpp_inner); else {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,unshift: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Shape" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) {
				if(this.zpp_inner.push_ite == null) if(this.zpp_inner.inner.head == null) this.zpp_inner.push_ite = null; else this.zpp_inner.push_ite = this.zpp_inner.inner.iterator_at(this.get_length() - 1);
				this.zpp_inner.push_ite = this.zpp_inner.inner.insert(this.zpp_inner.push_ite,obj.zpp_inner);
			} else this.zpp_inner.inner.add(obj.zpp_inner);
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,add: function(obj) {
		if(this.zpp_inner.reverse_flag) return this.push(obj); else return this.unshift(obj);
	}
	,remove: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Shape" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_inner.valmod();
		var ret;
		ret = false;
		var cx_ite = this.zpp_inner.inner.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x == obj.zpp_inner) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(ret) {
			if(this.zpp_inner.subber != null) this.zpp_inner.subber(obj);
			if(!this.zpp_inner.dontremove) this.zpp_inner.inner.remove(obj.zpp_inner);
			this.zpp_inner.invalidate();
		}
		return ret;
	}
	,iterator: function() {
		this.zpp_inner.valmod();
		return nape_shape_ShapeIterator.get(this);
	}
	,toString: function() {
		var ret = "[";
		var fst = true;
		var _g;
		this.zpp_inner.valmod();
		_g = nape_shape_ShapeIterator.get(this);
		while(_g.hasNext()) {
			var i;
			_g.zpp_critical = false;
			i = _g.zpp_inner.at(_g.zpp_i++);
			if(!fst) ret += ",";
			if(i == null) ret += "NULL"; else ret += i.toString();
			fst = false;
		}
		return ret + "]";
	}
	,__class__: nape_shape_ShapeList
};
var nape_shape_ShapeType = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ShapeType" + " derp!");
};
$hxClasses["nape.shape.ShapeType"] = nape_shape_ShapeType;
nape_shape_ShapeType.__name__ = ["nape","shape","ShapeType"];
nape_shape_ShapeType.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ShapeType_CIRCLE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ShapeType_CIRCLE = new nape_shape_ShapeType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ShapeType_CIRCLE;
			return $r;
		}(this))) return "CIRCLE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ShapeType_POLYGON == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ShapeType_POLYGON = new nape_shape_ShapeType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ShapeType_POLYGON;
			return $r;
		}(this))) return "POLYGON"; else return "";
	}
	,__class__: nape_shape_ShapeType
};
var nape_shape_ValidationResult = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "ValidationResult" + " derp!");
};
$hxClasses["nape.shape.ValidationResult"] = nape_shape_ValidationResult;
nape_shape_ValidationResult.__name__ = ["nape","shape","ValidationResult"];
nape_shape_ValidationResult.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID = new nape_shape_ValidationResult();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID;
			return $r;
		}(this))) return "VALID"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE = new nape_shape_ValidationResult();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE;
			return $r;
		}(this))) return "DEGENERATE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE = new nape_shape_ValidationResult();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE;
			return $r;
		}(this))) return "CONCAVE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING = new nape_shape_ValidationResult();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING;
			return $r;
		}(this))) return "SELF_INTERSECTING"; else return "";
	}
	,__class__: nape_shape_ValidationResult
};
var nape_space_Broadphase = function() {
	if(!zpp_$nape_util_ZPP_$Flags.internal) throw new js__$Boot_HaxeError("Error: Cannot instantiate " + "Broadphase" + " derp!");
};
$hxClasses["nape.space.Broadphase"] = nape_space_Broadphase;
nape_space_Broadphase.__name__ = ["nape","space","Broadphase"];
nape_space_Broadphase.prototype = {
	toString: function() {
		if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE = new nape_space_Broadphase();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE;
			return $r;
		}(this))) return "DYNAMIC_AABB_TREE"; else if(this == (function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE = new nape_space_Broadphase();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE;
			return $r;
		}(this))) return "SWEEP_AND_PRUNE"; else return "";
	}
	,__class__: nape_space_Broadphase
};
var nape_space_Space = function(gravity,broadphase) {
	this.zpp_inner = null;
	if(gravity != null && gravity.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
	this.zpp_inner = new zpp_$nape_space_ZPP_$Space(gravity == null?null:gravity.zpp_inner,broadphase);
	this.zpp_inner.outer = this;
	if(gravity != null) {
		if(gravity.zpp_inner.weak) {
			gravity.dispose();
			true;
		} else false;
	}
};
$hxClasses["nape.space.Space"] = nape_space_Space;
nape_space_Space.__name__ = ["nape","space","Space"];
nape_space_Space.prototype = {
	get_bodies: function() {
		return this.zpp_inner.wrap_bodies;
	}
	,step: function(deltaTime,velocityIterations,positionIterations) {
		if(positionIterations == null) positionIterations = 10;
		if(velocityIterations == null) velocityIterations = 10;
		if(deltaTime != deltaTime) throw new js__$Boot_HaxeError("Error: deltaTime cannot be NaN");
		if(deltaTime <= 0) throw new js__$Boot_HaxeError("Error: deltaTime must be strictly positive");
		if(velocityIterations <= 0) throw new js__$Boot_HaxeError("Error: must use atleast one velocity iteration");
		if(positionIterations <= 0) throw new js__$Boot_HaxeError("Error: must use atleast one position iteration");
		this.zpp_inner.step(deltaTime,velocityIterations,positionIterations);
	}
	,bodiesUnderPoint: function(point,filter,output) {
		if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		if(point == null) throw new js__$Boot_HaxeError("Error: Cannot evaluate objects under a null point :)");
		var ret = this.zpp_inner.bodiesUnderPoint((function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.x;
			return $r;
		}(this)),(function($this) {
			var $r;
			if(point != null && point.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			point.zpp_inner.validate();
			$r = point.zpp_inner.y;
			return $r;
		}(this)),filter == null?null:filter.zpp_inner,output);
		if(point.zpp_inner.weak) {
			point.dispose();
			true;
		} else false;
		return ret;
	}
	,__class__: nape_space_Space
};
var openfl_AssetCache = function() {
	this.__enabled = true;
	this.bitmapData = new haxe_ds_StringMap();
	this.font = new haxe_ds_StringMap();
	this.sound = new haxe_ds_StringMap();
};
$hxClasses["openfl.AssetCache"] = openfl_AssetCache;
openfl_AssetCache.__name__ = ["openfl","AssetCache"];
openfl_AssetCache.prototype = {
	get_enabled: function() {
		return this.__enabled;
	}
	,__class__: openfl_AssetCache
};
var openfl_Assets = function() { };
$hxClasses["openfl.Assets"] = openfl_Assets;
openfl_Assets.__name__ = ["openfl","Assets"];
openfl_Assets.getBitmapData = function(id,useCache) {
	if(useCache == null) useCache = true;
	openfl_Assets.initialize();
	var r = null;
	var c;
	var b;
	if(useCache && (c = openfl_Assets.cache).get_enabled() && c.bitmapData.exists(id) && openfl_Assets.isValidBitmapData(b = openfl_Assets.cache.bitmapData.get(id))) return b;
	var i = id.indexOf(":");
	var ln = id.substring(0,i);
	var sn = id.substring(i + 1);
	var lr = openfl_Assets.getLibrary(ln);
	if(lr != null) {
		if(lr.exists(sn,openfl_AssetType.IMAGE)) {
			r = lr.getBitmapData(sn);
			if(useCache) {
				if(c.get_enabled()) c.bitmapData.set(id,r);
			} else r = r.clone();
		} else null;
	} else null;
	return r;
};
openfl_Assets.getLibrary = function(name) {
	return openfl_Assets.libraries.get(name == null || name == ""?"default":name);
};
openfl_Assets.initialize = function() {
	if(!openfl_Assets.initialized) {
		openfl_Assets.registerLibrary("default",new DefaultAssetLibrary());
		openfl_Assets.initialized = true;
	}
};
openfl_Assets.isValidBitmapData = function(bitmapData) {
	return true;
};
openfl_Assets.registerLibrary = function(name,library) {
	if(openfl_Assets.libraries.exists(name)) openfl_Assets.unloadLibrary(name);
	openfl_Assets.libraries.set(name,library);
};
openfl_Assets.unloadLibrary = function(name) {
	openfl_Assets.initialize();
	var $it0 = openfl_Assets.cache.bitmapData.keys();
	while( $it0.hasNext() ) {
		var key = $it0.next();
		if(key.substring(0,key.indexOf(":")) == name) openfl_Assets.cache.bitmapData.remove(key);
	}
	openfl_Assets.libraries.remove(name);
};
var openfl_AssetType = $hxClasses["openfl.AssetType"] = { __ename__ : ["openfl","AssetType"], __constructs__ : ["BINARY","FONT","IMAGE","MOVIE_CLIP","MUSIC","SOUND","TEMPLATE","TEXT"] };
openfl_AssetType.BINARY = ["BINARY",0];
openfl_AssetType.BINARY.toString = $estr;
openfl_AssetType.BINARY.__enum__ = openfl_AssetType;
openfl_AssetType.FONT = ["FONT",1];
openfl_AssetType.FONT.toString = $estr;
openfl_AssetType.FONT.__enum__ = openfl_AssetType;
openfl_AssetType.IMAGE = ["IMAGE",2];
openfl_AssetType.IMAGE.toString = $estr;
openfl_AssetType.IMAGE.__enum__ = openfl_AssetType;
openfl_AssetType.MOVIE_CLIP = ["MOVIE_CLIP",3];
openfl_AssetType.MOVIE_CLIP.toString = $estr;
openfl_AssetType.MOVIE_CLIP.__enum__ = openfl_AssetType;
openfl_AssetType.MUSIC = ["MUSIC",4];
openfl_AssetType.MUSIC.toString = $estr;
openfl_AssetType.MUSIC.__enum__ = openfl_AssetType;
openfl_AssetType.SOUND = ["SOUND",5];
openfl_AssetType.SOUND.toString = $estr;
openfl_AssetType.SOUND.__enum__ = openfl_AssetType;
openfl_AssetType.TEMPLATE = ["TEMPLATE",6];
openfl_AssetType.TEMPLATE.toString = $estr;
openfl_AssetType.TEMPLATE.__enum__ = openfl_AssetType;
openfl_AssetType.TEXT = ["TEXT",7];
openfl_AssetType.TEXT.toString = $estr;
openfl_AssetType.TEXT.__enum__ = openfl_AssetType;
var openfl_display_Bitmap = function(bitmapData,pixelSnapping,smoothing) {
	if(smoothing == null) smoothing = false;
	openfl_display_DisplayObject.call(this);
	this.set_bitmapData(bitmapData);
};
$hxClasses["openfl.display.Bitmap"] = openfl_display_Bitmap;
openfl_display_Bitmap.__name__ = ["openfl","display","Bitmap"];
openfl_display_Bitmap.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_Bitmap.__super__ = openfl_display_DisplayObject;
openfl_display_Bitmap.prototype = $extend(openfl_display_DisplayObject.prototype,{
	set_bitmapData: function(v) {
		if(this.bitmapData != null) this.component.removeChild(this.bitmapData.component);
		if(v != null) this.component.appendChild(v.handle());
		return this.bitmapData = v;
	}
	,get_width: function() {
		if(this.__width != null) return this.__width; else if(this.bitmapData != null) return this.bitmapData.component.width; else return 0;
	}
	,get_height: function() {
		if(this.__height != null) return this.__height; else if(this.bitmapData != null) return this.bitmapData.component.height; else return 0;
	}
	,drawToSurface: function(cnv,ctx,matrix,ctr,blendMode,clipRect,smoothing) {
		this.bitmapData.drawToSurface(cnv,ctx,matrix,ctr,blendMode,clipRect,smoothing);
	}
	,hitTestLocal: function(x,y,p,v) {
		return (!v || this.visible) && this.bitmapData != null && x >= 0 && y >= 0 && x < this.bitmapData.component.width && y < this.bitmapData.component.height;
	}
	,__class__: openfl_display_Bitmap
});
var openfl_display_IGraphics = function() { };
$hxClasses["openfl.display.IGraphics"] = openfl_display_IGraphics;
openfl_display_IGraphics.__name__ = ["openfl","display","IGraphics"];
openfl_display_IGraphics.__interfaces__ = [openfl_display_IBitmapDrawable];
var openfl_display_Graphics = function() {
	this.rgPending = false;
	this.synced = true;
	this.component = openfl_Lib.jsNode("canvas");
	this.context = this.component.getContext("2d",null);
	this.context.save();
	this.bounds = new openfl_geom_Rectangle();
	this.resetBounds();
	this.irec = [];
	this.frec = [];
	this.arec = [];
	this.lineWidth = this.ilen = this.flen = this.alen = 0;
};
$hxClasses["openfl.display.Graphics"] = openfl_display_Graphics;
openfl_display_Graphics.__name__ = ["openfl","display","Graphics"];
openfl_display_Graphics.__interfaces__ = [openfl_display_IGraphics,openfl_display_IBitmapDrawable];
openfl_display_Graphics.prototype = {
	regenerate: function() {
		var o = this.component;
		var s = this.component.style;
		var q = this.context;
		var b = this.bounds;
		var bx = ~(~(b.x - 2));
		var by = ~(~(b.y - 2));
		var bw = Math.ceil(b.width + 4);
		var bh = Math.ceil(b.height + 4);
		this.synced = true;
		this.rgPending = false;
		if(b.width <= 0 || b.height <= 0) {
			o.width = o.height = 1;
			s.top = s.left = "0";
			return;
		}
		if(this.offsetX != bx || this.offsetY != by) {
			s.left = (this.offsetX = bx) + "px";
			s.top = (this.offsetY = by) + "px";
		}
		if(bw != o.width || bh != o.height) {
			o.width = bw;
			o.height = bh;
		} else q.clearRect(0,0,bw,bh);
		q.save();
		q.translate(-bx,-by);
		this.render(o,q);
		q.restore();
	}
	,regenerateTask: function() {
		if(this.rgPending) this.regenerate();
	}
	,requestRegeneration: function() {
		openfl_Lib.schedule($bind(this,this.regenerateTask));
		this.rgPending = true;
	}
	,set_displayObject: function(v) {
		if(this.displayObject != v) {
			this.displayObject = v;
			if(!this.synced) this.requestRegeneration();
		}
		return v;
	}
	,resetBounds: function() {
		this.bounds.setVoid();
		this.invalidate();
	}
	,grab: function(x,y,r,b) {
		var i;
		if(x < (i = this.bounds.x)) {
			i = i - x;
			this.bounds.x -= i;
			this.bounds.width += i;
		}
		if(y < (i = this.bounds.y)) {
			i = i - y;
			this.bounds.y -= i;
			this.bounds.height += i;
		}
		if(r > (i = this.bounds.get_right())) this.bounds.width += r - i;
		if(b > (i = this.bounds.get_bottom())) this.bounds.height += b - i;
		this.invalidate();
	}
	,invalidate: function() {
		if(this.synced) {
			this.synced = false;
			if(!this.rgPending && this.displayObject != null && this.displayObject.get_stage() != null) this.requestRegeneration();
		}
	}
	,clear: function() {
		var i = 0;
		while(i < this.alen) this.arec[i++] = null;
		this.lineWidth = this.ilen = this.flen = this.alen = 0;
		this.resetBounds();
		this.invalidate();
	}
	,lineStyle: function(w,c,a,ph,sm,cs,js,ml) {
		this.irec[this.ilen++] = 1;
		var v;
		if(w > 0) v = this.lineWidth = w; else v = this.lineWidth = 0;
		this.frec[this.flen++] = v;
		if(w > 0) {
			var v1 = openfl_Lib.rgbf(c != null?c:0,a != null?a:1);
			this.arec[this.alen++] = v1;
			if(cs == "none") this.irec[this.ilen++] = 2; else if(cs == "square") this.irec[this.ilen++] = 1; else this.irec[this.ilen++] = 0;
			if(js == "bevel") this.irec[this.ilen++] = 2; else if(js == "miter") this.irec[this.ilen++] = 1; else this.irec[this.ilen++] = 0;
		}
	}
	,beginFill: function(c,a) {
		this.irec[this.ilen++] = 2;
		var v = openfl_Lib.rgbf(c != null?c:0,a != null?a:1);
		this.arec[this.alen++] = v;
	}
	,beginBitmapFill: function(bitmap,m,repeat,smooth) {
		this.irec[this.ilen++] = 3;
		this.arec[this.alen++] = bitmap;
		if(repeat != false) this.irec[this.ilen++] = 1; else this.irec[this.ilen++] = 0;
		var i;
		if(m != null) i = 1; else i = 0;
		this.irec[this.ilen++] = i;
		if(i) {
			var r = this.frec;
			var l = this.flen;
			r[l++] = m.a;
			r[l++] = m.b;
			r[l++] = m.c;
			r[l++] = m.d;
			r[l++] = m.tx;
			r[l++] = m.ty;
			this.flen = l;
		}
	}
	,endFill: function() {
		this.irec[this.ilen++] = 9;
		this.invalidate();
	}
	,moveTo: function(x,y) {
		this.irec[this.ilen++] = 10;
		this.frec[this.flen++] = x;
		this.frec[this.flen++] = y;
		var r = this.lineWidth / 2;
		this.grab(x - r,y - r,x + r,y + r);
	}
	,lineTo: function(x,y) {
		this.irec[this.ilen++] = 11;
		this.frec[this.flen++] = x;
		this.frec[this.flen++] = y;
		var r = this.lineWidth / 2;
		this.grab(x - r,y - r,x + r,y + r);
	}
	,drawRect: function(x,y,w,h) {
		this.irec[this.ilen++] = 13;
		var r = this.frec;
		var l = this.flen;
		r[l++] = x;
		r[l++] = y;
		r[l++] = w;
		r[l++] = h;
		this.flen = l;
		var r1 = this.lineWidth / 2;
		this.grab(x - r1,y - r1,x + w + r1,y + h + r1);
	}
	,drawCircle: function(x,y,q) {
		this.irec[this.ilen++] = 14;
		var r = this.frec;
		var l = this.flen;
		r[l++] = x;
		r[l++] = y;
		r[l++] = q;
		this.flen = l;
		var r1 = q;
		r1 += this.lineWidth / 2;
		this.grab(x - r1,y - r1,x + r1,y + r1);
	}
	,drawToSurface: function(cnv,ctx,mtx,ctr,blendMode,clipRect,smoothing) {
		ctx.save();
		if(mtx != null) ctx.transform(mtx.a,mtx.b,mtx.c,mtx.d,mtx.tx,mtx.ty);
		this.render(cnv,ctx);
		ctx.restore();
	}
	,hitTestLocal: function(x,y,p) {
		if(this.bounds.contains(x,y)) {
			if(p) {
				if(!this.synced) this.regenerate();
				try {
					return this.context.getImageData(x - this.offsetX,y - this.offsetY,1,1).data[3] != 0;
				} catch( _ ) {
					if (_ instanceof js__$Boot_HaxeError) _ = _.val;
				}
			}
			return true;
		}
		return false;
	}
	,_closePath: function(cnv,ctx,f,m,texture) {
		if(f & 1) {
			ctx.closePath();
			if(f & 4) {
				ctx.save();
				ctx.transform(m.a,m.b,m.c,m.d,m.tx,m.ty);
				ctx.fillStyle = ctx.createPattern(texture,f & 8?"repeat":"no-repeat");
				ctx.fill();
				ctx.restore();
			} else ctx.fill();
		}
		if(f & 2) ctx.stroke();
		ctx.beginPath();
		return f;
	}
	,render: function(cnv,ctx) {
		var f = 0;
		var p = -1;
		var m = this._drawMatrix;
		var v;
		var i;
		var d;
		var n = 0;
		var tex = null;
		var ir = this.irec;
		var ip = -1;
		var il = this.ilen - 1;
		var ar = this.arec;
		var ap = -1;
		var nr = this.frec;
		var np = -1;
		if(m == null) this._drawMatrix = m = new openfl_geom_Matrix();
		ctx.save();
		try {
			while(ip < il) {
				var _g = i = ir[++ip];
				switch(_g) {
				case 0:
					throw "__break__";
					break;
				case 1:
					if(n > 0) f = this._closePath(cnv,ctx,f,m,tex);
					ctx.lineWidth = d = nr[++np];
					if(d > 0) {
						f |= 2;
						ctx.strokeStyle = ar[++ap];
						if((i = ir[++ip]) == 2) ctx.lineCap = "butt"; else if(i == 1) ctx.lineCap = "square"; else ctx.lineCap = "round";
						if((i = ir[++ip]) == 2) ctx.lineJoin = "bevel"; else if(i == 1) ctx.lineJoin = "miter"; else ctx.lineJoin = "round";
					} else {
						f &= -3;
						ctx.strokeStyle = null;
					}
					break;
				case 2:case 3:case 4:
					if(n > 0) f = this._closePath(cnv,ctx,f,m,tex);
					f |= 1;
					if(i == 3) {
						tex = ar[++ap].handle();
						i = ir[++ip];
						if(ir[++ip] != 0) {
							if(i != 0) f |= 8; else f &= -9;
							m.a = nr[++np];
							m.b = nr[++np];
							m.c = nr[++np];
							m.d = nr[++np];
							m.tx = nr[++np];
							m.ty = nr[++np];
							f |= 4;
						} else {
							ctx.fillStyle = ctx.createPattern(tex,i != 0?"repeat":"no-repeat");
							f &= -5;
						}
					} else {
						ctx.fillStyle = ar[++ap];
						f &= -5;
					}
					n = 0;
					break;
				case 9:
					if(n > 0) {
						f = this._closePath(cnv,ctx,f,m,tex);
						n = 0;
					}
					f &= -2;
					break;
				case 10:
					ctx.moveTo(nr[++np],nr[++np]);
					n++;
					break;
				case 11:
					ctx.lineTo(nr[++np],nr[++np]);
					n++;
					break;
				case 12:
					ctx.quadraticCurveTo(nr[++np],nr[++np],nr[++np],nr[++np]);
					n++;
					break;
				case 13:
					ctx.rect(nr[++np],nr[++np],nr[++np],nr[++np]);
					n++;
					break;
				case 14:
					var x = nr[++np];
					var y = nr[++np];
					var r = nr[++np];
					if(r < 0) r = -r;
					ctx.moveTo(x + r,y);
					if(r != 0) ctx.arc(x,y,r,0,Math.PI * 2,true);
					n++;
					break;
				case 17:
					var x1 = nr[++np];
					var y1 = nr[++np];
					var w = nr[++np];
					var h = nr[++np];
					var x11 = x1 + w / 2;
					var y11 = y1 + h / 2;
					var x2 = x1 + w;
					var y2 = y1 + h;
					var m1 = 0.275892;
					var xm = w * m1;
					var ym = h * m1;
					ctx.moveTo(x11,y1);
					ctx.bezierCurveTo(x11 + xm,y1,x2,y11 - ym,x2,y11);
					ctx.bezierCurveTo(x2,y11 + ym,x11 + xm,y2,x11,y2);
					ctx.bezierCurveTo(x11 - xm,y2,x1,y11 + ym,x1,y11);
					ctx.bezierCurveTo(x1,y11 - ym,x11 - xm,y1,x11,y1);
					n++;
					break;
				case 15:
					var x3 = nr[++np];
					var y3 = nr[++np];
					var w1 = nr[++np];
					var h1 = nr[++np];
					var u = nr[++np];
					var q = nr[++np];
					if(q == null) {
						ctx.moveTo(x3 + u,y3 + h1);
						ctx.arcTo(x3 + w1 - u,y3 + h1 - u,x3 + w1,y3 + h1 - u,u);
						ctx.arcTo(x3 + w1,y3 + u,x3 + w1 - u,y3,u);
						ctx.arcTo(x3 + u,y3,x3,y3 + u,u);
						ctx.arcTo(x3 + u,y3 + h1 - u,x3 + u,y3 + h1,u);
					} else {
						ctx.moveTo(x3 + u,y3 + h1);
						ctx.lineTo(x3 + w1 - u,y3 + h1);
						ctx.quadraticCurveTo(x3 + w1,y3 + h1,x3 + w1,y3 + h1 - q);
						ctx.lineTo(x3 + w1,y3 + q);
						ctx.quadraticCurveTo(x3 + w1,y3,x3 + w1 - u,y3);
						ctx.lineTo(x3 + u,y3);
						ctx.quadraticCurveTo(x3,y3,x3,y3 + q);
						ctx.lineTo(x3,y3 + h1 - q);
						ctx.quadraticCurveTo(x3,y3 + h1,x3 + u,y3 + h1);
					}
					n++;
					break;
				case 16:
					var tex1 = ar[++ap];
					var d1 = tex1.handle();
					var fx = ir[++ip];
					var fs = (fx & 1) != 0;
					var fr = (fx & 2) != 0;
					var fc = (fx & 4) != 0;
					var fa = (fx & 8) != 0;
					var fm = (fx & 16) != 0;
					var c = ir[++ip];
					var tx;
					var ty;
					var ox;
					var oy;
					var rx;
					var ry;
					var rw;
					var rh;
					ctx.save();
					if((fx & 65536) != 0) ctx.globalCompositeOperation = "lighter"; else ctx.globalCompositeOperation = "source-over";
					while(--c >= 0) {
						tx = nr[++np];
						ty = nr[++np];
						ox = nr[++np];
						oy = nr[++np];
						rx = nr[++np];
						ry = nr[++np];
						rw = nr[++np];
						rh = nr[++np];
						ctx.save();
						if(fm) ctx.transform(nr[++np],nr[++np],nr[++np],nr[++np],tx,ty); else {
							ctx.translate(tx,ty);
							if(fs) ctx.scale(v = nr[++np],v);
							if(fr) ctx.rotate(nr[++np]);
						}
						if(fc) p += 3;
						if(fa) ctx.globalAlpha = nr[++np];
						ctx.drawImage(d1,rx,ry,rw,rh,-ox,-oy,rw,rh);
						ctx.restore();
					}
					ctx.restore();
					break;
				default:
					throw new js__$Boot_HaxeError(4000 + i);
				}
			}
		} catch( e ) { if( e != "__break__" ) throw e; }
		if(n > 0) f = this._closePath(cnv,ctx,f,m,tex);
		ctx.restore();
	}
	,__class__: openfl_display_Graphics
};
var openfl_display_PixelSnapping = $hxClasses["openfl.display.PixelSnapping"] = { __ename__ : ["openfl","display","PixelSnapping"], __constructs__ : ["ALWAYS","AUTO","NEVER"] };
openfl_display_PixelSnapping.ALWAYS = ["ALWAYS",0];
openfl_display_PixelSnapping.ALWAYS.toString = $estr;
openfl_display_PixelSnapping.ALWAYS.__enum__ = openfl_display_PixelSnapping;
openfl_display_PixelSnapping.AUTO = ["AUTO",1];
openfl_display_PixelSnapping.AUTO.toString = $estr;
openfl_display_PixelSnapping.AUTO.__enum__ = openfl_display_PixelSnapping;
openfl_display_PixelSnapping.NEVER = ["NEVER",2];
openfl_display_PixelSnapping.NEVER.toString = $estr;
openfl_display_PixelSnapping.NEVER.__enum__ = openfl_display_PixelSnapping;
var openfl_display_Shape = function() {
	(this.graphics = new openfl_display_Graphics()).set_displayObject(this);
	this.component = this.graphics.component;
	openfl_display_DisplayObject.call(this);
};
$hxClasses["openfl.display.Shape"] = openfl_display_Shape;
openfl_display_Shape.__name__ = ["openfl","display","Shape"];
openfl_display_Shape.__interfaces__ = [openfl_display_IBitmapDrawable];
openfl_display_Shape.__super__ = openfl_display_DisplayObject;
openfl_display_Shape.prototype = $extend(openfl_display_DisplayObject.prototype,{
	drawToSurface: function(cnv,ctx,mtx,ctr,blendMode,clipRect,smoothing) {
		this.graphics.drawToSurface(cnv,ctx,mtx,ctr,blendMode,clipRect,smoothing);
	}
	,set_stage: function(v) {
		var z = this.get_stage() == null && v != null;
		var r = openfl_display_DisplayObject.prototype.set_stage.call(this,v);
		if(z) this.graphics.invalidate();
		return r;
	}
	,hitTestLocal: function(x,y,p,v) {
		return (!v || this.visible) && this.graphics.hitTestLocal(x,y,p);
	}
	,__class__: openfl_display_Shape
});
var openfl_display_Tilesheet = function(image) {
	this.nmeBitmap = image;
	this.qOffsets = [];
	this.qRects = [];
	this.bounds = new openfl_geom_Rectangle();
	this.tile = new openfl_geom_Rectangle();
	this.matrix = new openfl_geom_Matrix();
};
$hxClasses["openfl.display.Tilesheet"] = openfl_display_Tilesheet;
openfl_display_Tilesheet.__name__ = ["openfl","display","Tilesheet"];
openfl_display_Tilesheet.prototype = {
	addTileRect: function(r,p) {
		if(p == null) p = new openfl_geom_Point();
		this.qRects.push(r);
		this.qOffsets.push(p);
		return this.qRects.length - 1;
	}
	,__class__: openfl_display_Tilesheet
};
var openfl_errors_Error = function(message,id) {
	if(id == null) id = 0;
	if(message == null) message = "";
	this.message = message;
	this.errorID = id;
};
$hxClasses["openfl.errors.Error"] = openfl_errors_Error;
openfl_errors_Error.__name__ = ["openfl","errors","Error"];
openfl_errors_Error.prototype = {
	toString: function() {
		if(this.message != null) return this.message; else return "Error";
	}
	,__class__: openfl_errors_Error
};
var openfl_events_Event = function(type,bubbles,cancelable) {
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.type = type;
	this.bubbles = bubbles;
	this.cancelable = cancelable;
};
$hxClasses["openfl.events.Event"] = openfl_events_Event;
openfl_events_Event.__name__ = ["openfl","events","Event"];
openfl_events_Event.prototype = {
	get_target: function() {
		return this._target || this.target;
	}
	,set_target: function(v) {
		return this._target = v;
	}
	,set_currentTarget: function(v) {
		return this._current = v;
	}
	,__class__: openfl_events_Event
};
var openfl_events_TextEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.TextEvent"] = openfl_events_TextEvent;
openfl_events_TextEvent.__name__ = ["openfl","events","TextEvent"];
openfl_events_TextEvent.__super__ = openfl_events_Event;
openfl_events_TextEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: openfl_events_TextEvent
});
var openfl_events_ErrorEvent = function(type,bubbles,cancelable,text) {
	openfl_events_TextEvent.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.ErrorEvent"] = openfl_events_ErrorEvent;
openfl_events_ErrorEvent.__name__ = ["openfl","events","ErrorEvent"];
openfl_events_ErrorEvent.__super__ = openfl_events_TextEvent;
openfl_events_ErrorEvent.prototype = $extend(openfl_events_TextEvent.prototype,{
	__class__: openfl_events_ErrorEvent
});
var openfl_events_HTTPStatusEvent = function(type,bubbles,cancelable,status) {
	if(status == null) status = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	this.status = status;
	openfl_events_Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.HTTPStatusEvent"] = openfl_events_HTTPStatusEvent;
openfl_events_HTTPStatusEvent.__name__ = ["openfl","events","HTTPStatusEvent"];
openfl_events_HTTPStatusEvent.__super__ = openfl_events_Event;
openfl_events_HTTPStatusEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: openfl_events_HTTPStatusEvent
});
var openfl_events_IOErrorEvent = function(type,bubbles,cancelable,inText) {
	if(inText == null) inText = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.text = inText;
};
$hxClasses["openfl.events.IOErrorEvent"] = openfl_events_IOErrorEvent;
openfl_events_IOErrorEvent.__name__ = ["openfl","events","IOErrorEvent"];
openfl_events_IOErrorEvent.__super__ = openfl_events_Event;
openfl_events_IOErrorEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: openfl_events_IOErrorEvent
});
var openfl_events_KeyboardEvent = function() { };
$hxClasses["openfl.events.KeyboardEvent"] = openfl_events_KeyboardEvent;
openfl_events_KeyboardEvent.__name__ = ["openfl","events","KeyboardEvent"];
openfl_events_KeyboardEvent.__super__ = openfl_events_Event;
openfl_events_KeyboardEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: openfl_events_KeyboardEvent
});
var openfl_events_UIEvent = function(type,bubbles,cancelable) {
	openfl_events_Event.call(this,type,bubbles,cancelable);
};
$hxClasses["openfl.events.UIEvent"] = openfl_events_UIEvent;
openfl_events_UIEvent.__name__ = ["openfl","events","UIEvent"];
openfl_events_UIEvent.__super__ = openfl_events_Event;
openfl_events_UIEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: openfl_events_UIEvent
});
var openfl_events_MouseEvent = function(type,bubbles,cancelable,lx,ly,obj,ctrlKey,altKey,shiftKey,bt,delta) {
	openfl_events_UIEvent.call(this,type,bubbles != null?bubbles:true,cancelable != null?cancelable:false);
	this.ctrlKey = ctrlKey != null?ctrlKey:false;
	this.altKey = altKey != null?altKey:false;
	this.shiftKey = shiftKey != null?shiftKey:false;
	this.relatedObject = obj;
	this.buttonDown = bt != null?bt:false;
	this.delta = delta != null?delta:0;
};
$hxClasses["openfl.events.MouseEvent"] = openfl_events_MouseEvent;
openfl_events_MouseEvent.__name__ = ["openfl","events","MouseEvent"];
openfl_events_MouseEvent.__super__ = openfl_events_UIEvent;
openfl_events_MouseEvent.prototype = $extend(openfl_events_UIEvent.prototype,{
	__class__: openfl_events_MouseEvent
});
var openfl_events_ProgressEvent = function(type,bubbles,cancelable,bytesLoaded,bytesTotal) {
	if(bytesTotal == null) bytesTotal = 0;
	if(bytesLoaded == null) bytesLoaded = 0;
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_Event.call(this,type,bubbles,cancelable);
	this.bytesLoaded = bytesLoaded;
	this.bytesTotal = bytesTotal;
};
$hxClasses["openfl.events.ProgressEvent"] = openfl_events_ProgressEvent;
openfl_events_ProgressEvent.__name__ = ["openfl","events","ProgressEvent"];
openfl_events_ProgressEvent.__super__ = openfl_events_Event;
openfl_events_ProgressEvent.prototype = $extend(openfl_events_Event.prototype,{
	__class__: openfl_events_ProgressEvent
});
var openfl_events_SecurityErrorEvent = function(type,bubbles,cancelable,text) {
	if(text == null) text = "";
	if(cancelable == null) cancelable = false;
	if(bubbles == null) bubbles = false;
	openfl_events_ErrorEvent.call(this,type,bubbles,cancelable);
	this.text = text;
};
$hxClasses["openfl.events.SecurityErrorEvent"] = openfl_events_SecurityErrorEvent;
openfl_events_SecurityErrorEvent.__name__ = ["openfl","events","SecurityErrorEvent"];
openfl_events_SecurityErrorEvent.__super__ = openfl_events_ErrorEvent;
openfl_events_SecurityErrorEvent.prototype = $extend(openfl_events_ErrorEvent.prototype,{
	__class__: openfl_events_SecurityErrorEvent
});
var openfl_events_TouchEvent = function(type,bubbles,cancelable,id,primary,lx,ly,sx,sy,ps,obj,ctrl,alt,shift) {
	openfl_events_UIEvent.call(this,type,bubbles,cancelable);
	this.altKey = alt;
	this.shiftKey = shift;
	this.ctrlKey = ctrl;
	this.touchPointID = id;
	this.sizeX = sx;
	this.sizeY = sy;
	this.pressure = ps;
};
$hxClasses["openfl.events.TouchEvent"] = openfl_events_TouchEvent;
openfl_events_TouchEvent.__name__ = ["openfl","events","TouchEvent"];
openfl_events_TouchEvent.__super__ = openfl_events_UIEvent;
openfl_events_TouchEvent.prototype = $extend(openfl_events_UIEvent.prototype,{
	__class__: openfl_events_TouchEvent
});
var openfl_filters_BitmapFilter = function() { };
$hxClasses["openfl.filters.BitmapFilter"] = openfl_filters_BitmapFilter;
openfl_filters_BitmapFilter.__name__ = ["openfl","filters","BitmapFilter"];
var openfl_media_Sound = function() { };
$hxClasses["openfl.media.Sound"] = openfl_media_Sound;
openfl_media_Sound.__name__ = ["openfl","media","Sound"];
openfl_media_Sound.__super__ = openfl_events_EventDispatcher;
openfl_media_Sound.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	__class__: openfl_media_Sound
});
var openfl_net_IURLLoader = function() { };
$hxClasses["openfl.net.IURLLoader"] = openfl_net_IURLLoader;
openfl_net_IURLLoader.__name__ = ["openfl","net","IURLLoader"];
openfl_net_IURLLoader.__interfaces__ = [openfl_events_IEventDispatcher];
openfl_net_IURLLoader.prototype = {
	__class__: openfl_net_IURLLoader
};
var openfl_net_SharedObject = function() {
	openfl_events_EventDispatcher.call(this);
};
$hxClasses["openfl.net.SharedObject"] = openfl_net_SharedObject;
openfl_net_SharedObject.__name__ = ["openfl","net","SharedObject"];
openfl_net_SharedObject.getLocal = function(name,localPath,secure) {
	if(secure == null) secure = false;
	if(localPath == null) localPath = window.location.href;
	var so = new openfl_net_SharedObject();
	so.nmeKey = localPath + ":" + name;
	var rawData = null;
	try {
		rawData = openfl_net_SharedObject.nmeGetLocalStorage().getItem(so.nmeKey);
	} catch( e ) {
		if (e instanceof js__$Boot_HaxeError) e = e.val;
	}
	so.data = { };
	if(rawData != null && rawData != "") {
		var unserializer = new haxe_Unserializer(rawData);
		unserializer.setResolver({ resolveEnum : Type.resolveEnum, resolveClass : openfl_net_SharedObject.resolveClass});
		so.data = unserializer.unserialize();
	}
	if(so.data == null) so.data = { };
	return so;
};
openfl_net_SharedObject.nmeGetLocalStorage = function() {
	var res = js_Browser.getLocalStorage();
	if(res == null) throw new js__$Boot_HaxeError(new openfl_errors_Error("SharedObject not supported"));
	return res;
};
openfl_net_SharedObject.resolveClass = function(name) {
	if(name != null) return Type.resolveClass(StringTools.replace(StringTools.replace(name,"jeash.","openfl."),"browser.","openfl."));
	return null;
};
openfl_net_SharedObject.__super__ = openfl_events_EventDispatcher;
openfl_net_SharedObject.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	flush: function() {
		var data = haxe_Serializer.run(this.data);
		try {
			openfl_net_SharedObject.nmeGetLocalStorage().removeItem(this.nmeKey);
			openfl_net_SharedObject.nmeGetLocalStorage().setItem(this.nmeKey,data);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			return openfl_net_SharedObjectFlushStatus.PENDING;
		}
		return openfl_net_SharedObjectFlushStatus.FLUSHED;
	}
	,__class__: openfl_net_SharedObject
});
var openfl_net_SharedObjectFlushStatus = $hxClasses["openfl.net.SharedObjectFlushStatus"] = { __ename__ : ["openfl","net","SharedObjectFlushStatus"], __constructs__ : ["FLUSHED","PENDING"] };
openfl_net_SharedObjectFlushStatus.FLUSHED = ["FLUSHED",0];
openfl_net_SharedObjectFlushStatus.FLUSHED.toString = $estr;
openfl_net_SharedObjectFlushStatus.FLUSHED.__enum__ = openfl_net_SharedObjectFlushStatus;
openfl_net_SharedObjectFlushStatus.PENDING = ["PENDING",1];
openfl_net_SharedObjectFlushStatus.PENDING.toString = $estr;
openfl_net_SharedObjectFlushStatus.PENDING.__enum__ = openfl_net_SharedObjectFlushStatus;
var openfl_net_URLLoader = function() { };
$hxClasses["openfl.net.URLLoader"] = openfl_net_URLLoader;
openfl_net_URLLoader.__name__ = ["openfl","net","URLLoader"];
openfl_net_URLLoader.__interfaces__ = [openfl_net_IURLLoader];
openfl_net_URLLoader.__super__ = openfl_events_EventDispatcher;
openfl_net_URLLoader.prototype = $extend(openfl_events_EventDispatcher.prototype,{
	getData: function() {
		return null;
	}
	,load: function(request) {
		this.requestUrl(request.url,request.method,request.data,request.formatRequestHeaders());
	}
	,registerEvents: function(subject) {
		var self = this;
		if(typeof XMLHttpRequestProgressEvent != "undefined") subject.addEventListener("progress",$bind(this,this.onProgress),false);
		subject.onreadystatechange = function() {
			if(subject.readyState == 4) {
				var s;
				try {
					s = subject.status;
				} catch( _ ) {
					if (_ instanceof js__$Boot_HaxeError) _ = _.val;
					s = null;
				}
				if(s != null) self.onStatus(s);
				if(s == null) self.onError("Failed to connect or resolve host"); else if(s >= 200 && s < 400) self.onData(subject.response); else if(s == 12029) self.onError("Failed to connect to host"); else if(s == 12007) self.onError("Unknown host"); else if(s == 0) {
					self.onError("Unable to make request (may be blocked due to cross-domain permissions)");
					self.onSecurityError("Unable to make request (may be blocked due to cross-domain permissions)");
				} else self.onError("Http Error #" + subject.status);
			}
		};
	}
	,requestUrl: function(url,method,data,requestHeaders) {
		var xmlHttpRequest = new XMLHttpRequest();
		this.getData = function() {
			if(xmlHttpRequest.response != null) return xmlHttpRequest.response; else return xmlHttpRequest.responseText;
		};
		this.registerEvents(xmlHttpRequest);
		var uri = "";
		if(js_Boot.__instanceof(data,openfl_utils_ByteArray)) {
			var data1 = data;
			if(this.dataFormat == 0) uri = data1.data.buffer; else uri = data1.readUTFBytes(data1.length);
		} else if(js_Boot.__instanceof(data,openfl_net_URLVariables)) {
			var data2 = data;
			var _g = 0;
			var _g1 = Reflect.fields(data2);
			while(_g < _g1.length) {
				var p = _g1[_g];
				++_g;
				if(uri.length != 0) uri += "&";
				uri += encodeURIComponent(p) + "=" + StringTools.urlEncode(Reflect.field(data2,p));
			}
		} else if(data != null) uri = data.toString();
		try {
			if(method == "GET" && uri != null && uri != "") {
				var question = url.split("?").length <= 1;
				xmlHttpRequest.open(method,url + (question?"?":"&") + Std.string(uri),true);
				uri = "";
			} else xmlHttpRequest.open(method,url,true);
		} catch( e ) {
			if (e instanceof js__$Boot_HaxeError) e = e.val;
			this.onError(e.toString());
			return;
		}
		if(this.dataFormat == 0) xmlHttpRequest.responseType = "arraybuffer";
		var _g2 = 0;
		while(_g2 < requestHeaders.length) {
			var header = requestHeaders[_g2];
			++_g2;
			xmlHttpRequest.setRequestHeader(header.name,header.value);
		}
		xmlHttpRequest.send(uri);
		this.onOpen();
	}
	,onData: function(_) {
		var v;
		if(_) v = _; else v = this.getData();
		var e;
		if(this.dataFormat == 0) this.data = openfl_utils_ByteArray.nmeOfBuffer(v); else this.data = Std.string(v);
		e = new openfl_events_Event("complete");
		e.set_currentTarget(this);
		this.dispatchEvent(e);
	}
	,onError: function(msg) {
		var e = new openfl_events_IOErrorEvent("ioError");
		e.text = msg;
		e.set_currentTarget(this);
		this.dispatchEvent(e);
	}
	,onOpen: function() {
		var e = new openfl_events_Event("open");
		e.set_currentTarget(this);
		this.dispatchEvent(e);
	}
	,onProgress: function(event) {
		var e = new openfl_events_ProgressEvent("progress");
		e.set_currentTarget(this);
		e.bytesLoaded = event.loaded;
		e.bytesTotal = event.total;
		this.dispatchEvent(e);
	}
	,onSecurityError: function(msg) {
		var evt = new openfl_events_SecurityErrorEvent("securityError");
		evt.text = msg;
		evt.set_currentTarget(this);
		this.dispatchEvent(evt);
	}
	,onStatus: function(status) {
		var e = new openfl_events_HTTPStatusEvent("httpStatus",false,false,status);
		e.set_currentTarget(this);
		this.dispatchEvent(e);
	}
	,__class__: openfl_net_URLLoader
});
var openfl_net_URLRequestHeader = function(name,value) {
	if(value == null) value = "";
	if(name == null) name = "";
	this.name = name;
	this.value = value;
};
$hxClasses["openfl.net.URLRequestHeader"] = openfl_net_URLRequestHeader;
openfl_net_URLRequestHeader.__name__ = ["openfl","net","URLRequestHeader"];
openfl_net_URLRequestHeader.prototype = {
	__class__: openfl_net_URLRequestHeader
};
var openfl_net_URLVariables = function() { };
$hxClasses["openfl.net.URLVariables"] = openfl_net_URLVariables;
openfl_net_URLVariables.__name__ = ["openfl","net","URLVariables"];
var openfl_text_Font = function() { };
$hxClasses["openfl.text.Font"] = openfl_text_Font;
openfl_text_Font.__name__ = ["openfl","text","Font"];
var openfl_ui_Multitouch = function() { };
$hxClasses["openfl.ui.Multitouch"] = openfl_ui_Multitouch;
openfl_ui_Multitouch.__name__ = ["openfl","ui","Multitouch"];
var openfl_ui_MultitouchInputMode = $hxClasses["openfl.ui.MultitouchInputMode"] = { __ename__ : ["openfl","ui","MultitouchInputMode"], __constructs__ : ["GESTURE","NONE","TOUCH_POINT"] };
openfl_ui_MultitouchInputMode.GESTURE = ["GESTURE",0];
openfl_ui_MultitouchInputMode.GESTURE.toString = $estr;
openfl_ui_MultitouchInputMode.GESTURE.__enum__ = openfl_ui_MultitouchInputMode;
openfl_ui_MultitouchInputMode.NONE = ["NONE",1];
openfl_ui_MultitouchInputMode.NONE.toString = $estr;
openfl_ui_MultitouchInputMode.NONE.__enum__ = openfl_ui_MultitouchInputMode;
openfl_ui_MultitouchInputMode.TOUCH_POINT = ["TOUCH_POINT",2];
openfl_ui_MultitouchInputMode.TOUCH_POINT.toString = $estr;
openfl_ui_MultitouchInputMode.TOUCH_POINT.__enum__ = openfl_ui_MultitouchInputMode;
var openfl_utils_ByteArray = function() {
	this.length = 0;
	this._nmeResizeBuffer(this.allocated = this.position = 0);
};
$hxClasses["openfl.utils.ByteArray"] = openfl_utils_ByteArray;
openfl_utils_ByteArray.__name__ = ["openfl","utils","ByteArray"];
openfl_utils_ByteArray.nmeOfBuffer = function(buffer) {
	var r = new openfl_utils_ByteArray();
	r.set_length(r.allocated = buffer.byteLength);
	r.data = new DataView(buffer);
	r.byteView = new Uint8Array(buffer);
	return r;
};
openfl_utils_ByteArray.prototype = {
	_nmeResizeBuffer: function(len) {
		var oldByteView = this.byteView;
		var newByteView = new Uint8Array(len);
		if(oldByteView != null) {
			if(oldByteView.length <= len) newByteView.set(oldByteView); else newByteView.set(oldByteView.subarray(0,len));
		}
		this.byteView = newByteView;
		this.data = new DataView(newByteView.buffer);
	}
	,readUTFBytes: function(len) {
		var r = "";
		var max = this.position + len;
		while(this.position < max) {
			var c = this.data.getUint8(this.position++);
			if(c < 128) {
				if(c == 0) break;
				r += String.fromCharCode(c);
			} else if(c < 224) r += String.fromCharCode((c & 63) << 6 | this.data.getUint8(this.position++) & 127); else if(c < 240) {
				var c2 = this.data.getUint8(this.position++);
				r += String.fromCharCode((c & 31) << 12 | (c2 & 127) << 6 | this.data.getUint8(this.position++) & 127);
			} else {
				var c21 = this.data.getUint8(this.position++);
				var c3 = this.data.getUint8(this.position++);
				r += String.fromCharCode((c & 15) << 18 | (c21 & 127) << 12 | c3 << 6 & 127 | this.data.getUint8(this.position++) & 127);
			}
		}
		return r;
	}
	,set_length: function(value) {
		if(this.allocated < value) this._nmeResizeBuffer(this.allocated = Std["int"](Math.max(value,this.allocated * 2))); else if(this.allocated > value) this._nmeResizeBuffer(this.allocated = value);
		return this.length = value;
	}
	,__class__: openfl_utils_ByteArray
};
var haxe_lang_Iterator = function() { };
$hxClasses["haxe.lang.Iterator"] = haxe_lang_Iterator;
haxe_lang_Iterator.__name__ = ["haxe","lang","Iterator"];
haxe_lang_Iterator.prototype = {
	__class__: haxe_lang_Iterator
};
var haxe_lang_Iterable = function() { };
$hxClasses["haxe.lang.Iterable"] = haxe_lang_Iterable;
haxe_lang_Iterable.__name__ = ["haxe","lang","Iterable"];
haxe_lang_Iterable.prototype = {
	__class__: haxe_lang_Iterable
};
var oz_Animation2D = function() {
	this.time = 0;
	this.frameRate = Main.FPS;
	this.isLooping = false;
	this.doc = null;
};
$hxClasses["oz.Animation2D"] = oz_Animation2D;
oz_Animation2D.__name__ = ["oz","Animation2D"];
oz_Animation2D.prototype = {
	Update: function(deltaTime) {
		if(deltaTime == null) deltaTime = -1;
		if(deltaTime < -0.5) deltaTime = 1 / Main.FPS;
		var frame = Math.floor(this.time * this.frameRate + 0.0001);
		if(frame >= this.frames) {
			if(this.isLooping) frame = frame % this.frames; else frame = this.frames - 1;
		}
		var _g1 = 0;
		var _g = this.elements.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.elements[i].Update(this.doc.getChild(this.elements[i].name),frame);
		}
		this.time += deltaTime;
	}
	,__class__: oz_Animation2D
};
var oz_Element2D = function() {
	this.name = null;
};
$hxClasses["oz.Element2D"] = oz_Element2D;
oz_Element2D.__name__ = ["oz","Element2D"];
oz_Element2D.prototype = {
	Update: function(sprite,frame) {
		var begin = null;
		var end = null;
		var _g1 = 0;
		var _g = this.keyframes.length;
		while(_g1 < _g) {
			var i = _g1++;
			var k = this.keyframes[i];
			if(k.frame <= frame) begin = k;
			if(k.frame > frame && end == null) end = k;
		}
		var p;
		if(end == null) {
			end = begin;
			p = 1;
		} else p = (frame - begin.frame) / (end.frame - begin.frame);
		var x = begin.x + p * (end.x - begin.x);
		var y = begin.y + p * (end.y - begin.y);
		sprite.set_x(x);
		sprite.set_y(y);
		x = begin.scaleX + p * (end.scaleX - begin.scaleX);
		y = begin.scaleY + p * (end.scaleY - begin.scaleY);
		sprite.set_scaleX(begin.scaleX + p * (end.scaleX - begin.scaleX));
		sprite.set_scaleY(begin.scaleY + p * (end.scaleY - begin.scaleY));
		var r1 = begin.rotation;
		var r2 = end.rotation;
		while(r1 < 0) r1 += 360;
		while(r2 < 0) r2 += 360;
		var r3 = r2 - 360;
		if(Math.abs(r2 - r1) > Math.abs(r3 - r1)) r2 = r3;
		r3 = r2 + 360;
		if(Math.abs(r2 - r1) > Math.abs(r3 - r1)) r2 = r3;
		sprite.set_rotation(r1 + p * (r2 - r1));
		sprite.set_alpha(begin.a + p * (end.a - begin.a));
	}
	,__class__: oz_Element2D
};
var oz_Keyframe2D = function() { };
$hxClasses["oz.Keyframe2D"] = oz_Keyframe2D;
oz_Keyframe2D.__name__ = ["oz","Keyframe2D"];
oz_Keyframe2D.prototype = {
	__class__: oz_Keyframe2D
};
var oz_NapeUtil = function() { };
$hxClasses["oz.NapeUtil"] = oz_NapeUtil;
oz_NapeUtil.__name__ = ["oz","NapeUtil"];
oz_NapeUtil.IsFrom2Shapes = function(target,shape1,shape2) {
	return target == shape1 || target == shape2;
};
oz_NapeUtil.OtherFrom2Shapes = function(target,shape1,shape2) {
	var ret = shape1;
	if(ret == target) ret = shape2;
	return ret;
};
var oz_OzEvent = function(target) {
	this.target = target;
};
$hxClasses["oz.OzEvent"] = oz_OzEvent;
oz_OzEvent.__name__ = ["oz","OzEvent"];
oz_OzEvent.prototype = {
	__class__: oz_OzEvent
};
var oz_OzFont = function() {
	this.defaultKern = 0;
	this.chars = [];
	this.kernings = [];
	this.registered = false;
};
$hxClasses["oz.OzFont"] = oz_OzFont;
oz_OzFont.__name__ = ["oz","OzFont"];
oz_OzFont.prototype = {
	RegisterCharacters: function() {
		if(this.registered) return;
		this.registered = true;
		this.frames = [];
		this.movieClips = [];
		var numPushedChars = 0;
		var _g1 = 0;
		var _g = this.chars.length;
		while(_g1 < _g) {
			var i = _g1++;
			if(this.chars[i] != null && i != 32) {
				this.frames.push([this.chars[i].x,this.chars[i].y,this.chars[i].width,this.chars[i].height,0,0]);
				this.movieClips.push(new oz_OzMovieClip("_f" + this.face + "-" + this.chars[i].letter,[numPushedChars],-1));
				this.chars[i].movieClip = this.movieClips[this.movieClips.length - 1];
				numPushedChars++;
			}
		}
		oz_OzSprite.RegisterTilesheet(this.bitmapName,this.movieClips,this.frames);
		this.tilesheetId = this.movieClips[0].tilesheetId;
	}
	,__class__: oz_OzFont
};
var oz_OzMatrix = function() {
	this.identity();
};
$hxClasses["oz.OzMatrix"] = oz_OzMatrix;
oz_OzMatrix.__name__ = ["oz","OzMatrix"];
oz_OzMatrix.getCurrentMatrix = function() {
	return oz_OzMatrix.matrixStack[oz_OzMatrix.matrixId];
};
oz_OzMatrix.InitPool = function() {
	oz_OzMatrix.matrixStack = [];
	var _g = 0;
	while(_g < 200) {
		var i = _g++;
		oz_OzMatrix.matrixStack[i] = new oz_OzMatrix();
	}
	oz_OzMatrix.matrixId = 0;
	oz_OzMatrix.DEG2RAD = Math.PI / 180;
	oz_OzMatrix.RAD2DEG = 180 / Math.PI;
	oz_OzMatrix.um = new oz_OzMatrix();
};
oz_OzMatrix.PushMatrix = function() {
	oz_OzMatrix.matrixStack[oz_OzMatrix.matrixId + 1].copy(oz_OzMatrix.matrixStack[oz_OzMatrix.matrixId]);
	oz_OzMatrix.matrixId++;
};
oz_OzMatrix.PopMatrix = function() {
	oz_OzMatrix.matrixId--;
};
oz_OzMatrix.getTemp = function(i) {
	return oz_OzMatrix.matrixStack[oz_OzMatrix.matrixId + i];
};
oz_OzMatrix.Multiply = function(dest,a,b) {
	var f00 = a.m00 * b.m00 + a.m01 * b.m10 + a.m02 * b.m20;
	var f01 = a.m00 * b.m01 + a.m01 * b.m11 + a.m02 * b.m21;
	var f02 = a.m00 * b.m02 + a.m01 * b.m12 + a.m02 * b.m22;
	var f10 = a.m10 * b.m00 + a.m11 * b.m10 + a.m12 * b.m20;
	var f11 = a.m10 * b.m01 + a.m11 * b.m11 + a.m12 * b.m21;
	var f12 = a.m10 * b.m02 + a.m11 * b.m12 + a.m12 * b.m22;
	var f20 = a.m20 * b.m00 + a.m21 * b.m10 + a.m22 * b.m20;
	var f21 = a.m20 * b.m01 + a.m21 * b.m11 + a.m22 * b.m21;
	var f22 = a.m20 * b.m02 + a.m21 * b.m12 + a.m22 * b.m22;
	dest.m00 = f00;
	dest.m01 = f01;
	dest.m02 = f02;
	dest.m10 = f10;
	dest.m11 = f11;
	dest.m12 = f12;
	dest.m20 = f20;
	dest.m21 = f21;
	dest.m22 = f22;
	dest.transformed = true;
};
oz_OzMatrix.prototype = {
	identity: function() {
		this.m00 = 1;
		this.m01 = 0;
		this.m02 = 0;
		this.m10 = 0;
		this.m11 = 1;
		this.m12 = 0;
		this.m20 = 0;
		this.m21 = 0;
		this.m22 = 1;
		this.transformed = false;
	}
	,copy: function(src) {
		this.m00 = src.m00;
		this.m01 = src.m01;
		this.m02 = src.m02;
		this.m10 = src.m10;
		this.m11 = src.m11;
		this.m12 = src.m12;
		this.m20 = src.m20;
		this.m21 = src.m21;
		this.m22 = src.m22;
	}
	,PostTranslate: function(tx,ty) {
		oz_OzMatrix.um.Translation(tx,ty);
		oz_OzMatrix.Multiply(this,this,oz_OzMatrix.um);
	}
	,PostScale: function(sx,sy) {
		oz_OzMatrix.um.Scaling(sx,sy);
		oz_OzMatrix.Multiply(this,this,oz_OzMatrix.um);
	}
	,PostRotate: function(degrees) {
		oz_OzMatrix.um.Rotation(degrees);
		oz_OzMatrix.Multiply(this,this,oz_OzMatrix.um);
	}
	,toString: function() {
		var str = "Mtrans=" + Std.string(this.transformed) + "\n";
		str += "{" + this.m00 + ":" + this.m01 + ":" + this.m02 + "}\n";
		str += "{" + this.m10 + ":" + this.m11 + ":" + this.m12 + "}\n";
		str += "{" + this.m20 + ":" + this.m21 + ":" + this.m22 + "}\n";
		return str;
	}
	,Rotation: function(degrees) {
		var radians = degrees * oz_OzMatrix.DEG2RAD;
		this.m00 = Math.cos(radians);
		this.m01 = -Math.sin(radians);
		this.m02 = 0;
		this.m10 = -this.m01;
		this.m11 = this.m00;
		this.m12 = 0;
		this.m20 = 0;
		this.m21 = 0;
		this.m22 = 1;
		this.transformed = true;
	}
	,Translation: function(tx,ty) {
		this.m00 = 1;
		this.m01 = 0;
		this.m02 = tx;
		this.m10 = 0;
		this.m11 = 1;
		this.m12 = ty;
		this.m20 = 0;
		this.m21 = 0;
		this.m22 = 1;
		this.transformed = false;
	}
	,Scaling: function(sx,sy) {
		this.m00 = sx;
		this.m01 = 0;
		this.m02 = 0;
		this.m10 = 0;
		this.m11 = sy;
		this.m12 = 0;
		this.m20 = 0;
		this.m21 = 0;
		this.m22 = 1;
		this.transformed = true;
	}
	,toMatrix: function(m) {
		m.a = this.m00;
		m.c = this.m01;
		m.tx = this.m02;
		m.b = this.m10;
		m.d = this.m11;
		m.ty = this.m12;
	}
	,outside: function(bmWidth,bmHeight,maxWidth,maxHeight,offset,offX,offY) {
		if(offY == null) offY = 0;
		if(offX == null) offX = 0;
		if(offset == null) offset = false;
		var om = null;
		if(offset) {
			oz_OzMatrix.um.Translation(offX,offY);
			oz_OzMatrix.Multiply(oz_OzMatrix.um,this,oz_OzMatrix.um);
			om = oz_OzMatrix.um;
		} else om = this;
		var x1 = om.m02;
		var y1 = om.m12;
		var x2 = bmWidth * om.m00 + om.m02;
		var y2 = bmWidth * om.m10 + om.m12;
		var x3 = bmHeight * om.m01 + om.m02;
		var y3 = bmHeight * om.m11 + om.m12;
		var x4 = bmWidth * om.m00 + bmHeight * om.m01 + om.m02;
		var y4 = bmWidth * om.m10 + bmHeight * om.m11 + om.m12;
		var minx = Math.min(Math.min(x1,x2),Math.min(x3,x4));
		var miny = Math.min(Math.min(y1,y2),Math.min(y3,y4));
		var maxx = Math.max(Math.max(x1,x2),Math.max(x3,x4));
		var maxy = Math.max(Math.max(y1,y2),Math.max(y3,y4));
		return maxx < 0 || maxy < 0 || minx > maxWidth || miny > maxHeight;
	}
	,__class__: oz_OzMatrix
};
var oz_OzMobileUtils = function() { };
$hxClasses["oz.OzMobileUtils"] = oz_OzMobileUtils;
oz_OzMobileUtils.__name__ = ["oz","OzMobileUtils"];
oz_OzMobileUtils.HideLivesDialog = function(e) {
	Audio.LocallyUnmute();
};
oz_OzMobileUtils.HideRateDialog = function(e) {
};
var oz_OzParticle = function() {
};
$hxClasses["oz.OzParticle"] = oz_OzParticle;
oz_OzParticle.__name__ = ["oz","OzParticle"];
oz_OzParticle.StaticInit = function() {
	oz_OzParticle.Particles = [];
	oz_OzParticle.FreeId = 0;
	var _g = 0;
	while(_g < 400) {
		var i = _g++;
		oz_OzParticle.Particles[i] = new oz_OzParticle();
		oz_OzParticle.Particles[i].PoolId = i;
	}
	oz_OzParticle.Head = oz_OzParticle.New();
	oz_OzParticle.Head.type = -1;
	oz_OzParticle.Head.prev = oz_OzParticle.Head.next = oz_OzParticle.Head;
};
oz_OzParticle.New = function() {
	var ozp = oz_OzParticle.Particles[oz_OzParticle.FreeId++];
	ozp.reset();
	return ozp;
};
oz_OzParticle.Dispose = function(ozp) {
	oz_OzSprite.Dispose(ozp.sprite);
	ozp.sprite = null;
	ozp.prev.next = ozp.next;
	ozp.next.prev = ozp.prev;
	if(ozp.PoolId >= 0) {
		var i = oz_OzParticle.FreeId - 1;
		var j = ozp.PoolId;
		var temp = oz_OzParticle.Particles[i];
		oz_OzParticle.Particles[i] = oz_OzParticle.Particles[j];
		oz_OzParticle.Particles[j] = temp;
		ozp.PoolId = i;
		oz_OzParticle.Particles[j].PoolId = j;
		oz_OzParticle.FreeId--;
	}
};
oz_OzParticle.Add = function(ozp) {
	ozp.prev = oz_OzParticle.Head.prev;
	ozp.next = oz_OzParticle.Head;
	oz_OzParticle.Head.prev.next = ozp;
	oz_OzParticle.Head.prev = ozp;
};
oz_OzParticle.UpdateAll = function() {
	var ptr = oz_OzParticle.Head.next;
	while(ptr != oz_OzParticle.Head) {
		var ozp = ptr;
		ptr = ptr.next;
		ozp.update();
	}
};
oz_OzParticle.RemoveStateBounds = function() {
	var ptr = oz_OzParticle.Head.next;
	while(ptr != oz_OzParticle.Head) {
		var ozp = ptr;
		ptr = ptr.next;
		oz_OzParticle.Dispose(ozp);
	}
};
oz_OzParticle.EmitInCircle = function(parent,mc,x,y,rot,n,dist,duration,destAlpha,startAlpha) {
	if(startAlpha == null) startAlpha = 1;
	if(destAlpha == null) destAlpha = -1;
	var velPerFrame = dist / duration;
	var _g = 0;
	while(_g < n) {
		var i = _g++;
		var angle = i / n * 2 * Math.PI;
		var ozp = oz_OzParticle.New();
		ozp.duration = duration;
		ozp.sprite = oz_OzSprite.New(mc);
		parent.addChild(ozp.sprite);
		ozp.sprite.set_x(x);
		ozp.sprite.set_y(y);
		ozp.sprite.set_rotation(rot);
		ozp.sprite.mouseEnabled = false;
		ozp.velX = Math.cos(angle) * velPerFrame;
		ozp.velY = Math.sin(angle) * velPerFrame;
		if(destAlpha >= 0) ozp.velAlpha = (destAlpha - startAlpha) / duration;
		oz_OzParticle.Add(ozp);
	}
};
oz_OzParticle.EmitFountain2 = function(parent,mc,x,y,gravity,vx,vy,n,duration,destAlpha,startAlpha) {
	if(startAlpha == null) startAlpha = 1;
	if(destAlpha == null) destAlpha = -1;
	var _g = 0;
	while(_g < n) {
		var i = _g++;
		var ozp = oz_OzParticle.New();
		ozp.duration = duration;
		ozp.sprite = oz_OzSprite.New(mc);
		parent.addChild(ozp.sprite);
		if(ozp.sprite.getTotalFrames() > 1) ozp.sprite.gotoAndStop(1 + Math.floor(ozp.sprite.getTotalFrames() * Math.random()));
		ozp.sprite.set_x(x);
		ozp.sprite.set_y(y);
		ozp.sprite.mouseEnabled = false;
		ozp.velX = Math.random() * vx - vx / 2;
		ozp.velY = Math.random() * vy - vy;
		ozp.accelY = gravity;
		ozp.velRot = ozp.velX * 5;
		if(destAlpha >= 0) ozp.velAlpha = (destAlpha - startAlpha) / duration;
		oz_OzParticle.Add(ozp);
	}
};
oz_OzParticle.prototype = {
	reset: function() {
		this.type = 0;
		this.next = this.prev = null;
		this.duration = this.cnt = 0;
		this.sprite = null;
		this.velX = this.velY = this.accelX = this.accelY = 0;
		this.velRot = this.velAlpha = 0;
		this.velScaleX = this.velScaleY = 0;
		this.updateFunc = null;
	}
	,update: function() {
		if(this.duration > 0 && this.cnt > this.duration) oz_OzParticle.Dispose(this); else {
			if(this.updateFunc != null) this.updateFunc(); else {
				var _g = this.sprite;
				_g.set_x(_g.get_x() + this.velX);
				var _g1 = this.sprite;
				_g1.set_y(_g1.get_y() + this.velY);
				this.velX += this.accelX;
				this.velY += this.accelY;
				var _g2 = this.sprite;
				_g2.set_alpha(_g2.get_alpha() + this.velAlpha);
				var _g3 = this.sprite;
				_g3.set_rotation(_g3.get_rotation() + this.velRot);
				var _g4 = this.sprite;
				_g4.set_scaleX(_g4.get_scaleX() + this.velScaleX);
				var _g5 = this.sprite;
				_g5.set_scaleY(_g5.get_scaleY() + this.velScaleY);
			}
			this.cnt++;
		}
	}
	,__class__: oz_OzParticle
};
var oz_OzTileMap = function(allocCols,allocRows,offsetX,offsetY,tileSize,numLayers,depthOffset) {
	if(depthOffset == null) depthOffset = 0;
	if(numLayers == null) numLayers = 1;
	this.mapTileObject = null;
	this.DEJ = null;
	this.DEI = null;
	this.DSJ = null;
	this.DSI = null;
	this.colData = null;
	this.data = null;
	this.data = null;
	this.offsetX = offsetX;
	this.offsetY = offsetY;
	this.tileSize = tileSize;
	this.allocRows = allocRows;
	this.allocCols = allocCols;
	this.numLayers = numLayers;
	this.depthOffset = depthOffset;
	this.clearRect = new openfl_geom_Rectangle();
	this.filledRect = new openfl_geom_Rectangle();
	this.bmdRect = new openfl_geom_Rectangle();
	this.bmdPoint = new openfl_geom_Point();
	this.BufferTileW = Math.ceil(Main.instance.ScreenBMD.component.width / tileSize) + 1;
	this.BufferTileH = Math.ceil(Main.instance.ScreenBMD.component.height / tileSize) + 1;
	this.BufferPixelW = Math.round(tileSize * this.BufferTileW);
	this.BufferPixelH = Math.round(tileSize * this.BufferTileH);
	var this1;
	this1 = new Array(numLayers);
	this.bmdBuffers = this1;
	var _g = 0;
	while(_g < numLayers) {
		var l = _g++;
		var val = new openfl_display_BitmapData(this.BufferPixelW,this.BufferPixelH,true,16777215);
		this.bmdBuffers[l] = val;
	}
	this.reset();
};
$hxClasses["oz.OzTileMap"] = oz_OzTileMap;
oz_OzTileMap.__name__ = ["oz","OzTileMap"];
oz_OzTileMap.GetSpriteTileFrame = function(i,j,N,M) {
	var rI = i % N;
	var rJ = j % M;
	var ret = 2 + rI * M + rJ;
	return ret;
};
oz_OzTileMap.GetScale9Frame = function(i,j,N,M) {
	var ret = 0;
	if(N == 1) {
		if(j == 0) ret = 22; else if(j == M - 1) ret = 24; else ret = 23;
	} else if(i == 0) {
		if(j == 0) ret = 1; else if(j == M - 1) ret = 3; else ret = 2;
	} else if(i == N - 1) {
		if(j == 0) ret = 7; else if(j == M - 1) ret = 9; else ret = 8;
	} else if(j == 0) ret = 4; else if(j == M - 1) ret = 6; else ret = 5;
	return ret;
};
oz_OzTileMap.PTInit = function() {
	var array = [false,true,true,false,true,true,false,true,true,false,true,true,false,false,true,true,true,false,false,false,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true];
	var vec;
	var this1;
	this1 = new Array(array.length);
	vec = this1;
	var _g1 = 0;
	var _g = array.length;
	while(_g1 < _g) {
		var i = _g1++;
		vec[i] = array[i];
	}
	oz_OzTileMap.shouldFillRight = vec;
	var this2;
	this2 = new Array(1000);
	oz_OzTileMap.ptVX = this2;
	var this3;
	this3 = new Array(1000);
	oz_OzTileMap.ptVY = this3;
	var this4;
	this4 = new Array(101);
	oz_OzTileMap.ptHors = this4;
	var _g11 = 0;
	var _g2 = oz_OzTileMap.ptHors.length;
	while(_g11 < _g2) {
		var i1 = _g11++;
		var val;
		var this5;
		this5 = new Array(102);
		val = this5;
		oz_OzTileMap.ptHors[i1] = val;
	}
	var this6;
	this6 = new Array(102);
	oz_OzTileMap.ptVers = this6;
	var _g12 = 0;
	var _g3 = oz_OzTileMap.ptVers.length;
	while(_g12 < _g3) {
		var i2 = _g12++;
		var val1;
		var this7;
		this7 = new Array(101);
		val1 = this7;
		oz_OzTileMap.ptVers[i2] = val1;
	}
	var this8;
	this8 = new Array(101);
	oz_OzTileMap.ptDiags = this8;
	var _g13 = 0;
	var _g4 = oz_OzTileMap.ptDiags.length;
	while(_g13 < _g4) {
		var i3 = _g13++;
		var val2;
		var this9;
		this9 = new Array(101);
		val2 = this9;
		oz_OzTileMap.ptDiags[i3] = val2;
	}
	var this10;
	this10 = new Array(101);
	oz_OzTileMap.ptTiles = this10;
	var _g14 = 0;
	var _g5 = oz_OzTileMap.ptTiles.length;
	while(_g14 < _g5) {
		var i4 = _g14++;
		var val3;
		var this11;
		this11 = new Array(101);
		val3 = this11;
		oz_OzTileMap.ptTiles[i4] = val3;
	}
	oz_OzTileMap.PTClear(101,101);
	oz_OzTileMap.initPoly2Tiles = true;
};
oz_OzTileMap.PTFrameToTile = function(i,j,solidType) {
	if(solidType == 0) return 0;
	var tid = oz_OzTileMap.ptTiles[i][j];
	switch(tid) {
	case 2:
		if(solidType == 2) return 9; else if(j > 0 && (oz_OzTileMap.ptTiles[i][j - 1] == 10 || oz_OzTileMap.ptTiles[i][j - 1] == 15)) return 8; else if(j + 1 < oz_OzTileMap.ptTiles[i].length && (oz_OzTileMap.ptTiles[i][j + 1] == 12 || oz_OzTileMap.ptTiles[i][j + 1] == 18)) return 8; else return 1;
		break;
	case 10:
		return 3;
	case 11:
		return 8;
	case 12:
		return 2;
	case 13:
		return 8;
	case 14:
		return 7;
	case 15:
		return 6;
	case 16:
		return 8;
	case 17:
		return 5;
	case 18:
		return 4;
	case 19:
		return 8;
	default:
		if(solidType == 2) {
			if(i == 0 || oz_OzTileMap.ptTiles[i - 1][j] == 0) return 9; else return 0;
		} else return 1;
	}
};
oz_OzTileMap.PTClear = function(clN,clM) {
	if(clM == null) clM = -1;
	if(clN == null) clN = -1;
	if(clN < 0) clN = oz_OzTileMap.ptN + 1;
	if(clM < 0) clM = oz_OzTileMap.ptM + 1;
	var _g = 0;
	while(_g < clN) {
		var i = _g++;
		var _g1 = 0;
		while(_g1 < clM) {
			var j = _g1++;
			oz_OzTileMap.ptHors[i][j] = 0;
			oz_OzTileMap.ptVers[i][j] = 0;
			oz_OzTileMap.ptDiags[i][j] = 0;
			oz_OzTileMap.ptTiles[i][j] = 0;
		}
	}
	oz_OzTileMap.ptN = oz_OzTileMap.ptM = 0;
};
oz_OzTileMap.getPtTile = function(i,j) {
	if(i < 0 || i > 100 || j < 0 || j > 100) return 0; else return oz_OzTileMap.ptTiles[i][j];
};
oz_OzTileMap.getPtDiag = function(i,j) {
	if(i < 0 || i > 100 || j < 0 || j > 100) return 0; else return oz_OzTileMap.ptDiags[i][j];
};
oz_OzTileMap.getPtHor = function(i,j) {
	if(i < 0 || i > 100 || j < 0 || j > 100) return 0; else return oz_OzTileMap.ptHors[i][j];
};
oz_OzTileMap.PolyToTiles = function(poly,tileSize) {
	if(poly.type != 3) return;
	if(!oz_OzTileMap.initPoly2Tiles) oz_OzTileMap.PTInit(); else oz_OzTileMap.PTClear();
	var minI = 1000000;
	var minJ = 1000000;
	var maxI = -1;
	var maxJ = -1;
	oz_OzTileMap.ptNVertices = poly.vx.length;
	var _g1 = 0;
	var _g = oz_OzTileMap.ptNVertices;
	while(_g1 < _g) {
		var i = _g1++;
		var val = Std["int"](Math.round(poly.vx[i] / tileSize));
		oz_OzTileMap.ptVX[i] = val;
		var val1 = Std["int"](Math.round(poly.vy[i] / tileSize));
		oz_OzTileMap.ptVY[i] = val1;
		minI = Std["int"](Math.min(minI,oz_OzTileMap.ptVY[i]));
		minJ = Std["int"](Math.min(minJ,oz_OzTileMap.ptVX[i]));
		maxI = Std["int"](Math.max(maxI,oz_OzTileMap.ptVY[i]));
		maxJ = Std["int"](Math.max(maxJ,oz_OzTileMap.ptVX[i]));
	}
	if(minI != 0 || minJ != 0 || maxI > 100 || maxJ > 100) throw new js__$Boot_HaxeError(new openfl_errors_Error("You're passing an invalide poly to tile!"));
	var _g11 = 0;
	var _g2 = oz_OzTileMap.ptNVertices;
	while(_g11 < _g2) {
		var i1 = _g11++;
		var j = (i1 + 1) % oz_OzTileMap.ptNVertices;
		oz_OzTileMap.SetSideSegmentData(oz_OzTileMap.ptVX[i1],oz_OzTileMap.ptVY[i1],oz_OzTileMap.ptVX[j],oz_OzTileMap.ptVY[j]);
	}
	oz_OzTileMap.ptN = maxI;
	oz_OzTileMap.ptM = maxJ;
	var _g12 = 0;
	var _g3 = oz_OzTileMap.ptN;
	while(_g12 < _g3) {
		var i2 = _g12++;
		var fillRight = false;
		var _g31 = 0;
		var _g21 = oz_OzTileMap.ptM;
		while(_g31 < _g21) {
			var j1 = _g31++;
			var insideCoeff = ((oz_OzTileMap.ptHors[i2][j1] & 2) >> 1) + ((oz_OzTileMap.ptVers[i2][j1 + 1] & 1) << 1) + ((oz_OzTileMap.ptHors[i2 + 1][j1] & 1) << 2) + ((oz_OzTileMap.ptVers[i2][j1] & 2) << 2);
			var insideBitCount = dev_DevUtil.BitCount(insideCoeff);
			if(insideBitCount == 0) {
				if(oz_OzTileMap.ptDiags[i2][j1] == 0) {
					var topTile = oz_OzTileMap.getPtTile(i2 - 1,j1);
					if(topTile == 10) oz_OzTileMap.ptTiles[i2][j1] = 11; else if(topTile == 12) oz_OzTileMap.ptTiles[i2][j1] = 13; else if(topTile == 14) oz_OzTileMap.ptTiles[i2][j1] = 16; else if(topTile == 17) oz_OzTileMap.ptTiles[i2][j1] = 19; else if(fillRight) {
						if((oz_OzTileMap.getPtHor(i2,j1 - 1) & 2) > 0 || (oz_OzTileMap.getPtDiag(i2 - 1,j1 - 1) & 256) > 0 || (oz_OzTileMap.getPtDiag(i2,j1 - 1) & 4) > 0) {
							if((oz_OzTileMap.getPtHor(i2 + 1,j1 - 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 36; else oz_OzTileMap.ptTiles[i2][j1] = 21;
						} else if((oz_OzTileMap.getPtHor(i2,j1 + 1) & 2) > 0 || (oz_OzTileMap.getPtDiag(i2 - 1,j1 + 1) & 64) > 0 || (oz_OzTileMap.getPtDiag(i2,j1 + 1) & 1) > 0) {
							if((oz_OzTileMap.getPtHor(i2 + 1,j1 + 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 35; else oz_OzTileMap.ptTiles[i2][j1] = 20;
						} else if((oz_OzTileMap.getPtHor(i2 + 1,j1 - 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 32; else if((oz_OzTileMap.getPtHor(i2 + 1,j1 + 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 31; else oz_OzTileMap.ptTiles[i2][j1] = 5;
					} else oz_OzTileMap.ptTiles[i2][j1] = 0;
				} else if(oz_OzTileMap.ptDiags[i2][j1] == oz_OzTileMap.getLocalGridSegment(0,2,2,0)) oz_OzTileMap.ptTiles[i2][j1] = 10; else if(oz_OzTileMap.ptDiags[i2][j1] == oz_OzTileMap.getLocalGridSegment(0,0,2,2)) oz_OzTileMap.ptTiles[i2][j1] = 12; else if(oz_OzTileMap.ptDiags[i2][j1] == oz_OzTileMap.getLocalGridSegment(0,2,2,1)) oz_OzTileMap.ptTiles[i2][j1] = 14; else if(oz_OzTileMap.ptDiags[i2][j1] == oz_OzTileMap.getLocalGridSegment(0,1,2,0)) oz_OzTileMap.ptTiles[i2][j1] = 15; else if(oz_OzTileMap.ptDiags[i2][j1] == oz_OzTileMap.getLocalGridSegment(0,1,2,2)) oz_OzTileMap.ptTiles[i2][j1] = 17; else if(oz_OzTileMap.ptDiags[i2][j1] == oz_OzTileMap.getLocalGridSegment(0,0,2,1)) oz_OzTileMap.ptTiles[i2][j1] = 18; else oz_OzTileMap.ptTiles[i2][j1] = 5;
			} else if(insideBitCount == 1) {
				if(insideCoeff == 1) {
					if((oz_OzTileMap.getPtHor(i2 + 1,j1 - 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 34; else if((oz_OzTileMap.getPtHor(i2 + 1,j1 + 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 33; else oz_OzTileMap.ptTiles[i2][j1] = 2;
				} else if(insideCoeff == 2) oz_OzTileMap.ptTiles[i2][j1] = 6; else if(insideCoeff == 4) {
					var topTile1 = oz_OzTileMap.getPtTile(i2 - 1,j1);
					if(topTile1 == 10) oz_OzTileMap.ptTiles[i2][j1] = 25; else if(topTile1 == 12) oz_OzTileMap.ptTiles[i2][j1] = 26; else if(topTile1 == 14) oz_OzTileMap.ptTiles[i2][j1] = 27; else if(topTile1 == 17) oz_OzTileMap.ptTiles[i2][j1] = 28; else if((oz_OzTileMap.getPtHor(i2,j1 - 1) & 2) > 0 || (oz_OzTileMap.getPtDiag(i2 - 1,j1 - 1) & 256) > 0 || (oz_OzTileMap.getPtDiag(i2,j1 - 1) & 4) > 0) oz_OzTileMap.ptTiles[i2][j1] = 30; else if((oz_OzTileMap.getPtHor(i2,j1 + 1) & 2) > 0 || (oz_OzTileMap.getPtDiag(i2 - 1,j1 + 1) & 64) > 0 || (oz_OzTileMap.getPtDiag(i2,j1 + 1) & 1) > 0) oz_OzTileMap.ptTiles[i2][j1] = 29; else oz_OzTileMap.ptTiles[i2][j1] = 8;
				} else oz_OzTileMap.ptTiles[i2][j1] = 4;
			} else if(insideBitCount == 2) {
				if(insideCoeff == 9) oz_OzTileMap.ptTiles[i2][j1] = 1; else if(insideCoeff == 3) oz_OzTileMap.ptTiles[i2][j1] = 3; else if(insideCoeff == 6) oz_OzTileMap.ptTiles[i2][j1] = 9; else if(insideCoeff == 12) oz_OzTileMap.ptTiles[i2][j1] = 7; else if(insideCoeff == 5) oz_OzTileMap.ptTiles[i2][j1] = 23; else oz_OzTileMap.ptTiles[i2][j1] = 5;
			} else if(insideBitCount == 3) {
				if(insideCoeff == 13) oz_OzTileMap.ptTiles[i2][j1] = 22; else if(insideCoeff == 7) oz_OzTileMap.ptTiles[i2][j1] = 24; else oz_OzTileMap.ptTiles[i2][j1] = 5;
			} else oz_OzTileMap.ptTiles[i2][j1] = 5;
			fillRight = oz_OzTileMap.shouldFillRight[oz_OzTileMap.ptTiles[i2][j1]];
		}
	}
};
oz_OzTileMap.SetSideSegmentData = function(x1,y1,x2,y2) {
	x1 *= 2;
	x2 *= 2;
	y1 *= 2;
	y2 *= 2;
	var dx = x2 - x1;
	var dy = y2 - y1;
	var numSteps = Std["int"](Math.max(Std["int"](Math.abs(dx)),Std["int"](Math.abs(dy))) / 2);
	var stepX = dx / numSteps | 0;
	var stepY = dy / numSteps | 0;
	var x = x1;
	var y = y1;
	var _g = 0;
	while(_g < numSteps) {
		var i = _g++;
		oz_OzTileMap.SetGridSegmentData(x,y,stepX,stepY);
		x += stepX;
		y += stepY;
	}
};
oz_OzTileMap.SetGridSegmentData = function(sx,sy,dx,dy) {
	var gi = sy / 2 | 0;
	var gj = sx / 2 | 0;
	if(dx == 0) {
		if(dy > 0) oz_OzTileMap.ptVers[gi][gj] = oz_OzTileMap.ptVers[gi][gj] | 1; else oz_OzTileMap.ptVers[gi - 1][gj] = oz_OzTileMap.ptVers[gi - 1][gj] | 2;
	} else if(dy == 0) {
		if(dx > 0) oz_OzTileMap.ptHors[gi][gj] = oz_OzTileMap.ptHors[gi][gj] | 2; else oz_OzTileMap.ptHors[gi][gj - 1] = oz_OzTileMap.ptHors[gi][gj - 1] | 1;
	} else {
		if(dy < 0) gi = (sy + dy) / 2 | 0;
		if(dx < 0) gj = (sx + dx) / 2 | 0;
		oz_OzTileMap.ptDiags[gi][gj] = oz_OzTileMap.ptDiags[gi][gj] | 1 << sx - gj * 2 + (sy - gi * 2) * 3;
		oz_OzTileMap.ptDiags[gi][gj] = oz_OzTileMap.ptDiags[gi][gj] | 1 << sx + dx - gj * 2 + (sy + dy - gi * 2) * 3;
	}
};
oz_OzTileMap.getLocalGridSegment = function(x1,y1,x2,y2) {
	var ret = 1 << x1 + y1 * 3;
	ret |= 1 << x2 + y2 * 3;
	return ret;
};
oz_OzTileMap.prototype = {
	setTileObject: function(to,i,j) {
		to.aI.push(i);
		to.aJ.push(j);
		this.mapTileObject.h[i * this.allocCols + j] = to;
	}
	,reset: function() {
		this.mapTileObject = new haxe_ds_IntMap();
		if(this.data == null) {
			var this1;
			this1 = new Array(this.numLayers);
			this.data = this1;
			var this2;
			this2 = new Array(this.numLayers);
			this.DSI = this2;
			var this3;
			this3 = new Array(this.numLayers);
			this.DEI = this3;
			var this4;
			this4 = new Array(this.numLayers);
			this.DSJ = this4;
			var this5;
			this5 = new Array(this.numLayers);
			this.DEJ = this5;
			var _g1 = 0;
			var _g = this.numLayers;
			while(_g1 < _g) {
				var l = _g1++;
				this.DSI[l] = 0;
				this.DEI[l] = -1;
				this.DSJ[l] = 0;
				this.DEJ[l] = -1;
				var val;
				var this6;
				this6 = new Array(this.allocRows);
				val = this6;
				this.data[l] = val;
				var _g3 = 0;
				var _g2 = this.allocRows;
				while(_g3 < _g2) {
					var i = _g3++;
					var val1;
					var this7;
					this7 = new Array(this.allocCols);
					val1 = this7;
					this.data[l][i] = val1;
					var _g5 = 0;
					var _g4 = this.allocCols;
					while(_g5 < _g4) {
						var j = _g5++;
						this.data[l][i][j] = 0;
					}
				}
			}
		} else {
			var _g11 = 0;
			var _g6 = this.numLayers;
			while(_g11 < _g6) {
				var l1 = _g11++;
				this.DSI[l1] = 0;
				this.DEI[l1] = -1;
				this.DSJ[l1] = 0;
				this.DEJ[l1] = -1;
				var _g31 = 0;
				var _g21 = this.allocRows;
				while(_g31 < _g21) {
					var i1 = _g31++;
					var _g51 = 0;
					var _g41 = this.allocCols;
					while(_g51 < _g41) {
						var j1 = _g51++;
						this.data[l1][i1][j1] = 0;
					}
				}
			}
		}
		this.colData = this.data[0];
	}
	,setTileBlock: function(layer,x,y,tw,th,tp,mc,frame,scale9,solidType) {
		if(solidType == null) solidType = 1;
		if(scale9 == null) scale9 = false;
		var dataI = Std["int"](Math.round((y - this.offsetY) / this.tileSize));
		var dataJ = Std["int"](Math.round((x - this.offsetX) / this.tileSize));
		var _g = 0;
		while(_g < th) {
			var i = _g++;
			var _g1 = 0;
			while(_g1 < tw) {
				var j = _g1++;
				var ni = i + dataI;
				var nj = j + dataJ;
				var tileType;
				switch(solidType) {
				case 0:
					tileType = 0;
					break;
				case 2:
					if(i == 0) tileType = 9; else tileType = 0;
					break;
				default:
					tileType = tp;
				}
				if(ni >= 0 && nj >= 0 && ni < this.colData.length && nj < this.colData[0].length) this.setTile(layer,i + dataI,j + dataJ,tileType,mc,scale9?oz_OzTileMap.GetScale9Frame(i,j,th,tw):frame);
			}
		}
	}
	,setTileObjectBlock: function(tileObject,x,y,tw,th) {
		var dataI = Math.round((y - this.offsetY) / this.tileSize);
		var dataJ = Math.round((x - this.offsetX) / this.tileSize);
		var _g = 0;
		while(_g < th) {
			var i = _g++;
			var _g1 = 0;
			while(_g1 < tw) {
				var j = _g1++;
				var ni = i + dataI;
				var nj = j + dataJ;
				this.setTileObject(tileObject,ni,nj);
			}
		}
	}
	,setTile: function(layer,i,j,tp,mc,frame) {
		if(frame == null) frame = 1;
		if(!(i >= 0 && j >= 0 && i < this.colData.length && j < this.colData[0].length)) return;
		if(mc != null) this.data[layer][i][j] = (mc.tilesheetId << 10) + mc.frames[frame - 1]; else this.data[layer][i][j] = 0;
		if(tp > 0) this.colData[i][j] = this.colData[i][j] & -983041 | tp << 16;
		this.bmdRect.width = this.tileSize;
		this.bmdRect.height = this.tileSize;
		this.updateTileGFX(layer,i,j,true);
	}
	,draw: function(spr,layer) {
		oz_OzSprite.Flush();
		spr = spr.parent;
		var bufferX = ozity_OzGameSystem.instance.camera.gameScreenEdgeX() - this.offsetX;
		var bufferY = ozity_OzGameSystem.instance.camera.gameScreenEdgeY() - this.offsetY;
		var offX = (bufferX % this.tileSize + this.tileSize) % this.tileSize;
		var offY = (bufferY % this.tileSize + this.tileSize) % this.tileSize;
		var startJ = Math.floor(bufferX / this.tileSize);
		var startI = Math.floor(bufferY / this.tileSize);
		var bM = Math.ceil((offX + Main.WIDTH) / this.tileSize);
		var bN = Math.ceil((offY + Main.HEIGHT) / this.tileSize);
		this.bmdRect.width = this.bmdRect.height = this.tileSize;
		var skippedTiles = 0;
		var _g = 0;
		while(_g < bN) {
			var i = _g++;
			var ni = startI + i;
			var _g1 = 0;
			while(_g1 < bM) {
				var j = _g1++;
				var nj = startJ + j;
				if(!(ni >= 0 && nj >= 0 && ni < this.colData.length && nj < this.colData[0].length)) {
					this.bmdRect.x = (nj % this.BufferTileW + this.BufferTileW) % this.BufferTileW * this.tileSize;
					this.bmdRect.y = (ni % this.BufferTileH + this.BufferTileH) % this.BufferTileH * this.tileSize;
					this.bmdRect.width = this.bmdRect.height = this.tileSize;
					this.bmdBuffers[layer].fillRect(this.bmdRect,16777215);
				} else if(!this.updateTileGFX(layer,ni,nj)) skippedTiles++;
			}
		}
		var DX = ((bufferX | 0) % this.BufferPixelW + this.BufferPixelW) % this.BufferPixelW;
		var DY = ((bufferY | 0) % this.BufferPixelH + this.BufferPixelH) % this.BufferPixelH;
		var W1 = Std["int"](Math.min(Main.WIDTH,this.BufferPixelW - DX));
		var H1 = Std["int"](Math.min(Main.HEIGHT,this.BufferPixelH - DY));
		var W2 = Main.WIDTH - W1;
		var H2 = Main.HEIGHT - H1;
		this.bmdPoint.x = 0;
		this.bmdPoint.y = 0;
		this.bmdRect.x = DX;
		this.bmdRect.y = DY;
		this.bmdRect.width = W1;
		this.bmdRect.height = H1;
		Main.instance.ScreenBMD.copyPixels(this.bmdBuffers[layer],this.bmdRect,this.bmdPoint,null,null,true);
		if(W2 > 0) {
			this.bmdPoint.x = W1;
			this.bmdPoint.y = 0;
			this.bmdRect.x = 0;
			this.bmdRect.y = DY;
			this.bmdRect.width = W2;
			this.bmdRect.height = H1;
			Main.instance.ScreenBMD.copyPixels(this.bmdBuffers[layer],this.bmdRect,this.bmdPoint,null,null,true);
		}
		if(H1 > 0) {
			this.bmdPoint.x = 0;
			this.bmdPoint.y = H1;
			this.bmdRect.x = DX;
			this.bmdRect.y = 0;
			this.bmdRect.width = W1;
			this.bmdRect.height = H2;
			Main.instance.ScreenBMD.copyPixels(this.bmdBuffers[layer],this.bmdRect,this.bmdPoint,null,null,true);
		}
		if(H1 > 0 && W1 > 0) {
			this.bmdPoint.x = W1;
			this.bmdPoint.y = H1;
			this.bmdRect.x = 0;
			this.bmdRect.y = 0;
			this.bmdRect.width = W2;
			this.bmdRect.height = H2;
			Main.instance.ScreenBMD.copyPixels(this.bmdBuffers[layer],this.bmdRect,this.bmdPoint,null,null,true);
		}
		this.DSI[layer] = startI;
		this.DEI[layer] = startI + bN;
		this.DSJ[layer] = startJ;
		this.DEJ[layer] = startJ + bM;
	}
	,updateTileGFX: function(layer,ni,nj,flip) {
		if(flip == null) flip = false;
		var outside = nj >= this.DEJ[layer] || ni >= this.DEI[layer] || nj < this.DSJ[layer] || ni < this.DSI[layer];
		if(flip) outside = !outside;
		if(outside) {
			var tile = this.data[layer][ni][nj];
			var tileFrame = tile & 1023;
			if(tileFrame != 0) {
				var tilesheetId = tile >> 10 & 63;
				var frames = oz_OzSprite.TilesheetFrames[tilesheetId][tileFrame];
				if(frames[2] < this.tileSize || frames[3] < this.tileSize) {
					this.bmdRect.x = (nj % this.BufferTileW + this.BufferTileW) % this.BufferTileW * this.tileSize;
					this.bmdRect.y = (ni % this.BufferTileH + this.BufferTileH) % this.BufferTileH * this.tileSize;
					this.bmdRect.width = this.bmdRect.height = this.tileSize;
					this.bmdBuffers[layer].fillRect(this.bmdRect,16777215);
				}
				oz_OzSprite.CopyMcToBmd(this.bmdBuffers[layer],tile >> 10 & 63,tileFrame,-frames[4] + nj % this.BufferTileW * this.tileSize,-frames[5] + ni % this.BufferTileH * this.tileSize,false);
			} else {
				this.bmdRect.x = (nj % this.BufferTileW + this.BufferTileW) % this.BufferTileW * this.tileSize;
				this.bmdRect.y = (ni % this.BufferTileH + this.BufferTileH) % this.BufferTileH * this.tileSize;
				this.bmdRect.width = this.bmdRect.height = this.tileSize;
				this.bmdBuffers[layer].fillRect(this.bmdRect,16777215);
			}
			return true;
		} else return false;
	}
	,getI: function(y) {
		return Math.floor((y - this.offsetY) / this.tileSize);
	}
	,getJ: function(x) {
		return Math.floor((x - this.offsetX) / this.tileSize);
	}
	,__class__: oz_OzTileMap
};
var oz_OzTween = function() {
};
$hxClasses["oz.OzTween"] = oz_OzTween;
oz_OzTween.__name__ = ["oz","OzTween"];
oz_OzTween.DelayedCall = function(func,delay,repeat,stateBound) {
	if(stateBound == null) stateBound = true;
	if(repeat == null) repeat = 0;
	var odt = oz_OzTween.New();
	odt.endFunc = func;
	odt.duration = delay;
	odt.repeat = repeat;
	odt.stateBound = stateBound;
	oz_OzTween.Add(odt);
};
oz_OzTween.Init = function() {
	oz_OzTween.Tweens = [];
	var _g = 0;
	while(_g < 400) {
		var i = _g++;
		oz_OzTween.Tweens[i] = new oz_OzTween();
		oz_OzTween.Tweens[i].PoolId = i;
	}
	oz_OzTween.Head = null;
	oz_OzTween.FreeId = 0;
	oz_OzTween.NumTweens = 0;
};
oz_OzTween.UpdateAll = function() {
	if(oz_OzTween.Head == null) return;
	var it = oz_OzTween.Head;
	do {
		if(!it.remove) {
			if(it.cnt >= 0 && it.updateFunc != null) it.updateFunc(it.cnt / it.duration);
			if(it.cnt == it.duration) {
				if(it.endFunc != null) it.endFunc();
				if(it.repeat == 0) it.remove = true; else {
					if(it.repeat > 0) it.repeat--;
					it.cnt = 0;
				}
			}
			it.cnt++;
		}
		it = it.next;
	} while(it != oz_OzTween.Head);
	oz_OzTween.RemoveRemove();
};
oz_OzTween.GetLastId = function(id) {
	if(oz_OzTween.Head == null) return null; else {
		var ret = oz_OzTween.Head.prev;
		var _g = 0;
		while(_g < id) {
			var i = _g++;
			ret = ret.prev;
		}
		return ret;
	}
};
oz_OzTween.GetLast = function() {
	if(oz_OzTween.Head == null) return null; else return oz_OzTween.Head.prev;
};
oz_OzTween.RemoveStateBounds = function() {
	var nTweens = oz_OzTween.NumTweens;
	var it = oz_OzTween.Head;
	var _g = 0;
	while(_g < nTweens) {
		var i = _g++;
		if(it.stateBound) it.remove = true;
		it = it.next;
	}
};
oz_OzTween.RemoveRemove = function() {
	var nTweens = oz_OzTween.NumTweens;
	var it = oz_OzTween.Head;
	var _g = 0;
	while(_g < nTweens) {
		var i = _g++;
		var next = it.next;
		if(it.remove) oz_OzTween.Remove(it);
		it = next;
	}
};
oz_OzTween.New = function() {
	var ozt = oz_OzTween.Tweens[oz_OzTween.FreeId++];
	ozt.reset();
	return ozt;
};
oz_OzTween.Dispose = function(ozt) {
	ozt.updateFunc = null;
	ozt.endFunc = null;
	var i = oz_OzTween.FreeId - 1;
	var j = ozt.PoolId;
	var temp = oz_OzTween.Tweens[i];
	oz_OzTween.Tweens[i] = oz_OzTween.Tweens[j];
	oz_OzTween.Tweens[j] = temp;
	ozt.PoolId = i;
	oz_OzTween.Tweens[j].PoolId = j;
	oz_OzTween.FreeId--;
};
oz_OzTween.Add = function(ozt) {
	if(oz_OzTween.Head == null) {
		oz_OzTween.Head = ozt;
		ozt.next = ozt.prev = ozt;
	} else {
		var last = oz_OzTween.Head.prev;
		last.next = ozt;
		ozt.prev = last;
		oz_OzTween.Head.prev = ozt;
		ozt.next = oz_OzTween.Head;
	}
	oz_OzTween.NumTweens++;
};
oz_OzTween.Remove = function(ozt) {
	if(oz_OzTween.Head == ozt) {
		if(ozt.next == ozt) oz_OzTween.Head = null; else {
			var next = oz_OzTween.Head.next;
			var prev = oz_OzTween.Head.prev;
			prev.next = next;
			next.prev = prev;
			oz_OzTween.Head = next;
		}
	} else {
		var next1 = ozt.next;
		var prev1 = ozt.prev;
		prev1.next = next1;
		next1.prev = prev1;
	}
	oz_OzTween.NumTweens--;
	oz_OzTween.Dispose(ozt);
};
oz_OzTween.prototype = {
	reset: function() {
		this.remove = false;
		this.next = this.prev = this;
		this.updateFunc = null;
		this.endFunc = null;
		this.gameBound = this.stateBound = true;
		this.cnt = this.repeat = this.duration = 0;
	}
	,__class__: oz_OzTween
};
var oz_Point2 = function(x1,y1,x2,y2) {
	this.x1 = x1;
	this.y1 = y1;
	this.x2 = x2;
	this.y2 = y2;
};
$hxClasses["oz.Point2"] = oz_Point2;
oz_Point2.__name__ = ["oz","Point2"];
oz_Point2.prototype = {
	__class__: oz_Point2
};
var ozity_Message = $hxClasses["ozity.Message"] = { __ename__ : ["ozity","Message"], __constructs__ : ["PLAYER_DIE","PLAYER_WIN","PLAYER_JUMP","SMASH_BRICK","ENEMY_DIE","SHOW_JUMP","GET_COIN","GET_KEY","GET_BANANA","OPEN_DOOR","SPRING_JUMP","BARREL_SHOT","ENTER_BARREL","TELEPORT","FINISH","TRIGGER"] };
ozity_Message.PLAYER_DIE = ["PLAYER_DIE",0];
ozity_Message.PLAYER_DIE.toString = $estr;
ozity_Message.PLAYER_DIE.__enum__ = ozity_Message;
ozity_Message.PLAYER_WIN = ["PLAYER_WIN",1];
ozity_Message.PLAYER_WIN.toString = $estr;
ozity_Message.PLAYER_WIN.__enum__ = ozity_Message;
ozity_Message.PLAYER_JUMP = ["PLAYER_JUMP",2];
ozity_Message.PLAYER_JUMP.toString = $estr;
ozity_Message.PLAYER_JUMP.__enum__ = ozity_Message;
ozity_Message.SMASH_BRICK = ["SMASH_BRICK",3];
ozity_Message.SMASH_BRICK.toString = $estr;
ozity_Message.SMASH_BRICK.__enum__ = ozity_Message;
ozity_Message.ENEMY_DIE = ["ENEMY_DIE",4];
ozity_Message.ENEMY_DIE.toString = $estr;
ozity_Message.ENEMY_DIE.__enum__ = ozity_Message;
ozity_Message.SHOW_JUMP = ["SHOW_JUMP",5];
ozity_Message.SHOW_JUMP.toString = $estr;
ozity_Message.SHOW_JUMP.__enum__ = ozity_Message;
ozity_Message.GET_COIN = ["GET_COIN",6];
ozity_Message.GET_COIN.toString = $estr;
ozity_Message.GET_COIN.__enum__ = ozity_Message;
ozity_Message.GET_KEY = function(color) { var $x = ["GET_KEY",7,color]; $x.__enum__ = ozity_Message; $x.toString = $estr; return $x; };
ozity_Message.GET_BANANA = ["GET_BANANA",8];
ozity_Message.GET_BANANA.toString = $estr;
ozity_Message.GET_BANANA.__enum__ = ozity_Message;
ozity_Message.OPEN_DOOR = ["OPEN_DOOR",9];
ozity_Message.OPEN_DOOR.toString = $estr;
ozity_Message.OPEN_DOOR.__enum__ = ozity_Message;
ozity_Message.SPRING_JUMP = ["SPRING_JUMP",10];
ozity_Message.SPRING_JUMP.toString = $estr;
ozity_Message.SPRING_JUMP.__enum__ = ozity_Message;
ozity_Message.BARREL_SHOT = ["BARREL_SHOT",11];
ozity_Message.BARREL_SHOT.toString = $estr;
ozity_Message.BARREL_SHOT.__enum__ = ozity_Message;
ozity_Message.ENTER_BARREL = ["ENTER_BARREL",12];
ozity_Message.ENTER_BARREL.toString = $estr;
ozity_Message.ENTER_BARREL.__enum__ = ozity_Message;
ozity_Message.TELEPORT = ["TELEPORT",13];
ozity_Message.TELEPORT.toString = $estr;
ozity_Message.TELEPORT.__enum__ = ozity_Message;
ozity_Message.FINISH = ["FINISH",14];
ozity_Message.FINISH.toString = $estr;
ozity_Message.FINISH.__enum__ = ozity_Message;
ozity_Message.TRIGGER = ["TRIGGER",15];
ozity_Message.TRIGGER.toString = $estr;
ozity_Message.TRIGGER.__enum__ = ozity_Message;
var ozity_LevelMarkType = $hxClasses["ozity.LevelMarkType"] = { __ename__ : ["ozity","LevelMarkType"], __constructs__ : ["Start","End"] };
ozity_LevelMarkType.Start = ["Start",0];
ozity_LevelMarkType.Start.toString = $estr;
ozity_LevelMarkType.Start.__enum__ = ozity_LevelMarkType;
ozity_LevelMarkType.End = ["End",1];
ozity_LevelMarkType.End.toString = $estr;
ozity_LevelMarkType.End.__enum__ = ozity_LevelMarkType;
var ozity_ColType = $hxClasses["ozity.ColType"] = { __ename__ : ["ozity","ColType"], __constructs__ : ["Player","Dispatcher","Enemy","Key","Banana","Door","TeleportIn","AnyType","Shuryken","Spikes","Barrel","Bumpy","Collector","OneWay","Bump","Car","Coin","Boost","Puddle","Finish","Trigger","Falling"] };
ozity_ColType.Player = ["Player",0];
ozity_ColType.Player.toString = $estr;
ozity_ColType.Player.__enum__ = ozity_ColType;
ozity_ColType.Dispatcher = ["Dispatcher",1];
ozity_ColType.Dispatcher.toString = $estr;
ozity_ColType.Dispatcher.__enum__ = ozity_ColType;
ozity_ColType.Enemy = ["Enemy",2];
ozity_ColType.Enemy.toString = $estr;
ozity_ColType.Enemy.__enum__ = ozity_ColType;
ozity_ColType.Key = ["Key",3];
ozity_ColType.Key.toString = $estr;
ozity_ColType.Key.__enum__ = ozity_ColType;
ozity_ColType.Banana = ["Banana",4];
ozity_ColType.Banana.toString = $estr;
ozity_ColType.Banana.__enum__ = ozity_ColType;
ozity_ColType.Door = ["Door",5];
ozity_ColType.Door.toString = $estr;
ozity_ColType.Door.__enum__ = ozity_ColType;
ozity_ColType.TeleportIn = ["TeleportIn",6];
ozity_ColType.TeleportIn.toString = $estr;
ozity_ColType.TeleportIn.__enum__ = ozity_ColType;
ozity_ColType.AnyType = ["AnyType",7];
ozity_ColType.AnyType.toString = $estr;
ozity_ColType.AnyType.__enum__ = ozity_ColType;
ozity_ColType.Shuryken = ["Shuryken",8];
ozity_ColType.Shuryken.toString = $estr;
ozity_ColType.Shuryken.__enum__ = ozity_ColType;
ozity_ColType.Spikes = ["Spikes",9];
ozity_ColType.Spikes.toString = $estr;
ozity_ColType.Spikes.__enum__ = ozity_ColType;
ozity_ColType.Barrel = ["Barrel",10];
ozity_ColType.Barrel.toString = $estr;
ozity_ColType.Barrel.__enum__ = ozity_ColType;
ozity_ColType.Bumpy = ["Bumpy",11];
ozity_ColType.Bumpy.toString = $estr;
ozity_ColType.Bumpy.__enum__ = ozity_ColType;
ozity_ColType.Collector = ["Collector",12];
ozity_ColType.Collector.toString = $estr;
ozity_ColType.Collector.__enum__ = ozity_ColType;
ozity_ColType.OneWay = ["OneWay",13];
ozity_ColType.OneWay.toString = $estr;
ozity_ColType.OneWay.__enum__ = ozity_ColType;
ozity_ColType.Bump = ["Bump",14];
ozity_ColType.Bump.toString = $estr;
ozity_ColType.Bump.__enum__ = ozity_ColType;
ozity_ColType.Car = ["Car",15];
ozity_ColType.Car.toString = $estr;
ozity_ColType.Car.__enum__ = ozity_ColType;
ozity_ColType.Coin = ["Coin",16];
ozity_ColType.Coin.toString = $estr;
ozity_ColType.Coin.__enum__ = ozity_ColType;
ozity_ColType.Boost = ["Boost",17];
ozity_ColType.Boost.toString = $estr;
ozity_ColType.Boost.__enum__ = ozity_ColType;
ozity_ColType.Puddle = ["Puddle",18];
ozity_ColType.Puddle.toString = $estr;
ozity_ColType.Puddle.__enum__ = ozity_ColType;
ozity_ColType.Finish = ["Finish",19];
ozity_ColType.Finish.toString = $estr;
ozity_ColType.Finish.__enum__ = ozity_ColType;
ozity_ColType.Trigger = ["Trigger",20];
ozity_ColType.Trigger.toString = $estr;
ozity_ColType.Trigger.__enum__ = ozity_ColType;
ozity_ColType.Falling = ["Falling",21];
ozity_ColType.Falling.toString = $estr;
ozity_ColType.Falling.__enum__ = ozity_ColType;
var ozity_BlockColor = $hxClasses["ozity.BlockColor"] = { __ename__ : ["ozity","BlockColor"], __constructs__ : ["Purple","Orange","Red","Teal"] };
ozity_BlockColor.Purple = ["Purple",0];
ozity_BlockColor.Purple.toString = $estr;
ozity_BlockColor.Purple.__enum__ = ozity_BlockColor;
ozity_BlockColor.Orange = ["Orange",1];
ozity_BlockColor.Orange.toString = $estr;
ozity_BlockColor.Orange.__enum__ = ozity_BlockColor;
ozity_BlockColor.Red = ["Red",2];
ozity_BlockColor.Red.toString = $estr;
ozity_BlockColor.Red.__enum__ = ozity_BlockColor;
ozity_BlockColor.Teal = ["Teal",3];
ozity_BlockColor.Teal.toString = $estr;
ozity_BlockColor.Teal.__enum__ = ozity_BlockColor;
var ozity_RightAngle = $hxClasses["ozity.RightAngle"] = { __ename__ : ["ozity","RightAngle"], __constructs__ : ["TopLeft","TopRight","BottomLeft","BottomRight"] };
ozity_RightAngle.TopLeft = ["TopLeft",0];
ozity_RightAngle.TopLeft.toString = $estr;
ozity_RightAngle.TopLeft.__enum__ = ozity_RightAngle;
ozity_RightAngle.TopRight = ["TopRight",1];
ozity_RightAngle.TopRight.toString = $estr;
ozity_RightAngle.TopRight.__enum__ = ozity_RightAngle;
ozity_RightAngle.BottomLeft = ["BottomLeft",2];
ozity_RightAngle.BottomLeft.toString = $estr;
ozity_RightAngle.BottomLeft.__enum__ = ozity_RightAngle;
ozity_RightAngle.BottomRight = ["BottomRight",3];
ozity_RightAngle.BottomRight.toString = $estr;
ozity_RightAngle.BottomRight.__enum__ = ozity_RightAngle;
var ozity_CameraBound = $hxClasses["ozity.CameraBound"] = { __ename__ : ["ozity","CameraBound"], __constructs__ : ["TopLeft","BottomRight"] };
ozity_CameraBound.TopLeft = ["TopLeft",0];
ozity_CameraBound.TopLeft.toString = $estr;
ozity_CameraBound.TopLeft.__enum__ = ozity_CameraBound;
ozity_CameraBound.BottomRight = ["BottomRight",1];
ozity_CameraBound.BottomRight.toString = $estr;
ozity_CameraBound.BottomRight.__enum__ = ozity_CameraBound;
var ozity_Axis2D = $hxClasses["ozity.Axis2D"] = { __ename__ : ["ozity","Axis2D"], __constructs__ : ["Vertical","Horizontal"] };
ozity_Axis2D.Vertical = ["Vertical",0];
ozity_Axis2D.Vertical.toString = $estr;
ozity_Axis2D.Vertical.__enum__ = ozity_Axis2D;
ozity_Axis2D.Horizontal = ["Horizontal",1];
ozity_Axis2D.Horizontal.toString = $estr;
ozity_Axis2D.Horizontal.__enum__ = ozity_Axis2D;
var ozity_OzBG = function() { };
$hxClasses["ozity.OzBG"] = ozity_OzBG;
ozity_OzBG.__name__ = ["ozity","OzBG"];
ozity_OzBG.DrawBG = function(Id,x,y,alpha) {
};
var ozity_OzComponent = function(gameObject,compPrefab,compLevel) {
	this.gameObject = null;
	this.gameObject = gameObject;
	this.compPrefab = compPrefab;
	this.compLevel = compLevel;
};
$hxClasses["ozity.OzComponent"] = ozity_OzComponent;
ozity_OzComponent.__name__ = ["ozity","OzComponent"];
ozity_OzComponent.GetClass = function(className) {
	if(!ozity_OzComponent.StringToClass.exists(className)) {
		var value = Type.resolveClass("ozity." + className);
		ozity_OzComponent.StringToClass.set(className,value);
	}
	return ozity_OzComponent.StringToClass.get(className);
};
ozity_OzComponent.Init = function(compXml) {
	if(ozity_OzComponent.StringToXml != null) return;
	ozity_OzComponent.StringToXml = new haxe_ds_StringMap();
	var $it0 = compXml.elementsNamed("c");
	while( $it0.hasNext() ) {
		var comp = $it0.next();
		var key = comp.get("n");
		ozity_OzComponent.StringToXml.set(key,comp);
	}
	ozity_OzComponent.StringToClass = new haxe_ds_StringMap();
};
ozity_OzComponent.prototype = {
	DontCallMe: function() {
		null;
	}
	,init: function() {
	}
	,postInit: function() {
	}
	,update: function() {
	}
	,postUpdate: function() {
	}
	,destroy: function() {
	}
	,directMessage: function(om) {
	}
	,__class__: ozity_OzComponent
};
var ozity_OzBoost = function(gameObject,compPrefab,compLevel) {
	this.lastHitPlayer = -1;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzBoost"] = ozity_OzBoost;
ozity_OzBoost.__name__ = ["ozity","OzBoost"];
ozity_OzBoost.StaticInit = function() {
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Collector,ozity_ColType.Boost,ozity_OzBoost.GetBoost,1);
};
ozity_OzBoost.GetBoost = function(player,boost) {
	var boostComp = boost.getComponent(ozity_OzBoost);
	if(boostComp.lastHitPlayer + 90 < boost.cnt || boostComp.lastHitPlayer < 0) {
		Audio.PlaySound("boost");
		boostComp.lastHitPlayer = boost.cnt;
		var carComp = ozity_OzCar.instance;
		carComp.boost(boost.transform.degrees);
	}
};
ozity_OzBoost.__super__ = ozity_OzComponent;
ozity_OzBoost.prototype = $extend(ozity_OzComponent.prototype,{
	__class__: ozity_OzBoost
});
var ozity_CameraState = $hxClasses["ozity.CameraState"] = { __ename__ : ["ozity","CameraState"], __constructs__ : ["NORMAL","SLOW"] };
ozity_CameraState.NORMAL = ["NORMAL",0];
ozity_CameraState.NORMAL.toString = $estr;
ozity_CameraState.NORMAL.__enum__ = ozity_CameraState;
ozity_CameraState.SLOW = ["SLOW",1];
ozity_CameraState.SLOW.toString = $estr;
ozity_CameraState.SLOW.__enum__ = ozity_CameraState;
var ozity_OzCamera = function(screenSprite) {
	this.rightCCs = new haxe_ds_IntMap();
	this.leftCCs = new haxe_ds_IntMap();
	this.bottomCCs = new haxe_ds_IntMap();
	this.topCCs = new haxe_ds_IntMap();
	this.watchable = null;
	this.targetY = 0;
	this.targetX = 0;
	this.curY = 0;
	this.curX = 0;
	this.horizontalOffset = 0;
	this.lastWatchableX = 0;
	this.cameraState = ozity_CameraState.NORMAL;
	this.started = false;
	this.earthQuakeMagnitude = 0;
	this.earthQuakeDuration = 0;
	this.screenSprite = screenSprite;
	this.topYOffset = Main.HEIGHT_MIN / 3;
	this.bottomYOffSet = 2 * Main.HEIGHT_MIN / 3;
	ozity_OzCamera.HORIZONTAL_OFFSET_DISTANCE = Main.WIDTH_MIN / 4;
	this.horizontalOffset = ozity_OzCamera.HORIZONTAL_OFFSET_DISTANCE / 2;
};
$hxClasses["ozity.OzCamera"] = ozity_OzCamera;
ozity_OzCamera.__name__ = ["ozity","OzCamera"];
ozity_OzCamera.sortHorizontal = function(ch1,ch2) {
	return ch1.j - ch2.j;
};
ozity_OzCamera.sortVertical = function(cv1,cv2) {
	return cv1.i - cv2.i;
};
ozity_OzCamera.prototype = {
	setWatchable: function(watchable) {
		this.watchable = watchable;
		this.targetX = watchable.physics.get_x() - Main.WIDTH_MIN / 2;
		this.targetY = watchable.physics.get_y() - Main.HEIGHT_MIN / 2;
		this.lastWatchableX = watchable.physics.get_x();
	}
	,getAdjustedCamX: function(camX,camWidth) {
		if(camX + camWidth > this.rightX) camX = this.rightX - camWidth;
		if(camX < this.leftX) camX = this.leftX;
		if(this.rightX - this.leftX < camWidth) camX = this.leftX - (camWidth - (this.rightX - this.leftX)) / 2;
		if(camX + camWidth > this.boundsRightX) camX = this.boundsRightX - camWidth;
		if(camX < this.boundsLeftX) camX = this.boundsLeftX;
		return camX;
	}
	,getAdjustedCamY: function(camY,camHeight) {
		if(camY + camHeight > this.bottomY) camY = this.bottomY - camHeight;
		if(camY < this.topY) camY = this.topY;
		if(this.bottomY - this.topY < camHeight) camY = this.topY - (camHeight - (this.bottomY - this.topY)) / 2;
		if(camY + camHeight > this.boundsBottomY) camY = this.boundsBottomY - camHeight;
		if(camY < this.boundsTopY) camY = this.boundsTopY;
		return camY;
	}
	,update: function() {
		if(this.watchable == null) return;
		var maxCameraSpeed = 20;
		if(!this.started) {
			this.started = true;
			maxCameraSpeed = 100000;
			this.curX = this.targetX;
			this.curY = this.targetY;
		} else if(this.cameraState == ozity_CameraState.SLOW) maxCameraSpeed /= 3;
		var wX = this.watchable.physics.get_x();
		var wY = this.watchable.physics.get_y();
		var upSpace = this.watchable.geometry.getVerticalBoundary(-1);
		var downSpace = this.watchable.geometry.getVerticalBoundary(1);
		var tileMap = ozity_OzGameSystem.instance.tileMap;
		if(wY + upSpace < this.targetY + this.topYOffset) this.targetY = wY + upSpace - this.topYOffset;
		if(wY + downSpace > this.targetY + this.bottomYOffSet) this.targetY = wY + downSpace - this.bottomYOffSet;
		var deltaWatchable = this.watchable.physics.get_x() - this.lastWatchableX;
		this.horizontalOffset += deltaWatchable * 0.8;
		this.horizontalOffset = Math.max(-ozity_OzCamera.HORIZONTAL_OFFSET_DISTANCE / 2,Math.min(this.horizontalOffset,ozity_OzCamera.HORIZONTAL_OFFSET_DISTANCE / 2));
		this.targetX = this.watchable.physics.get_x() - Main.WIDTH / 2 + this.horizontalOffset;
		this.lastWatchableX = this.watchable.physics.get_x();
		var wI = Math.floor((wY + this.watchable.geometry.y - tileMap.offsetY) / tileMap.tileSize);
		var wJ = Math.floor((wX + this.watchable.geometry.x - tileMap.offsetX) / tileMap.tileSize);
		this.boundsTopY = 0 * tileMap.tileSize + tileMap.offsetY;
		this.boundsBottomY = tileMap.allocRows * tileMap.tileSize + tileMap.offsetY;
		this.boundsLeftX = 0 * tileMap.tileSize + tileMap.offsetX;
		this.boundsRightX = tileMap.allocCols * tileMap.tileSize + tileMap.offsetX;
		this.topY = this.boundsTopY;
		var $it0 = this.topCCs.keys();
		while( $it0.hasNext() ) {
			var ik = $it0.next();
			var topCCIs = this.topCCs.h[ik];
			var _g1 = 0;
			var _g = topCCIs.length;
			while(_g1 < _g) {
				var i = _g1++;
				var tc = topCCIs[i];
				if(i + 1 == topCCIs.length) {
					if(tc.j <= wJ && tc.rightAngle == ozity_RightAngle.BottomRight) {
						if(ik == wI) tc.crossed = true; else if(ik < wI) tc.crossed = false;
						if(ik <= wI || tc.crossed && !tc.allowDisable) this.topY = Math.max(this.topY,ik * tileMap.tileSize + tileMap.offsetY + tc.offset);
					} else tc.crossed = false;
				} else {
					var tc2 = topCCIs[i + 1];
					if(tc.j <= wJ && tc2.j >= wJ && tc.rightAngle == ozity_RightAngle.BottomRight && tc2.rightAngle == ozity_RightAngle.BottomLeft) {
						if(ik == wI) tc.crossed = true; else if(ik < wI) tc.crossed = false;
						if(ik <= wI || tc.crossed && !tc.allowDisable) this.topY = Math.max(this.topY,ik * tileMap.tileSize + tileMap.offsetY + tc.offset);
					} else tc.crossed = false;
				}
			}
		}
		this.bottomY = this.boundsBottomY;
		var $it1 = this.bottomCCs.keys();
		while( $it1.hasNext() ) {
			var ik1 = $it1.next();
			var bottomCCIs = this.bottomCCs.h[ik1];
			var _g11 = 0;
			var _g2 = bottomCCIs.length;
			while(_g11 < _g2) {
				var i1 = _g11++;
				var bc = bottomCCIs[i1];
				if(i1 + 1 == bottomCCIs.length) {
					if(bc.j <= wJ && bc.rightAngle == ozity_RightAngle.TopRight) {
						if(ik1 == wI) bc.crossed = true; else if(ik1 > wI) bc.crossed = false;
						if(ik1 >= wI || bc.crossed && !bc.allowDisable) this.bottomY = Math.min(this.bottomY,(ik1 + 1) * tileMap.tileSize + tileMap.offsetY + bc.offset);
					} else bc.crossed = false;
				} else {
					var bc2 = bottomCCIs[i1 + 1];
					if(bc.j <= wJ && bc2.j >= wJ && bc.rightAngle == ozity_RightAngle.TopRight && bc2.rightAngle == ozity_RightAngle.TopLeft) {
						if(ik1 == wI) bc.crossed = true; else if(ik1 > wI) bc.crossed = false;
						if(ik1 >= wI || bc.crossed && !bc.allowDisable) this.bottomY = Math.min(this.bottomY,(ik1 + 1) * tileMap.tileSize + tileMap.offsetY + bc.offset);
					} else bc.crossed = false;
				}
			}
		}
		this.leftX = this.boundsLeftX;
		var $it2 = this.leftCCs.keys();
		while( $it2.hasNext() ) {
			var jk = $it2.next();
			var leftCCIs = this.leftCCs.h[jk];
			var _g12 = 0;
			var _g3 = leftCCIs.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				var lc = leftCCIs[i2];
				if(i2 + 1 == leftCCIs.length) {
					if(lc.i <= wI && lc.rightAngle == ozity_RightAngle.BottomRight) {
						if(jk == wJ) lc.crossed = true; else if(jk < wJ) lc.crossed = false;
						if(jk <= wJ || lc.crossed && !lc.allowDisable) this.leftX = Math.max(this.leftX,jk * tileMap.tileSize + tileMap.offsetX + lc.offset);
					} else lc.crossed = false;
				} else {
					var lc2 = leftCCIs[i2 + 1];
					if(lc.i <= wI && lc2.i >= wI && lc.rightAngle == ozity_RightAngle.BottomRight && lc2.rightAngle == ozity_RightAngle.TopRight) {
						if(jk == wJ) lc.crossed = true; else if(jk < wJ) lc.crossed = false;
						if(jk <= wJ || lc.crossed && !lc.allowDisable) this.leftX = Math.max(this.leftX,jk * tileMap.tileSize + tileMap.offsetX + lc.offset);
					} else lc.crossed = false;
				}
			}
		}
		this.rightX = this.boundsRightX;
		var $it3 = this.rightCCs.keys();
		while( $it3.hasNext() ) {
			var jk1 = $it3.next();
			var rightCCIs = this.rightCCs.h[jk1];
			var _g13 = 0;
			var _g4 = rightCCIs.length;
			while(_g13 < _g4) {
				var i3 = _g13++;
				var rc = rightCCIs[i3];
				if(i3 + 1 == rightCCIs.length) {
					if(rc.i <= wI && rc.rightAngle == ozity_RightAngle.BottomLeft) {
						if(jk1 == wJ) rc.crossed = true; else if(jk1 > wJ) rc.crossed = false;
						if(jk1 >= wJ || rc.crossed && !rc.allowDisable) this.rightX = Math.min(this.rightX,(jk1 + 1) * tileMap.tileSize + tileMap.offsetX + rc.offset);
					} else rc.crossed = false;
				} else {
					var rc2 = rightCCIs[i3 + 1];
					if(rc.i <= wI && rc2.i >= wI && rc.rightAngle == ozity_RightAngle.BottomLeft && rc2.rightAngle == ozity_RightAngle.TopLeft) {
						if(jk1 == wJ) rc.crossed = true; else if(jk1 > wJ) rc.crossed = false;
						if(jk1 >= wJ || rc.crossed && !rc.allowDisable) this.rightX = Math.min(this.rightX,(jk1 + 1) * tileMap.tileSize + tileMap.offsetX + rc.offset);
					} else rc.crossed = false;
				}
			}
		}
		this.slackX = Math.floor((Main.WIDTH - Main.WIDTH_MIN) / 2);
		this.slackY = Math.floor((Main.HEIGHT - Main.HEIGHT_MIN) / 2);
		this.targetX = this.getAdjustedCamX(this.targetX,Main.WIDTH) + this.slackX;
		this.targetY = this.getAdjustedCamY(this.targetY,Main.HEIGHT) + this.slackY;
		dev_DevUtil.ReachMaxSpeed2D(this.curX,this.curY,this.targetX,this.targetY,maxCameraSpeed,ozity_OzCamera.tempVec);
		this.curX = Math.round(ozity_OzCamera.tempVec[0]);
		this.curY = Math.round(ozity_OzCamera.tempVec[1]);
		this.screenSprite.set_x(-this.curX);
		this.screenSprite.set_y(-this.curY);
		if(this.earthQuakeDuration > 0) {
			var _g5 = this.screenSprite;
			_g5.set_x(_g5.get_x() + Math.round(Math.random() * this.earthQuakeMagnitude * 2 - this.earthQuakeMagnitude));
			var _g6 = this.screenSprite;
			_g6.set_y(_g6.get_y() + Math.round(Math.random() * this.earthQuakeMagnitude * 2 - this.earthQuakeMagnitude));
		}
		this.earthQuakeDuration--;
		oz_OzSprite.UpdateBG(ozity_OzGameSystem.instance.bgSprite,-this.screenSprite.get_x(),-this.screenSprite.get_y(),0 * tileMap.tileSize + tileMap.offsetY,tileMap.allocRows * tileMap.tileSize + tileMap.offsetY - Main.HEIGHT_MIN);
	}
	,gameScreenEdgeX: function() {
		return -this.screenSprite._realX() - Math.floor((Main.WIDTH - Main.WIDTH_MIN) / 2);
	}
	,gameScreenEdgeY: function() {
		return -this.screenSprite._realY() - Math.floor((Main.HEIGHT - Main.HEIGHT_MIN) / 2);
	}
	,addCameraController: function(cc) {
		var _g = cc.axis;
		switch(_g[1]) {
		case 1:
			var toSort = null;
			var I = cc.i;
			if(cc.rightAngle == ozity_RightAngle.BottomLeft || cc.rightAngle == ozity_RightAngle.BottomRight) {
				if(!this.topCCs.h.hasOwnProperty(I)) this.topCCs.set(I,[]);
				toSort = this.topCCs.h[I];
				toSort.push(cc);
			} else {
				if(!this.bottomCCs.h.hasOwnProperty(I)) this.bottomCCs.set(I,[]);
				toSort = this.bottomCCs.h[I];
				toSort.push(cc);
			}
			toSort.sort(ozity_OzCamera.sortHorizontal);
			break;
		default:
			var toSort1 = null;
			var J = cc.j;
			if(cc.rightAngle == ozity_RightAngle.TopRight || cc.rightAngle == ozity_RightAngle.BottomRight) {
				if(!this.leftCCs.h.hasOwnProperty(J)) this.leftCCs.set(J,[]);
				toSort1 = this.leftCCs.h[J];
				toSort1.push(cc);
			} else {
				if(!this.rightCCs.h.hasOwnProperty(J)) this.rightCCs.set(J,[]);
				toSort1 = this.rightCCs.h[J];
				toSort1.push(cc);
			}
			toSort1.sort(ozity_OzCamera.sortVertical);
		}
	}
	,__class__: ozity_OzCamera
};
var ozity_OzCameraBound = function(gameObject,compPrefab,compLevel) {
	this.type = ozity_CameraBound.TopLeft;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("type") != null) {
		var constr = compLevel.get("type");
		this.type = Type.createEnum(ozity_CameraBound,constr,null);
	}
};
$hxClasses["ozity.OzCameraBound"] = ozity_OzCameraBound;
ozity_OzCameraBound.__name__ = ["ozity","OzCameraBound"];
ozity_OzCameraBound.OutOfBounds = function(vec4) {
	return vec4[0] < ozity_OzCameraBound.MinX || vec4[1] < ozity_OzCameraBound.MinY || vec4[2] > ozity_OzCameraBound.MaxX || vec4[3] > ozity_OzCameraBound.MaxY;
};
ozity_OzCameraBound.__super__ = ozity_OzComponent;
ozity_OzCameraBound.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		if(this.type == ozity_CameraBound.TopLeft) {
			ozity_OzCameraBound.MinX = this.gameObject.transform.x + this.gameObject.geometry.x + this.gameObject.geometry.halfWidth;
			ozity_OzCameraBound.MinY = this.gameObject.transform.y + this.gameObject.geometry.y + this.gameObject.geometry.halfHeight;
		} else {
			ozity_OzCameraBound.MaxX = this.gameObject.transform.x + this.gameObject.geometry.x - this.gameObject.geometry.halfWidth;
			ozity_OzCameraBound.MaxY = this.gameObject.transform.y + this.gameObject.geometry.y - this.gameObject.geometry.halfHeight;
		}
	}
	,__class__: ozity_OzCameraBound
});
var ozity_OzCameraController = function(gameObject,compPrefab,compLevel) {
	this.crossed = false;
	this.j = 0;
	this.i = 0;
	this.allowDisable = true;
	this.offset = 0;
	this.rightAngle = ozity_RightAngle.BottomLeft;
	this.axis = ozity_Axis2D.Horizontal;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("axis") != null) {
		var constr = compLevel.get("axis");
		this.axis = Type.createEnum(ozity_Axis2D,constr,null);
	}
	if(compLevel.get("rightAngle") != null) {
		var constr1 = compLevel.get("rightAngle");
		this.rightAngle = Type.createEnum(ozity_RightAngle,constr1,null);
	}
	if(compLevel.get("offset") != null) this.offset = Std.parseFloat(compLevel.get("offset"));
	if(compLevel.get("allowDisable") != null) this.allowDisable = compLevel.get("allowDisable") == "true";
};
$hxClasses["ozity.OzCameraController"] = ozity_OzCameraController;
ozity_OzCameraController.__name__ = ["ozity","OzCameraController"];
ozity_OzCameraController.__super__ = ozity_OzComponent;
ozity_OzCameraController.prototype = $extend(ozity_OzComponent.prototype,{
	init: function() {
		this.i = this.gameObject.gameSystem.tileMap.getI(this.gameObject.transform.y + this.gameObject.geometry.y);
		this.j = this.gameObject.gameSystem.tileMap.getJ(this.gameObject.transform.x + this.gameObject.geometry.x);
		this.gameObject.gameSystem.camera.addCameraController(this);
	}
	,__class__: ozity_OzCameraController
});
var zpp_$nape_geom_ZPP_$Vec2 = function() {
	this.y = 0.0;
	this.x = 0.0;
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
	this.weak = false;
	this.outer = null;
	this._isimmutable = null;
	this._immutable = false;
	this._validate = null;
	this._invalidate = null;
};
$hxClasses["zpp_nape.geom.ZPP_Vec2"] = zpp_$nape_geom_ZPP_$Vec2;
zpp_$nape_geom_ZPP_$Vec2.__name__ = ["zpp_nape","geom","ZPP_Vec2"];
zpp_$nape_geom_ZPP_$Vec2.get = function(x,y,immutable) {
	if(immutable == null) immutable = false;
	var ret;
	if(zpp_$nape_geom_ZPP_$Vec2.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$Vec2(); else {
		ret = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = ret.next;
		ret.next = null;
	}
	ret.weak = false;
	ret._immutable = immutable;
	ret.x = x;
	ret.y = y;
	return ret;
};
zpp_$nape_geom_ZPP_$Vec2.prototype = {
	validate: function() {
		if(this._validate != null) this._validate();
	}
	,invalidate: function() {
		if(this._invalidate != null) this._invalidate(this);
	}
	,immutable: function() {
		if(this._immutable) throw new js__$Boot_HaxeError("Error: Vec2 is immutable");
		if(this._isimmutable != null) this._isimmutable();
	}
	,wrapper: function() {
		if(this.outer == null) {
			this.outer = new nape_geom_Vec2();
			var o = this.outer.zpp_inner;
			if(o.outer != null) {
				o.outer.zpp_inner = null;
				o.outer = null;
			}
			o._isimmutable = null;
			o._validate = null;
			o._invalidate = null;
			o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
			zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		o._inuse = true;
		temp = o;
		temp.next = this.next;
		this.next = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		o._inuse = true;
		temp = o;
		if(cur == null) {
			temp.next = this.next;
			this.next = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.next;
			ret = old.next;
			this.next = ret;
			if(this.next == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		old._inuse = false;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,reverse: function() {
		var cur = this.next;
		var pre = null;
		while(cur != null) {
			var nx = cur.next;
			cur.next = pre;
			this.next = cur;
			pre = cur;
			cur = nx;
		}
		this.modified = true;
		this.pushmod = true;
	}
	,iterator_at: function(ind) {
		var ret = this.next;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,toString: function() {
		return "{ x: " + this.x + " y: " + this.y + " }";
	}
	,__class__: zpp_$nape_geom_ZPP_$Vec2
};
var ozity_OzCar = function(gameObject,compPrefab,compLevel) {
	this.framesDownSlow = 0;
	this.numRotationBonuses = 0;
	this.startingJumpRotation = 0;
	this.lastFrameFrontWheelDown = false;
	this.lastFrameBackWheelDown = false;
	this.lastLandCnt = -1;
	this.numFramesNoGround = 0;
	this.lastFrameRotation = 0;
	this.lastFrameIncreased = false;
	this.lastNumRotationBonuses = 0;
	this.fxVec = new nape_geom_Vec2();
	this.lastWheelFX = -1;
	this.numLoads = 0;
	this.gVec = new nape_geom_Vec2();
	this.carSprite = null;
	this.physics = null;
	this.cntLastGround = -1;
	this.wheels = null;
	this.crashSensor = null;
	this.wheelShapes = null;
	this.wheelBodies = null;
	this.carShape = null;
	this.carBody = null;
	this.car = null;
	this.distance = 0;
	this.lastBoost = -1;
	this.boostPower = 1000;
	this.boostDuration = 30;
	this.velLimit = 900;
	this.velRotOffset = 0.1;
	this.angLimit = 7;
	this.angDecrease = 0.6;
	this.angIncrease = 0.7;
	this.rotDecelRatio = 0.8;
	this.cntBeforeRot = 3;
	this.rotImpulse = 10;
	this.velIncrease = 45;
	this.velLimitGroundInertia = 60;
	this.velLimitGround = 550;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compPrefab.get("velLimitGround") != null) this.velLimitGround = Std.parseFloat(compPrefab.get("velLimitGround"));
	if(compPrefab.get("velLimitGroundInertia") != null) this.velLimitGroundInertia = Std.parseFloat(compPrefab.get("velLimitGroundInertia"));
	if(compPrefab.get("velIncrease") != null) this.velIncrease = Std.parseFloat(compPrefab.get("velIncrease"));
	if(compPrefab.get("rotImpulse") != null) this.rotImpulse = Std.parseFloat(compPrefab.get("rotImpulse"));
	if(compPrefab.get("cntBeforeRot") != null) this.cntBeforeRot = Std.parseInt(compPrefab.get("cntBeforeRot"));
	if(compPrefab.get("rotDecelRatio") != null) this.rotDecelRatio = Std.parseFloat(compPrefab.get("rotDecelRatio"));
	if(compPrefab.get("angIncrease") != null) this.angIncrease = Std.parseFloat(compPrefab.get("angIncrease"));
	if(compPrefab.get("angDecrease") != null) this.angDecrease = Std.parseFloat(compPrefab.get("angDecrease"));
	if(compPrefab.get("angLimit") != null) this.angLimit = Std.parseFloat(compPrefab.get("angLimit"));
	if(compPrefab.get("velRotOffset") != null) this.velRotOffset = Std.parseFloat(compPrefab.get("velRotOffset"));
	if(compPrefab.get("velLimit") != null) this.velLimit = Std.parseFloat(compPrefab.get("velLimit"));
	if(compPrefab.get("boostDuration") != null) this.boostDuration = Std.parseInt(compPrefab.get("boostDuration"));
	if(compPrefab.get("boostPower") != null) this.boostPower = Std.parseFloat(compPrefab.get("boostPower"));
};
$hxClasses["ozity.OzCar"] = ozity_OzCar;
ozity_OzCar.__name__ = ["ozity","OzCar"];
ozity_OzCar.StaticInit = function() {
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Player,ozity_ColType.Spikes,ozity_OzCar.CarHitSpikes);
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Player,ozity_ColType.Falling,ozity_OzCar.CarHitFalling);
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Player,ozity_ColType.Trigger,ozity_OzCar.CarTrigger,1);
};
ozity_OzCar.CarHitFalling = function(goCar,goFalling) {
	var fallingComp;
	fallingComp = js_Boot.__cast(goFalling.getComponent(ozity_OzFallOnTouch) , ozity_OzFallOnTouch);
	fallingComp.directMessage(ozity_Message.TRIGGER);
};
ozity_OzCar.CarTrigger = function(goCar,goTrigger) {
	var triggerComp;
	triggerComp = js_Boot.__cast(goTrigger.getComponent(ozity_OzTrigger) , ozity_OzTrigger);
	triggerComp.trigger();
};
ozity_OzCar.CarHitSpikes = function(goCar,goSpikes) {
	ozity_OzCar.instance.die();
};
ozity_OzCar.__super__ = ozity_OzComponent;
ozity_OzCar.prototype = $extend(ozity_OzComponent.prototype,{
	isBoosting: function() {
		return this.lastBoost > 0 && this.lastBoost + this.boostDuration > this.gameObject.cnt;
	}
	,setSkin: function() {
		this.carSprite.gotoAndStop(Globals.currentSkin + 1);
	}
	,postInit: function() {
		this.distance = 0;
		ozity_OzCar.instance = this;
		var dwx = 20;
		var dwy = 0;
		this.wheelBodies = [];
		this.wheels = [];
		var _g = 0;
		var _g1 = this.gameObject.children;
		while(_g < _g1.length) {
			var child = _g1[_g];
			++_g;
			if(child.geometry.type == 1) {
				this.carBody = child.physics.body;
				this.carShape = this.carBody.zpp_inner.wrap_shapes.at(0);
				this.car = child;
			} else {
				this.wheelBodies.push(child.physics.body);
				this.wheels.push(child);
				child.graphics.sprite.set_visible(false);
			}
		}
		this.carBody.set_rotation(0);
		if(ozity_OzCar.isUnibody) {
			var _g2 = 0;
			var _g11 = this.wheelBodies;
			while(_g2 < _g11.length) {
				var wb = _g11[_g2];
				++_g2;
				if(wb.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
				wb.zpp_inner.immutable_midstep("Body::space");
				if(wb.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
				if((wb.zpp_inner.space == null?null:wb.zpp_inner.space.outer) != null) {
					if((wb.zpp_inner.space == null?null:wb.zpp_inner.space.outer) != null) wb.zpp_inner.component.woken = false;
					if((wb.zpp_inner.space == null?null:wb.zpp_inner.space.outer) != null) (wb.zpp_inner.space == null?null:wb.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(wb);
				}
				if(wb.zpp_inner.space == null) null; else wb.zpp_inner.space.outer;
			}
			var _g3 = 0;
			var _g12 = this.wheels;
			while(_g3 < _g12.length) {
				var wh = _g12[_g3];
				++_g3;
				wh.dead = true;
			}
			this.wheelShapes = [];
			var wheelGeo = this.wheels[0].geometry;
			wheelGeo.x = -dwx;
			wheelGeo.y = dwy;
			wheelGeo.degrees = 0;
			this.car.physics.addShapeFromGeometry(wheelGeo);
			var _g4 = this.car.physics.body.zpp_inner.wrap_shapes.iterator();
			while(_g4.hasNext()) {
				var shape;
				_g4.zpp_critical = false;
				shape = _g4.zpp_inner.at(_g4.zpp_i++);
				if(shape.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.wheelShapes.push(shape);
			}
			wheelGeo.x = dwx;
			this.car.physics.addShapeFromGeometry(wheelGeo);
			var _g5 = this.car.physics.body.zpp_inner.wrap_shapes.iterator();
			while(_g5.hasNext()) {
				var shape1;
				_g5.zpp_critical = false;
				shape1 = _g5.zpp_inner.at(_g5.zpp_i++);
				if(shape1.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE && shape1 != this.wheelShapes[0]) this.wheelShapes.push(shape1);
			}
			wheelGeo.x = 0;
			wheelGeo.y = -12;
			wheelGeo.radius = 9;
			this.car.physics.addShapeFromGeometry(wheelGeo);
			this.carBody.set_isBullet(true);
			this.carBody.set_disableCCD(false);
			var _g6 = this.car.physics.body.zpp_inner.wrap_shapes.iterator();
			while(_g6.hasNext()) {
				var shape2;
				_g6.zpp_critical = false;
				shape2 = _g6.zpp_inner.at(_g6.zpp_i++);
				if(shape2.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE && shape2 != this.wheelShapes[0] && shape2 != this.wheelShapes[1]) this.crashSensor = shape2;
			}
			this.crashSensor.set_sensorEnabled(true);
			var wspr1 = oz_OzSprite.New(Objects.cmcCarWheel);
			wspr1.set_x(-dwx);
			wspr1.set_y(dwy);
			this.car.graphics.getGameSprite().addChild(wspr1);
			var wspr2 = oz_OzSprite.New(Objects.cmcCarWheel);
			wspr2.set_x(dwx);
			wspr2.set_y(dwy);
			this.car.graphics.getGameSprite().addChild(wspr2);
			this.carSprite = oz_OzSprite.New(Objects.cmcCarChassis);
			this.car.graphics.getGameSprite().addChild(this.carSprite);
			this.car.graphics.getGameSprite().mc = null;
			this.car.graphics.getGameSprite().type = oz_SpriteType.EMPTY;
			wspr1.gotoAndStop(2);
			wspr2.gotoAndStop(2);
		} else {
			var _g13 = 0;
			var _g7 = this.wheelBodies.length;
			while(_g13 < _g7) {
				var i = _g13++;
				var wx;
				if(i == 0) wx = -dwx; else wx = dwx;
				var wy = dwy;
				var wb1 = this.wheelBodies[i];
				((function($this) {
					var $r;
					if(wb1.zpp_inner.wrap_pos == null) wb1.zpp_inner.setupPosition();
					$r = wb1.zpp_inner.wrap_pos;
					return $r;
				}(this))).setxy(this.carBody.get_position().get_x() + wx,this.carBody.get_position().get_y() + wy);
				var lineJoint = new nape_constraint_LineJoint(this.carBody,wb1,this.carBody.worldPointToLocal((function($this) {
					var $r;
					if(wb1.zpp_inner.wrap_pos == null) wb1.zpp_inner.setupPosition();
					$r = wb1.zpp_inner.wrap_pos;
					return $r;
				}(this))),new nape_geom_Vec2(0,0),new nape_geom_Vec2(0,1),0,1);
				lineJoint.set_space(this.carBody.get_space());
				if(lineJoint.zpp_inner.stiff != false) {
					lineJoint.zpp_inner.stiff = false;
					lineJoint.zpp_inner.wake();
				}
				lineJoint.zpp_inner.stiff;
				if(lineJoint.zpp_inner.frequency != 10) {
					lineJoint.zpp_inner.frequency = 10;
					if(!lineJoint.zpp_inner.stiff) lineJoint.zpp_inner.wake();
				}
				lineJoint.zpp_inner.frequency;
				if(lineJoint.zpp_inner.ignore != true) {
					lineJoint.zpp_inner.ignore = true;
					lineJoint.zpp_inner.wake();
				}
				lineJoint.zpp_inner.ignore;
			}
			var _g8 = 0;
			var _g14 = this.wheelBodies;
			while(_g8 < _g14.length) {
				var wb2 = _g14[_g8];
				++_g8;
				var wp;
				if(wb2.zpp_inner.wrap_pos == null) wb2.zpp_inner.setupPosition();
				wp = wb2.zpp_inner.wrap_pos;
				var upCar = 20;
				var distanceJoint = new nape_constraint_DistanceJoint(this.carBody,wb2,this.carBody.worldPointToLocal(new nape_geom_Vec2((function($this) {
					var $r;
					if(wp != null && wp.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					wp.zpp_inner.validate();
					$r = wp.zpp_inner.x;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(wp != null && wp.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					wp.zpp_inner.validate();
					$r = wp.zpp_inner.y;
					return $r;
				}(this)) - upCar)),new nape_geom_Vec2(0,0),upCar,upCar);
				distanceJoint.set_space(this.carBody.get_space());
				if(distanceJoint.zpp_inner.stiff != false) {
					distanceJoint.zpp_inner.stiff = false;
					distanceJoint.zpp_inner.wake();
				}
				distanceJoint.zpp_inner.stiff;
				if(distanceJoint.zpp_inner.damping != 1) {
					distanceJoint.zpp_inner.damping = 1;
					if(!distanceJoint.zpp_inner.stiff) distanceJoint.zpp_inner.wake();
				}
				distanceJoint.zpp_inner.damping;
				if(distanceJoint.zpp_inner.frequency != 10) {
					distanceJoint.zpp_inner.frequency = 10;
					if(!distanceJoint.zpp_inner.stiff) distanceJoint.zpp_inner.wake();
				}
				distanceJoint.zpp_inner.frequency;
				if(distanceJoint.zpp_inner.ignore != true) {
					distanceJoint.zpp_inner.ignore = true;
					distanceJoint.zpp_inner.wake();
				}
				distanceJoint.zpp_inner.ignore;
			}
		}
		this.setSkin();
	}
	,die: function(showStars) {
		if(showStars == null) showStars = true;
		if(showStars) {
			var sprParent;
			if(ozity_OzCar.isUnibody) sprParent = this.car.graphics.sprite.parent; else sprParent = this.gameObject.graphics.sprite.parent;
			var phys;
			if(ozity_OzCar.isUnibody) phys = this.car.physics; else phys = this.gameObject.physics;
			oz_OzParticle.EmitFountain2(sprParent,Objects.cmcCrashStar,phys.get_x(),phys.get_y(),1,10,10,15,60);
			var WheelBluePrint = ozity_OzGameObject.StringToXml.get("carwheel");
			var ang = this.carBody.zpp_inner.rot;
			var cx = this.carBody.get_position().get_x();
			var cy = this.carBody.get_position().get_y();
			this.carBody.set_space(null);
			var _g = 0;
			while(_g < 2) {
				var i = _g++;
				var shot = new ozity_OzGameObject(ozity_OzGameSystem.instance,WheelBluePrint,null);
				var dirX = Math.cos(ang) * (i * 2 - 1);
				var dirY = Math.sin(ang) * (i * 2 - 1);
				shot.transform.x = this.carBody.get_position().get_x() + dirX * 10;
				shot.transform.y = this.carBody.get_position().get_y() + dirY * 10;
				shot.transform.degrees = 0;
				shot.init();
				shot.postInit();
				shot.physics.body.applyImpulse(new nape_geom_Vec2(dirX * 200,dirY * 200));
				shot.gameSystem.addGameObject(shot);
				shot.graphics.getGameSprite().gotoAndStop(1);
			}
		}
		this.gameObject.dead = true;
		this.car.dead = true;
		var _g1 = 0;
		var _g11 = this.wheels;
		while(_g1 < _g11.length) {
			var wh = _g11[_g1];
			++_g1;
			wh.dead = true;
		}
		this.gameObject.gameSystem.sendMessage(ozity_Message.PLAYER_DIE);
	}
	,boost: function(radsBoost) {
		this.lastBoost = this.gameObject.cnt;
		this.incVelBody(this.carBody,this.boostPower,radsBoost - this.carBody.zpp_inner.rot);
	}
	,setVel: function(x,y) {
		this.carBody.get_velocity().setxy(x,y);
		this.wheelBodies[0].get_velocity().setxy(x,y);
		this.wheelBodies[1].get_velocity().setxy(x,y);
	}
	,incVelBody: function(body,amount,offRot) {
		if(offRot == null) offRot = 0;
		var v1;
		if(body.zpp_inner.wrap_vel == null) body.zpp_inner.setupVelocity();
		v1 = body.zpp_inner.wrap_vel;
		var rads = body.zpp_inner.rot + offRot;
		var _g = v1;
		_g.set_x((function($this) {
			var $r;
			if(_g != null && _g.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			_g.zpp_inner.validate();
			$r = _g.zpp_inner.x;
			return $r;
		}(this)) + Math.cos(rads) * amount);
		var _g1 = v1;
		_g1.set_y((function($this) {
			var $r;
			if(_g1 != null && _g1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			_g1.zpp_inner.validate();
			$r = _g1.zpp_inner.y;
			return $r;
		}(this)) + Math.sin(rads) * amount);
	}
	,incVelBodyTotal: function(body,amount,offRot,ratio) {
		if(ratio == null) ratio = 1;
		if(offRot == null) offRot = 0;
		var v1;
		if(body.zpp_inner.wrap_vel == null) body.zpp_inner.setupVelocity();
		v1 = body.zpp_inner.wrap_vel;
		var rads = body.zpp_inner.rot + offRot;
		var len;
		if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
		len = Math.sqrt((function($this) {
			var $r;
			if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			v1.zpp_inner.validate();
			$r = v1.zpp_inner.x;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			v1.zpp_inner.validate();
			$r = v1.zpp_inner.x;
			return $r;
		}(this)) + (function($this) {
			var $r;
			if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			v1.zpp_inner.validate();
			$r = v1.zpp_inner.y;
			return $r;
		}(this)) * (function($this) {
			var $r;
			if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			v1.zpp_inner.validate();
			$r = v1.zpp_inner.y;
			return $r;
		}(this)));
		v1.set_x(Math.cos(rads) * (amount + ratio * len) + (function($this) {
			var $r;
			if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			v1.zpp_inner.validate();
			$r = v1.zpp_inner.x;
			return $r;
		}(this)) * (1 - ratio));
		v1.set_y(Math.sin(rads) * (amount + ratio * len) + (function($this) {
			var $r;
			if(v1 != null && v1.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
			v1.zpp_inner.validate();
			$r = v1.zpp_inner.y;
			return $r;
		}(this)) * (1 - ratio));
	}
	,increaseVel: function(amount,offRot) {
		if(offRot == null) offRot = 0;
		if(ozity_OzCar.isUnibody) this.incVelBody(this.carBody,amount,offRot); else this.incVelBody(this.carBody,amount,offRot);
	}
	,limitVel: function(limit) {
		if(ozity_OzCar.isUnibody) {
			if(this.carBody.get_velocity().get_length() > limit) this.carBody.get_velocity().set_length(Math.max(limit,this.carBody.get_velocity().get_length() * 0.9));
		} else {
			var _g = 0;
			var _g1 = this.wheelBodies;
			while(_g < _g1.length) {
				var wb = _g1[_g];
				++_g;
			}
		}
	}
	,limitAngularForce: function(absLimit) {
		if(ozity_OzCar.isUnibody) {
			if(this.carBody.zpp_inner.angvel < -absLimit) this.carBody.set_angularVel(-absLimit); else if(this.carBody.zpp_inner.angvel > absLimit) this.carBody.set_angularVel(absLimit);
		} else {
		}
	}
	,incAngularVel: function(amount) {
		if(ozity_OzCar.isUnibody) {
			var _g = this.carBody;
			_g.set_angularVel(_g.zpp_inner.angvel + amount);
		}
	}
	,decelAngularVel: function(amount) {
		if(amount < 0) amount = -amount;
		if(ozity_OzCar.isUnibody) {
			if(Math.abs(this.carBody.zpp_inner.angvel) < amount) this.carBody.set_angularVel(0); else if(this.carBody.zpp_inner.angvel < 0) {
				var _g = this.carBody;
				_g.set_angularVel(_g.zpp_inner.angvel + amount);
			} else {
				var _g1 = this.carBody;
				_g1.set_angularVel(_g1.zpp_inner.angvel - amount);
			}
		}
	}
	,update: function() {
		ozity_OzComponent.prototype.update.call(this);
		if(states_StatePlay.instance.state != states_StatePlay.NORMAL) return;
		var phys = this.car.physics;
		this.distance = Math.max(this.distance,this.carBody.get_position().get_x());
		var numContacts = 0;
		var down = Input.mdown || Input.down[38];
		if(down && !Audio.muteSound) Audio.PlayMusic("motor"); else Audio.StopMusic();
		if(this.carBody.get_position().get_y() > ozity_OzCar.Y_BEFORE_DIE + 100) {
			this.die(false);
			return;
		}
		if(ozity_OzCar.isUnibody) {
			var numFront = 0;
			var numBack = 0;
			var backWheelDown = false;
			var frontWheelDown = false;
			var onGround = false;
			var slowGround = false;
			var frontRads = 0;
			var backRads = 0;
			var _g1 = 0;
			var _g = this.carBody.get_arbiters().get_length();
			while(_g1 < _g) {
				var i = _g1++;
				var a = this.carBody.get_arbiters().at(i);
				var ground = null;
				if(oz_NapeUtil.IsFrom2Shapes(this.wheelShapes[0],(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
					return $r;
				}(this)))) {
					var other = oz_NapeUtil.OtherFrom2Shapes(this.wheelShapes[0],(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
						return $r;
					}(this)),(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
						return $r;
					}(this)));
					if(!other.zpp_inner.sensorEnabled) {
						numBack++;
						if(other.zpp_inner.body != null) ground = other.zpp_inner.body.outer; else ground = null;
					}
				}
				if(oz_NapeUtil.IsFrom2Shapes(this.wheelShapes[1],(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
					return $r;
				}(this)))) {
					var other1 = oz_NapeUtil.OtherFrom2Shapes(this.wheelShapes[1],(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
						return $r;
					}(this)),(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
						return $r;
					}(this)));
					if(!other1.zpp_inner.sensorEnabled) {
						numFront++;
						if(other1.zpp_inner.body != null) ground = other1.zpp_inner.body.outer; else ground = null;
					}
					if(zpp_$nape_dynamics_ZPP_$Arbiter.types[a.zpp_inner.type] == (function($this) {
						var $r;
						if(zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION == null) {
							zpp_$nape_util_ZPP_$Flags.internal = true;
							zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION = new nape_dynamics_ArbiterType();
							zpp_$nape_util_ZPP_$Flags.internal = false;
						}
						$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION;
						return $r;
					}(this))) {
						var colA;
						if(a.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) colA = a.zpp_inner.colarb.outer_zn; else colA = null;
						var refEdge = colA.get_referenceEdge1();
						if(other1 == (function($this) {
							var $r;
							if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
							$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
							return $r;
						}(this))) refEdge = colA.get_referenceEdge2();
						frontRads = Math.atan2(((function($this) {
							var $r;
							if(refEdge.zpp_inner.polygon == null) throw new js__$Boot_HaxeError("Error: Edge not current in use");
							if(refEdge.zpp_inner.wrap_gnorm == null) refEdge.zpp_inner.getgnorm();
							$r = refEdge.zpp_inner.wrap_gnorm;
							return $r;
						}(this))).get_y(),((function($this) {
							var $r;
							if(refEdge.zpp_inner.polygon == null) throw new js__$Boot_HaxeError("Error: Edge not current in use");
							if(refEdge.zpp_inner.wrap_gnorm == null) refEdge.zpp_inner.getgnorm();
							$r = refEdge.zpp_inner.wrap_gnorm;
							return $r;
						}(this))).get_x()) + Math.PI / 2;
					}
				}
				if(oz_NapeUtil.IsFrom2Shapes(this.carShape,(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
					return $r;
				}(this)))) {
					var other2 = oz_NapeUtil.OtherFrom2Shapes(this.carShape,(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
						return $r;
					}(this)),(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
						return $r;
					}(this)));
					if(!other2.zpp_inner.sensorEnabled) if(other2.zpp_inner.body != null) ground = other2.zpp_inner.body.outer; else ground = null;
				}
				if(oz_NapeUtil.IsFrom2Shapes(this.crashSensor,(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
					return $r;
				}(this)),(function($this) {
					var $r;
					if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
					$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
					return $r;
				}(this)))) {
					var other3 = oz_NapeUtil.OtherFrom2Shapes(this.crashSensor,(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws2.outer:a.zpp_inner.ws1.outer;
						return $r;
					}(this)),(function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.ws1.outer:a.zpp_inner.ws2.outer;
						return $r;
					}(this)));
					if(!other3.zpp_inner.sensorEnabled) {
						this.die();
						return;
					}
				}
				if(ground != null) {
					if(!onGround) {
						onGround = true;
						slowGround = true;
					}
					if(slowGround) {
						if(((function($this) {
							var $r;
							if(ground.zpp_inner.wrap_vel == null) ground.zpp_inner.setupVelocity();
							$r = ground.zpp_inner.wrap_vel;
							return $r;
						}(this))).get_length() > 0.01 || Math.abs(ground.zpp_inner.angvel) > 0.01) slowGround = false;
					}
				}
			}
			frontWheelDown = numFront > 0;
			backWheelDown = numBack > 0;
			if(!onGround) {
				this.numFramesNoGround++;
				var numBonusRots = Math.floor((this.startingJumpRotation - this.carBody.zpp_inner.rot) / (2 * Math.PI));
				if(numBonusRots > this.numRotationBonuses) {
					this.numRotationBonuses++;
					states_StatePlay.instance.showBonus(this.numRotationBonuses,1);
				}
			} else {
				if(this.numFramesNoGround > 30) this.lastLandCnt = this.gameObject.gameSystem.updateFrame;
				this.numFramesNoGround = 0;
				this.startingJumpRotation = this.carBody.zpp_inner.rot;
			}
			if((!backWheelDown || !frontWheelDown) && this.lastFrameBackWheelDown && this.lastFrameFrontWheelDown && slowGround) this.limitAngularForce(1);
			ozity_OzCar.velVecTemp.setxy(1,0);
			var velVecLocal = this.carBody.worldVectorToLocal(this.carBody.get_velocity());
			if(this.lastLandCnt >= 0 && this.lastLandCnt + 2 > this.gameObject.gameSystem.updateFrame && frontWheelDown && backWheelDown) {
				states_StatePlay.instance.showBonus(this.numRotationBonuses + 1,1);
				var _g2 = 0;
				while(_g2 < 2) {
					var i1 = _g2++;
					var w = this.car.graphics.getGameSprite().getChildMcAt(Objects.cmcCarWheel,i1);
					var fadeWheel = oz_OzSprite.New(Objects.cmcCarWheel);
					fadeWheel.gotoAndStop(1);
					w.addChild(fadeWheel);
					fadeWheel.disappearBig(25);
				}
				this.numRotationBonuses = 0;
				this.lastLandCnt = -1;
			}
			if(this.lastLandCnt >= 0 && this.lastLandCnt + 2 <= this.gameObject.gameSystem.updateFrame) {
				this.numRotationBonuses = 0;
				this.lastLandCnt = -1;
			}
			if(down && onGround && slowGround) this.framesDownSlow++; else this.framesDownSlow = 0;
			if(down) {
				var rotDiff = this.carBody.zpp_inner.rot - this.lastFrameRotation;
				var incVel;
				if(this.isBoosting()) incVel = this.velIncrease * 1.5; else incVel = this.velIncrease;
				var maxGround;
				if(this.isBoosting()) maxGround = this.boostPower; else maxGround = this.velLimitGround;
				if(onGround && !slowGround) incVel = Math.max(0,Math.min(incVel,maxGround - (function($this) {
					var $r;
					if(velVecLocal != null && velVecLocal.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					velVecLocal.zpp_inner.validate();
					$r = velVecLocal.zpp_inner.x;
					return $r;
				}(this))));
				if(backWheelDown && frontWheelDown) {
					var angIncFlat = dev_DevUtil.RadianDifferenceSlow(frontRads,this.carBody.zpp_inner.rot) + 0.01;
					if(angIncFlat > -0.001) angIncFlat = 0.05;
					if(slowGround && this.framesDownSlow > 3) this.incVelBodyTotal(this.carBody,incVel,angIncFlat,0.8); else if(onGround || (function($this) {
						var $r;
						if(velVecLocal != null && velVecLocal.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
						velVecLocal.zpp_inner.validate();
						$r = velVecLocal.zpp_inner.x;
						return $r;
					}(this)) < this.velLimitGround) this.increaseVel(incVel,angIncFlat);
				} else if((backWheelDown || frontWheelDown) && this.lastFrameIncreased) this.increaseVel(incVel,-rotDiff); else if(backWheelDown && this.lastFrameFrontWheelDown) this.increaseVel(incVel,0.1); else if(frontWheelDown && this.lastFrameBackWheelDown) this.increaseVel(incVel,-0.1); else if(backWheelDown || frontWheelDown) this.increaseVel(incVel);
				if(!backWheelDown && !frontWheelDown) {
					if(down && this.numFramesNoGround >= this.cntBeforeRot) this.incAngularVel(-this.angIncrease);
				}
				if(backWheelDown && (this.lastWheelFX < 0 || this.lastWheelFX + Std["int"](Math.random() * 5) <= this.gameObject.gameSystem.updateFrame)) {
					this.lastWheelFX = this.gameObject.gameSystem.updateFrame;
					this.fxVec.setxy(-20,4);
					this.fxVec = this.carBody.localPointToWorld(this.fxVec);
					var numFX = Std["int"](1 + Math.random() * 3);
					var _g3 = 0;
					while(_g3 < numFX) {
						var i2 = _g3++;
						var fxsprite = oz_OzSprite.New(Objects.cmcWheelFX);
						fxsprite.set_rotation(this.carBody.zpp_inner.rot * 180 / Math.PI + Math.random() * 35);
						fxsprite.setxy(this.fxVec.get_x(),this.fxVec.get_y());
						fxsprite.funcEnd = $bind(fxsprite,fxsprite.removeMe);
						this.gameObject.gameSystem.objectSprite.addChild(fxsprite);
					}
				}
			}
			this.lastFrameRotation = this.carBody.zpp_inner.rot;
			if(backWheelDown && frontWheelDown) this.lastFrameIncreased = true; else this.lastFrameIncreased = false;
			if(this.numFramesNoGround > 0 && this.carBody.zpp_inner.angvel > 0) {
				var _g4 = this.carBody;
				_g4.set_angularVel(_g4.zpp_inner.angvel * 0.5);
			}
			if(!down) {
				if(this.numFramesNoGround > 0 && !onGround) this.decelAngularVel(this.angDecrease);
			}
			if(slowGround && !down && !this.isBoosting()) {
				if(this.carBody.get_velocity().get_length() > this.velLimitGroundInertia) this.limitVel(Math.max(this.carBody.get_velocity().get_length() * 0.95,this.velLimitGroundInertia));
			}
			var traceLimit = false;
			if(!this.isBoosting()) {
				if(slowGround && (backWheelDown || frontWheelDown) && (function($this) {
					var $r;
					if(velVecLocal != null && velVecLocal.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
					velVecLocal.zpp_inner.validate();
					$r = velVecLocal.zpp_inner.x;
					return $r;
				}(this)) < 0) {
					if(traceLimit) haxe_Log.trace("LIMIT " + this.velLimitGroundInertia,{ fileName : "OzCar.hx", lineNumber : 591, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
					this.limitVel(this.velLimitGroundInertia);
					if(traceLimit) haxe_Log.trace("AFTER",{ fileName : "OzCar.hx", lineNumber : 593, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
				} else if(slowGround && (backWheelDown || frontWheelDown)) {
					if(traceLimit) haxe_Log.trace("LIMIT " + this.velLimitGround,{ fileName : "OzCar.hx", lineNumber : 596, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
					this.limitVel(this.velLimitGround);
					if(traceLimit) haxe_Log.trace("AFTER",{ fileName : "OzCar.hx", lineNumber : 598, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
				} else if(!onGround || slowGround && this.numFramesNoGround > 1) {
					if(traceLimit) haxe_Log.trace("LIMIT " + this.velLimit,{ fileName : "OzCar.hx", lineNumber : 601, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
					this.limitVel(this.velLimit);
					if(traceLimit) haxe_Log.trace("AFTER",{ fileName : "OzCar.hx", lineNumber : 603, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
				} else if(traceLimit) haxe_Log.trace("NO LIMIT",{ fileName : "OzCar.hx", lineNumber : 606, className : "ozity.OzCar", methodName : "update", customParams : [this.carBody.get_velocity().get_length()]});
			} else {
				if(traceLimit) haxe_Log.trace("BOOST LIMIT",{ fileName : "OzCar.hx", lineNumber : 610, className : "ozity.OzCar", methodName : "update"});
				this.limitVel(this.boostPower);
			}
			if(!onGround || slowGround) this.limitAngularForce(this.angLimit);
			this.lastFrameBackWheelDown = backWheelDown;
			this.lastFrameFrontWheelDown = frontWheelDown;
			this.lastFrameRotation = this.carBody.zpp_inner.rot;
		} else {
			var _g5 = 0;
			var _g11 = this.wheelBodies;
			while(_g5 < _g11.length) {
				var wb = _g11[_g5];
				++_g5;
				if(((function($this) {
					var $r;
					if(wb.zpp_inner.wrap_arbiters == null) wb.zpp_inner.wrap_arbiters = zpp_$nape_util_ZPP_$ArbiterList.get(wb.zpp_inner.arbiters,true);
					$r = wb.zpp_inner.wrap_arbiters;
					return $r;
				}(this))).get_length() > 0) numContacts++;
			}
			if(numContacts > 1) {
				this.cntLastGround = 0;
				if(down) this.increaseVel(this.velIncrease);
			}
		}
		if(states_StatePlay.mode == 2) return;
		if(ozity_OzLevelMark.lmEnds[ozity_OzLevelMark.lmEnds.length - 1].gameObject.transform.x < this.carBody.get_position().get_x() + Main.WIDTH * 1.5) {
			var lvlNum = 41;
			if(this.numLoads < 2) lvlNum += Math.floor(Math.random() * 5); else if(this.numLoads < 7) {
				if(Math.random() < 0.5) lvlNum += 5 + Math.floor(Math.random() * 15); else lvlNum += Math.floor(Math.random() * 20);
			} else if(Math.random() < 0.5) lvlNum += 20 + Math.floor(Math.random() * 5); else lvlNum += Math.floor(Math.random() * 25);
			var toLoad = oz_Xu.cwav(Globals.levelsXML,"level","name","" + lvlNum);
			var newObjects = [];
			var gs = this.gameObject.gameSystem;
			var offX = ozity_OzLevelMark.lmEnds[ozity_OzLevelMark.lmEnds.length - 1].gameObject.transform.x;
			var offY = ozity_OzLevelMark.lmEnds[ozity_OzLevelMark.lmEnds.length - 1].gameObject.transform.y;
			var $it0 = toLoad.elements();
			while( $it0.hasNext() ) {
				var objLevel = $it0.next();
				var type = objLevel.get("type");
				if(type.indexOf("car") == 0) continue;
				var newObj = new ozity_OzGameObject(gs,ozity_OzGameObject.StringToXml.get(type),objLevel);
				newObjects.push(newObj);
				gs.addGameObject(newObj);
				if(type == "levelmark") {
					var lm;
					lm = js_Boot.__cast(newObj.getComponent(ozity_OzLevelMark) , ozity_OzLevelMark);
					if(lm != null && lm.type == ozity_LevelMarkType.Start) {
						offX -= lm.gameObject.transform.x;
						offY -= lm.gameObject.transform.y;
					} else {
					}
				}
			}
			ozity_OzLevelMark.lmGos.push(newObjects);
			var _g6 = 0;
			while(_g6 < newObjects.length) {
				var obj = newObjects[_g6];
				++_g6;
				if(obj.transform != null) {
					obj.transform.x += offX;
					obj.transform.y += offY;
				}
			}
			var _g7 = 0;
			while(_g7 < newObjects.length) {
				var obj1 = newObjects[_g7];
				++_g7;
				obj1.init();
			}
			var _g8 = 0;
			while(_g8 < newObjects.length) {
				var obj2 = newObjects[_g8];
				++_g8;
				obj2.postInit();
			}
			this.numLoads++;
			haxe_Log.trace("new level",{ fileName : "OzCar.hx", lineNumber : 726, className : "ozity.OzCar", methodName : "update", customParams : [this.gameObject.gameSystem.gameObjects.length,this.carBody.get_space().get_bodies().get_length()]});
		}
		if(ozity_OzLevelMark.lmEnds[0].gameObject.transform.x + Main.WIDTH_MAX < this.carBody.get_position().get_x()) {
			var _g9 = 0;
			var _g12 = ozity_OzLevelMark.lmGos[0];
			while(_g9 < _g12.length) {
				var obj3 = _g12[_g9];
				++_g9;
				obj3.dead = true;
			}
			ozity_OzLevelMark.lmGos.splice(0,1);
			ozity_OzLevelMark.lmStarts.splice(0,1);
			ozity_OzLevelMark.lmEnds.splice(0,1);
		}
	}
	,__class__: ozity_OzCar
});
var ozity_OzCarWheel = function(gameObject,compPrefab,compLevel) {
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzCarWheel"] = ozity_OzCarWheel;
ozity_OzCarWheel.__name__ = ["ozity","OzCarWheel"];
ozity_OzCarWheel.__super__ = ozity_OzComponent;
ozity_OzCarWheel.prototype = $extend(ozity_OzComponent.prototype,{
	update: function() {
		ozity_OzComponent.prototype.update.call(this);
		this.gameObject.graphics.sprite.set_visible(false);
	}
	,__class__: ozity_OzCarWheel
});
var ozity_OzCoin = function(gameObject,compPrefab,compLevel) {
	this.BubbleDuration = 30;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compPrefab.get("BubbleDuration") != null) this.BubbleDuration = Std.parseInt(compPrefab.get("BubbleDuration"));
};
$hxClasses["ozity.OzCoin"] = ozity_OzCoin;
ozity_OzCoin.__name__ = ["ozity","OzCoin"];
ozity_OzCoin.StaticInit = function() {
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Collector,ozity_ColType.Coin,ozity_OzCoin.GetCoin,1);
};
ozity_OzCoin.GetCoin = function(player,banana) {
	var bananaSprite = banana.graphics.getGameSprite();
	oz_OzParticle.EmitInCircle(bananaSprite.parent,Objects.cmcStarGold,bananaSprite.get_x() + banana.geometry.x,bananaSprite.get_y() + banana.geometry.y,0.1,5,30,15,0.1);
	banana.dead = true;
	ozity_OzGameSystem.instance.sendMessage(ozity_Message.GET_COIN);
	var ban = banana.getComponent(ozity_OzCoin);
	ban.tween1.remove = true;
};
ozity_OzCoin.__super__ = ozity_OzComponent;
ozity_OzCoin.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		ozity_OzComponent.prototype.postInit.call(this);
		if(states_StatePlay.mode == 2) {
			this.gameObject.dead = true;
			return;
		}
		this.tween1 = this.gameObject.graphics.getGameSprite().makeBubble2(this.BubbleDuration);
	}
	,__class__: ozity_OzCoin
});
var ozity_OzDistanceJoint = function(gameObject,compPrefab,compLevel) {
	this.distanceJoint = null;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzDistanceJoint"] = ozity_OzDistanceJoint;
ozity_OzDistanceJoint.__name__ = ["ozity","OzDistanceJoint"];
ozity_OzDistanceJoint.__super__ = ozity_OzComponent;
ozity_OzDistanceJoint.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		var geometry = this.gameObject.geometry;
		var transform = this.gameObject.transform;
		var world = this.gameObject.gameSystem.world;
		if(geometry.type == 4) {
			geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.x1,geometry.y1,ozity_OzDistanceJoint.tempVec);
			var gpx1 = ozity_OzDistanceJoint.tempVec[0];
			var gpy1 = ozity_OzDistanceJoint.tempVec[1];
			geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.x2,geometry.y2,ozity_OzDistanceJoint.tempVec);
			var gpx2 = ozity_OzDistanceJoint.tempVec[0];
			var gpy2 = ozity_OzDistanceJoint.tempVec[1];
			var ozo1 = ozity_OzPhysics.GetObjectAtPoint(world,gpx1,gpy1,0,false);
			var ozo2 = ozity_OzPhysics.GetObjectAtPoint(world,gpx2,gpy2,0,false);
			if(ozo1 == null && ozo2 == null || ozo1 == ozo2) this.gameObject.dead = true; else {
				var body1;
				if(ozo1 == null) body1 = world.zpp_inner.__static; else body1 = ozo1.physics.body;
				var body2;
				if(ozo2 == null) body2 = world.zpp_inner.__static; else body2 = ozo2.physics.body;
				if(!(body1.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(body2.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) this.gameObject.dead = true; else {
					var globalAnchor1 = new nape_geom_Vec2(gpx1,gpy1);
					var globalAnchor2 = new nape_geom_Vec2(gpx2,gpy2);
					var distance = dev_DevUtil.DistancePoints(geometry.x1,geometry.y1,geometry.x2,geometry.y2);
					this.distanceJoint = new nape_constraint_DistanceJoint(body1,body2,body1.worldPointToLocal(globalAnchor1),body2.worldPointToLocal(globalAnchor2),distance,distance);
					this.distanceJoint.set_space(world);
				}
			}
		} else throw new js__$Boot_HaxeError(new openfl_errors_Error("DISTANCE JOINT ONLY WORKS WITH LINES"));
		if(this.distanceJoint != null) this.distanceJoint.get_userData().object = this;
	}
	,postUpdate: function() {
		var sprite = this.gameObject.graphics.sprite;
		if(sprite != null && this.distanceJoint != null) {
			var x1 = this.distanceJoint.get_body1().localPointToWorld(this.distanceJoint.get_anchor1()).get_x();
			var y1 = this.distanceJoint.get_body1().localPointToWorld(this.distanceJoint.get_anchor1()).get_y();
			var x2 = this.distanceJoint.get_body2().localPointToWorld(this.distanceJoint.get_anchor2()).get_x();
			var y2 = this.distanceJoint.get_body2().localPointToWorld(this.distanceJoint.get_anchor2()).get_y();
			sprite.adjustLine(x1,y1,x2,y2);
		}
	}
	,destroy: function() {
		if(this.distanceJoint != null) {
			this.distanceJoint.get_userData().object = null;
			this.distanceJoint.set_body1(null);
			this.distanceJoint.set_body2(null);
			this.distanceJoint.set_space(null);
			this.distanceJoint = null;
		}
		this.gameObject.dead = true;
	}
	,__class__: ozity_OzDistanceJoint
});
var ozity_OzEventSender = function(gameObject,compPrefab,compLevel) {
	this.visible = false;
	this.killOnDispatch = true;
	this.message = ozity_Message.PLAYER_WIN;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("message") != null) {
		var constr = compLevel.get("message");
		this.message = Type.createEnum(ozity_Message,constr,null);
	}
	if(compLevel.get("killOnDispatch") != null) this.killOnDispatch = compLevel.get("killOnDispatch") == "true";
	if(compLevel.get("visible") != null) this.visible = compLevel.get("visible") == "true";
};
$hxClasses["ozity.OzEventSender"] = ozity_OzEventSender;
ozity_OzEventSender.__name__ = ["ozity","OzEventSender"];
ozity_OzEventSender.StaticInit = function() {
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Player,ozity_ColType.Dispatcher,ozity_OzEventSender.DispatchEvent,1);
};
ozity_OzEventSender.DispatchEvent = function(player,dispatcher) {
	var sender;
	sender = js_Boot.__cast(dispatcher.getComponent(ozity_OzEventSender) , ozity_OzEventSender);
	ozity_OzGameSystem.instance.sendMessage(sender.message);
	if(sender.killOnDispatch) sender.gameObject.dead = true;
};
ozity_OzEventSender.__super__ = ozity_OzComponent;
ozity_OzEventSender.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		this.gameObject.graphics.getGameSprite().set_visible(this.visible);
	}
	,__class__: ozity_OzEventSender
});
var ozity_OzFallOnTouch = function(gameObject,compPrefab,compLevel) {
	this.offsetFrames = 20;
	this.triggeredCnt = -1;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("offsetFrames") != null) this.offsetFrames = Std.parseInt(compLevel.get("offsetFrames"));
};
$hxClasses["ozity.OzFallOnTouch"] = ozity_OzFallOnTouch;
ozity_OzFallOnTouch.__name__ = ["ozity","OzFallOnTouch"];
ozity_OzFallOnTouch.__super__ = ozity_OzComponent;
ozity_OzFallOnTouch.prototype = $extend(ozity_OzComponent.prototype,{
	directMessage: function(m) {
		if(m == ozity_Message.TRIGGER && this.triggeredCnt < 0) this.triggeredCnt = this.gameObject.gameSystem.updateFrame;
	}
	,update: function() {
		ozity_OzComponent.prototype.update.call(this);
		if(this.triggeredCnt >= 0 && this.gameObject.gameSystem.updateFrame == this.triggeredCnt + this.offsetFrames) {
			if(!(this.gameObject.physics.body.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) this.gameObject.physics.body.set_type((function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC;
				return $r;
			}(this)));
		}
	}
	,__class__: ozity_OzFallOnTouch
});
var ozity_OzFinish = function(gameObject,compPrefab,compLevel) {
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzFinish"] = ozity_OzFinish;
ozity_OzFinish.__name__ = ["ozity","OzFinish"];
ozity_OzFinish.StaticInit = function() {
	ozity_OzPhysics.AddCollisionListener(ozity_ColType.Collector,ozity_ColType.Finish,ozity_OzFinish.GetFinish,1);
};
ozity_OzFinish.GetFinish = function(goCar,goFinish) {
	ozity_OzGameSystem.instance.sendMessage(ozity_Message.FINISH);
};
ozity_OzFinish.__super__ = ozity_OzComponent;
ozity_OzFinish.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		ozity_OzComponent.prototype.postInit.call(this);
		if(states_StatePlay.mode == 1) {
			this.gameObject.dead = true;
			return;
		}
	}
	,__class__: ozity_OzFinish
});
var ozity_OzGameObject = function(gameSystem,objPrefab,objLevel) {
	this.cnt = 0;
	this.children = null;
	this.physics = null;
	this.graphics = null;
	this.geometry = null;
	this.transform = null;
	this.dead = false;
	this.gameSystem = gameSystem;
	this.objPrefab = objPrefab;
	this.objLevel = objLevel;
	this.components = [];
	this.transform = new ozity_OzTransform(this,objLevel);
	this.components.push(this.transform);
	var geometryXml = oz_Xu.fc(objLevel,"geometry");
	if(geometryXml == null) geometryXml = oz_Xu.fc(objPrefab,"geometry");
	if(geometryXml != null) {
		this.geometry = new ozity_OzGeometry(this,geometryXml);
		this.components.push(this.geometry);
	}
	var graphicsXml = oz_Xu.fc(objPrefab,"graphics");
	if(graphicsXml != null) {
		this.graphics = new ozity_OzGraphics(this,graphicsXml);
		this.components.push(this.graphics);
	}
	var $it0 = objPrefab.elements();
	while( $it0.hasNext() ) {
		var compXml = $it0.next();
		var type;
		if(compXml.nodeType != Xml.Element) throw new js__$Boot_HaxeError("Bad node type, expected Element but found " + compXml.nodeType);
		type = compXml.nodeName;
		var c = null;
		switch(type) {
		case "body":
			if(this.physics != null) throw new js__$Boot_HaxeError(new openfl_errors_Error("Physics already initialized"));
			this.physics = new ozity_OzPhysics(this,compXml);
			c = this.physics;
			break;
		case "c":
			var compName = compXml.get("n");
			var compLevelXml = oz_Xu.cwav(objLevel,"c","n",compName);
			if(compLevelXml == null) compLevelXml = compXml;
			c = Type.createInstance(ozity_OzComponent.GetClass(compName),[this,compXml,compLevelXml]);
			break;
		}
		if(c != null) this.components.push(c);
	}
	var $it1 = objPrefab.elementsNamed("object");
	while( $it1.hasNext() ) {
		var compXml1 = $it1.next();
		if(this.children == null) this.children = [];
		var childObj = new ozity_OzGameObject(gameSystem,(function($this) {
			var $r;
			var key = compXml1.get("type");
			$r = ozity_OzGameObject.StringToXml.get(key);
			return $r;
		}(this)),compXml1);
		childObj.transform.fromParent(this.transform);
		gameSystem.addGameObject(childObj);
		this.children.push(childObj);
	}
};
$hxClasses["ozity.OzGameObject"] = ozity_OzGameObject;
ozity_OzGameObject.__name__ = ["ozity","OzGameObject"];
ozity_OzGameObject.Init = function(defXml) {
	if(ozity_OzGameObject.StringToXml != null) return;
	ozity_OzGameObject.StringToXml = new haxe_ds_StringMap();
	var $it0 = oz_Xu.fc(defXml,"objects").elementsNamed("object");
	while( $it0.hasNext() ) {
		var obj = $it0.next();
		var key = obj.get("type");
		ozity_OzGameObject.StringToXml.set(key,obj);
	}
};
ozity_OzGameObject.prototype = {
	getComponent: function(a) {
		var _g = 0;
		var _g1 = this.components;
		while(_g < _g1.length) {
			var script = _g1[_g];
			++_g;
			if(js_Boot.__instanceof(script,a)) return script;
		}
		return null;
	}
	,init: function() {
		var _g = 0;
		var _g1 = this.components;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			component.init();
		}
	}
	,postInit: function() {
		var _g = 0;
		var _g1 = this.components;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			component.postInit();
		}
	}
	,update: function() {
		this.cnt++;
		var _g = 0;
		var _g1 = this.components;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			component.update();
		}
	}
	,postUpdate: function() {
		var _g = 0;
		var _g1 = this.components;
		while(_g < _g1.length) {
			var component = _g1[_g];
			++_g;
			component.postUpdate();
		}
	}
	,destroy: function() {
		var n = this.components.length;
		var _g = 0;
		while(_g < n) {
			var i = _g++;
			this.components[n - i - 1].destroy();
		}
	}
	,getType: function() {
		return this.objLevel.get("type");
	}
	,__class__: ozity_OzGameObject
};
var ozity_OzGameSystem = function(parentDoc,levelXml,tileMap,gravity,bgSprite,boundsFlags,scrolling,flags) {
	if(flags == null) flags = 0;
	if(scrolling == null) scrolling = false;
	if(boundsFlags == null) boundsFlags = 10;
	this.eventsListeners = [];
	this.worldBottom = -1;
	this.worldTop = -1;
	this.worldRight = -1;
	this.worldLeft = -1;
	this.player = null;
	this.flags = 0;
	this.deltaTime = 0;
	this.updateFrame = 0;
	this.gravity = 1000;
	this.levelXml = null;
	this.levelProgress = null;
	this.bgSprite = null;
	this.iterations = 10;
	this.world = null;
	this.vecVel = new nape_geom_Vec2();
	this.paused = false;
	ozity_OzGameSystem.instance = this;
	parentDoc.addChild(this.doc = oz_OzSprite.New());
	this.levelXml = levelXml;
	this.tileMap = tileMap;
	this.gravity = gravity;
	this.bgSprite = bgSprite;
	this.flags = flags;
	this.levelProgress = ozity_OzLevelProgress.getInstance(Globals.currentLevel);
	this.levelProgress.clearTemps();
	var iterationsStr = "40";
	if(iterationsStr != null && iterationsStr.length > 0) this.iterations = Std.parseInt(iterationsStr);
	this.world = new nape_space_Space(new nape_geom_Vec2(0,gravity));
	if(tileMap != null) ozity_OzPhysics.PutTileMapBounds(this.world,tileMap,(boundsFlags & 1) > 0,(boundsFlags & 2) > 0,(boundsFlags & 4) > 0,(boundsFlags & 8) > 0);
	this.worldLeft = -1 * tileMap.tileSize + tileMap.offsetX;
	this.worldTop = -1 * tileMap.tileSize + tileMap.offsetY;
	this.worldRight = (tileMap.allocCols + 1) * tileMap.tileSize + tileMap.offsetX;
	this.worldBottom = (tileMap.allocRows + 1) * tileMap.tileSize + tileMap.offsetY;
	this.gameObjects = [];
	ozity_OzPhysics.PreStaticInit();
	ozity_OzCar.StaticInit();
	ozity_OzEventSender.StaticInit();
	ozity_OzBoost.StaticInit();
	ozity_OzCoin.StaticInit();
	ozity_OzFinish.StaticInit();
	ozity_OzLevelMark.StaticInit();
	this.doc.addChild(this.objectSprite = oz_OzSprite.New());
	this.camera = new ozity_OzCamera(this.objectSprite);
	this.objectSpriteDepths = [];
	var _g1 = 0;
	var _g = ozity_OzGameSystem.NUM_GFX_LAYERS;
	while(_g1 < _g) {
		var i1 = _g1++;
		this.objectSpriteDepths[i1] = oz_OzSprite.New();
		this.objectSprite.addChild(this.objectSpriteDepths[i1]);
		this.objectSpriteDepths[i1].set(256);
		if(tileMap.depthOffset <= i1 && i1 - tileMap.depthOffset < tileMap.numLayers) {
			this.objectSprite.addChild(this.tileSprite = oz_OzSprite.New(null,oz_SpriteType.TILEMAP));
			this.tileSprite.tileMap = tileMap;
			this.tileSprite.setTileLayer(i1 - tileMap.depthOffset);
		}
	}
	var $it0 = levelXml.elements();
	while( $it0.hasNext() ) {
		var objLevel = $it0.next();
		var type = objLevel.get("type");
		if(!this.firstPriority(type)) continue;
		var newObj = new ozity_OzGameObject(this,ozity_OzGameObject.StringToXml.get(type),objLevel);
		if(type == "player") this.player = newObj;
		this.addGameObject(newObj);
		newObj.init();
		newObj.postInit();
	}
	if(this.player != null && scrolling) {
		this.camera.setWatchable(this.player);
		this.camera.update();
	}
	var $it1 = levelXml.elements();
	while( $it1.hasNext() ) {
		var objLevel1 = $it1.next();
		var type1 = objLevel1.get("type");
		if(this.firstPriority(type1)) continue;
		var newObj1 = new ozity_OzGameObject(this,ozity_OzGameObject.StringToXml.get(type1),objLevel1);
		this.addGameObject(newObj1);
	}
	var i = 0;
	while(i < this.gameObjects.length) {
		if(this.firstPriority(this.gameObjects[i].objLevel.get("type"))) {
			i++;
			continue;
		}
		this.gameObjects[i++].init();
	}
	i = 0;
	while(i < this.gameObjects.length) {
		if(this.firstPriority(this.gameObjects[i].objLevel.get("type"))) {
			i++;
			continue;
		}
		this.gameObjects[i++].postInit();
	}
};
$hxClasses["ozity.OzGameSystem"] = ozity_OzGameSystem;
ozity_OzGameSystem.__name__ = ["ozity","OzGameSystem"];
ozity_OzGameSystem.Init = function() {
	ozity_OzGameObject.Init(Globals.definitionsXML);
	ozity_OzComponent.Init(Globals.componentsXML);
};
ozity_OzGameSystem.prototype = {
	firstPriority: function(strId) {
		return strId == "player" || strId == "checkpoint" || strId == "cameracontroller";
	}
	,update: function(deltaTime) {
		if(this.paused) return;
		deltaTime = deltaTime * ozity_OzGameSystem.WORLD_SPEED_FACTOR;
		this.deltaTime = deltaTime;
		var _g = 0;
		var _g1 = this.gameObjects;
		while(_g < _g1.length) {
			var ogo = _g1[_g];
			++_g;
			ogo.update();
		}
		var _g2 = 0;
		var _g11 = this.gameObjects;
		while(_g2 < _g11.length) {
			var ogo1 = _g11[_g2];
			++_g2;
			if(ogo1.physics != null && ogo1.physics.gravityVec != null) {
				var ogoBody = ogo1.physics.body;
				this.vecVel.set(ogo1.physics.gravityVec);
				this.vecVel.muleq((function($this) {
					var $r;
					if(ogoBody.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world has no mass");
					ogoBody.zpp_inner.validate_mass();
					if(ogoBody.zpp_inner.massMode == zpp_$nape_util_ZPP_$Flags.id_MassMode_DEFAULT && ogoBody.zpp_inner.shapes.head == null) throw new js__$Boot_HaxeError("Error: Given current mass mode, Body::mass only makes sense if it contains shapes");
					$r = ogoBody.zpp_inner.cmass;
					return $r;
				}(this)) * this.gravity / Main.FPS);
				ogoBody.applyImpulse(this.vecVel);
			}
		}
		this.world.step(deltaTime,this.iterations,this.iterations);
		var _g3 = 0;
		var _g12 = this.gameObjects;
		while(_g3 < _g12.length) {
			var ogo2 = _g12[_g3];
			++_g3;
			ogo2.postUpdate();
		}
		this.camera.update();
		var PADOUT = 300;
		var i = 0;
		while(i < this.gameObjects.length) {
			var obj = this.gameObjects[i];
			if(obj.physics != null && obj.physics.body != null) {
				if(obj.physics.get_x() < this.worldLeft - PADOUT && !((this.flags & 1) > 0) || obj.physics.get_y() < this.worldTop - PADOUT || obj.physics.get_x() > this.worldRight + PADOUT && !((this.flags & 1) > 0) || obj.physics.get_y() > this.worldBottom + PADOUT) obj.dead = true;
			}
			i++;
		}
		var i1 = 0;
		while(i1 < this.gameObjects.length) if(this.gameObjects[i1].dead) {
			this.gameObjects[i1].destroy();
			this.gameObjects.splice(i1,1);
		} else i1++;
		this.updateFrame++;
	}
	,addGameObject: function(go) {
		this.gameObjects.push(go);
	}
	,addEventsListener: function(func) {
		this.eventsListeners.push(func);
	}
	,sendMessage: function(message) {
		var _g = 0;
		var _g1 = this.eventsListeners;
		while(_g < _g1.length) {
			var el = _g1[_g];
			++_g;
			el(message);
		}
	}
	,getGameObjectById: function(id) {
		var _g1 = 0;
		var _g = this.gameObjects.length;
		while(_g1 < _g) {
			var j = _g1++;
			var i = this.gameObjects.length - j - 1;
			if(this.gameObjects[i].objLevel != null && this.gameObjects[i].objLevel.get("id") == id) return this.gameObjects[i];
		}
		return null;
	}
	,__class__: ozity_OzGameSystem
};
var ozity_OzGeometry = function(gameObject,compLevel) {
	this.vy = null;
	this.vx = null;
	this.flags = 0;
	this.curvePointsY = null;
	this.curvePointsX = null;
	this.controlPoints = null;
	ozity_OzComponent.call(this,gameObject,null,compLevel);
	this.x = this.y = this.degrees = this.halfWidth = this.halfHeight = this.radius = 0;
	if(compLevel != null) this.fromXML();
};
$hxClasses["ozity.OzGeometry"] = ozity_OzGeometry;
ozity_OzGeometry.__name__ = ["ozity","OzGeometry"];
ozity_OzGeometry.GetXYFromBezier = function(t,x1,y1,x2,y2,x3,y3,x4,y4,out) {
	out.x = (1 - t) * (1 - t) * (1 - t) * x1 + 3 * (1 - t) * (1 - t) * t * x2 + 3 * (1 - t) * t * t * x3 + t * t * t * x4;
	out.y = (1 - t) * (1 - t) * (1 - t) * y1 + 3 * (1 - t) * (1 - t) * t * y2 + 3 * (1 - t) * t * t * y3 + t * t * t * y4;
};
ozity_OzGeometry.ApproximateBezierLength = function(x1,y1,x2,y2,x3,y3,x4,y4,temp) {
	var ret = 0;
	var lastX = x1;
	var lastY = y1;
	var MANY = 20;
	var _g = 0;
	while(_g < MANY) {
		var i = _g++;
		var t = (i + 1.0) / (MANY + 1.0);
		temp.x = (1 - t) * (1 - t) * (1 - t) * x1 + 3 * (1 - t) * (1 - t) * t * x2 + 3 * (1 - t) * t * t * x3 + t * t * t * x4;
		temp.y = (1 - t) * (1 - t) * (1 - t) * y1 + 3 * (1 - t) * (1 - t) * t * y2 + 3 * (1 - t) * t * t * y3 + t * t * t * y4;
		ret += dev_DevUtil.DistancePoints(lastX,lastY,temp.x,temp.y);
		lastX = temp.x;
		lastY = temp.y;
	}
	ret += dev_DevUtil.DistancePoints(lastX,lastY,x4,y4);
	return ret;
};
ozity_OzGeometry.__super__ = ozity_OzComponent;
ozity_OzGeometry.prototype = $extend(ozity_OzComponent.prototype,{
	makePhysics: function(body,mat,fil,physXml) {
		var _g1 = this;
		var _g = this.type;
		switch(_g) {
		case 1:
			var box = new nape_shape_Polygon(nape_shape_Polygon.box(this.halfWidth * 2,this.halfHeight * 2));
			box.rotate(this.degrees * Math.PI / 180);
			box.translate(new nape_geom_Vec2(this.x,this.y));
			box.zpp_inner.immutable_midstep("Shape::body");
			if((box.zpp_inner.body != null?box.zpp_inner.body.outer:null) != body) {
				if(box.zpp_inner.body != null) (box.zpp_inner.body != null?box.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(box);
				if(body != null) body.zpp_inner.wrap_shapes.add(box);
			}
			if(box.zpp_inner.body != null) box.zpp_inner.body.outer; else null;
			if(mat != null) {
				box.zpp_inner.immutable_midstep("Shape::material");
				if(mat == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
				box.zpp_inner.setMaterial(mat.zpp_inner);
				box.zpp_inner.material.wrapper();
			}
			if(fil != null) {
				box.zpp_inner.immutable_midstep("Shape::filter");
				if(fil == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
				box.zpp_inner.setFilter(fil.zpp_inner);
				box.zpp_inner.filter.wrapper();
			}
			break;
		case 2:
			var circle = new nape_shape_Circle(this.radius);
			circle.rotate(this.degrees * Math.PI / 180);
			circle.translate(new nape_geom_Vec2(this.x,this.y));
			circle.zpp_inner.immutable_midstep("Shape::body");
			if((circle.zpp_inner.body != null?circle.zpp_inner.body.outer:null) != body) {
				if(circle.zpp_inner.body != null) (circle.zpp_inner.body != null?circle.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(circle);
				if(body != null) body.zpp_inner.wrap_shapes.add(circle);
			}
			if(circle.zpp_inner.body != null) circle.zpp_inner.body.outer; else null;
			if(mat != null) {
				circle.zpp_inner.immutable_midstep("Shape::material");
				if(mat == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
				circle.zpp_inner.setMaterial(mat.zpp_inner);
				circle.zpp_inner.material.wrapper();
			}
			if(fil != null) {
				circle.zpp_inner.immutable_midstep("Shape::filter");
				if(fil == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
				circle.zpp_inner.setFilter(fil.zpp_inner);
				circle.zpp_inner.filter.wrapper();
			}
			break;
		case 3:
			if(this.geomPoly == null) {
				var verts = [];
				var _g2 = 0;
				var _g11 = this.vx.length;
				while(_g2 < _g11) {
					var i = _g2++;
					verts[i] = new nape_geom_Vec2(this.vx[i],this.vy[i]);
				}
				this.geomPoly = new nape_geom_GeomPoly(verts);
			}
			var polys = this.geomPoly.convexDecomposition();
			polys.foreach(function(p) {
				var poly = new nape_shape_Polygon(p);
				poly.rotate(_g1.degrees * Math.PI / 180);
				poly.translate(new nape_geom_Vec2(_g1.x,_g1.y));
				if(mat != null) {
					poly.zpp_inner.immutable_midstep("Shape::material");
					if(mat == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
					poly.zpp_inner.setMaterial(mat.zpp_inner);
					poly.zpp_inner.material.wrapper();
				}
				if(fil != null) {
					poly.zpp_inner.immutable_midstep("Shape::filter");
					if(fil == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
					poly.zpp_inner.setFilter(fil.zpp_inner);
					poly.zpp_inner.filter.wrapper();
				}
				body.zpp_inner.wrap_shapes.add(poly);
			});
			break;
		case 7:
			var xs = this.vx;
			var ys = this.vy;
			if((this.flags & 1) > 0) {
				xs = this.curvePointsX;
				ys = this.curvePointsY;
			}
			var n = xs.length;
			if(n == 3 && Math.abs(xs[0] - xs[n - 1]) < 0.0001 && Math.abs(ys[0] - ys[n - 1]) < 0.0001) n--;
			var _g21 = 0;
			var _g12 = n - 1;
			while(_g21 < _g12) {
				var i1 = _g21++;
				var dx = xs[i1 + 1] - xs[i1];
				var dy = ys[i1 + 1] - ys[i1];
				var dist = Math.sqrt(dx * dx + dy * dy);
				var box1 = new nape_shape_Polygon(nape_shape_Polygon.box(dist,3));
				box1.rotate(Math.atan2(dy,dx));
				box1.translate(new nape_geom_Vec2(this.x + xs[i1] + dx / 2,this.y + ys[i1] + dy / 2));
				if(mat != null) {
					box1.zpp_inner.immutable_midstep("Shape::material");
					if(mat == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
					box1.zpp_inner.setMaterial(mat.zpp_inner);
					box1.zpp_inner.material.wrapper();
				}
				if(fil != null) {
					box1.zpp_inner.immutable_midstep("Shape::filter");
					if(fil == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
					box1.zpp_inner.setFilter(fil.zpp_inner);
					box1.zpp_inner.filter.wrapper();
				}
				body.zpp_inner.wrap_shapes.add(box1);
			}
			break;
		case 6:
			var triangle = new nape_shape_Polygon([new nape_geom_Vec2(-this.halfWidth,this.halfHeight),new nape_geom_Vec2(0,-this.halfHeight),new nape_geom_Vec2(this.halfWidth,this.halfHeight)]);
			triangle.rotate(this.degrees * Math.PI / 180);
			triangle.translate(new nape_geom_Vec2(this.x,this.y));
			triangle.zpp_inner.immutable_midstep("Shape::body");
			if((triangle.zpp_inner.body != null?triangle.zpp_inner.body.outer:null) != body) {
				if(triangle.zpp_inner.body != null) (triangle.zpp_inner.body != null?triangle.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(triangle);
				if(body != null) body.zpp_inner.wrap_shapes.add(triangle);
			}
			if(triangle.zpp_inner.body != null) triangle.zpp_inner.body.outer; else null;
			if(mat != null) {
				triangle.zpp_inner.immutable_midstep("Shape::material");
				if(mat == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape material");
				triangle.zpp_inner.setMaterial(mat.zpp_inner);
				triangle.zpp_inner.material.wrapper();
			}
			if(fil != null) {
				triangle.zpp_inner.immutable_midstep("Shape::filter");
				if(fil == null) throw new js__$Boot_HaxeError("Error: Cannot assign null as Shape filter");
				triangle.zpp_inner.setFilter(fil.zpp_inner);
				triangle.zpp_inner.filter.wrapper();
			}
			break;
		default:
			throw new js__$Boot_HaxeError(new openfl_errors_Error("unsupported nape geo"));
		}
	}
	,localToGlobal: function(offX,offY,offDeg,px,py,p) {
		this.applyOriginRotation(this.x + px,this.y + py,this.degrees,p);
		dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
		p[0] += offX;
		p[1] += offY;
	}
	,globalToLocal: function(offX,offY,offDeg,px,py,p) {
		dev_DevUtil.rotateAroundPoint(px - offX,py - offY,-offDeg,0,0,p);
		this.applyOriginRotation(p[0],p[1],-this.degrees,p);
	}
	,globalFarthestVertexFromGlobalPointFromLocalPoints: function(offX,offY,offDeg,px,py,localVX,localVY,res) {
		var furthestDist = -1;
		var retX = 0;
		var retY = 0;
		var _g1 = 0;
		var _g = localVX.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.applyOriginRotation(this.x + localVX[i],this.y + localVY[i],this.degrees,res);
			dev_DevUtil.rotateAroundPoint(res[0],res[1],offDeg,0,0,res);
			res[0] += offX;
			res[1] += offY;
			var dist = dev_DevUtil.DistancePoints(px,py,res[0],res[1]);
			if(dist > furthestDist) {
				furthestDist = dist;
				retX = res[0];
				retY = res[1];
			}
		}
		res[0] = retX;
		res[1] = retY;
	}
	,globalFarthestVertexFromGlobalLineFromLocalPoints: function(offX,offY,offDeg,lx1,ly1,lx2,ly2,localVX,localVY,res) {
		var furthestDist = -1;
		var retX = 0;
		var retY = 0;
		var _g1 = 0;
		var _g = localVX.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.applyOriginRotation(this.x + localVX[i],this.y + localVY[i],this.degrees,res);
			dev_DevUtil.rotateAroundPoint(res[0],res[1],offDeg,0,0,res);
			res[0] += offX;
			res[1] += offY;
			var dist = dev_DevUtil.PointLineDistance(lx1,ly1,lx2,ly2,res[0],res[1],false);
			if(dist > furthestDist) {
				furthestDist = dist;
				retX = res[0];
				retY = res[1];
			}
		}
		res[0] = retX;
		res[1] = retY;
	}
	,applyOriginRotation: function(px,py,rot,res) {
		dev_DevUtil.rotateAroundPoint(px,py,rot,this.x,this.y,res);
	}
	,adjustMinMaxXY: function(vec4,p) {
		vec4[0] = Math.min(vec4[0],p[0]);
		vec4[1] = Math.min(vec4[1],p[1]);
		vec4[2] = Math.max(vec4[2],p[0]);
		vec4[3] = Math.max(vec4[3],p[1]);
	}
	,updateCurves: function() {
		var cp = dev_DevUtil.GenerateControlPointsFromPath(this.vx,this.vy);
		this.curvePointsX = [];
		this.curvePointsY = [];
		this.curvePointsX.push(this.vx[0]);
		this.curvePointsY.push(this.vy[0]);
		var temp = new openfl_geom_Point();
		var _g1 = 0;
		var _g = this.vx.length - 1;
		while(_g1 < _g) {
			var i = _g1++;
			var lastX = this.curvePointsX[i];
			var lastY = this.curvePointsY[i];
			var curveLength = ozity_OzGeometry.ApproximateBezierLength(this.vx[i],this.vy[i],cp[i].x1,cp[i].y1,cp[i].x2,cp[i].y2,this.vx[i + 1],this.vy[i + 1],temp);
			var M = Math.round(curveLength / ozity_OzGeometry.CURVE_SEGMENT_LENGTH);
			var _g2 = 0;
			while(_g2 < M) {
				var j = _g2++;
				var t = (j + 1.0) / (M + 1.0);
				temp.x = (1 - t) * (1 - t) * (1 - t) * this.vx[i] + 3 * (1 - t) * (1 - t) * t * cp[i].x1 + 3 * (1 - t) * t * t * cp[i].x2 + t * t * t * this.vx[i + 1];
				temp.y = (1 - t) * (1 - t) * (1 - t) * this.vy[i] + 3 * (1 - t) * (1 - t) * t * cp[i].y1 + 3 * (1 - t) * t * t * cp[i].y2 + t * t * t * this.vy[i + 1];
				this.curvePointsX.push(temp.x);
				this.curvePointsY.push(temp.y);
			}
			this.curvePointsX.push(this.vx[i + 1]);
			this.curvePointsY.push(this.vy[i + 1]);
		}
	}
	,drawGlobalOutline: function(g,offX,offY,offDeg) {
		if(offDeg == null) offDeg = 0;
		if(offY == null) offY = 0;
		if(offX == null) offX = 0;
		var p = ozity_OzGeometry.temp2;
		var _g = this.type;
		switch(_g) {
		case 1:
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.moveTo(p[0],p[1]);
			this.applyOriginRotation(this.x + this.halfWidth,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			this.applyOriginRotation(this.x + this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			break;
		case 2:
			dev_DevUtil.rotateAroundPoint(this.x,this.y,offDeg,0,0,p);
			g.drawCircle(offX + p[0],offY + p[1],this.radius);
			break;
		case 3:
			this.applyOriginRotation(this.x + this.vx[0],this.y + this.vy[0],this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.moveTo(p[0],p[1]);
			var _g2 = 1;
			var _g1 = this.vx.length;
			while(_g2 < _g1) {
				var i = _g2++;
				this.applyOriginRotation(this.x + this.vx[i],this.y + this.vy[i],this.degrees,p);
				dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
				p[0] += offX;
				p[1] += offY;
				g.lineTo(p[0],p[1]);
			}
			this.applyOriginRotation(this.x + this.vx[0],this.y + this.vy[0],this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			break;
		case 7:
			if((this.flags & 1) > 0) {
				this.applyOriginRotation(this.x + this.curvePointsX[0],this.y + this.curvePointsY[0],this.degrees,p);
				dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
				p[0] += offX;
				p[1] += offY;
				g.moveTo(p[0],p[1]);
				var _g21 = 1;
				var _g11 = this.curvePointsX.length;
				while(_g21 < _g11) {
					var i1 = _g21++;
					this.applyOriginRotation(this.x + this.curvePointsX[i1],this.y + this.curvePointsY[i1],this.degrees,p);
					dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
					p[0] += offX;
					p[1] += offY;
					g.lineTo(p[0],p[1]);
				}
			} else {
				this.applyOriginRotation(this.x + this.vx[0],this.y + this.vy[0],this.degrees,p);
				dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
				p[0] += offX;
				p[1] += offY;
				g.moveTo(p[0],p[1]);
				var _g22 = 1;
				var _g12 = this.vx.length;
				while(_g22 < _g12) {
					var i2 = _g22++;
					this.applyOriginRotation(this.x + this.vx[i2],this.y + this.vy[i2],this.degrees,p);
					dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
					p[0] += offX;
					p[1] += offY;
					g.lineTo(p[0],p[1]);
				}
			}
			break;
		case 6:
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.moveTo(p[0],p[1]);
			this.applyOriginRotation(this.x,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			this.applyOriginRotation(this.x + this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			break;
		case 5:
			dev_DevUtil.rotateAroundPoint(this.x,this.y,offDeg,0,0,p);
			g.drawCircle(offX + p[0],offY + p[1],3);
			break;
		case 4:
			this.applyOriginRotation(this.x + this.x1,this.y + this.y1,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.moveTo(p[0],p[1]);
			this.applyOriginRotation(this.x + this.x2,this.y + this.y2,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			g.lineTo(p[0],p[1]);
			break;
		}
	}
	,drawLocalOutline: function(g) {
		var p = ozity_OzGeometry.temp2;
		var _g = this.type;
		switch(_g) {
		case 1:
			g.moveTo(-this.halfWidth,-this.halfHeight);
			g.lineTo(this.halfWidth,-this.halfHeight);
			g.lineTo(this.halfWidth,this.halfHeight);
			g.lineTo(-this.halfWidth,this.halfHeight);
			g.lineTo(-this.halfWidth,-this.halfHeight);
			break;
		case 2:
			g.drawCircle(0,0,this.radius);
			break;
		case 3:
			g.moveTo(this.vx[0],this.vy[0]);
			var _g2 = 1;
			var _g1 = this.vx.length;
			while(_g2 < _g1) {
				var i = _g2++;
				g.lineTo(this.vx[i],this.vy[i]);
			}
			g.lineTo(this.vx[0],this.vy[0]);
			break;
		case 7:
			if((this.flags & 1) > 0) {
				g.moveTo(this.curvePointsX[0],this.curvePointsY[0]);
				var _g21 = 1;
				var _g11 = this.curvePointsX.length;
				while(_g21 < _g11) {
					var i1 = _g21++;
					g.lineTo(this.curvePointsX[i1],this.curvePointsY[i1]);
				}
			} else {
				g.moveTo(this.vx[0],this.vy[0]);
				var _g22 = 1;
				var _g12 = this.vx.length;
				while(_g22 < _g12) {
					var i2 = _g22++;
					g.lineTo(this.vx[i2],this.vy[i2]);
				}
			}
			break;
		case 6:
			g.moveTo(-this.halfWidth,this.halfHeight);
			g.lineTo(0,-this.halfHeight);
			g.lineTo(this.halfWidth,this.halfHeight);
			g.lineTo(-this.halfWidth,this.halfHeight);
			break;
		}
	}
	,getMinMaxXY: function(offX,offY,offDeg,vec4,init) {
		if(init == null) init = true;
		if(init) {
			vec4[0] = 2000000;
			vec4[1] = 2000000;
			vec4[2] = -2000000.;
			vec4[3] = -2000000.;
		}
		var p = ozity_OzGeometry.temp2;
		var _g = this.type;
		switch(_g) {
		case 1:
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			this.applyOriginRotation(this.x + this.halfWidth,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			this.applyOriginRotation(this.x + this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			break;
		case 2:
			dev_DevUtil.rotateAroundPoint(this.x,this.y,offDeg,0,0,p);
			p[0] += offX - this.radius;
			p[1] += offY - this.radius;
			this.adjustMinMaxXY(vec4,p);
			dev_DevUtil.rotateAroundPoint(this.x,this.y,offDeg,0,0,p);
			p[0] += offX + this.radius;
			p[1] += offY + this.radius;
			this.adjustMinMaxXY(vec4,p);
			break;
		case 3:
			var _g2 = 0;
			var _g1 = this.vx.length;
			while(_g2 < _g1) {
				var i = _g2++;
				this.applyOriginRotation(this.x + this.vx[i],this.y + this.vy[i],this.degrees,p);
				dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
				p[0] += offX;
				p[1] += offY;
				this.adjustMinMaxXY(vec4,p);
			}
			break;
		case 7:
			var _g21 = 0;
			var _g11 = this.vx.length;
			while(_g21 < _g11) {
				var i1 = _g21++;
				this.applyOriginRotation(this.x + this.vx[i1],this.y + this.vy[i1],this.degrees,p);
				dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
				p[0] += offX;
				p[1] += offY;
				this.adjustMinMaxXY(vec4,p);
			}
			break;
		case 6:
			this.applyOriginRotation(this.x + -this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			this.applyOriginRotation(this.x,this.y + -this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			this.applyOriginRotation(this.x + this.halfWidth,this.y + this.halfHeight,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			break;
		case 4:
			this.applyOriginRotation(this.x + this.x1,this.y + this.y1,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			this.applyOriginRotation(this.x + this.x2,this.y + this.y2,this.degrees,p);
			dev_DevUtil.rotateAroundPoint(p[0],p[1],offDeg,0,0,p);
			p[0] += offX;
			p[1] += offY;
			this.adjustMinMaxXY(vec4,p);
			break;
		case 5:
			dev_DevUtil.rotateAroundPoint(this.x,this.y,offDeg,0,0,p);
			p[0] += offX - 3;
			p[1] += offY - 3;
			this.adjustMinMaxXY(vec4,p);
			dev_DevUtil.rotateAroundPoint(this.x,this.y,offDeg,0,0,p);
			p[0] += offX + 3;
			p[1] += offY + 3;
			this.adjustMinMaxXY(vec4,p);
			break;
		}
	}
	,verticesFromGeomPoly: function(geomPoly) {
		var gpit;
		if(geomPoly != null && geomPoly.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "GeomPoly" + " has been disposed and cannot be used!");
		gpit = zpp_$nape_geom_ZPP_$GeomVertexIterator.get(geomPoly.zpp_inner.vertices,true);
		this.vx = [];
		this.vy = [];
		while(gpit.hasNext()) {
			var vertex = gpit.next();
			this.vx.push((function($this) {
				var $r;
				if(vertex != null && vertex.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				vertex.zpp_inner.validate();
				$r = vertex.zpp_inner.x;
				return $r;
			}(this)));
			this.vy.push((function($this) {
				var $r;
				if(vertex != null && vertex.zpp_disp) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " has been disposed and cannot be used!");
				vertex.zpp_inner.validate();
				$r = vertex.zpp_inner.y;
				return $r;
			}(this)));
		}
	}
	,setPolyLeftTopOrigin: function() {
		if(this.type != 3) return;
		var minX = this.vx[0];
		var minY = this.vy[0];
		var _g1 = 1;
		var _g = this.vx.length;
		while(_g1 < _g) {
			var i = _g1++;
			minX = Math.min(minX,this.vx[i]);
			minY = Math.min(minY,this.vy[i]);
		}
		var _g11 = 0;
		var _g2 = this.vx.length;
		while(_g11 < _g2) {
			var i1 = _g11++;
			this.vx[i1] -= minX;
			this.vy[i1] -= minY;
		}
		this.x += minX;
		this.y += minY;
	}
	,pointSelects: function(offX,offY,offDeg,px,py) {
		var res = false;
		var p = ozity_OzGeometry.temp2;
		dev_DevUtil.rotateAroundPoint(px - offX,py - offY,-offDeg,0,0,p);
		this.applyOriginRotation(p[0],p[1],-this.degrees,p);
		var _g = this.type;
		switch(_g) {
		case 1:
			res = Math.abs(this.x - p[0]) < this.halfWidth && Math.abs(this.y - p[1]) < this.halfHeight;
			break;
		case 2:
			res = this.radius * this.radius >= (p[0] - this.x) * (p[0] - this.x) + (p[1] - this.y) * (p[1] - this.y);
			break;
		case 3:
			p[0] -= this.x;
			p[1] -= this.y;
			var wn = 0;
			var _g2 = 0;
			var _g1 = this.vx.length;
			while(_g2 < _g1) {
				var i = _g2++;
				var j = (i + 1) % this.vx.length;
				if(this.vy[i] <= p[1]) {
					if(this.vy[j] > p[1]) {
						if(dev_DevUtil.CrossPoints(p[0],p[1],this.vx[i],this.vy[i],this.vx[j],this.vy[j]) > 0) wn++;
					}
				} else if(this.vy[j] <= p[1]) {
					if(dev_DevUtil.CrossPoints(p[0],p[1],this.vx[i],this.vy[i],this.vx[j],this.vy[j]) < 0) wn--;
				}
			}
			res = wn != 0;
			break;
		case 7:
			var xs = this.vx;
			var ys = this.vy;
			if((this.flags & 1) > 0) {
				xs = this.curvePointsX;
				ys = this.curvePointsY;
			}
			var _g21 = 1;
			var _g11 = xs.length;
			while(_g21 < _g11) {
				var i1 = _g21++;
				if(dev_DevUtil.PointLineDistance(xs[i1 - 1],ys[i1 - 1],xs[i1],ys[i1],p[0] - this.x,p[1] - this.y,true) < 5) res = true;
			}
			break;
		case 6:
			var ax;
			var ay;
			var bx;
			var by;
			var cx;
			var cy;
			ax = this.x - this.halfWidth;
			ay = this.y + this.halfHeight;
			bx = this.x;
			by = this.y - this.halfHeight;
			cx = this.x + this.halfWidth;
			cy = this.y + this.halfHeight;
			res = dev_DevUtil.CrossPoints(ax,ay,bx,by,p[0],p[1]) >= 0;
			res = res && dev_DevUtil.CrossPoints(bx,by,cx,cy,p[0],p[1]) >= 0;
			res = res && dev_DevUtil.CrossPoints(cx,cy,ax,ay,p[0],p[1]) >= 0;
			break;
		case 4:
			if(dev_DevUtil.PointLineDistance(this.x1,this.y1,this.x2,this.y2,p[0] - this.x,p[1] - this.y,true) < 5) res = true;
			break;
		case 5:
			if(Math.abs(this.x - p[0]) < 5 && Math.abs(this.y - p[1]) < 5) res = true;
			break;
		}
		return res;
	}
	,_f: function(num) {
		return "" + dev_DevUtil.round(num,2);
	}
	,toXML: function() {
		var res = Xml.createElement("geometry");
		var _g = this.type;
		switch(_g) {
		case 1:
			res.set("type","rect");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			res.set("degrees",this._f(this.degrees));
			res.set("halfWidth",this._f(this.halfWidth));
			res.set("halfHeight",this._f(this.halfHeight));
			break;
		case 2:
			res.set("type","circ");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			res.set("degrees",this._f(this.degrees));
			res.set("radius",this._f(this.radius));
			break;
		case 3:
			res.set("type","poly");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			res.set("degrees",this._f(this.degrees));
			res.set("nVertices","" + this.vx.length);
			var verts = "";
			var _g2 = 0;
			var _g1 = this.vx.length - 1;
			while(_g2 < _g1) {
				var i = _g2++;
				verts += this._f(this.vx[i]) + "," + this._f(this.vy[i]) + ",";
			}
			verts += this._f(this.vx[this.vx.length - 1]) + "," + this._f(this.vy[this.vx.length - 1]);
			res.set("vertices",verts);
			break;
		case 7:
			res.set("type","path");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			res.set("degrees",this._f(this.degrees));
			res.set("nVertices","" + this.vx.length);
			var verts1 = "";
			var _g21 = 0;
			var _g11 = this.vx.length - 1;
			while(_g21 < _g11) {
				var i1 = _g21++;
				verts1 += this._f(this.vx[i1]) + "," + this._f(this.vy[i1]) + ",";
			}
			verts1 += this._f(this.vx[this.vx.length - 1]) + "," + this._f(this.vy[this.vx.length - 1]);
			res.set("vertices",verts1);
			if((this.flags & 1) > 0) res.set("isCurve","true");
			break;
		case 4:
			res.set("type","line");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			res.set("x1",this._f(this.x1));
			res.set("y1",this._f(this.y1));
			res.set("x2",this._f(this.x2));
			res.set("y2",this._f(this.y2));
			break;
		case 5:
			res.set("type","dot");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			break;
		case 6:
			res.set("type","tri");
			res.set("x",this._f(this.x));
			res.set("y",this._f(this.y));
			res.set("degrees",this._f(this.degrees));
			res.set("halfWidth",this._f(this.halfWidth));
			res.set("halfHeight",this._f(this.halfHeight));
			break;
		}
		return res;
	}
	,fromXML: function(src) {
		if(src == null) src = this.compLevel;
		var fl = 0;
		if(src.get("isCurve") == "true") fl |= 1;
		var _g = src.get("type");
		switch(_g) {
		case "rect":
			this._init(1,this.pf(src.get("x")),this.pf(src.get("y")),this.pf(src.get("degrees")),this.pf(src.get("halfWidth")),this.pf(src.get("halfHeight")));
			break;
		case "poly":
			var plength = this.pi(src.get("nVertices"));
			var a = src.get("vertices").split(",");
			var ax = [];
			var ay = [];
			var _g2 = 0;
			var _g1 = a.length / 2 | 0;
			while(_g2 < _g1) {
				var j = _g2++;
				var i = j * 2;
				ax[i / 2 | 0] = this.pf(a[i]);
				ay[i / 2 | 0] = this.pf(a[i + 1]);
			}
			this._init(3,this.pf(src.get("x")),this.pf(src.get("y")),this.pf(src.get("degrees")),0,0,ax,ay,true,fl);
			break;
		case "path":
			var plength1 = this.pi(src.get("nVertices"));
			var a1 = src.get("vertices").split(",");
			var ax1 = [];
			var ay1 = [];
			var _g21 = 0;
			var _g11 = a1.length / 2 | 0;
			while(_g21 < _g11) {
				var j1 = _g21++;
				var i1 = j1 * 2;
				ax1[i1 / 2 | 0] = this.pf(a1[i1]);
				ay1[i1 / 2 | 0] = this.pf(a1[i1 + 1]);
			}
			this._init(7,this.pf(src.get("x")),this.pf(src.get("y")),this.pf(src.get("degrees")),0,0,ax1,ay1,true,fl);
			break;
		case "circ":
			this._init(2,this.pf(src.get("x")),this.pf(src.get("y")),this.pf(src.get("degrees")),this.pf(src.get("radius")));
			break;
		case "line":
			this.x1 = this.pf(src.get("x1"));
			this.x2 = this.pf(src.get("x2"));
			this.y1 = this.pf(src.get("y1"));
			this.y2 = this.pf(src.get("y2"));
			this._init(4,this.pf(src.get("x")),this.pf(src.get("y")),0,0,0);
			break;
		case "dot":
			this._init(5,this.pf(src.get("x")),this.pf(src.get("y")));
			break;
		case "tri":
			this._init(6,this.pf(src.get("x")),this.pf(src.get("y")),this.pf(src.get("degrees")),this.pf(src.get("halfWidth")),this.pf(src.get("halfHeight")));
			break;
		case "need":
			this._init(1,0,0,0,20,20);
			break;
		default:
			throw new js__$Boot_HaxeError(new openfl_errors_Error("Invalid shape Xml type"));
		}
	}
	,clone: function() {
		var ret = new ozity_OzGeometry();
		ret._init(this.type,this.x,this.y,this.degrees,this.halfWidth,this.halfHeight,this.vx,this.vy,true,this.flags);
		return ret;
	}
	,_init: function(type_,x_,y_,degrees_,hw_,hh_,ax,ay,copyVectors,flags) {
		if(flags == null) flags = 0;
		if(copyVectors == null) copyVectors = true;
		if(hh_ == null) hh_ = 0;
		if(hw_ == null) hw_ = 0;
		if(degrees_ == null) degrees_ = 0;
		if(y_ == null) y_ = 0;
		if(x_ == null) x_ = 0;
		this.flags = flags;
		this.type = type_;
		this.x = x_;
		this.y = y_;
		this.degrees = degrees_;
		if(this.type == 1) {
			this.halfWidth = hw_;
			this.halfHeight = hh_;
		} else if(this.type == 2) this.radius = hw_; else if(this.type == 3) {
			if(copyVectors) {
				this.vx = [];
				this.vy = [];
				var _g1 = 0;
				var _g = ax.length;
				while(_g1 < _g) {
					var i = _g1++;
					this.vx[i] = ax[i];
					this.vy[i] = ay[i];
				}
			} else {
				this.vx = ax;
				this.vy = ay;
			}
		} else if(this.type == 7) {
			if(copyVectors) {
				this.vx = [];
				this.vy = [];
				var _g11 = 0;
				var _g2 = ax.length;
				while(_g11 < _g2) {
					var i1 = _g11++;
					this.vx[i1] = ax[i1];
					this.vy[i1] = ay[i1];
				}
			} else {
				this.vx = ax;
				this.vy = ay;
			}
			if((flags & 1) > 0) this.updateCurves();
			if(this.pathLengths == null) this.pathLengths = [];
			var lengthSoFar = 0;
			var _g12 = 0;
			var _g3 = ax.length;
			while(_g12 < _g3) {
				var i2 = _g12++;
				var k;
				if(i2 - 1 < 0) k = 0; else k = i2 - 1;
				var dx = this.vx[i2] - this.vx[k];
				var dy = this.vy[i2] - this.vy[k];
				lengthSoFar += Math.sqrt(dx * dx + dy * dy);
				this.pathLengths[i2] = lengthSoFar;
			}
		} else if(this.type == 4) {
		} else if(this.type == 6) {
			this.halfWidth = hw_;
			this.halfHeight = hh_;
		}
	}
	,getQuadPathCoeff: function(dist,offSet) {
		var totalLength = this.pathLengths[this.pathLengths.length - 1];
		dist = (dist % totalLength + totalLength) % totalLength;
		if(dist < offSet) return dist / offSet; else if(dist > totalLength - offSet) return 1 - (dist - (totalLength - offSet)) / offSet; else return 1;
	}
	,pathLength: function() {
		return this.pathLengths[this.pathLengths.length - 1];
	}
	,getPathPosition: function(dist,offX,offY,res,wrap) {
		if(wrap == null) wrap = false;
		var totalLength = this.pathLengths[this.pathLengths.length - 1];
		var N = this.pathLengths.length;
		if(!wrap) {
			if(dist < 0) dist = 0;
			if(dist > totalLength) dist = totalLength;
		} else dist = (dist % totalLength + totalLength) % totalLength;
		var left = 0;
		var right = N - 1;
		while(left + 1 < right) {
			var mid = Math.floor((left + right) / 2);
			if(dist <= this.pathLengths[mid]) right = mid; else left = mid;
		}
		var end = right;
		var prev = (right - 1 + N) % N;
		var endDist = this.pathLengths[end];
		var startDist;
		if(end == 0) startDist = 0; else startDist = this.pathLengths[prev];
		var t = (dist - startDist) / (endDist - startDist);
		res[0] = offX + this.x + (1 - t) * this.vx[prev] + t * this.vx[end];
		res[1] = offY + this.y + (1 - t) * this.vy[prev] + t * this.vy[end];
	}
	,isLoop: function(n) {
		if(n == null) n = -1;
		var xs = this.vx;
		var ys = this.vy;
		if((this.flags & 1) > 0) {
			xs = this.curvePointsX;
			ys = this.curvePointsY;
		}
		if(n < 0) n = xs.length;
		return Math.abs(xs[0] - xs[n - 1]) < 0.0001 && Math.abs(ys[0] - ys[n - 1]) < 0.0001;
	}
	,getFirstId: function(loop,n) {
		if(n == null) n = -1;
		if(n < 0) {
			if((this.flags & 1) > 0) n = this.curvePointsX.length; else n = this.vx.length;
		}
		var firstId = 0;
		if(loop) while(this.isOneSegment((firstId - 1 + n) % n,0,1)) firstId = (firstId - 1 + n) % n;
		return firstId;
	}
	,isOneSegment: function(i,j,k,switchIfCurve) {
		if(switchIfCurve == null) switchIfCurve = true;
		var xs = this.vx;
		var ys = this.vy;
		if(switchIfCurve && (this.flags & 1) > 0) {
			xs = this.curvePointsX;
			ys = this.curvePointsY;
		}
		if(xs == null || ys == null) return false;
		if(i == k) return false;
		if(Math.abs(xs[i] - xs[k]) < 0.1 && Math.abs(ys[i] - ys[k]) < 0.1) return false;
		if(dev_DevUtil.PointLineDistance(xs[i],ys[i],xs[k],ys[k],xs[j],ys[j],true) > 0.1) return false;
		return true;
	}
	,getVerticalBoundary: function(dir) {
		return this.y + dir * (function($this) {
			var $r;
			var _g = $this.type;
			$r = (function($this) {
				var $r;
				switch(_g) {
				case 1:
					$r = $this.halfHeight;
					break;
				case 2:
					$r = $this.radius;
					break;
				default:
					$r = (function($this) {
						var $r;
						throw new js__$Boot_HaxeError(new openfl_errors_Error("VERTICAL BOUNDARY NOT CALCULATED FOR geo",$this.type));
						return $r;
					}($this));
				}
				return $r;
			}($this));
			return $r;
		}(this));
	}
	,getHeight: function() {
		var _g = this.type;
		switch(_g) {
		case 1:
			return this.halfHeight * 2;
		case 2:
			return this.radius * 2;
		case 3:
			return 50;
		default:
			throw new js__$Boot_HaxeError(new openfl_errors_Error("HEIGHT NOT CALCULATED FOR geo",this.type));
		}
	}
	,getWidth: function() {
		var _g = this.type;
		switch(_g) {
		case 1:
			return this.halfWidth * 2;
		case 2:
			return this.radius * 2;
		case 3:
			return 50;
		default:
			throw new js__$Boot_HaxeError(new openfl_errors_Error("WIDTH NOT CALCULATED FOR geo",this.type));
		}
	}
	,pf: function(str) {
		if(str == null || str.length == 0) return 0; else return parseFloat(str);
	}
	,pi: function(str) {
		if(str == null || str.length == 0) return 0; else return Std.parseInt(str);
	}
	,__class__: ozity_OzGeometry
});
var ozity_OzTileInfo = function(name,tileUp45,tileDown45,tileUp23,tileDown23,scale9) {
	this.name = name;
	this.tileUp45 = tileUp45;
	this.tileDown45 = tileDown45;
	this.tileUp23 = tileUp23;
	this.tileDown23 = tileDown23;
	this.scale9 = scale9;
};
$hxClasses["ozity.OzTileInfo"] = ozity_OzTileInfo;
ozity_OzTileInfo.__name__ = ["ozity","OzTileInfo"];
ozity_OzTileInfo.prototype = {
	__class__: ozity_OzTileInfo
};
var ozity_OzGraphics = function(go,gfxXML) {
	this.tileObject = null;
	this.updateOldValues = false;
	this.color = 0;
	this.isTile = false;
	this.spriteMCName = null;
	this.depth = 0;
	this.sprite = null;
	ozity_OzComponent.call(this,go,gfxXML,null);
	this.depth = Std.parseInt(gfxXML.get("depth"));
	this.spriteMCName = gfxXML.get("src");
	this.isTile = gfxXML.get("type") == "tile";
	this.color = Std.parseInt("0x" + gfxXML.get("linecolor"));
};
$hxClasses["ozity.OzGraphics"] = ozity_OzGraphics;
ozity_OzGraphics.__name__ = ["ozity","OzGraphics"];
ozity_OzGraphics.GetMovieClip = function(strId) {
	var idFound = dev_DevUtil.FindStringId(oz_OzSprite.BitmapsNames,strId);
	return oz_OzSprite.Bitmaps[oz_OzSprite.BitmapsIds[idFound]];
};
ozity_OzGraphics.GetBitmapData = function(strId) {
	var ozmc = ozity_OzGraphics.GetMovieClip(strId);
	return oz_OzSprite.GetTilesheetBitmapData(ozmc.tilesheetId,ozmc.frames[0]);
};
ozity_OzGraphics.GetBitmap = function(strId) {
	var ozmc = ozity_OzGraphics.GetMovieClip(strId);
	return oz_OzSprite.New(ozmc);
};
ozity_OzGraphics.GetTileInfo = function(xmlGFX) {
	var tileName = xmlGFX.get("src");
	if(!ozity_OzGraphics.tileInfos.exists(tileName)) {
		var tileDown45 = dev_DevUtil.StringToIntArray(xmlGFX.get("tileDown45"));
		var tileUp45 = dev_DevUtil.StringToIntArray(xmlGFX.get("tileUp45"));
		var tileDown23 = dev_DevUtil.StringToIntArray(xmlGFX.get("tileDown23"));
		var tileUp23 = dev_DevUtil.StringToIntArray(xmlGFX.get("tileUp23"));
		var scale9 = dev_DevUtil.StringToIntArray(xmlGFX.get("scale9"));
		var tileInfo = new ozity_OzTileInfo(tileName,tileUp45,tileDown45,tileUp23,tileDown23,scale9);
		ozity_OzGraphics.tileInfos.set(tileName,tileInfo);
	}
	return ozity_OzGraphics.tileInfos.get(tileName);
};
ozity_OzGraphics.__super__ = ozity_OzComponent;
ozity_OzGraphics.prototype = $extend(ozity_OzComponent.prototype,{
	init: function() {
		this.tileObject = this.gameObject.getComponent(ozity_OzTileObject);
	}
	,postInit: function() {
		this.geometry = this.gameObject.geometry;
		this.transform = this.gameObject.transform;
		var xmlGFX = this.compPrefab;
		if(xmlGFX.get("visible") == "false") {
		} else if(xmlGFX.get("type") == "sprite") this.sprite = ozity_OzGraphics.GetBitmap(this.spriteMCName); else if(xmlGFX.get("type") == "fill") {
			var fillBmd = ozity_OzGraphics.GetBitmapData(this.spriteMCName);
			if(this.sprite == null) this.sprite = oz_OzSprite.New(null,oz_SpriteType.POLYGON);
			var gfx = this.sprite.flSprite.get_graphics();
			gfx.clear();
			if(xmlGFX.get("linewidth") != null) gfx.lineStyle(Std.parseInt(xmlGFX.get("linewidth")),this.color);
			gfx.beginBitmapFill(fillBmd,null,true,true);
			this.geometry.drawLocalOutline(gfx);
			gfx.endFill();
		} else if(xmlGFX.get("type") == "line") {
			var fillBmd1 = ozity_OzGraphics.GetBitmapData(this.spriteMCName);
			if(this.sprite == null) this.sprite = oz_OzSprite.New(null,oz_SpriteType.POLYGON);
			var lineWidth = fillBmd1.component.height;
			if(xmlGFX.get("linewidth") != null) lineWidth = Std.parseInt(xmlGFX.get("linewidth"));
			var dx = this.geometry.x1 - this.geometry.x2;
			var dy = this.geometry.y1 - this.geometry.y2;
			var lineLength = Math.sqrt(dx * dx + dy * dy);
			this.sprite.createLineGFX(fillBmd1,lineWidth,lineLength);
			this.sprite.set_rotation(dev_DevUtil.AngleFromSegment(this.geometry.x1,this.geometry.y1,this.geometry.x2,this.geometry.y2));
			var strEnd = xmlGFX.get("end");
			if(strEnd != null) {
				var e1 = ozity_OzGraphics.GetBitmap(strEnd);
				this.sprite.addChild(e1);
				e1.set_x(-lineLength / 2);
				var e2 = ozity_OzGraphics.GetBitmap(strEnd);
				this.sprite.addChild(e2);
				e2.set_x(lineLength / 2);
				haxe_Log.trace("init nc",{ fileName : "OzGraphics.hx", lineNumber : 121, className : "ozity.OzGraphics", methodName : "postInit", customParams : [this.sprite.numChildren()]});
			}
		} else if(xmlGFX.get("type") == "tile") {
			var solidType;
			var _g = xmlGFX.get("collision");
			switch(_g) {
			case "none":
				solidType = 0;
				break;
			case "top":
				solidType = 2;
				break;
			default:
				solidType = 1;
			}
			var layerStr = xmlGFX.get("depth");
			var layer = 0;
			if(layerStr != null) layer = Std.parseInt(layerStr);
			var tileInfo = ozity_OzGraphics.GetTileInfo(xmlGFX);
			var tileMap = this.gameObject.gameSystem.tileMap;
			var tileSize = tileMap.tileSize;
			var isStaticTile = xmlGFX.get("staticTile") != "false";
			if(isStaticTile) this.sprite = null; else if(this.sprite == null) this.sprite = oz_OzSprite.New(null,oz_SpriteType.EMPTY);
			if(this.geometry.type == 3 && this.geometry.halfWidth == 0) {
				var gX = Math.round(this.transform.x + this.geometry.x);
				var gY = Math.round(this.transform.y + this.geometry.y);
				if(this.sprite != null) {
					this.sprite.set_x(gX);
					this.sprite.set_y(gY);
				}
				oz_OzTileMap.PolyToTiles(this.geometry,tileSize);
				var _g1 = 0;
				var _g2 = oz_OzTileMap.ptN;
				while(_g1 < _g2) {
					var i = _g1++;
					var _g3 = 0;
					var _g21 = oz_OzTileMap.ptM;
					while(_g3 < _g21) {
						var j = _g3++;
						if(oz_OzTileMap.ptTiles[i][j] != 0) this.setSingleTile(tileMap,layer,i,j,oz_OzTileMap.ptTiles[i][j],oz_OzTileMap.PTFrameToTile(i,j,solidType),gX,gY,this.spriteMCName,tileSize,isStaticTile);
					}
				}
			} else {
				var frameNumberString = this.gameObject.objLevel.get("tileFrame");
				var frameNumber;
				if(frameNumberString == null) frameNumber = 1; else frameNumber = Std.parseInt(frameNumberString);
				var rectWidth = Math.round(this.geometry.halfWidth * 2);
				var rectHeight = Math.round(this.geometry.halfHeight * 2);
				var gX1 = Math.round(this.transform.x + this.geometry.x - this.geometry.halfWidth);
				var gY1 = Math.round(this.transform.y + this.geometry.y - this.geometry.halfHeight);
				var H = Math.round(rectHeight / tileSize);
				var W = Math.round(rectWidth / tileSize);
				var minSide = Std["int"](Math.min(H,W));
				var spriteTile = xmlGFX.get("spriteTile") == "1";
				if(this.sprite != null) {
					this.sprite.set_x(gX1);
					this.sprite.set_y(gY1);
				}
				if(dev_DevUtil.IndexOfInt(tileInfo.tileDown45,frameNumber) >= 0) {
					var offSetJ = W - minSide;
					var _g4 = 0;
					while(_g4 < H) {
						var i1 = _g4++;
						var _g11 = offSetJ;
						while(_g11 < W) {
							var j1 = _g11++;
							var ri = i1;
							var rj = j1 - offSetJ;
							var k = 1;
							var tileType = 0;
							if(ri == rj) {
								k = tileInfo.tileDown45[0];
								tileType = 2;
							} else if(rj == ri - 1) {
								k = tileInfo.tileDown45[1];
								tileType = 8;
							} else continue;
							this.setSingleTile(tileMap,layer,i1,j1,k,tileType,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
						}
					}
					if(offSetJ > 0) this.setSingleTile(tileMap,layer,0,offSetJ - 1,tileInfo.tileDown45[1],8,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
				} else if(dev_DevUtil.IndexOfInt(tileInfo.tileUp45,frameNumber) >= 0) {
					var _g5 = 0;
					while(_g5 < H) {
						var i2 = _g5++;
						var _g12 = 0;
						while(_g12 < minSide) {
							var j2 = _g12++;
							var ri1 = minSide - i2 - 1;
							var rj1 = j2;
							var k1 = 1;
							var tileType1 = 0;
							if(ri1 == rj1) {
								k1 = tileInfo.tileUp45[0];
								tileType1 = 3;
							} else if(rj1 == ri1 + 1) {
								k1 = tileInfo.tileUp45[1];
								tileType1 = 8;
							} else continue;
							this.setSingleTile(tileMap,layer,i2,j2,k1,tileType1,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
						}
					}
					if(W > minSide) this.setSingleTile(tileMap,layer,0,minSide,tileInfo.tileUp45[1],8,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
				} else if(dev_DevUtil.IndexOfInt(tileInfo.tileUp23,frameNumber) >= 0) {
					minSide = Std["int"](Math.min(H * 2,W));
					var minHeight;
					if(H * 2 > W) minHeight = Math.floor((W + 1) / 2); else minHeight = H;
					var _g6 = 0;
					while(_g6 < H) {
						var i3 = _g6++;
						var _g13 = 0;
						while(_g13 < minSide) {
							var j3 = _g13++;
							var ri2 = minHeight - i3 - 1;
							var rj2 = j3;
							var k2 = 1;
							var tileType2 = 0;
							if(ri2 * 2 == rj2) {
								k2 = tileInfo.tileUp23[0];
								tileType2 = 7;
							} else if(ri2 * 2 + 1 == rj2) {
								k2 = tileInfo.tileUp23[1];
								tileType2 = 6;
							} else if(ri2 * 2 + 2 == rj2) {
								k2 = tileInfo.tileUp23[2];
								tileType2 = 8;
							} else continue;
							this.setSingleTile(tileMap,layer,i3,j3,k2,tileType2,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
						}
					}
					if(W > minSide) this.setSingleTile(tileMap,layer,0,minSide,tileInfo.tileUp23[2],8,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
				} else if(dev_DevUtil.IndexOfInt(tileInfo.tileDown23,frameNumber) >= 0) {
					minSide = Std["int"](Math.min(H * 2,W));
					var offSetJ1 = W - minSide;
					var minHeight1;
					if(H * 2 > W) minHeight1 = Math.floor((W + 1) / 2); else minHeight1 = H;
					var _g7 = 0;
					while(_g7 < H) {
						var i4 = _g7++;
						var _g14 = offSetJ1;
						while(_g14 < W) {
							var j4 = _g14++;
							var ri3 = minHeight1 - i4 - 1;
							var rj3 = minSide - (j4 - offSetJ1) - 1;
							var k3 = 1;
							var tileType3 = 0;
							if(ri3 * 2 == rj3) {
								k3 = tileInfo.tileDown23[0];
								tileType3 = 5;
							} else if(ri3 * 2 + 1 == rj3) {
								k3 = tileInfo.tileDown23[1];
								tileType3 = 4;
							} else if(ri3 * 2 + 2 == rj3) {
								k3 = tileInfo.tileDown23[2];
								tileType3 = 8;
							} else continue;
							this.setSingleTile(tileMap,layer,i4,j4,k3,tileType3,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
						}
					}
					if(offSetJ1 > 0) this.setSingleTile(tileMap,layer,0,offSetJ1 - 1,tileInfo.tileDown23[2],8,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
				} else if(spriteTile) {
					var bmd = ozity_OzGraphics.GetBitmapData(xmlGFX.get("src"));
					var N = Math.ceil((bmd.component.height - 1) / tileSize);
					var M = Math.ceil((bmd.component.width - 1) / tileSize);
					var colType = solidType;
					var _g8 = 0;
					while(_g8 < H) {
						var i5 = _g8++;
						if(solidType == 2) if(i5 == 0) colType = 9; else colType = 0;
						var _g15 = 0;
						while(_g15 < W) {
							var j5 = _g15++;
							this.setSingleTile(tileMap,layer,i5,j5,oz_OzTileMap.GetSpriteTileFrame(i5,j5,N,M),colType,gX1,gY1,this.spriteMCName,tileSize,isStaticTile);
						}
					}
				} else {
					var isScale9 = dev_DevUtil.IndexOfInt(tileInfo.scale9,frameNumber) >= 0;
					if(isStaticTile) {
						this.sprite = null;
						tileMap.setTileBlock(layer,gX1,gY1,W,H,1,ozity_OzGraphics.GetMovieClip(this.spriteMCName),frameNumber,isScale9,solidType);
						if(this.tileObject != null) tileMap.setTileObjectBlock(this.tileObject,gX1,gY1,W,H);
					} else {
						var _g9 = 0;
						while(_g9 < H) {
							var i6 = _g9++;
							var _g16 = 0;
							while(_g16 < W) {
								var j6 = _g16++;
								var tempTile = ozity_OzGraphics.GetBitmap(this.spriteMCName);
								tempTile.set_x(Math.round(j6 * tileSize));
								tempTile.set_y(Math.round(i6 * tileSize));
								this.sprite.addChild(tempTile);
								tempTile.gotoAndStop(isScale9?oz_OzTileMap.GetScale9Frame(i6,j6,H,W):frameNumber);
							}
						}
					}
				}
			}
		} else if(xmlGFX.get("type") == "path") {
			var fillBmd2 = null;
			if(this.spriteMCName != null) fillBmd2 = ozity_OzGraphics.GetBitmapData(this.spriteMCName);
			if(this.sprite == null) this.sprite = oz_OzSprite.New(null,oz_SpriteType.POLYGON);
			var lineWidth1 = 4;
			if(fillBmd2 != null) lineWidth1 = fillBmd2.component.height;
			if(xmlGFX.get("linewidth") != null) lineWidth1 = Std.parseInt(xmlGFX.get("linewidth"));
			var vx = this.geometry.vx;
			var vy = this.geometry.vy;
			if((this.geometry.flags & 1) > 0) {
				vx = this.geometry.curvePointsX;
				vy = this.geometry.curvePointsY;
			}
			var n = vx.length;
			var loop = false;
			if(this.geometry.isLoop()) {
				loop = true;
				n--;
			}
			var firstId = this.geometry.getFirstId(loop,n);
			var sx = this.geometry.x;
			var sy = this.geometry.y;
			if(xmlGFX.get("backcolor") != null) {
				var strArg = null;
				var backColors = null;
				strArg = xmlGFX.get("backcolor");
				if(strArg != null) backColors = strArg.split(",");
				var backWidths = null;
				strArg = xmlGFX.get("backwidth");
				if(strArg != null) backWidths = strArg.split(",");
				var backAlphas = null;
				strArg = xmlGFX.get("backalpha");
				if(strArg != null) backAlphas = strArg.split(",");
				var PN = 0;
				if(backColors != null || backWidths != null || backAlphas != null) {
					PN = 1;
					if(backColors != null && backColors.length > PN) PN = backColors.length;
					if(backWidths != null && backWidths.length > PN) PN = backWidths.length;
					if(backAlphas != null && backAlphas.length > PN) PN = backAlphas.length;
				}
				var _g10 = 0;
				while(_g10 < PN) {
					var i7 = _g10++;
					var backColor = 65280;
					if(backColors != null && i7 < backColors.length) backColor = Std.parseInt("0x" + backColors[i7]);
					var backWidth = 2;
					if(backWidths != null && i7 < backWidths.length) backWidth = parseFloat(backWidths[i7]);
					var backAlpha = 1;
					if(backAlphas != null && i7 < backAlphas.length) backAlpha = Std.parseFloat(xmlGFX.get("backalpha"));
					this.makeLineGFX(fillBmd2,backColor,backWidth,firstId,sx,sy,vx,vy,n,loop,backAlpha);
				}
			}
			this.makeLineGFX(fillBmd2,this.color,lineWidth1,firstId,sx,sy,vx,vy,n,loop);
			var strEnd1 = xmlGFX.get("end");
			if(strEnd1 != null) {
				var id1 = firstId;
				var id2 = 1;
				while(this.geometry.isOneSegment(id1,id2,(id2 + 1) % n)) id2 = (id2 + 1) % n;
				do {
					var e = ozity_OzGraphics.GetBitmap(strEnd1);
					this.sprite.addChild(e);
					e.set_x(sx + vx[id1]);
					e.set_y(sy + vy[id1]);
					id1 = id2;
					id2 = (id2 + 1) % n;
					while(this.geometry.isOneSegment(id1,id2,(id2 + 1) % n)) id2 = (id2 + 1) % n;
				} while(id1 != firstId);
			}
		} else throw new js__$Boot_HaxeError(new openfl_errors_Error("Todo: if not sprite"));
		this.physics = this.gameObject.physics;
		if(this.sprite != null && this.physics != null && this.physics.body != null && this.physics.shiftCOM) {
			var holderSprite = oz_OzSprite.New(null,oz_SpriteType.EMPTY);
			if(this.sprite.parent != null) this.sprite.parent.addChild(holderSprite);
			holderSprite.addChild(this.sprite);
			holderSprite.set_x(this.sprite.get_x());
			holderSprite.set_y(this.sprite.get_y());
			holderSprite.set_rotation(this.sprite.get_rotation());
			this.sprite.set_x(-this.physics.comOffset.get_x());
			this.sprite.set_y(-this.physics.comOffset.get_y());
			this.sprite.set_rotation(0);
			holderSprite.addChild(this.sprite);
			this.sprite = holderSprite;
		}
		if(this.sprite != null) this.gameObject.gameSystem.objectSpriteDepths[this.depth].addChild(this.sprite);
	}
	,makeLineGFX: function(fillBmd,color,width,firstId,sx,sy,vx,vy,n,loop,alpha) {
		if(alpha == null) alpha = 1;
		var dist = 0;
		if(fillBmd == null) this.sprite.flSprite.get_graphics().lineStyle(width,color,alpha);
		var drawStep = 0;
		var id1 = firstId;
		var id2 = 1;
		var numIterations = 0;
		while(this.geometry.isOneSegment(id1,id2,(id2 + 1) % n)) id2 = (id2 + 1) % n;
		do {
			numIterations++;
			var dx = vx[id1] - vx[id2];
			var dy = vy[id1] - vy[id2];
			var lineLength = Math.sqrt(dx * dx + dy * dy);
			dist += lineLength;
			if(lineLength > 0.001) {
				if(fillBmd != null) this.sprite.createLineSegmentGFX(fillBmd,dist,sx + vx[id1],sy + vy[id1],sx + vx[id2],sy + vy[id2]); else {
					if(drawStep == 0) this.sprite.flSprite.get_graphics().moveTo(sx + vx[id1],sy + vy[id1]);
					this.sprite.flSprite.get_graphics().lineTo(sx + vx[id2],sy + vy[id2]);
				}
				drawStep++;
			}
			id1 = id2;
			id2 = (id2 + 1) % n;
			while(this.geometry.isOneSegment(id1,id2,(id2 + 1) % n)) id2 = (id2 + 1) % n;
			if(id2 == firstId && !loop || numIterations >= n) break;
		} while(id1 != firstId);
	}
	,postUpdate: function() {
		if(this.sprite == null) return;
		if(this.physics != null && this.physics.body != null) {
			if(this.isTile && this.geometry.type == 1) {
				var addX = 0;
				var addY = 0;
				this.sprite.set_x(Math.round(this.physics.body.get_position().get_x() - this.geometry.halfWidth + addX));
				this.sprite.set_y(Math.round(this.physics.body.get_position().get_y() - this.geometry.halfHeight + addY));
			} else {
				this.sprite.set_x(this.physics.body.get_position().get_x());
				this.sprite.set_y(this.physics.body.get_position().get_y());
				this.sprite.set_rotation(this.physics.body.zpp_inner.rot * 180 / Math.PI);
			}
		} else if(this.physics != null && this.physics.joint != null) {
			if(this.geometry == null) {
				var pivotJoint;
				pivotJoint = js_Boot.__cast(this.physics.joint , nape_constraint_PivotJoint);
				this.sprite.set_x((pivotJoint.zpp_inner_zn.b1 == null?null:pivotJoint.zpp_inner_zn.b1.outer).localPointToWorld((function($this) {
					var $r;
					if(pivotJoint.zpp_inner_zn.wrap_a1 == null) pivotJoint.zpp_inner_zn.setup_a1();
					$r = pivotJoint.zpp_inner_zn.wrap_a1;
					return $r;
				}(this))).get_x());
				this.sprite.set_y((pivotJoint.zpp_inner_zn.b1 == null?null:pivotJoint.zpp_inner_zn.b1.outer).localPointToWorld((function($this) {
					var $r;
					if(pivotJoint.zpp_inner_zn.wrap_a1 == null) pivotJoint.zpp_inner_zn.setup_a1();
					$r = pivotJoint.zpp_inner_zn.wrap_a1;
					return $r;
				}(this))).get_y());
			} else if(this.geometry.type == 4) {
				var distanceJoint;
				distanceJoint = js_Boot.__cast(this.physics.joint , nape_constraint_DistanceJoint);
				var x1 = (distanceJoint.zpp_inner_zn.b1 == null?null:distanceJoint.zpp_inner_zn.b1.outer).localPointToWorld((function($this) {
					var $r;
					if(distanceJoint.zpp_inner_zn.wrap_a1 == null) distanceJoint.zpp_inner_zn.setup_a1();
					$r = distanceJoint.zpp_inner_zn.wrap_a1;
					return $r;
				}(this))).get_x();
				var y1 = (distanceJoint.zpp_inner_zn.b1 == null?null:distanceJoint.zpp_inner_zn.b1.outer).localPointToWorld((function($this) {
					var $r;
					if(distanceJoint.zpp_inner_zn.wrap_a1 == null) distanceJoint.zpp_inner_zn.setup_a1();
					$r = distanceJoint.zpp_inner_zn.wrap_a1;
					return $r;
				}(this))).get_y();
				var x2 = (distanceJoint.zpp_inner_zn.b2 == null?null:distanceJoint.zpp_inner_zn.b2.outer).localPointToWorld((function($this) {
					var $r;
					if(distanceJoint.zpp_inner_zn.wrap_a2 == null) distanceJoint.zpp_inner_zn.setup_a2();
					$r = distanceJoint.zpp_inner_zn.wrap_a2;
					return $r;
				}(this))).get_x();
				var y2 = (distanceJoint.zpp_inner_zn.b2 == null?null:distanceJoint.zpp_inner_zn.b2.outer).localPointToWorld((function($this) {
					var $r;
					if(distanceJoint.zpp_inner_zn.wrap_a2 == null) distanceJoint.zpp_inner_zn.setup_a2();
					$r = distanceJoint.zpp_inner_zn.wrap_a2;
					return $r;
				}(this))).get_y();
				this.sprite.adjustLine(x1,y1,x2,y2);
			}
		} else if(this.geometry != null && this.sprite != null) {
			this.sprite.set_x(this.transform.x);
			this.sprite.set_y(this.transform.y);
			this.sprite.set_rotation(this.transform.degrees);
		}
		if(this.physics != null && this.physics.body != null) {
			this.sprite.set_x(this.physics.get_x());
			this.sprite.set_y(this.physics.get_y());
			this.sprite.set_rotation(this.physics.get_degrees());
		} else {
			this.sprite.set_x(this.transform.x);
			this.sprite.set_y(this.transform.y);
			this.sprite.set_rotation(this.transform.degrees);
		}
		if(this.updateOldValues) {
			this.updateOldValues = false;
			this.sprite._updateOldValues();
		}
	}
	,getGameSprite: function() {
		if(this.gameObject.physics != null && this.gameObject.physics.shiftCOM) return this.sprite.child;
		return this.sprite;
	}
	,setSingleTile: function(tileMap,layer,i,j,k,tileMapFrame,gX,gY,tileName,tileSize,isStaticTile) {
		if(isStaticTile) {
			var ti = Std["int"](Math.round((gY - tileMap.offsetY) / tileSize) + i);
			var tj = Std["int"](Math.round((gX - tileMap.offsetX) / tileSize) + j);
			var mc = ozity_OzGraphics.GetMovieClip(tileName);
			tileMap.setTile(layer,ti,tj,tileMapFrame,mc,k);
			if(this.tileObject != null) tileMap.setTileObject(this.tileObject,ti,tj);
		} else {
			var tempTile = ozity_OzGraphics.GetBitmap(tileName);
			tempTile.set_x(Math.round(j * tileSize));
			tempTile.set_y(Math.round(i * tileSize));
			this.sprite.addChild(tempTile);
			tempTile.gotoAndStop(k);
		}
	}
	,destroy: function() {
		if(this.sprite != null) {
			this.sprite.clearChildren();
			oz_OzSprite.Dispose(this.sprite);
			this.sprite = null;
		}
	}
	,giveAwayGameSprite: function() {
		var ret = this.getGameSprite();
		if(ret == this.sprite) this.sprite = null; else ret.parent.removeChild(ret);
		return ret;
	}
	,resetGraphics: function() {
		this.destroy();
		this.postInit();
		this.updateOldValues = true;
		this.postUpdate();
	}
	,changeSprite: function(newSprite) {
		if(newSprite != null && this.sprite != null) this.sprite.parent.addChild(newSprite);
		if(this.sprite != null) this.sprite.parent.removeChild(this.sprite);
		this.sprite = newSprite;
	}
	,__class__: ozity_OzGraphics
});
var ozity_OzLevelMark = function(gameObject,compPrefab,compLevel) {
	this.type = ozity_LevelMarkType.Start;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("type") != null) {
		var constr = compLevel.get("type");
		this.type = Type.createEnum(ozity_LevelMarkType,constr,null);
	}
};
$hxClasses["ozity.OzLevelMark"] = ozity_OzLevelMark;
ozity_OzLevelMark.__name__ = ["ozity","OzLevelMark"];
ozity_OzLevelMark.StaticInit = function() {
	ozity_OzLevelMark.lmStarts = [];
	ozity_OzLevelMark.lmEnds = [];
	ozity_OzLevelMark.lmGos = [];
};
ozity_OzLevelMark.__super__ = ozity_OzComponent;
ozity_OzLevelMark.prototype = $extend(ozity_OzComponent.prototype,{
	init: function() {
		ozity_OzComponent.prototype.init.call(this);
		if(ozity_OzLevelMark.lmGos.length == 0) {
			var newGos = [];
			var _g = 0;
			var _g1 = this.gameObject.gameSystem.gameObjects;
			while(_g < _g1.length) {
				var obj = _g1[_g];
				++_g;
				if(obj.getType().indexOf("car") == 0) continue;
				newGos.push(obj);
			}
			ozity_OzLevelMark.lmGos.push(newGos);
		}
		if(this.type == ozity_LevelMarkType.Start) ozity_OzLevelMark.lmStarts.push(this); else ozity_OzLevelMark.lmEnds.push(this);
	}
	,__class__: ozity_OzLevelMark
});
var ozity_OzLevelProgress = function(index) {
	this.tempKeys = [];
	this.index = index;
};
$hxClasses["ozity.OzLevelProgress"] = ozity_OzLevelProgress;
ozity_OzLevelProgress.__name__ = ["ozity","OzLevelProgress"];
ozity_OzLevelProgress.getInstance = function(level) {
	if(ozity_OzLevelProgress.current == null || ozity_OzLevelProgress.current.index != level) ozity_OzLevelProgress.current = new ozity_OzLevelProgress(level);
	return ozity_OzLevelProgress.current;
};
ozity_OzLevelProgress.prototype = {
	clearTemps: function() {
		if(this.tempKeys == null || this.tempKeys.length > 0) this.tempKeys = [];
	}
	,__class__: ozity_OzLevelProgress
};
var ozity_OzMoveAndRotate = function(gameObject,compPrefab,compLevel) {
	this.stateSwitched = false;
	this.adjusted = true;
	this.triggered = false;
	this.hasTrigger = false;
	this.hasTarget = false;
	this.state = 0;
	this.stateCnt = 0;
	this.triggerOnce = true;
	this.repeat = false;
	this.onlyForward = true;
	this.backwardFrames = 30;
	this.delayBackward = 0;
	this.forwardFrames = 30;
	this.delayForward = 0;
	this.offsetFrames = 0;
	this.body = null;
	this.eRot = 0;
	this.eY = 0;
	this.eX = 0;
	this.sRot = 0;
	this.sY = 0;
	this.sX = 0;
	this.nextPosition = null;
	this.trigger = null;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("offsetFrames") != null) this.offsetFrames = Std.parseInt(compLevel.get("offsetFrames"));
	if(compLevel.get("delayForward") != null) this.delayForward = Std.parseInt(compLevel.get("delayForward"));
	if(compLevel.get("forwardFrames") != null) this.forwardFrames = Std.parseInt(compLevel.get("forwardFrames"));
	if(compLevel.get("delayBackward") != null) this.delayBackward = Std.parseInt(compLevel.get("delayBackward"));
	if(compLevel.get("backwardFrames") != null) this.backwardFrames = Std.parseInt(compLevel.get("backwardFrames"));
	if(compLevel.get("onlyForward") != null) this.onlyForward = compLevel.get("onlyForward") == "true";
	if(compLevel.get("repeat") != null) this.repeat = compLevel.get("repeat") == "true";
	if(compLevel.get("triggerOnce") != null) this.triggerOnce = compLevel.get("triggerOnce") == "true";
};
$hxClasses["ozity.OzMoveAndRotate"] = ozity_OzMoveAndRotate;
ozity_OzMoveAndRotate.__name__ = ["ozity","OzMoveAndRotate"];
ozity_OzMoveAndRotate.__super__ = ozity_OzComponent;
ozity_OzMoveAndRotate.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		this.body = this.gameObject.physics.body;
		this.sX = this.body.get_position().get_x();
		this.sY = this.body.get_position().get_y();
		this.sRot = this.body.zpp_inner.rot;
		this.body.set_disableCCD(false);
		this.body.set_isBullet(true);
		if(this.nextPosition != null) {
			this.hasTarget = true;
			var nextBody = this.nextPosition.physics.body;
			this.eX = ((function($this) {
				var $r;
				if(nextBody.zpp_inner.wrap_pos == null) nextBody.zpp_inner.setupPosition();
				$r = nextBody.zpp_inner.wrap_pos;
				return $r;
			}(this))).get_x();
			this.eY = ((function($this) {
				var $r;
				if(nextBody.zpp_inner.wrap_pos == null) nextBody.zpp_inner.setupPosition();
				$r = nextBody.zpp_inner.wrap_pos;
				return $r;
			}(this))).get_y();
			this.eRot = nextBody.zpp_inner.rot;
			this.nextPosition.physics.body.set_space(null);
			this.nextPosition.dead = true;
		}
		if(this.trigger != null) {
			this.hasTrigger = true;
			var triggerComp;
			triggerComp = js_Boot.__cast(this.trigger.getComponent(ozity_OzTrigger) , ozity_OzTrigger);
			triggerComp.addToTrigger(this);
		}
		this.resetState(0);
	}
	,directMessage: function(m) {
		if(m == ozity_Message.TRIGGER) this.triggered = true;
	}
	,update: function() {
		ozity_OzComponent.prototype.update.call(this);
		if(this.hasTarget) this.updateMover();
	}
	,resetState: function(newState) {
		this.stateSwitched = true;
		this.triggered = false;
		this.state = newState;
		this.stateCnt = 0;
	}
	,updateMover: function() {
		if(this.hasTarget) {
			while(true) {
				this.stateSwitched = false;
				var _g = this.state;
				switch(_g) {
				case 0:
					if(!this.hasTrigger || this.triggered) {
						this.resetState(1);
						this.triggered = false;
					}
					break;
				case 1:
					if(this.stateCnt >= this.offsetFrames) this.resetState(2);
					break;
				case 2:
					if(this.stateCnt >= this.delayForward) this.resetState(3);
					break;
				case 3:
					if(this.stateCnt == this.forwardFrames) {
						this.adjustEnd();
						this.stop();
						if(!this.onlyForward) this.resetState(4);
					} else if(this.stateCnt > this.forwardFrames - 1) {
					} else this.goForward(1 / this.forwardFrames);
					break;
				case 4:
					if(this.stateCnt >= this.delayBackward) this.resetState(5);
					break;
				case 5:
					if(this.stateCnt == this.backwardFrames) {
						this.adjustStart();
						this.stop();
						if(this.repeat && this.hasTrigger && !this.triggerOnce) this.resetState(0); else if(this.repeat) this.resetState(2);
					} else if(this.stateCnt > this.backwardFrames - 1) {
					} else this.goBackward(1 / this.backwardFrames);
					break;
				}
				if(!this.stateSwitched) break;
			}
			this.stateCnt++;
		}
		this.triggered = false;
	}
	,stop: function() {
		this.body.get_velocity().set_x(0);
		this.body.get_velocity().set_y(0);
		this.body.set_angularVel(0);
	}
	,adjustStart: function() {
	}
	,adjustEnd: function() {
	}
	,goForward: function(perc) {
		this.body.get_velocity().set_x((this.eX - this.sX) * perc * Main.FPS);
		this.body.get_velocity().set_y((this.eY - this.sY) * perc * Main.FPS);
		this.body.set_angularVel((this.eRot - this.sRot) * perc * Main.FPS);
	}
	,goBackward: function(perc) {
		this.body.get_velocity().set_x((this.sX - this.eX) * perc * Main.FPS);
		this.body.get_velocity().set_y((this.sY - this.eY) * perc * Main.FPS);
		this.body.set_angularVel((this.sRot - this.eRot) * perc * Main.FPS);
	}
	,init: function() {
		if(this.compLevel.get("trigger") != null) this.trigger = this.gameObject.gameSystem.getGameObjectById(this.compLevel.get("trigger"));
		if(this.compLevel.get("nextPosition") != null) this.nextPosition = this.gameObject.gameSystem.getGameObjectById(this.compLevel.get("nextPosition"));
	}
	,__class__: ozity_OzMoveAndRotate
});
var ozity_OzPath = function(gameObject,compPrefab,compLevel) {
	this.vec4 = null;
	this.visible = true;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("visible") != null) this.visible = compLevel.get("visible") == "true";
};
$hxClasses["ozity.OzPath"] = ozity_OzPath;
ozity_OzPath.__name__ = ["ozity","OzPath"];
ozity_OzPath.__super__ = ozity_OzComponent;
ozity_OzPath.prototype = $extend(ozity_OzComponent.prototype,{
	init: function() {
		this.vec4 = [];
		this.gameObject.geometry.getMinMaxXY(this.gameObject.transform.x,this.gameObject.transform.y,this.gameObject.transform.degrees,this.vec4);
	}
	,postInit: function() {
		this.gameObject.graphics.sprite.set_visible(this.visible);
	}
	,getMinX: function() {
		return this.vec4[0];
	}
	,getMaxX: function() {
		return this.vec4[2];
	}
	,__class__: ozity_OzPath
});
var ozity_OzPathFollower = function(path,goMov,speed,loop,reverse) {
	if(reverse == null) reverse = true;
	if(loop == null) loop = false;
	if(speed == null) speed = 100;
	this.cnt = 0;
	this.distance = 0;
	this.cpath = null;
	this.speed = 100;
	this.reverse = true;
	this.loop = false;
	this.path = null;
	this.body = null;
	this.goMov = null;
	this.path = path;
	this.goMov = goMov;
	this.body = goMov.physics.body;
	this.speed = speed;
	this.loop = loop;
	this.reverse = reverse;
	if(path != null) this.cpath = path.getComponent(ozity_OzPath);
	if(this.cpath != null) {
		this.cpath.gameObject.geometry.getPathPosition(0,this.cpath.gameObject.transform.x,this.cpath.gameObject.transform.y,ozity_OzPathFollower.tempArr2,true);
		this.body.get_position().setxy(ozity_OzPathFollower.tempArr2[0] + goMov.geometry.x,ozity_OzPathFollower.tempArr2[1] + goMov.geometry.y);
	}
};
$hxClasses["ozity.OzPathFollower"] = ozity_OzPathFollower;
ozity_OzPathFollower.__name__ = ["ozity","OzPathFollower"];
ozity_OzPathFollower.prototype = {
	update: function() {
		if(this.cpath != null) {
			var deltaTime = this.cpath.gameObject.gameSystem.deltaTime;
			var geo = this.goMov.geometry;
			if(!this.reverse) {
				this.cpath.gameObject.geometry.getPathPosition(this.distance,this.cpath.gameObject.transform.x,this.cpath.gameObject.transform.y,ozity_OzPathFollower.tempArr2,this.loop);
				ozity_OzPathFollower.tempArr2[0] = (ozity_OzPathFollower.tempArr2[0] - this.body.get_position().get_x() + geo.x) / deltaTime;
				ozity_OzPathFollower.tempArr2[1] = (ozity_OzPathFollower.tempArr2[1] - this.body.get_position().get_y() + geo.y) / deltaTime;
				this.body.get_velocity().setxy(ozity_OzPathFollower.tempArr2[0],ozity_OzPathFollower.tempArr2[1]);
				this.distance += this.speed * deltaTime;
			} else {
				var coeff = this.cpath.gameObject.geometry.getQuadPathCoeff(this.distance,60);
				var adjSpeed = this.speed * (coeff * 0.8 + 0.2);
				this.distance += adjSpeed * deltaTime;
				var totDist = this.cpath.gameObject.geometry.pathLength();
				var cycleDist = this.distance % (2 * totDist);
				if(cycleDist < totDist) this.cpath.gameObject.geometry.getPathPosition(cycleDist,this.cpath.gameObject.transform.x,this.cpath.gameObject.transform.y,ozity_OzPathFollower.tempArr2,false); else this.cpath.gameObject.geometry.getPathPosition(totDist * 2 - cycleDist,this.cpath.gameObject.transform.x,this.cpath.gameObject.transform.y,ozity_OzPathFollower.tempArr2,false);
				ozity_OzPathFollower.tempArr2[0] = (ozity_OzPathFollower.tempArr2[0] - this.body.get_position().get_x() + geo.x) / deltaTime;
				ozity_OzPathFollower.tempArr2[1] = (ozity_OzPathFollower.tempArr2[1] - this.body.get_position().get_y() + geo.y) / deltaTime;
				this.body.get_velocity().setxy(ozity_OzPathFollower.tempArr2[0],ozity_OzPathFollower.tempArr2[1]);
			}
		}
		this.cnt++;
	}
	,__class__: ozity_OzPathFollower
};
var zpp_$nape_dynamics_ZPP_$InteractionGroup = function() {
	this.depth = 0;
	this.interactors = null;
	this.groups = null;
	this.group = null;
	this.ignore = false;
	this.outer = null;
	this.depth = 0;
	this.groups = new zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup();
	this.interactors = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
};
$hxClasses["zpp_nape.dynamics.ZPP_InteractionGroup"] = zpp_$nape_dynamics_ZPP_$InteractionGroup;
zpp_$nape_dynamics_ZPP_$InteractionGroup.__name__ = ["zpp_nape","dynamics","ZPP_InteractionGroup"];
zpp_$nape_dynamics_ZPP_$InteractionGroup.prototype = {
	invalidate: function(force) {
		if(force == null) force = false;
		if(!(force || this.ignore)) return;
		var cx_ite = this.interactors.head;
		while(cx_ite != null) {
			var b = cx_ite.elt;
			if(b.ibody != null) b.ibody.wake(); else if(b.ishape != null) b.ishape.body.wake(); else b.icompound.wake();
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = this.groups.head;
		while(cx_ite1 != null) {
			var g = cx_ite1.elt;
			g.invalidate(force);
			cx_ite1 = cx_ite1.next;
		}
	}
	,__class__: zpp_$nape_dynamics_ZPP_$InteractionGroup
};
var zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_InteractionGroup"] = zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup;
zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup.__name__ = ["zpp_nape","util","ZNPList_ZPP_InteractionGroup"];
zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$InteractionGroup
};
var zpp_$nape_util_ZNPList_$ZPP_$Interactor = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Interactor"] = zpp_$nape_util_ZNPList_$ZPP_$Interactor;
zpp_$nape_util_ZNPList_$ZPP_$Interactor.__name__ = ["zpp_nape","util","ZNPList_ZPP_Interactor"];
zpp_$nape_util_ZNPList_$ZPP_$Interactor.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Interactor(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Interactor.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,inlined_clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Interactor
};
var ozity_OzPhysics = function(go,physXml) {
	this.gravityVec = null;
	this.comOffset = null;
	this.shiftCOM = false;
	this.material = null;
	this.world = null;
	this.joint = null;
	this.body = null;
	ozity_OzComponent.call(this,go,physXml,null);
};
$hxClasses["ozity.OzPhysics"] = ozity_OzPhysics;
ozity_OzPhysics.__name__ = ["ozity","OzPhysics"];
ozity_OzPhysics.getFilter = function(str) {
	if(str == null) return ozity_OzPhysics.DefaultFilter;
	if(ozity_OzPhysics.FilterMap.exists(str)) return ozity_OzPhysics.FilterMap.get(str); else {
		var xmlVal = oz_Xu.cwav(ozity_OzPhysics.FiltersXml,"filter","name",str);
		if(xmlVal != null) {
			var ret = new nape_dynamics_InteractionFilter();
			var valStr = xmlVal.get("colGroup");
			if(valStr != null) ret.set_collisionGroup(Std.parseInt("0x" + valStr));
			var valStr1 = xmlVal.get("colMask");
			if(valStr1 != null) ret.set_collisionMask(Std.parseInt("0x" + valStr1));
			return ret;
		} else {
			haxe_Log.trace("CAN'T FIND FILTER",{ fileName : "OzPhysics.hx", lineNumber : 83, className : "ozity.OzPhysics", methodName : "getFilter", customParams : [str]});
			return ozity_OzPhysics.DefaultFilter;
		}
	}
};
ozity_OzPhysics.PreStaticInit = function() {
	ozity_OzPhysics.ColType2CbType = new haxe_ds_EnumValueMap();
	ozity_OzPhysics.ColType2CbType.set(ozity_ColType.AnyType,zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY);
	ozity_OzPhysics.StaticGroup.set_ignore(true);
	var oneWayCT = ozity_OzPhysics.GetCBTypeByColType(ozity_ColType.OneWay);
	ozity_OzGameSystem.instance.world.zpp_inner.wrap_listeners.add(new nape_callbacks_PreListener((function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
		return $r;
	}(this)),oneWayCT,zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY,ozity_OzPhysics.OneWayHandler,0,true));
	ozity_OzPhysics.DefaultFilter = new nape_dynamics_InteractionFilter();
	ozity_OzPhysics.FiltersXml = oz_Xu.fc(Globals.definitionsXML,"filters");
	ozity_OzPhysics.FilterMap = new haxe_ds_StringMap();
	if(ozity_OzPhysics.FiltersXml != null) ozity_OzPhysics.DefaultFilter = ozity_OzPhysics.getFilter("default");
};
ozity_OzPhysics.OneWayHandler = function(cb) {
	var colArb = cb.zpp_inner.pre_arbiter.wrapper().get_collisionArbiter();
	if(((function($this) {
		var $r;
		if(!colArb.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
		if(colArb.zpp_inner.colarb.wrap_normal == null) colArb.zpp_inner.colarb.getnormal();
		$r = colArb.zpp_inner.colarb.wrap_normal;
		return $r;
	}(this))).get_y() > 0 != cb.zpp_inner.pre_swapped) {
		if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		return zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
	} else {
		if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		return zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
	}
};
ozity_OzPhysics.GetCBTypeByColType = function(ct) {
	if(!ozity_OzPhysics.ColType2CbType.exists(ct)) {
		var value = new nape_callbacks_CbType();
		ozity_OzPhysics.ColType2CbType.set(ct,value);
	}
	var cbType = ozity_OzPhysics.ColType2CbType.get(ct);
	return cbType;
};
ozity_OzPhysics.AddCollisionListener = function(ctA,ctB,listener,interactionId,onGoing) {
	if(onGoing == null) onGoing = false;
	if(interactionId == null) interactionId = 0;
	var it;
	switch(interactionId) {
	case 1:
		if(zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR = new nape_callbacks_InteractionType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		it = zpp_$nape_util_ZPP_$Flags.InteractionType_SENSOR;
		break;
	case 2:
		if(zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID = new nape_callbacks_InteractionType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		it = zpp_$nape_util_ZPP_$Flags.InteractionType_FLUID;
		break;
	case 3:
		if(zpp_$nape_util_ZPP_$Flags.InteractionType_ANY == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InteractionType_ANY = new nape_callbacks_InteractionType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		it = zpp_$nape_util_ZPP_$Flags.InteractionType_ANY;
		break;
	default:
		if(zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION = new nape_callbacks_InteractionType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		it = zpp_$nape_util_ZPP_$Flags.InteractionType_COLLISION;
	}
	var cbTypeA = ozity_OzPhysics.GetCBTypeByColType(ctA);
	var cbTypeB = ozity_OzPhysics.GetCBTypeByColType(ctB);
	var colFunc = function(icb) {
		ozity_OzPhysics.LastCollisionArbiter = icb.zpp_inner.wrap_arbiters.at(0).get_collisionArbiter();
		var go1;
		if(icb.zpp_inner.int1.outer_i.get_castBody().get_userData().object == null) go1 = null; else go1 = js_Boot.__cast(icb.zpp_inner.int1.outer_i.get_castBody().get_userData().object , ozity_OzGameObject);
		var go2;
		if(icb.zpp_inner.int2.outer_i.get_castBody().get_userData().object == null) go2 = null; else go2 = js_Boot.__cast(icb.zpp_inner.int2.outer_i.get_castBody().get_userData().object , ozity_OzGameObject);
		if(cbTypeA != zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY && cbTypeB != zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY && (go1 == null || go2 == null || go1.dead || go2.dead)) return;
		listener(go1,go2);
	};
	var collisionListener = new nape_callbacks_InteractionListener(onGoing?(function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING = new nape_callbacks_CbEvent();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.CbEvent_ONGOING;
		return $r;
	}(this)):(function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN = new nape_callbacks_CbEvent();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.CbEvent_BEGIN;
		return $r;
	}(this)),it,cbTypeA,cbTypeB,colFunc);
	ozity_OzGameSystem.instance.world.zpp_inner.wrap_listeners.add(collisionListener);
};
ozity_OzPhysics.GetLastContactPosition = function() {
	return ozity_OzPhysics.LastCollisionArbiter.get_contacts().at(0).get_position();
};
ozity_OzPhysics.PutTileMapBounds = function(world,tileMap,top,right,bottom,left) {
	if(left == null) left = false;
	if(bottom == null) bottom = true;
	if(right == null) right = true;
	if(top == null) top = true;
	if(left) {
		var leftBox = new nape_shape_Polygon(nape_shape_Polygon.box(tileMap.tileSize * 2,(tileMap.allocRows + 4) * tileMap.tileSize));
		var body = new nape_phys_Body((function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
			return $r;
		}(this)),new nape_geom_Vec2(-1 * tileMap.tileSize + tileMap.offsetX,tileMap.allocRows * tileMap.tileSize + tileMap.offsetY - tileMap.allocRows * tileMap.tileSize / 2));
		leftBox.zpp_inner.immutable_midstep("Shape::body");
		if((leftBox.zpp_inner.body != null?leftBox.zpp_inner.body.outer:null) != body) {
			if(leftBox.zpp_inner.body != null) (leftBox.zpp_inner.body != null?leftBox.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(leftBox);
			if(body != null) body.zpp_inner.wrap_shapes.add(leftBox);
		}
		if(leftBox.zpp_inner.body != null) leftBox.zpp_inner.body.outer; else null;
		if(body.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
		body.zpp_inner.immutable_midstep("Body::space");
		if(body.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if((body.zpp_inner.space == null?null:body.zpp_inner.space.outer) != world) {
			if((body.zpp_inner.space == null?null:body.zpp_inner.space.outer) != null) body.zpp_inner.component.woken = false;
			if((body.zpp_inner.space == null?null:body.zpp_inner.space.outer) != null) (body.zpp_inner.space == null?null:body.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(body);
			if(world != null) world.zpp_inner.wrap_bodies.add(body);
		}
		if(body.zpp_inner.space == null) null; else body.zpp_inner.space.outer;
	}
	if(right) {
		var rightBox = new nape_shape_Polygon(nape_shape_Polygon.box(tileMap.tileSize * 2,(tileMap.allocRows + 4) * tileMap.tileSize));
		var body1 = new nape_phys_Body((function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
			return $r;
		}(this)),new nape_geom_Vec2((tileMap.allocCols + 1) * tileMap.tileSize + tileMap.offsetX,tileMap.allocRows * tileMap.tileSize + tileMap.offsetY - tileMap.allocRows * tileMap.tileSize / 2));
		rightBox.zpp_inner.immutable_midstep("Shape::body");
		if((rightBox.zpp_inner.body != null?rightBox.zpp_inner.body.outer:null) != body1) {
			if(rightBox.zpp_inner.body != null) (rightBox.zpp_inner.body != null?rightBox.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(rightBox);
			if(body1 != null) body1.zpp_inner.wrap_shapes.add(rightBox);
		}
		if(rightBox.zpp_inner.body != null) rightBox.zpp_inner.body.outer; else null;
		if(body1.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
		body1.zpp_inner.immutable_midstep("Body::space");
		if(body1.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if((body1.zpp_inner.space == null?null:body1.zpp_inner.space.outer) != world) {
			if((body1.zpp_inner.space == null?null:body1.zpp_inner.space.outer) != null) body1.zpp_inner.component.woken = false;
			if((body1.zpp_inner.space == null?null:body1.zpp_inner.space.outer) != null) (body1.zpp_inner.space == null?null:body1.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(body1);
			if(world != null) world.zpp_inner.wrap_bodies.add(body1);
		}
		if(body1.zpp_inner.space == null) null; else body1.zpp_inner.space.outer;
	}
	if(top) {
		var topBox = new nape_shape_Polygon(nape_shape_Polygon.box((tileMap.allocCols + 4) * tileMap.tileSize,tileMap.tileSize * 2));
		var body2 = new nape_phys_Body((function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
			return $r;
		}(this)),new nape_geom_Vec2(tileMap.allocCols * tileMap.tileSize + tileMap.offsetX - tileMap.allocCols * tileMap.tileSize / 2,-1 * tileMap.tileSize + tileMap.offsetY));
		topBox.zpp_inner.immutable_midstep("Shape::body");
		if((topBox.zpp_inner.body != null?topBox.zpp_inner.body.outer:null) != body2) {
			if(topBox.zpp_inner.body != null) (topBox.zpp_inner.body != null?topBox.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(topBox);
			if(body2 != null) body2.zpp_inner.wrap_shapes.add(topBox);
		}
		if(topBox.zpp_inner.body != null) topBox.zpp_inner.body.outer; else null;
		if(body2.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
		body2.zpp_inner.immutable_midstep("Body::space");
		if(body2.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if((body2.zpp_inner.space == null?null:body2.zpp_inner.space.outer) != world) {
			if((body2.zpp_inner.space == null?null:body2.zpp_inner.space.outer) != null) body2.zpp_inner.component.woken = false;
			if((body2.zpp_inner.space == null?null:body2.zpp_inner.space.outer) != null) (body2.zpp_inner.space == null?null:body2.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(body2);
			if(world != null) world.zpp_inner.wrap_bodies.add(body2);
		}
		if(body2.zpp_inner.space == null) null; else body2.zpp_inner.space.outer;
	}
	if(bottom) {
		var bottomBox = new nape_shape_Polygon(nape_shape_Polygon.box((tileMap.allocCols + 4) * tileMap.tileSize,tileMap.tileSize * 2));
		var body3 = new nape_phys_Body((function($this) {
			var $r;
			if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
				zpp_$nape_util_ZPP_$Flags.internal = true;
				zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
				zpp_$nape_util_ZPP_$Flags.internal = false;
			}
			$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
			return $r;
		}(this)),new nape_geom_Vec2(tileMap.allocCols * tileMap.tileSize + tileMap.offsetX - tileMap.allocCols * tileMap.tileSize / 2,(tileMap.allocRows + 1) * tileMap.tileSize + tileMap.offsetY));
		bottomBox.zpp_inner.immutable_midstep("Shape::body");
		if((bottomBox.zpp_inner.body != null?bottomBox.zpp_inner.body.outer:null) != body3) {
			if(bottomBox.zpp_inner.body != null) (bottomBox.zpp_inner.body != null?bottomBox.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(bottomBox);
			if(body3 != null) body3.zpp_inner.wrap_shapes.add(bottomBox);
		}
		if(bottomBox.zpp_inner.body != null) bottomBox.zpp_inner.body.outer; else null;
		if(body3.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
		body3.zpp_inner.immutable_midstep("Body::space");
		if(body3.zpp_inner.world) throw new js__$Boot_HaxeError("Error: Space::world is immutable");
		if((body3.zpp_inner.space == null?null:body3.zpp_inner.space.outer) != world) {
			if((body3.zpp_inner.space == null?null:body3.zpp_inner.space.outer) != null) body3.zpp_inner.component.woken = false;
			if((body3.zpp_inner.space == null?null:body3.zpp_inner.space.outer) != null) (body3.zpp_inner.space == null?null:body3.zpp_inner.space.outer).zpp_inner.wrap_bodies.remove(body3);
			if(world != null) world.zpp_inner.wrap_bodies.add(body3);
		}
		if(body3.zpp_inner.space == null) null; else body3.zpp_inner.space.outer;
	}
};
ozity_OzPhysics.ParseMaterial = function(xmlMat) {
	var mat = null;
	if(xmlMat != null) {
		var strVar = null;
		mat = new nape_phys_Material();
		strVar = xmlMat.get("elasticity");
		if(strVar != null) mat.set_elasticity(parseFloat(strVar));
		strVar = xmlMat.get("dynamicFriction");
		if(strVar != null) mat.set_dynamicFriction(parseFloat(strVar));
		strVar = xmlMat.get("staticFriction");
		if(strVar != null) mat.set_staticFriction(parseFloat(strVar));
		strVar = xmlMat.get("density");
		if(strVar != null) mat.set_density(parseFloat(strVar));
		strVar = xmlMat.get("rollingFriction");
		if(strVar != null) mat.set_rollingFriction(parseFloat(strVar));
	}
	return mat;
};
ozity_OzPhysics.GetObjectAtPoint = function(world,px,py,at,ignoreStatic,ignoreSensor) {
	if(ignoreSensor == null) ignoreSensor = true;
	if(ignoreStatic == null) ignoreStatic = true;
	if(at == null) at = 0;
	ozity_OzPhysics.pointVec.set_x(px);
	ozity_OzPhysics.pointVec.set_y(py);
	var bodies = world.bodiesUnderPoint(ozity_OzPhysics.pointVec);
	var index = 0;
	var _g;
	bodies.zpp_inner.valmod();
	_g = nape_phys_BodyIterator.get(bodies);
	while(_g.hasNext()) {
		var bd;
		_g.zpp_critical = false;
		bd = _g.zpp_inner.at(_g.zpp_i++);
		if(bd.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && ignoreStatic) continue;
		if(bd.zpp_inner.wrap_shapes.at(0).get_sensorEnabled() && ignoreSensor) continue;
		var obj;
		obj = js_Boot.__cast(((function($this) {
			var $r;
			if(bd.zpp_inner_i.userData == null) bd.zpp_inner_i.userData = { };
			$r = bd.zpp_inner_i.userData;
			return $r;
		}(this))).object , ozity_OzGameObject);
		if(obj != null) {
			if(at == index) return obj; else index++;
		}
	}
	return null;
};
ozity_OzPhysics.__super__ = ozity_OzComponent;
ozity_OzPhysics.prototype = $extend(ozity_OzComponent.prototype,{
	get_x: function() {
		return this.body.get_position().get_x();
	}
	,get_y: function() {
		return this.body.get_position().get_y();
	}
	,get_degrees: function() {
		return this.body.zpp_inner.rot * 180 / Math.PI;
	}
	,set_x: function(newX) {
		return this.body.get_position().set_x(newX);
	}
	,set_y: function(newY) {
		return this.body.get_position().set_y(newY);
	}
	,set_degrees: function(newDegs) {
		return this.body.set_rotation(newDegs / 180.0 * Math.PI);
	}
	,FillBounds: function(Vec4) {
		this.gameObject.geometry.getMinMaxXY(this.body.get_position().get_x(),this.body.get_position().get_y(),this.body.zpp_inner.rot * 180 / Math.PI,Vec4);
		if(this.comOffset != null) {
			Vec4[0] -= this.comOffset.get_x();
			Vec4[1] -= this.comOffset.get_y();
			Vec4[2] -= this.comOffset.get_x();
			Vec4[3] -= this.comOffset.get_y();
		}
		return Vec4;
	}
	,getXWithCom: function() {
		var ret = this.body.get_position().get_x();
		if(this.comOffset != null) ret -= this.comOffset.get_x();
		return ret;
	}
	,getYWithCom: function() {
		var ret = this.body.get_position().get_y();
		if(this.comOffset != null) ret -= this.comOffset.get_y();
		return ret;
	}
	,pause: function() {
		if(this.body != null) this.body.set_space(null);
	}
	,resume: function() {
		if(this.body != null) this.body.set_space(this.gameObject.gameSystem.world);
	}
	,init: function() {
		var graphics = this.gameObject.graphics;
		if(graphics != null && graphics.isTile) {
			var changeTileGeo = false;
			var tileInfo = ozity_OzGraphics.GetTileInfo(graphics.compPrefab);
			var tileFrame = Std.parseInt(this.gameObject.objLevel.get("tileFrame"));
			if(dev_DevUtil.IndexOfInt(tileInfo.tileDown45,tileFrame) >= 0 || dev_DevUtil.IndexOfInt(tileInfo.tileUp45,tileFrame) >= 0 || dev_DevUtil.IndexOfInt(tileInfo.tileDown23,tileFrame) >= 0 || dev_DevUtil.IndexOfInt(tileInfo.tileUp23,tileFrame) >= 0) changeTileGeo = true;
			if(changeTileGeo) {
				var geometry1 = this.gameObject.geometry;
				var tileSize = Std.parseInt("240");
				var rectWidth = Math.round(geometry1.halfWidth * 2);
				var rectHeight = Math.round(geometry1.halfHeight * 2);
				var H = Math.round(rectHeight / tileSize);
				var W = Math.round(rectWidth / tileSize);
				var minSide = Std["int"](Math.min(H,W));
				var polyX = [];
				var polyY = [];
				if(dev_DevUtil.IndexOfInt(tileInfo.tileDown45,tileFrame) >= 0) {
					var offSetX = rectWidth - minSide * tileSize;
					polyX[0] = offSetX - geometry1.halfWidth;
					polyY[0] = 0 - geometry1.halfHeight;
					polyX[1] = offSetX + minSide * tileSize - geometry1.halfWidth;
					polyY[1] = minSide * tileSize - geometry1.halfHeight;
					polyX[2] = offSetX - geometry1.halfWidth;
					polyY[2] = minSide * tileSize - geometry1.halfHeight;
				} else if(dev_DevUtil.IndexOfInt(tileInfo.tileUp45,tileFrame) >= 0) {
					polyX[0] = minSide * tileSize - geometry1.halfWidth;
					polyY[0] = 0 - geometry1.halfHeight;
					polyX[1] = minSide * tileSize - geometry1.halfWidth;
					polyY[1] = minSide * tileSize - geometry1.halfHeight;
					polyX[2] = -geometry1.halfWidth;
					polyY[2] = minSide * tileSize - geometry1.halfHeight;
				} else if(dev_DevUtil.IndexOfInt(tileInfo.tileDown23,tileFrame) >= 0) {
					minSide = Std["int"](Math.min(H * 2,W));
					var offSetX1 = rectWidth - minSide * tileSize;
					var triHeight = minSide * tileSize / 2;
					var addY;
					if(minSide % 2 > 0) addY = tileSize / 2; else addY = 0;
					polyX[0] = offSetX1 - geometry1.halfWidth;
					polyY[0] = 0 - geometry1.halfHeight + addY;
					polyX[1] = offSetX1 + minSide * tileSize - geometry1.halfWidth;
					polyY[1] = triHeight - geometry1.halfHeight + addY;
					polyX[2] = offSetX1 - geometry1.halfWidth;
					polyY[2] = triHeight - geometry1.halfHeight + addY;
				} else {
					minSide = Std["int"](Math.min(H * 2,W));
					var offSetX2 = W - minSide * tileSize;
					var triHeight1 = minSide * tileSize / 2;
					var addY1;
					if(minSide % 2 > 0) addY1 = tileSize / 2; else addY1 = 0;
					polyX[0] = minSide * tileSize - geometry1.halfWidth;
					polyY[0] = 0 - geometry1.halfHeight + addY1;
					polyX[1] = minSide * tileSize - geometry1.halfWidth;
					polyY[1] = triHeight1 - geometry1.halfHeight + addY1;
					polyX[2] = -geometry1.halfWidth;
					polyY[2] = triHeight1 - geometry1.halfHeight + addY1;
				}
				var oldHalfWidth = geometry1.halfWidth;
				var oldHalfHeight = geometry1.halfHeight;
				geometry1._init(3,0,0,0,0,0,polyX,polyY,false);
				geometry1.halfWidth = oldHalfWidth;
				geometry1.halfHeight = oldHalfHeight;
			}
		}
		var transform = this.gameObject.transform;
		this.world = this.gameObject.gameSystem.world;
		var geometry = this.gameObject.geometry;
		if(this.compPrefab != null && this.compPrefab.get_nodeName() == "body" && this.compPrefab.get("init") != "false") {
			if(this.body == null) this.body = new nape_phys_Body(this.compPrefab.get("type") == "static"?(function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
				return $r;
			}(this)):this.compPrefab.get("type") == "dynamic"?(function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC;
				return $r;
			}(this)):(function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC = new nape_phys_BodyType();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC;
				return $r;
			}(this)));
			var materialXml = oz_Xu.cwav(oz_Xu.fc(Globals.definitionsXML,"materials"),"material","name",this.compPrefab.get("material"));
			this.material = ozity_OzPhysics.ParseMaterial(materialXml);
			geometry.makePhysics(this.body,this.material);
			if(this.compPrefab.get("sensor") == "true") {
				var _g = this.body.zpp_inner.wrap_shapes.iterator();
				while(_g.hasNext()) {
					var shape;
					_g.zpp_critical = false;
					shape = _g.zpp_inner.at(_g.zpp_i++);
					shape.zpp_inner.immutable_midstep("Shape::sensorEnabled");
					shape.zpp_inner.sensorEnabled = true;
					shape.zpp_inner.wake();
					shape.zpp_inner.sensorEnabled;
				}
			}
			var rotDegs = 0;
			if(this.gameObject.transform != null) rotDegs = this.gameObject.transform.degrees;
			if(this.body.get_localCOM().get_x() > 0.0001 || this.body.get_localCOM().get_x() < -0.0001 || this.body.get_localCOM().get_y() > 0.0001 || this.body.get_localCOM().get_y() < -0.001) {
				this.shiftCOM = true;
				this.comOffset = this.body.get_localCOM().copy(null);
				this.body.align();
			}
			this.setBodyFromTransform();
			this.body.set_space(this.world);
			this.body.get_userData().object = this.gameObject;
			this.setFilter(this.compPrefab.get("filter"));
			if(this.body.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) this.body.set_group(ozity_OzPhysics.StaticGroup);
		}
		var colTypesStr = this.compPrefab.get("colTypes");
		if(colTypesStr != null) {
			var arrColTypeStr = dev_DevUtil.CommaStringToArray(colTypesStr);
			var _g1 = 0;
			while(_g1 < arrColTypeStr.length) {
				var cstr = arrColTypeStr[_g1];
				++_g1;
				var ct = Type.createEnum(ozity_ColType,cstr,null);
				this.body.get_cbTypes().add(ozity_OzPhysics.GetCBTypeByColType(ct));
			}
		}
	}
	,addShapeFromGeometry: function(geo,strFilter) {
		var materialXml = oz_Xu.cwav(oz_Xu.fc(Globals.definitionsXML,"materials"),"material","name",this.compPrefab.get("material"));
		this.material = ozity_OzPhysics.ParseMaterial(materialXml);
		var filter = null;
		if(strFilter != null) filter = ozity_OzPhysics.getFilter(strFilter);
		geo.makePhysics(this.body,this.material,filter);
		if(this.compPrefab.get("sensor") == "true") {
			var _g = this.body.zpp_inner.wrap_shapes.iterator();
			while(_g.hasNext()) {
				var shape;
				_g.zpp_critical = false;
				shape = _g.zpp_inner.at(_g.zpp_i++);
				shape.zpp_inner.immutable_midstep("Shape::sensorEnabled");
				shape.zpp_inner.sensorEnabled = true;
				shape.zpp_inner.wake();
				shape.zpp_inner.sensorEnabled;
			}
		}
	}
	,setFilter: function(strFilter) {
		var filter = ozity_OzPhysics.getFilter(strFilter);
		var _g1 = 0;
		var _g = this.body.zpp_inner.wrap_shapes.get_length();
		while(_g1 < _g) {
			var i = _g1++;
			this.body.zpp_inner.wrap_shapes.at(i).set_filter(filter);
		}
	}
	,setBodyFromTransform: function() {
		var transform = this.gameObject.transform;
		if(this.comOffset != null) {
			dev_DevUtil.rotateAroundPoint(this.comOffset.get_x(),this.comOffset.get_y(),transform.degrees,0,0,ozity_OzPhysics.RotTX);
			this.body.get_position().setxy(transform.x + ozity_OzPhysics.RotTX[0],transform.y + ozity_OzPhysics.RotTX[1]);
		} else this.body.get_position().setxy(transform.x,transform.y);
		this.body.set_rotation(transform.degrees * Math.PI / 180);
	}
	,postUpdate: function() {
	}
	,getHighestVelocitySquared: function(gameObjects) {
		var highestVelSquared = 0;
		var _g = 0;
		while(_g < gameObjects.length) {
			var a = gameObjects[_g];
			++_g;
			if(a.physics == null || a.physics.body == null || a.dead) continue;
			var localVel = a.physics.body.get_velocity().get_x() * a.physics.body.get_velocity().get_x() + a.physics.body.get_velocity().get_y() * a.physics.body.get_velocity().get_y();
			if(highestVelSquared < localVel) highestVelSquared = localVel;
		}
		return highestVelSquared;
	}
	,hitsBelow: function() {
		var _g = this.body.get_arbiters().iterator();
		while(_g.hasNext()) {
			var a;
			_g.zpp_critical = false;
			a = _g.zpp_inner.at(_g.zpp_i++);
			if((a.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL?a.zpp_inner.colarb.outer_zn:null) != null && (a.zpp_inner.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL?a.zpp_inner.colarb.outer_zn:null).get_contacts().at(0).get_position().get_y() - this.body.get_position().get_y() > this.gameObject.geometry.getHeight() / 5) return true;
		}
		return false;
	}
	,kinematicChangePosition: function(newX,newY) {
		var deltaX = newX - this.body.get_position().get_x();
		var deltaY = newY - this.body.get_position().get_y();
		var deltaT = this.gameObject.gameSystem.deltaTime;
		this.body.get_velocity().setxy(deltaX / deltaT,deltaY / deltaT);
	}
	,destroyShapes: function() {
		var _g = this.body.zpp_inner.wrap_shapes.iterator();
		while(_g.hasNext()) {
			var sh;
			_g.zpp_critical = false;
			sh = _g.zpp_inner.at(_g.zpp_i++);
			sh.zpp_inner.immutable_midstep("Shape::body");
			if((sh.zpp_inner.body != null?sh.zpp_inner.body.outer:null) != null) {
				if(sh.zpp_inner.body != null) (sh.zpp_inner.body != null?sh.zpp_inner.body.outer:null).zpp_inner.wrap_shapes.remove(sh);
			}
			if(sh.zpp_inner.body != null) sh.zpp_inner.body.outer; else null;
		}
	}
	,destroyBody: function() {
		if(this.body != null) {
			while(this.body.get_constraints().get_length() > 0) {
				var cs = this.body.get_constraints().at(0);
				if((function($this) {
					var $r;
					if(cs.zpp_inner.userData == null) cs.zpp_inner.userData = { };
					$r = cs.zpp_inner.userData;
					return $r;
				}(this)) != null) {
					var csComp;
					csComp = js_Boot.__cast(((function($this) {
						var $r;
						if(cs.zpp_inner.userData == null) cs.zpp_inner.userData = { };
						$r = cs.zpp_inner.userData;
						return $r;
					}(this))).object , ozity_OzComponent);
					if(csComp != null) csComp.destroy();
				}
				if(cs.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Constraint belonging to" + " a Compound, only the root Compound space can be set");
				if((cs.zpp_inner.space == null?null:cs.zpp_inner.space.outer) != null) {
					if(cs.zpp_inner.component != null) cs.zpp_inner.component.woken = false;
					cs.zpp_inner.clearcache();
					if(cs.zpp_inner.space != null) cs.zpp_inner.space.outer.zpp_inner.wrap_constraints.remove(cs);
					cs.zpp_inner.space = null;
				}
				if(cs.zpp_inner.space == null) null; else cs.zpp_inner.space.outer;
			}
			this.body.get_userData().object = null;
			if(this.body.get_space() != null) this.body.get_space().get_bodies().remove(this.body);
			this.body = null;
		}
	}
	,destroy: function() {
		this.destroyBody();
	}
	,__class__: ozity_OzPhysics
});
var ozity_OzPulleyJoint = function(gameObject,compPrefab,compLevel) {
	this.cY = [];
	this.cX = [];
	this.anchors = [];
	this.lineJoint2 = null;
	this.lineJoint1 = null;
	this.pulleyJoint = null;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzPulleyJoint"] = ozity_OzPulleyJoint;
ozity_OzPulleyJoint.__name__ = ["ozity","OzPulleyJoint"];
ozity_OzPulleyJoint.__super__ = ozity_OzComponent;
ozity_OzPulleyJoint.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		var geometry = this.gameObject.geometry;
		var transform = this.gameObject.transform;
		var world = this.gameObject.gameSystem.world;
		if(geometry.type == 7) {
			geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.vx[0],geometry.vy[0],ozity_OzPulleyJoint.tempVec);
			var gpx1 = ozity_OzPulleyJoint.tempVec[0];
			var gpy1 = ozity_OzPulleyJoint.tempVec[1];
			geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.vx[3],geometry.vy[3],ozity_OzPulleyJoint.tempVec);
			var gpx2 = ozity_OzPulleyJoint.tempVec[0];
			var gpy2 = ozity_OzPulleyJoint.tempVec[1];
			var ozo1 = ozity_OzPhysics.GetObjectAtPoint(world,gpx1,gpy1,0,false);
			var ozo2 = ozity_OzPhysics.GetObjectAtPoint(world,gpx2,gpy2,0,false);
			if(ozo1 == null && ozo2 == null || ozo1 == ozo2) this.gameObject.dead = true; else {
				var body1;
				if(ozo1 == null) body1 = world.zpp_inner.__static; else body1 = ozo1.physics.body;
				var body2;
				if(ozo2 == null) body2 = world.zpp_inner.__static; else body2 = ozo2.physics.body;
				if(!(body1.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) || !(body2.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) this.gameObject.dead = true; else {
					geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.vx[0],geometry.vy[0],ozity_OzPulleyJoint.tempVec);
					this.anchors[0] = new nape_geom_Vec2(ozity_OzPulleyJoint.tempVec[0],ozity_OzPulleyJoint.tempVec[1]);
					geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.vx[1],geometry.vy[1],ozity_OzPulleyJoint.tempVec);
					this.anchors[1] = new nape_geom_Vec2(ozity_OzPulleyJoint.tempVec[0],ozity_OzPulleyJoint.tempVec[1]);
					geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.vx[2],geometry.vy[2],ozity_OzPulleyJoint.tempVec);
					this.anchors[2] = new nape_geom_Vec2(ozity_OzPulleyJoint.tempVec[0],ozity_OzPulleyJoint.tempVec[1]);
					geometry.localToGlobal(transform.x,transform.y,transform.degrees,geometry.vx[3],geometry.vy[3],ozity_OzPulleyJoint.tempVec);
					this.anchors[3] = new nape_geom_Vec2(ozity_OzPulleyJoint.tempVec[0],ozity_OzPulleyJoint.tempVec[1]);
					var distance = dev_DevUtil.DistancePoints(geometry.vx[0],geometry.vy[0],geometry.vx[1],geometry.vy[1]);
					distance += dev_DevUtil.DistancePoints(geometry.vx[2],geometry.vy[2],geometry.vx[3],geometry.vy[3]);
					this.pulleyJoint = new nape_constraint_PulleyJoint(body1,world.zpp_inner.__static,world.zpp_inner.__static,body2,body1.worldPointToLocal(this.anchors[0]),this.anchors[1],this.anchors[2],body2.worldPointToLocal(this.anchors[3]),distance,distance);
					this.pulleyJoint.set_space(world);
					body1.zpp_inner.immutable_midstep("Body::" + "false");
					if(!body1.zpp_inner.norotate != false) {
						body1.zpp_inner.norotate = true;
						body1.zpp_inner.invalidate_inertia();
					}
					!body1.zpp_inner.norotate;
					body2.zpp_inner.immutable_midstep("Body::" + "false");
					if(!body2.zpp_inner.norotate != false) {
						body2.zpp_inner.norotate = true;
						body2.zpp_inner.invalidate_inertia();
					}
					!body2.zpp_inner.norotate;
					this.lineJoint1 = new nape_constraint_LineJoint(body1,world.zpp_inner.__static,body1.worldPointToLocal(this.anchors[0]),this.anchors[1],new nape_geom_Vec2(0,1),-Infinity,Infinity);
					this.lineJoint1.set_space(world);
					this.lineJoint1.get_userData().object = this;
					this.lineJoint2 = new nape_constraint_LineJoint(world.zpp_inner.__static,body2,this.anchors[2],body2.worldPointToLocal(this.anchors[3]),new nape_geom_Vec2(0,1),-Infinity,Infinity);
					this.lineJoint2.set_space(world);
					this.lineJoint2.get_userData().object = this;
				}
			}
		} else throw new js__$Boot_HaxeError(new openfl_errors_Error("PULLEY JOINT ONLY WORKS WITH PATHS"));
		if(this.pulleyJoint != null) this.pulleyJoint.get_userData().object = this;
	}
	,postUpdate: function() {
		var sprite = this.gameObject.graphics.sprite;
		if(this.pulleyJoint != null) {
			var shouldMove = false;
			if(this.pulleyJoint.get_body1().get_arbiters().get_length() > 0) {
				var _g = this.pulleyJoint.get_body1().get_arbiters().iterator();
				while(_g.hasNext()) {
					var a;
					_g.zpp_critical = false;
					a = _g.zpp_inner.at(_g.zpp_i++);
					if(!((function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.b2.outer:a.zpp_inner.b1.outer;
						return $r;
					}(this))).isStatic() && !((function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.b2.outer:a.zpp_inner.b1.outer;
						return $r;
					}(this))).isKinematic() && !((function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.b1.outer:a.zpp_inner.b2.outer;
						return $r;
					}(this))).isStatic() && !((function($this) {
						var $r;
						if(!a.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a.zpp_inner.ws1.id > a.zpp_inner.ws2.id?a.zpp_inner.b1.outer:a.zpp_inner.b2.outer;
						return $r;
					}(this))).isKinematic()) {
						shouldMove = true;
						break;
					}
				}
			}
			if(this.pulleyJoint.get_body4().get_arbiters().get_length() > 0) {
				var _g1 = this.pulleyJoint.get_body4().get_arbiters().iterator();
				while(_g1.hasNext()) {
					var a1;
					_g1.zpp_critical = false;
					a1 = _g1.zpp_inner.at(_g1.zpp_i++);
					if(!((function($this) {
						var $r;
						if(!a1.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a1.zpp_inner.ws1.id > a1.zpp_inner.ws2.id?a1.zpp_inner.b2.outer:a1.zpp_inner.b1.outer;
						return $r;
					}(this))).isStatic() && !((function($this) {
						var $r;
						if(!a1.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a1.zpp_inner.ws1.id > a1.zpp_inner.ws2.id?a1.zpp_inner.b2.outer:a1.zpp_inner.b1.outer;
						return $r;
					}(this))).isKinematic() && !((function($this) {
						var $r;
						if(!a1.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a1.zpp_inner.ws1.id > a1.zpp_inner.ws2.id?a1.zpp_inner.b1.outer:a1.zpp_inner.b2.outer;
						return $r;
					}(this))).isStatic() && !((function($this) {
						var $r;
						if(!a1.zpp_inner.active) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
						$r = a1.zpp_inner.ws1.id > a1.zpp_inner.ws2.id?a1.zpp_inner.b1.outer:a1.zpp_inner.b2.outer;
						return $r;
					}(this))).isKinematic()) {
						shouldMove = true;
						break;
					}
				}
			}
			if(!shouldMove) {
				this.pulleyJoint.get_body1().get_velocity().setxy(0,0);
				this.pulleyJoint.get_body4().get_velocity().setxy(0,0);
			}
		}
		if(sprite != null && this.pulleyJoint != null) {
			this.cX[0] = this.pulleyJoint.get_body1().localPointToWorld(this.pulleyJoint.get_anchor1()).get_x();
			this.cY[0] = this.pulleyJoint.get_body1().localPointToWorld(this.pulleyJoint.get_anchor1()).get_y();
			this.cX[1] = this.pulleyJoint.get_body2().localPointToWorld(this.pulleyJoint.get_anchor2()).get_x();
			this.cY[1] = this.pulleyJoint.get_body2().localPointToWorld(this.pulleyJoint.get_anchor2()).get_y();
			this.cX[2] = this.pulleyJoint.get_body3().localPointToWorld(this.pulleyJoint.get_anchor3()).get_x();
			this.cY[2] = this.pulleyJoint.get_body3().localPointToWorld(this.pulleyJoint.get_anchor3()).get_y();
			this.cX[3] = this.pulleyJoint.get_body4().localPointToWorld(this.pulleyJoint.get_anchor4()).get_x();
			this.cY[3] = this.pulleyJoint.get_body4().localPointToWorld(this.pulleyJoint.get_anchor4()).get_y();
			var _g11 = 0;
			var _g2 = this.cX.length;
			while(_g11 < _g2) {
				var i = _g11++;
				this.cX[i] -= sprite.get_x();
			}
			var _g12 = 0;
			var _g3 = this.cY.length;
			while(_g12 < _g3) {
				var i1 = _g12++;
				this.cY[i1] -= sprite.get_y();
			}
			sprite.adjustPath(ozity_OzGraphics.GetBitmapData(this.gameObject.graphics.spriteMCName),this.cX,this.cY);
		}
	}
	,destroy: function() {
		if(this.pulleyJoint != null) {
			this.pulleyJoint.get_userData().object = null;
			this.pulleyJoint.set_space(null);
			this.pulleyJoint.set_body1(null);
			this.pulleyJoint.set_body2(null);
			this.pulleyJoint.set_body3(null);
			this.pulleyJoint.set_body4(null);
			this.pulleyJoint = null;
		}
		if(this.lineJoint1 != null) {
			this.lineJoint1.get_userData().object = null;
			this.lineJoint1.set_space(null);
			this.lineJoint1.set_body1(null);
			this.lineJoint1.set_body2(null);
			this.lineJoint1 = null;
		}
		if(this.lineJoint2 != null) {
			this.lineJoint2.get_userData().object = null;
			this.lineJoint2.set_space(null);
			this.lineJoint2.set_body1(null);
			this.lineJoint2.set_body2(null);
			this.lineJoint2 = null;
		}
		this.gameObject.dead = true;
	}
	,__class__: ozity_OzPulleyJoint
});
var ozity_OzRevoluteJoint = function(gameObject,compPrefab,compLevel) {
	this.motorJoint = null;
	this.pivotJoint = null;
	this.isVisible = true;
	this.rotation = 0;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("rotation") != null) this.rotation = Std.parseFloat(compLevel.get("rotation"));
	if(compLevel.get("isVisible") != null) this.isVisible = compLevel.get("isVisible") == "true";
};
$hxClasses["ozity.OzRevoluteJoint"] = ozity_OzRevoluteJoint;
ozity_OzRevoluteJoint.__name__ = ["ozity","OzRevoluteJoint"];
ozity_OzRevoluteJoint.__super__ = ozity_OzComponent;
ozity_OzRevoluteJoint.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		var geometry = this.gameObject.geometry;
		var transform = this.gameObject.transform;
		var world = this.gameObject.gameSystem.world;
		var ozo1 = ozity_OzPhysics.GetObjectAtPoint(world,transform.x,transform.y,0,false);
		if(ozo1 == null) this.gameObject.dead = true; else {
			var ozo2 = ozity_OzPhysics.GetObjectAtPoint(world,transform.x,transform.y,1,false);
			if(ozo2 == null) {
				if(!(ozo1.physics.body.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) this.gameObject.dead = true; else {
					var globalAnchor = new nape_geom_Vec2(transform.x,transform.y);
					this.pivotJoint = new nape_constraint_PivotJoint(ozo1.physics.body,world.zpp_inner.__static,ozo1.physics.body.worldPointToLocal(globalAnchor),world.zpp_inner.__static.worldPointToLocal(globalAnchor));
					this.pivotJoint.set_space(world);
					this.pivotJoint.set_ignore(true);
					if(this.rotation < -0.001 || this.rotation > 0.001) {
						haxe_Log.trace("Moetoerhead",{ fileName : "OzRevoluteJoint.hx", lineNumber : 41, className : "ozity.OzRevoluteJoint", methodName : "postInit"});
						this.motorJoint = new nape_constraint_MotorJoint(ozo1.physics.body,world.zpp_inner.__static,this.rotation);
						this.motorJoint.set_space(world);
					}
				}
			} else if(!(ozo1.physics.body.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(ozo2.physics.body.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) this.gameObject.dead = true; else {
				var globalAnchor1 = new nape_geom_Vec2(transform.x,transform.y);
				this.pivotJoint = new nape_constraint_PivotJoint(ozo1.physics.body,ozo2.physics.body,ozo1.physics.body.worldPointToLocal(globalAnchor1),ozo2.physics.body.worldPointToLocal(globalAnchor1));
				this.pivotJoint.set_space(world);
				this.pivotJoint.set_ignore(true);
				haxe_Log.trace("PJ info",{ fileName : "OzRevoluteJoint.hx", lineNumber : 56, className : "ozity.OzRevoluteJoint", methodName : "postInit", customParams : [this.pivotJoint.zpp_inner.stiff,this.pivotJoint.zpp_inner.maxForce,this.pivotJoint.zpp_inner.ignore]});
				if(this.rotation < -0.001 || this.rotation > 0.001) {
					haxe_Log.trace("Moetoerhead - Rolling Go!",{ fileName : "OzRevoluteJoint.hx", lineNumber : 58, className : "ozity.OzRevoluteJoint", methodName : "postInit"});
					this.motorJoint = new nape_constraint_MotorJoint(ozo1.physics.body,ozo2.physics.body,this.rotation);
					this.motorJoint.set_space(world);
				}
			}
		}
		if(this.pivotJoint != null) this.pivotJoint.get_userData().object = this;
		if(this.motorJoint != null) this.motorJoint.get_userData().object = this;
		if(this.rotation > 0) this.gameObject.graphics.sprite.gotoAndStop(2); else if(this.rotation < 0) this.gameObject.graphics.sprite.gotoAndStop(3); else this.gameObject.graphics.sprite.gotoAndStop(1);
		this.gameObject.graphics.sprite.set_visible(this.isVisible);
	}
	,postUpdate: function() {
		var sprite = this.gameObject.graphics.sprite;
		if(sprite != null && this.pivotJoint != null) {
			sprite.set_x(this.pivotJoint.get_body1().localPointToWorld(this.pivotJoint.get_anchor1()).get_x());
			sprite.set_y(this.pivotJoint.get_body1().localPointToWorld(this.pivotJoint.get_anchor1()).get_y());
		}
	}
	,destroy: function() {
		if(this.pivotJoint != null) {
			this.pivotJoint.get_userData().object = null;
			this.pivotJoint.set_space(null);
			this.pivotJoint.set_body1(null);
			this.pivotJoint.set_body2(null);
			this.pivotJoint = null;
		}
		if(this.motorJoint != null) {
			this.motorJoint.get_userData().object = null;
			this.motorJoint.set_space(null);
			this.motorJoint.set_body1(null);
			this.motorJoint.set_body2(null);
			this.motorJoint = null;
		}
		this.gameObject.dead = true;
	}
	,__class__: ozity_OzRevoluteJoint
});
var ozity_OzRoad = function(gameObject,compPrefab,compLevel) {
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzRoad"] = ozity_OzRoad;
ozity_OzRoad.__name__ = ["ozity","OzRoad"];
ozity_OzRoad.__super__ = ozity_OzComponent;
ozity_OzRoad.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		var body = this.gameObject.physics.body;
		body.zpp_inner.disableCCD = false;
		body.zpp_inner.disableCCD;
		body.zpp_inner.bulletEnabled = true;
		body.zpp_inner.bulletEnabled;
	}
	,__class__: ozity_OzRoad
});
var ozity_OzSpikeWheel = function(gameObject,compPrefab,compLevel) {
	this.pathFollower = null;
	this.speed = 100;
	this.reverse = true;
	this.loop = false;
	this.path = null;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
	if(compLevel.get("loop") != null) this.loop = compLevel.get("loop") == "true";
	if(compLevel.get("reverse") != null) this.reverse = compLevel.get("reverse") == "true";
	if(compLevel.get("speed") != null) this.speed = Std.parseFloat(compLevel.get("speed"));
};
$hxClasses["ozity.OzSpikeWheel"] = ozity_OzSpikeWheel;
ozity_OzSpikeWheel.__name__ = ["ozity","OzSpikeWheel"];
ozity_OzSpikeWheel.__super__ = ozity_OzComponent;
ozity_OzSpikeWheel.prototype = $extend(ozity_OzComponent.prototype,{
	postInit: function() {
		this.pathFollower = new ozity_OzPathFollower(this.path,this.gameObject,this.speed,this.loop,this.reverse);
		this.gameObject.physics.body.set_angularVel(4);
	}
	,update: function() {
		this.pathFollower.update();
	}
	,init: function() {
		if(this.compLevel.get("path") != null) this.path = this.gameObject.gameSystem.getGameObjectById(this.compLevel.get("path"));
	}
	,__class__: ozity_OzSpikeWheel
});
var ozity_OzTileObject = function(gameObject,compPrefab,compLevel) {
	this.aJ = [];
	this.aI = [];
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzTileObject"] = ozity_OzTileObject;
ozity_OzTileObject.__name__ = ["ozity","OzTileObject"];
ozity_OzTileObject.__super__ = ozity_OzComponent;
ozity_OzTileObject.prototype = $extend(ozity_OzComponent.prototype,{
	init: function() {
		this.tileMap = this.gameObject.gameSystem.tileMap;
	}
	,touch: function(go,i,j) {
	}
	,hitBelow: function(go,i,j) {
	}
	,hitAbove: function(go,i,j) {
	}
	,getId: function(i,j) {
		var _g1 = 0;
		var _g = this.aI.length;
		while(_g1 < _g) {
			var k = _g1++;
			if(this.aI[k] == i && this.aJ[k] == j) return k;
		}
		return -1;
	}
	,__class__: ozity_OzTileObject
});
var ozity_OzTransform = function(gameObject,compLevel) {
	this.degrees = 0;
	ozity_OzComponent.call(this,gameObject,null,compLevel);
	if(compLevel != null) {
		this.x = Std.parseFloat(compLevel.get("x"));
		this.y = Std.parseFloat(compLevel.get("y"));
		this.degrees = Std.parseFloat(compLevel.get("rot"));
	}
};
$hxClasses["ozity.OzTransform"] = ozity_OzTransform;
ozity_OzTransform.__name__ = ["ozity","OzTransform"];
ozity_OzTransform.__super__ = ozity_OzComponent;
ozity_OzTransform.prototype = $extend(ozity_OzComponent.prototype,{
	fromParent: function(parent) {
		dev_DevUtil.rotateAroundPoint(parent.x + this.x,parent.y + this.y,parent.degrees,parent.x,parent.y,ozity_OzTransform.TempVec);
		this.x = ozity_OzTransform.TempVec[0];
		this.y = ozity_OzTransform.TempVec[1];
		this.degrees += parent.degrees;
	}
	,blabla: function() {
		haxe_Log.trace("blabla",{ fileName : "OzTransform.hx", lineNumber : 30, className : "ozity.OzTransform", methodName : "blabla"});
	}
	,__class__: ozity_OzTransform
});
var ozity_OzTrigger = function(gameObject,compPrefab,compLevel) {
	this.toTrigger = null;
	ozity_OzComponent.call(this,gameObject,compPrefab,compLevel);
};
$hxClasses["ozity.OzTrigger"] = ozity_OzTrigger;
ozity_OzTrigger.__name__ = ["ozity","OzTrigger"];
ozity_OzTrigger.__super__ = ozity_OzComponent;
ozity_OzTrigger.prototype = $extend(ozity_OzComponent.prototype,{
	init: function() {
		ozity_OzComponent.prototype.init.call(this);
		this.toTrigger = [];
	}
	,addToTrigger: function(a) {
		this.toTrigger.push(a);
	}
	,trigger: function() {
		var _g = 0;
		var _g1 = this.toTrigger;
		while(_g < _g1.length) {
			var a = _g1[_g];
			++_g;
			a.directMessage(ozity_Message.TRIGGER);
		}
	}
	,__class__: ozity_OzTrigger
});
var platforms_PlatformHTML5 = function() { };
$hxClasses["platforms.PlatformHTML5"] = platforms_PlatformHTML5;
platforms_PlatformHTML5.__name__ = ["platforms","PlatformHTML5"];
platforms_PlatformHTML5.invalidRect = function() {
	return platforms_PlatformHTML5.resizeW != platforms_PlatformHTML5.getWidth() || platforms_PlatformHTML5.resizeH != platforms_PlatformHTML5.getHeight();
};
platforms_PlatformHTML5.getWidth = function() {
	return window.innerWidth;
};
platforms_PlatformHTML5.getHeight = function() {
	return window.innerHeight;
};
platforms_PlatformHTML5.resize = function() {
	var browserWidth = window.innerWidth;
	var browserHeight = window.innerHeight;
	platforms_PlatformHTML5.resizeW = browserWidth;
	platforms_PlatformHTML5.resizeH = browserHeight;
	var newWidth = browserWidth;
	var newHeight = browserHeight;
	var newWidthToHeight = newWidth / newHeight;
	platforms_PlatformHTML5.offsetX = platforms_PlatformHTML5.offsetY = 0;
	var scaleRatio = 1;
	var isLandscape = true;
	if(newHeight > newWidth && Main.PORTRAIT_HEIGHT_MIN < Main.PORTRAIT_HEIGHT_MAX || Main.LANDSCAPE_WIDTH_MIN == Main.LANDSCAPE_WIDTH_MAX) isLandscape = false;
	if(isLandscape) {
		var widthToHeightMax = Main.LANDSCAPE_WIDTH_MAX * 1.0 / Main.LANDSCAPE_HEIGHT;
		var widthToHeightMin = Main.LANDSCAPE_WIDTH_MIN * 1.0 / Main.LANDSCAPE_HEIGHT;
		if(newWidthToHeight > widthToHeightMax) {
			newWidth = newHeight * widthToHeightMax;
			platforms_PlatformHTML5.offsetX = (browserWidth - newWidth) / 2;
			Main.WIDTH = Main.LANDSCAPE_WIDTH_MAX;
		} else if(newWidthToHeight < widthToHeightMin) {
			newHeight = newWidth / widthToHeightMin;
			platforms_PlatformHTML5.offsetY = (browserHeight - newHeight) / 2;
			Main.WIDTH = Main.LANDSCAPE_WIDTH_MIN;
		} else {
			platforms_PlatformHTML5.offsetY = platforms_PlatformHTML5.offsetX = 0;
			Main.WIDTH = Math.round(newWidthToHeight * Main.LANDSCAPE_HEIGHT);
		}
		scaleRatio = newHeight / Main.LANDSCAPE_HEIGHT;
		Main.HEIGHT = Main.LANDSCAPE_HEIGHT;
	} else {
		var widthToHeightMax1 = Main.PORTRAIT_WIDTH * 1.0 / Main.PORTRAIT_HEIGHT_MIN;
		var widthToHeightMin1 = Main.PORTRAIT_WIDTH * 1.0 / Main.PORTRAIT_HEIGHT_MAX;
		if(newWidthToHeight > widthToHeightMax1) {
			newWidth = newHeight * widthToHeightMax1;
			platforms_PlatformHTML5.offsetX = (browserWidth - newWidth) / 2;
			Main.HEIGHT = Main.PORTRAIT_HEIGHT_MIN;
		} else if(newWidthToHeight < widthToHeightMin1) {
			newHeight = newWidth / widthToHeightMin1;
			platforms_PlatformHTML5.offsetY = (browserHeight - newHeight) / 2;
			Main.HEIGHT = Main.PORTRAIT_HEIGHT_MAX;
		} else {
			platforms_PlatformHTML5.offsetY = platforms_PlatformHTML5.offsetX = 0;
			Main.HEIGHT = Math.round(Main.PORTRAIT_WIDTH / newWidthToHeight);
		}
		scaleRatio = newWidth / Main.PORTRAIT_WIDTH;
		Main.WIDTH = Main.PORTRAIT_WIDTH;
	}
	Main.instance.set_scaleX(scaleRatio);
	Main.instance.set_scaleY(scaleRatio);
	var orientationBlock = true;
	if(orientationBlock) {
		orientationBlock = false;
		if(Main.WIDTH_MIN >= Main.WIDTH_MAX && browserWidth >= browserHeight) orientationBlock = true; else if(Main.HEIGHT_MIN >= Main.HEIGHT_MAX && browserHeight >= browserWidth) orientationBlock = true;
	}
	if(orientationBlock && Main.isMobile) {
		platforms_PlatformHTML5.offsetX = platforms_PlatformHTML5.offsetY = 0;
		newWidth = Math.round(browserWidth);
		newHeight = Math.round(browserHeight);
		var rds = Main.instance.rotateDeviceSprite;
		rds.set_scaleX(Main.WIDTH / rds.width());
		rds.set_scaleY(Main.HEIGHT / rds.height());
		Main.instance.set_scaleX(newWidth / Main.WIDTH);
		Main.instance.set_scaleY(newHeight / Main.HEIGHT);
		rds.set_visible(true);
		rds._updateOldValues();
		haxe_Log.trace("WE LOCKED YOU BRO",{ fileName : "PlatformHTML5.hx", lineNumber : 137, className : "platforms.PlatformHTML5", methodName : "resize", customParams : [rds.get_visible(),rds.get_x(),rds.get_y(),rds.get_scaleX(),rds.get_scaleY()]});
	} else Main.instance.rotateDeviceSprite.set_visible(false);
	var divs = js.JQuery("#oz_game");
	var _g1 = 0;
	var _g = divs.length;
	while(_g1 < _g) {
		var i = _g1++;
		var jeash_div = divs[i];
		jeash_div.style.width = newWidth + "px";
		jeash_div.style.height = newHeight + "px";
		jeash_div.style.left = platforms_PlatformHTML5.offsetX + "px";
		jeash_div.style.top = platforms_PlatformHTML5.offsetY + "px";
		jeash_div.style.position = "absolute";
	}
	window.scrollTo(0,1);
};
var states_State = function(p) {
	this.p = p;
	this.doc = new oz_OzSprite();
	p.stateSprite.addChild(this.doc);
	this.cnt = 0;
};
$hxClasses["states.State"] = states_State;
states_State.__name__ = ["states","State"];
states_State.prototype = {
	update: function() {
		this.cnt++;
	}
	,destroy: function() {
		oz_OzMobileUtils.HideRateDialog();
		oz_OzMobileUtils.HideLivesDialog();
		if(this.doc != null && this.doc.parent != null) this.doc.parent.removeChild(this.doc);
	}
	,preRender: function() {
	}
	,resize: function() {
	}
	,__class__: states_State
};
var states_StatePlay = function(p,editorLvl) {
	this.goingNextAlready = false;
	this.loseTriggeredCnt = -1;
	this.winTriggeredCnt = -1;
	this.menuTweens = [];
	this.shouldRun = false;
	this.neverRan = true;
	this.bonusTweens = [];
	this.scoreTweens = [];
	this.inTransition = false;
	this.numTimeTricks = 0;
	this.bonusScore = 0;
	this.distanceScore = 0;
	this.score = 0;
	this.numCoins = 0;
	this.timeSilver = 0;
	this.timeGold = 0;
	this.gameSystem = null;
	states_State.call(this,p);
	Audio.StopMusic();
	var tileSize = Std.parseInt("240");
	if(states_StatePlay.tileMap == null) states_StatePlay.tileMap = new oz_OzTileMap(states_StatePlay.BoundsWidth / tileSize | 0,states_StatePlay.BoundsHeight / tileSize | 0,states_StatePlay.OffsetX,states_StatePlay.OffsetY,tileSize,1,1); else states_StatePlay.tileMap.reset();
	this.collectedStars = 0;
	this.firstMDown = false;
	states_StatePlay.instance = this;
	this.bounds = [];
	this.touch = Main.isMobile;
	this.weStart = true;
	this.curClick = 0;
	this.curShape = 0;
	this.doc.addChild(this.objectSprite = oz_OzSprite.New());
	this.doc.addChild(this.menuSprite = new oz_OzSprite());
	ObjectsLayouts.cmcPlay(this.menuSprite);
	this.menuSprite.getChild("btnPause").makeButton($bind(this,this.pause));
	this.doc.addChild(this.menuSprite.getChild("bg"),0);
	this.objectSprite.addChild(this.backBGLayer1 = oz_OzSprite.New());
	this.backBGLayer1.setFluid(64);
	this.objectSprite.addChild(this.backBGLayer2 = oz_OzSprite.New());
	this.backBGLayer2.setFluid(64);
	this.objectSprite.addChild(this.frontBGLayer = oz_OzSprite.New());
	this.objectSprite.addChild(this.frontBGRect = oz_OzSprite.New(Objects.cmcBGFrontRect));
	this.doc.addChild(this.nextSprite = oz_OzSprite.New());
	this.doc.addChild(this.hoverSprite = oz_OzSprite.New());
	this.hoverSprite.set_alpha(0.7);
	this.doc.addChild(this.crossSprite = oz_OzSprite.New(Objects.cmcCross));
	this.crossSprite.set_visible(false);
	this.doc.addChild(this.clockSprite = oz_OzSprite.New());
	this.doc.addChild(this.guiSprite = oz_OzSprite.New());
	this.doc.addChild(this.playSprite = oz_OzSprite.New());
	this.doc.addChild(this.skinsSprite = oz_OzSprite.New());
	this.doc.addChild(this.levelsSprite = oz_OzSprite.New());
	this.guiSprite.addChildrenFromParentByString(this.menuSprite,["btnPause","instructions","txtBonus","txtScore"]);
	this.txtBonus = this.guiSprite.getChild("txtBonus");
	this.guiSprite.set_visible(false);
	this.playSprite.addChildrenFromParentByString(this.menuSprite,["title","txtLastScore","lastScore","txtBestScore","bestScore","btnPlay","btnCredits","btnSkins","btnLevels","btnMusic","btnSound","sponsor"]);
	this.levelsSprite.addChild(this.buttonSprite = oz_OzSprite.New());
	this.levelsSprite.addChildrenFromParentByString(this.menuSprite,["left","right","btnLevelsBack","txtStars","iconStar"]);
	this.levelsSprite.getChild("btnLevelsBack").makeButton($bind(this,this.goLevelsToMenu));
	this.levelsSprite.getChild("left").makeButton($bind(this,this.goLeft));
	this.levelsSprite.getChild("right").makeButton($bind(this,this.goRight));
	this.levelsSprite.set_visible(false);
	this.playSprite.getChild("btnPlay").makeButton($bind(this,this.goPlay));
	this.playSprite.getChild("btnCredits").makeButton($bind(this,this.goCredits));
	this.playSprite.getChild("btnSkins").makeButton($bind(this,this.goSkins));
	this.playSprite.getChild("btnLevels").makeButton($bind(this,this.goLevels));
	this.playSprite.getChild("btnSound").makeButton($bind(this,this.toggleMuteSound));
	this.playSprite.getChild("btnMusic").makeButton($bind(this,this.toggleMuteMusic));
	this.playSprite.getChild("btnSound").setFrameOnBool(Audio.muteSound);
	this.playSprite.getChild("btnMusic").setFrameOnBool(Audio.muteMusic);
	this.playSprite.getChild("btnCredits").set_visible(false);
	this.updateCoins();
	var numTotalStars = 0;
	this.buttons = [];
	var _g = 0;
	while(_g < 40) {
		var k = _g++;
		var page = Math.floor(k / 8);
		var i = k % 8;
		var b = oz_OzSprite.New(Objects.cbtnLevel);
		b.set_x(360 + Main.WIDTH * page);
		b.set_y(71.111111111111114 * (i + 1));
		this.buttonSprite.addChild(b);
		var levelNum = oz_OzSprite.New(Objects.ctxtDOCK11);
		levelNum.set_x(-56);
		levelNum.set_y(1);
		b.addChild(levelNum);
		Globals.TextDock11(levelNum,"" + (k + 1),oz_TextAlign.LEFT);
		var lvlTime = oz_OzSprite.New(Objects.ctxtNeonBlackSmall);
		lvlTime.set_x(138);
		lvlTime.set_y(1);
		b.addChild(lvlTime);
		b.gotoAndStop(2);
		if(Globals.levelScores[k] >= 0) {
			var starCount = oz_OzSprite.New(Objects.cmcLevelStars);
			starCount.set_x(27);
			starCount.set_y(-1);
			starCount.mouseEnabled = false;
			var levelStars = states_StatePlay.GetStarsForLevel(k);
			starCount.gotoAndStop(1 + levelStars);
			numTotalStars += levelStars;
			b.addChild(starCount);
			Globals.TextNeonBlackSmall(lvlTime,states_StatePlay.TmTimeToString(Globals.levelScores[k]),oz_TextAlign.RIGHT);
		} else Globals.TextNeonBlackSmall(lvlTime,"",oz_TextAlign.RIGHT);
		b.makeButton($bind(this,this.goLevelsToPlay));
		this.buttons.push(b);
	}
	Globals.TextDock11(this.levelsSprite.getChild("txtStars"),"" + numTotalStars,oz_TextAlign.RIGHT);
	if(states_StatePlay.currentLevelPage < 0) {
		states_StatePlay.currentLevelPage = 0;
		var _g1 = 0;
		while(_g1 < 40) {
			var i1 = _g1++;
			if(Globals.levelScores[i1] >= 0) states_StatePlay.currentLevelPage = Math.floor(i1 / 8);
		}
	}
	this.endTransition();
	this.playSprite.getChild("btnMusic").setFluid(264);
	this.playSprite.getChild("btnSound").setFluid(264);
	this.guiSprite.getChild("btnPause").setFluid(264);
	this.menuSprite.getChild("iconCoins").setFluid(72);
	this.menuSprite.getChild("txtCoins").setFluid(72);
	this.menuSprite.getChild("txtTime").setFluid(72);
	this.menuSprite.getChild("txtTargetTime").setFluid(72);
	this.menuSprite.getChild("txtTargetStars").setFluid(72);
	this.menuSprite.getChild("iconTargetStar").setFluid(72);
	this.levelsSprite.getChild("iconStar").setFluid(72);
	this.levelsSprite.getChild("txtStars").setFluid(72);
	this.guiSprite.getChild("instructions").gotoAndStop(Main.isMobile?1:2);
	this.guiSprite.getChild("instructions").set_visible(false);
	this.guiSprite.getChild("instructions").setFluid(2);
	this.doc.addChild(this.dialogSprite = oz_OzSprite.New());
	ObjectsLayouts.cmcPaused(this.dialogSprite);
	this.setPauseButtons();
	this.dialogSprite.set_visible(false);
	this.doc.addChild(this.skinsSprite = oz_OzSprite.New());
	ObjectsLayouts.cmcSkins(this.skinsSprite);
	this.skinsSprite.getChild("btnNext").makeButton($bind(this,this.goSkinsToMenu));
	this.skinsSprite.set_visible(false);
	this.doc.addChild(this.creditsSprite = oz_OzSprite.New());
	ObjectsLayouts.cmcCredits(this.creditsSprite);
	this.creditsSprite.getChild("btnBack").makeButton($bind(this,this.goCreditsToMenu));
	this.creditsSprite.getChild("sponsor").makeButton(Globals.moreGames);
	this.creditsSprite.set_visible(false);
	Globals.TextDock11(this.playSprite.getChild("txtLastScore"),"" + Globals.lastScore,oz_TextAlign.CENTER);
	Globals.TextDock11(this.playSprite.getChild("txtBestScore"),"" + Globals.bestScore,oz_TextAlign.CENTER);
	this.doc.addChild(this.winSprite = oz_OzSprite.New());
	this.state = states_StatePlay.NORMAL;
	if(states_StatePlay.StartDirectly) {
		states_StatePlay.StartDirectly = false;
		this.playSprite.set_visible(false);
		this.startReal();
	} else this.paused = true;
	this.playSprite.getChild("sponsor").makeButton(Globals.moreGames);
	this.doc.adjustAllLayouts();
	var src;
	if(editorLvl != null) {
		this.fromEditor = true;
		src = editorLvl;
		Globals.currentLevel = Std.parseInt(src.get("name")) - 1;
		haxe_Log.trace(Globals.currentLevel,{ fileName : "StatePlay.hx", lineNumber : 372, className : "states.StatePlay", methodName : "new", customParams : ["THIS IS LVL PARSED"]});
	} else {
		if(states_StatePlay.mode == 1) Globals.currentLevel = 41 + Math.floor(5 * Math.random()) - 1;
		src = oz_Xu.cwav(Globals.levelsXML,"level","name","" + (Globals.currentLevel + 1));
	}
	var name = src.get("title");
	if(name != null) {
		var dashStr = name.split("-");
		if(dashStr.length > 2) {
			this.timeGold = Std.parseInt(dashStr[dashStr.length - 2]);
			this.timeSilver = Std.parseInt(dashStr[dashStr.length - 1]);
		} else {
			this.timeGold = 1000;
			this.timeSilver = 1200;
		}
	}
	this.txtBonus.set_visible(false);
	if(states_StatePlay.mode == 1) {
		this.menuSprite.getChild("txtTime").set_visible(false);
		this.menuSprite.getChild("iconTargetStar").set_visible(false);
		this.menuSprite.getChild("txtTargetStars").set_visible(false);
		this.menuSprite.getChild("txtTargetTime").set_visible(false);
	} else {
		this.updateTime(0);
		this.menuSprite.getChild("iconCoins").set_visible(false);
		this.menuSprite.getChild("txtCoins").set_visible(false);
		this.guiSprite.getChild("txtScore").set_visible(false);
	}
	if(states_StatePlay.LevelsDirectly) {
		states_StatePlay.LevelsDirectly = false;
		this.goLevelsDirectly();
	}
	this.gameSystem = new ozity_OzGameSystem(this.objectSprite,src,states_StatePlay.tileMap,500,null,0,false,1);
	this.gameSystem.addEventsListener($bind(this,this.processMessage));
	var name1 = src.get("title");
	this.objectSprite.addChild(this.txtBonus);
	if(states_StatePlay.mode == 1) this.updateScore(this.score,false);
	this.frontBgLines = [];
	var _g2 = 0;
	while(_g2 < 3) {
		var i2 = _g2++;
		this.frontBgLines[i2] = oz_OzSprite.New(null,oz_SpriteType.EMPTY);
		this.frontBGLayer.addChild(this.frontBgLines[i2]);
	}
	this.backBGLayer1.set_y(550);
	this.backBGLayer2.set_y(450);
	this.frontBGRect.set_y(620);
	this.frontBgLines[0].set_y(570);
	this.frontBgLines[1].set_y(620);
	if(Main.isMobile) {
	} else {
	}
	Input.mdown = Input.mup = false;
	Input.reFocus(p);
	if(Globals.hideGUI) this.guiSprite.set_visible(false);
	this.clearDirectionInput();
	this.resize();
	ExternalAPI.GdPlay();
};
$hxClasses["states.StatePlay"] = states_StatePlay;
states_StatePlay.__name__ = ["states","StatePlay"];
states_StatePlay.TmTimeToString = function(tmTime) {
	var mili = Math.floor(tmTime % 100);
	var miliStr = "" + mili;
	if(miliStr.length < 2) miliStr = "0" + miliStr;
	var secs = Math.floor(tmTime / 100);
	return "" + secs + ":" + miliStr;
};
states_StatePlay.GetStarsForLevel = function(id) {
	var tmBest = Globals.levelScores[id];
	if(tmBest <= 0) return 0;
	var tmGold = 1000;
	var tmSilver = 1200;
	var lvlSrc = oz_Xu.cwav(Globals.levelsXML,"level","name","" + (Globals.currentLevel + 1));
	if(lvlSrc != null) {
		var lvlName = lvlSrc.get("title");
		if(lvlName != null) {
			var dashStr = lvlName.split("-");
			if(dashStr.length > 2) {
				tmGold = Std.parseInt(dashStr[dashStr.length - 2]);
				tmSilver = Std.parseInt(dashStr[dashStr.length - 1]);
			}
		}
	}
	if(tmBest <= tmGold) return 3; else if(tmBest <= tmSilver) return 2; else return 1;
};
states_StatePlay.FrameTimeToTmTime = function(frTime) {
	return Math.round(frTime * 3.3334);
};
states_StatePlay.__super__ = states_State;
states_StatePlay.prototype = $extend(states_State.prototype,{
	showCoins: function(shouldShow) {
		this.menuSprite.getChild("txtCoins").set_visible(shouldShow);
		this.menuSprite.getChild("iconCoins").set_visible(shouldShow);
	}
	,updateTime: function(timeFrames) {
		var tmTime = states_StatePlay.FrameTimeToTmTime(timeFrames);
		Globals.TextNeonWhiteSmall(this.menuSprite.getChild("txtTime"),states_StatePlay.TmTimeToString(tmTime),oz_TextAlign.RIGHT);
		if(tmTime > this.timeSilver) {
			this.menuSprite.getChild("txtTargetTime").set_visible(false);
			this.menuSprite.getChild("txtTargetStars").set_visible(false);
		} else if(tmTime > this.timeGold) {
			Globals.TextNeonWhiteSmall(this.menuSprite.getChild("txtTargetTime"),states_StatePlay.TmTimeToString(this.timeSilver),oz_TextAlign.RIGHT);
			Globals.TextNeonBlackSmall(this.menuSprite.getChild("txtTargetStars"),"2",oz_TextAlign.RIGHT);
		} else {
			Globals.TextNeonWhiteSmall(this.menuSprite.getChild("txtTargetTime"),states_StatePlay.TmTimeToString(this.timeGold),oz_TextAlign.RIGHT);
			Globals.TextNeonBlackSmall(this.menuSprite.getChild("txtTargetStars"),"3",oz_TextAlign.RIGHT);
		}
	}
	,updateCoins: function() {
		Globals.TextDock11(this.menuSprite.getChild("txtCoins"),"" + Globals.coins + "/" + 200,oz_TextAlign.RIGHT);
	}
	,updateScore: function(val,bounce) {
		if(bounce == null) bounce = true;
		this.score = val;
		Globals.TextDock11(this.guiSprite.getChild("txtScore"),"" + val,oz_TextAlign.CENTER);
		if(bounce) {
			var _g1 = 0;
			var _g = this.scoreTweens.length;
			while(_g1 < _g) {
				var i = _g1++;
				this.scoreTweens[i].remove = true;
			}
			oz_OzTween.DelayedCall($bind(this,this.updateScoreDelayed),1);
			this.scoreTweens[0] = oz_OzTween.GetLast();
		}
	}
	,updateScoreDelayed: function() {
		var txtScore = this.guiSprite.getChild("txtScore");
		txtScore.set_scaleX(txtScore.set_scaleY(1.3));
		txtScore.makeBubble2Big(8);
		oz_OzTween.GetLast().repeat = 0;
		this.scoreTweens[1] = oz_OzTween.GetLast();
	}
	,showBonus: function(howMuch,updateScoreAmount) {
		if(updateScoreAmount == null) updateScoreAmount = 0;
		if(states_StatePlay.mode == 1) {
			if(updateScoreAmount > 0) {
				this.bonusScore += updateScoreAmount;
				this.updateScore(this.distanceScore + this.bonusScore);
			}
		} else if(updateScoreAmount > 0) this.numTimeTricks += updateScoreAmount;
		var _g1 = 0;
		var _g = this.bonusTweens.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.bonusTweens[i].remove = true;
		}
		oz_OzTween.DelayedCall($bind(this,this.showBonusDelayed),1);
		this.bonusTweens[0] = oz_OzTween.GetLast();
		if(states_StatePlay.mode == 1) Globals.TextDock11(this.txtBonus,"+" + howMuch,oz_TextAlign.CENTER); else Globals.TextDock11(this.txtBonus,"-" + (howMuch / 2 | 0) + (howMuch % 2 == 1?".5S":".0S"),oz_TextAlign.CENTER);
		Audio.PlaySound("bonus");
	}
	,showBonusDelayed: function() {
		this.txtBonus.set_alpha(1);
		this.txtBonus.set_visible(true);
		this.txtBonus.set_scaleX(this.txtBonus.set_scaleY(1));
		this.txtBonus.appear(5);
		this.txtBonus.disappear(30,15);
		this.bonusTweens[1] = oz_OzTween.GetLastId(5);
		this.bonusTweens[2] = oz_OzTween.GetLastId(4);
		this.bonusTweens[3] = oz_OzTween.GetLastId(3);
		this.bonusTweens[4] = oz_OzTween.GetLastId(2);
		this.bonusTweens[5] = oz_OzTween.GetLastId(1);
		this.bonusTweens[6] = oz_OzTween.GetLastId(0);
	}
	,goLevelsToPlay: function(e) {
		states_StatePlay.mode = 2;
		var _g = 0;
		while(_g < 40) {
			var i = _g++;
			if(e.target == this.buttons[i]) {
				haxe_Log.trace("WE SELECTED LEVEL " + i,{ fileName : "StatePlay.hx", lineNumber : 634, className : "states.StatePlay", methodName : "goLevelsToPlay"});
				Globals.currentLevel = i;
			}
		}
		states_StatePlay.StartDirectly = true;
		this.goRestart();
	}
	,goLeft: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		states_StatePlay.currentLevelPage--;
		this.levelsSprite.getChild("left").mouseEnabled = this.levelsSprite.getChild("right").mouseEnabled = false;
		var odt = oz_OzTween.New();
		odt.startValue = this.buttonSprite.get_x();
		odt.endValue = this.buttonSprite.get_x() + Main.WIDTH;
		odt.duration = 30;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			a = a * (2 - a);
			_g.buttonSprite.set_x((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		oz_OzTween.DelayedCall($bind(this,this.endTransition),30);
	}
	,goRight: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		states_StatePlay.currentLevelPage++;
		this.levelsSprite.getChild("left").mouseEnabled = this.levelsSprite.getChild("right").mouseEnabled = false;
		var odt = oz_OzTween.New();
		odt.startValue = this.buttonSprite.get_x();
		odt.endValue = this.buttonSprite.get_x() - Main.WIDTH;
		odt.duration = 30;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			a = a * (2 - a);
			_g.buttonSprite.set_x((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		oz_OzTween.DelayedCall($bind(this,this.endTransition),30);
	}
	,endTransition: function() {
		this.buttonSprite.set_x(-states_StatePlay.currentLevelPage * Main.WIDTH);
		this.levelsSprite.getChild("left").set_visible(this.levelsSprite.getChild("right").set_visible(true));
		if(states_StatePlay.currentLevelPage == 0) this.levelsSprite.getChild("left").set_visible(false);
		if(states_StatePlay.currentLevelPage == 4) this.levelsSprite.getChild("right").set_visible(false);
		this.inTransition = false;
		this.levelsSprite.getChild("left").mouseEnabled = this.levelsSprite.getChild("right").mouseEnabled = true;
	}
	,startReal: function() {
		this.guiSprite.set_visible(true);
		this.state = states_StatePlay.NORMAL;
		this.paused = false;
		if(states_StatePlay.mode == 1 && Globals.bestScore <= 0 || states_StatePlay.mode == 2 && Globals.getTotalScore() <= 0) this.guiSprite.getChild("instructions").set_visible(true); else this.guiSprite.getChild("instructions").set_visible(false);
	}
	,goLevelsDirectly: function() {
		this.showCoins(false);
		this.paused = true;
		this.playSprite.set_visible(false);
		this.levelsSprite.set_visible(true);
		this.levelsSprite.set_alpha(1);
		this.inTransition = false;
	}
	,goLevels: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		this.resetMenuTweens();
		this.paused = true;
		this.levelsSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.playSprite.set_alpha(1);
		this.levelsSprite.set_alpha(0);
		this.showCoins(false);
		var odt = oz_OzTween.New();
		odt.startValue = this.playSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.playSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.levelsSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.levelsSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.playSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goLevelsToMenu: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		this.paused = true;
		this.resetMenuTweens();
		this.levelsSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.levelsSprite.set_alpha(1);
		this.playSprite.set_alpha(0);
		this.showCoins(true);
		var odt = oz_OzTween.New();
		odt.startValue = this.levelsSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.levelsSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.playSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.playSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.levelsSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goPlay: function(e) {
		var _g = this;
		haxe_Log.trace("TRANSITION",{ fileName : "StatePlay.hx", lineNumber : 726, className : "states.StatePlay", methodName : "goPlay", customParams : [this.inTransition]});
		if(this.inTransition) return;
		this.inTransition = true;
		this.resetMenuTweens();
		this.paused = true;
		this.guiSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.playSprite.set_alpha(1);
		this.guiSprite.set_alpha(0);
		if(states_StatePlay.NUM_PLAYS == 0) {
			ExternalAPI.GdShowBanner();
			haxe_Log.trace("FIRST PLAY",{ fileName : "StatePlay.hx", lineNumber : 738, className : "states.StatePlay", methodName : "goPlay"});
		}
		states_StatePlay.NUM_PLAYS++;
		var odt = oz_OzTween.New();
		odt.startValue = this.playSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.playSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.guiSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.guiSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.startReal();
			_g.playSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goCredits: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		this.resetMenuTweens();
		this.paused = true;
		this.creditsSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.playSprite.set_alpha(1);
		this.creditsSprite.set_alpha(0);
		var odt = oz_OzTween.New();
		odt.startValue = this.playSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.playSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.creditsSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.creditsSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.playSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goSkins: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		this.paused = true;
		this.resetMenuTweens();
		this.skinsSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.playSprite.set_alpha(1);
		this.skinsSprite.set_alpha(0);
		this.updateSkins();
		var odt = oz_OzTween.New();
		odt.startValue = this.playSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.playSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.skinsSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.skinsSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.playSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goCreditsToMenu: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		this.paused = true;
		this.resetMenuTweens();
		this.creditsSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.creditsSprite.set_alpha(1);
		this.playSprite.set_alpha(0);
		var odt = oz_OzTween.New();
		odt.startValue = this.creditsSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.creditsSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.playSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.playSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.creditsSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goSkinsToMenu: function(e) {
		var _g = this;
		if(this.inTransition) return;
		this.inTransition = true;
		this.paused = true;
		this.resetMenuTweens();
		this.skinsSprite.set_visible(true);
		this.playSprite.set_visible(true);
		this.skinsSprite.set_alpha(1);
		this.playSprite.set_alpha(0);
		var odt = oz_OzTween.New();
		odt.startValue = this.skinsSprite.get_alpha();
		odt.endValue = 0;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.skinsSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.playSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.playSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.skinsSprite.set_visible(false);
			_g.inTransition = false;
		},5);
	}
	,goGameToLevels: function(e) {
		if(states_StatePlay.mode == 2) {
			states_StatePlay.mode = 1;
			states_StatePlay.LevelsDirectly = true;
		}
		this.goRestart();
	}
	,resize: function() {
		states_State.prototype.resize.call(this);
	}
	,resume: function(e) {
		var _g = this;
		var odt = oz_OzTween.New();
		odt.startValue = this.dialogSprite.get_alpha();
		odt.endValue = 0.001;
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.dialogSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		this.guiSprite.set_alpha(0);
		this.guiSprite.set_visible(true);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.guiSprite.get_alpha();
		odt1.endValue = 1;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.guiSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.dialogSprite.set_visible(false);
			_g.paused = false;
		},10);
	}
	,update: function() {
		states_State.prototype.update.call(this);
		this.shouldRun = !(this.paused || this.state == states_StatePlay.LOSE && this.loseTriggeredCnt + 40 < this.gameSystem.updateFrame || this.state == states_StatePlay.WIN && this.winTriggeredCnt + 20 < this.gameSystem.updateFrame);
		if(!this.shouldRun) this.cnt--;
		if(this.shouldRun || this.neverRan) {
			this.gameSystem.update(1 / Main.FPS);
			if(this.state == states_StatePlay.NORMAL) {
				if(this.neverRan) this.updateTime(0); else this.updateTime(this.gameSystem.updateFrame - this.numTimeTricks * 15);
			}
			this.neverRan = false;
		}
		if(ozity_OzCar.instance != null && ozity_OzCar.instance.car != null && ozity_OzCar.instance.car.graphics.sprite != null) {
			var spr = ozity_OzCar.instance.car.graphics.sprite;
			this.txtBonus.setxy(spr.get_x() + 30,spr.get_y() - 30);
		}
		if(this.state == states_StatePlay.NORMAL) {
			if(states_StatePlay.mode == 1) {
				var newDistanceScore = Math.round(ozity_OzCar.instance.distance / 600);
				if(newDistanceScore > this.distanceScore) {
					this.distanceScore = newDistanceScore;
					this.updateScore(this.distanceScore + this.bonusScore);
				}
			}
			var DY = Main.HEIGHT - Main.HEIGHT_MIN;
			var DX = Main.WIDTH - Main.WIDTH_MIN;
			this.objectSprite.set_x(-ozity_OzCar.instance.carBody.get_position().get_x() + 240);
			this.objectSprite.set_y(-ozity_OzCar.instance.carBody.get_position().get_y() + Main.HEIGHT_MIN / 2);
			oz_OzSprite.UpdateHorizontalBgLine(this.frontBgLines[1],-this.objectSprite.get_x() + 120,states_StatePlay.frontLine1MCs,50,100,480);
			this.frontBGRect.set_x(-this.objectSprite.get_x() + 120);
			oz_OzSprite.UpdateHorizontalBgLine(this.frontBgLines[0],-this.objectSprite.get_x() / 2 + 120,states_StatePlay.frontLine1MCs,30,60,480,0.5,0.5);
			this.frontBgLines[0].set_x(-this.objectSprite.get_x() / 2);
			oz_OzSprite.UpdateHorizontalBgLine(this.backBGLayer1,-this.objectSprite.get_x() / 2 + 120,states_StatePlay.backLine1MCs,50,100,480);
			this.backBGLayer1.set_x(-this.objectSprite.get_x() / 2);
			oz_OzSprite.UpdateHorizontalBgLine(this.backBGLayer2,-this.objectSprite.get_x() / 4 + 120,states_StatePlay.backLine1MCs,50,100,480,-1);
			this.backBGLayer2.set_x(-this.objectSprite.get_x() / 4 * 3);
			if(this.objectSprite.get_y() < 0) this.objectSprite.set_y(0);
		}
	}
	,clearDirectionInput: function() {
		Input.down[37] = Input.down[Input.key("A")] = Input.down[39] = Input.down[Input.key("D")] = false;
	}
	,processMessage: function(m) {
		switch(m[1]) {
		case 0:
			if(this.state == states_StatePlay.NORMAL) this.lose();
			break;
		case 6:
			Audio.PlaySound("collect");
			this.numCoins++;
			Globals.coins++;
			this.updateCoins();
			break;
		case 4:
			Audio.PlaySound("stomp");
			break;
		case 8:
			Audio.PlaySound("collect");
			break;
		case 7:
			var c = m[2];
			Audio.PlaySound("key");
			break;
		case 14:
			if(this.state != states_StatePlay.WIN) {
				this.state = states_StatePlay.WIN;
				this.win();
			}
			break;
		case 2:
			Audio.PlaySound("jump");
			break;
		case 3:
			Audio.PlaySound("smash");
			break;
		case 9:
			Audio.PlaySound("opendoor");
			break;
		case 10:
			Audio.PlaySound("spring");
			break;
		case 11:
			Audio.PlaySound("boom");
			break;
		case 12:
			Audio.PlaySound("pop");
			break;
		case 13:
			Audio.PlaySound("pop");
			break;
		case 5:
			break;
		default:
		}
	}
	,setPauseButtons: function() {
		this.dialogSprite.getChild("btnBack").makeButton($bind(this,this.resume));
		this.dialogSprite.getChild("btnLevels").makeButton($bind(this,this.goGameToLevels));
		this.dialogSprite.getChild("btnRestart").makeButton($bind(this,this.goRestart));
		this.dialogSprite.getChild("btnMore").makeButton(Globals.moreGames);
		this.dialogSprite.getChild("btnSound").makeButton($bind(this,this.toggleMuteSound));
		this.dialogSprite.getChild("btnMusic").makeButton($bind(this,this.toggleMuteMusic));
		this.dialogSprite.getChild("sponsor").makeButton(Globals.moreGames);
		if(!Audio.hasSound) {
			this.dialogSprite.getChild("btnSound").set_visible(false);
			this.dialogSprite.getChild("btnMusic").set_x(Main.WIDTH_MIN / 2);
		}
		this.dialogSprite.getChild("btnSound").setFrameOnBool(Audio.muteSound);
		this.dialogSprite.getChild("btnMusic").setFrameOnBool(Audio.muteMusic);
	}
	,resetMenuTweens: function() {
		var _g1 = 0;
		var _g = this.menuTweens.length;
		while(_g1 < _g) {
			var i = _g1++;
			this.menuTweens[i].remove = true;
		}
		this.menuTweens = [];
	}
	,updateSkins: function() {
		this.resetMenuTweens();
		var _g = 0;
		while(_g < 8) {
			var i = _g++;
			var spr = this.skinsSprite.getChild("skin" + (i + 1));
			spr.clearChildren();
			spr.gotoAndStop(i + 1);
			spr.unButtonLink();
			if(Globals.currentSkin == i) {
				var tick = oz_OzSprite.New(Objects.cmcTick);
				tick.mouseEnabled = false;
				spr.addChild(tick);
				ozity_OzCar.instance.setSkin();
			} else if((Globals.cars & 1 << i) > 0) spr.makeLink($bind(this,this.skinClick)); else {
				var coinIco = oz_OzSprite.New(Objects.cmcCoinIcon);
				coinIco.mouseEnabled = false;
				coinIco.set_x(-32);
				coinIco.set_y(20);
				spr.addChild(coinIco);
				coinIco._updateOldValues();
				var price = oz_OzSprite.New(Objects.ctxtDOCK11);
				price.set_x(-12);
				price.set_y(22);
				Globals.TextDock11(price,"" + 200,oz_TextAlign.LEFT);
				spr.addChild(price);
				price._updateOldValues();
				if(Globals.coins >= 200) {
					var newStar = oz_OzSprite.New(Objects.cmcNewStar);
					newStar.set_x(28);
					newStar.set_y(-28);
					newStar.mouseEnabled = false;
					this.menuTweens.push(newStar.makeBubble2());
					spr.addChild(newStar);
					spr.makeLink($bind(this,this.skinClick));
					newStar._updateOldValues();
				} else {
					var lock = oz_OzSprite.New(Objects.cmcLock);
					lock.mouseEnabled = false;
					spr.addChild(lock);
					lock._updateOldValues();
				}
			}
		}
	}
	,skinClick: function(e) {
		var needsUpdate = false;
		var id = -1;
		var _g = 0;
		while(_g < 8) {
			var i = _g++;
			var spr = this.skinsSprite.getChild("skin" + (i + 1));
			if(spr == e.target) {
				id = i;
				Globals.currentSkin = id;
				needsUpdate = true;
				if((Globals.cars & 1 << id) == 0 && Globals.coins >= 200) {
					Globals.coins -= 200;
					Globals.cars += 1 << id;
				}
				break;
			}
		}
		if(needsUpdate) {
			this.updateSkins();
			this.updateCoins();
		}
	}
	,pause: function(e) {
		var _g = this;
		this.dialogSprite.set_visible(true);
		if(this.state != states_StatePlay.NORMAL && this.state != states_StatePlay.WAITING) return;
		this.paused = true;
		this.dialogSprite.set_alpha(1);
		var odt = oz_OzTween.New();
		odt.startValue = 0.001;
		odt.endValue = this.dialogSprite.get_alpha();
		this.dialogSprite.set_alpha(0.001);
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.dialogSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.guiSprite.get_alpha();
		odt1.endValue = 0.001;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.guiSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.guiSprite.set_visible(false);
		},5);
		this.dialogSprite.getChild("btnSound").setFrameOnBool(Audio.muteSound);
		this.dialogSprite.getChild("btnMusic").setFrameOnBool(Audio.muteMusic);
	}
	,show1star: function() {
		oz_OzParticle.EmitInCircle(this.doc,Objects.cmcStarGold,this.winSprite.get_x() + this.winSprite.getChild("star1").get_x(),this.winSprite.get_y() + this.winSprite.getChild("star1").get_y(),0.1,15,80,20,0.1);
		this.winSprite.getChild("star1").appear(5);
		this.winSprite.getChild("star1").gotoAndStop(2);
		Audio.PlaySound("collect");
	}
	,show2star: function() {
		oz_OzParticle.EmitInCircle(this.doc,Objects.cmcStarGold,this.winSprite.get_x() + this.winSprite.getChild("star2").get_x(),this.winSprite.get_y() + this.winSprite.getChild("star2").get_y(),0.1,15,80,20,0.1);
		this.winSprite.getChild("star2").gotoAndStop(2);
		this.winSprite.getChild("star2").appear(5);
		Audio.PlaySound("collect");
	}
	,show3star: function() {
		oz_OzParticle.EmitInCircle(this.doc,Objects.cmcStarGold,this.winSprite.get_x() + this.winSprite.getChild("star3").get_x(),this.winSprite.get_y() + this.winSprite.getChild("star3").get_y(),0.1,15,80,20,0.1);
		this.winSprite.getChild("star3").gotoAndStop(2);
		this.winSprite.getChild("star3").appear(5);
		Audio.PlaySound("collect");
	}
	,win: function() {
		var _g = this;
		Audio.StopMusic();
		if(this.winTriggeredCnt >= 0) return;
		ExternalAPI.GdShowBanner();
		Audio.PlaySound("win");
		this.winTriggeredCnt = this.gameSystem.updateFrame;
		haxe_Log.trace("WIN FUNC",{ fileName : "StatePlay.hx", lineNumber : 1301, className : "states.StatePlay", methodName : "win"});
		this.state = states_StatePlay.WIN;
		this.clearDirectionInput();
		this.guiSprite.getChild("instructions").set_visible(false);
		this.winSprite.set_visible(true);
		ObjectsLayouts.cmcYouWin(this.winSprite);
		this.winSprite.getChild("btnLevels").makeButton($bind(this,this.goGameToLevels));
		this.winSprite.getChild("btnRestart").makeButton($bind(this,this.goRestart));
		this.winSprite.getChild("btnNext").makeButton($bind(this,this.goNext));
		this.winSprite.set_alpha(1);
		var odt = oz_OzTween.New();
		odt.startValue = 0.001;
		odt.endValue = this.winSprite.get_alpha();
		this.winSprite.set_alpha(0.001);
		odt.duration = 5;
		odt.cnt = 0;
		odt.updateFunc = function(a) {
			_g.winSprite.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
		};
		odt.repeat = 0;
		odt.endFunc = null;
		odt.stateBound = true;
		odt.gameBound = true;
		oz_OzTween.Add(odt);
		var odt1 = oz_OzTween.New();
		odt1.startValue = this.guiSprite.get_alpha();
		odt1.endValue = 0.001;
		odt1.duration = 5;
		odt1.cnt = 0;
		odt1.updateFunc = function(a1) {
			_g.guiSprite.set_alpha((1 - a1) * odt1.startValue + a1 * odt1.endValue);
		};
		odt1.repeat = 0;
		odt1.endFunc = null;
		odt1.stateBound = true;
		odt1.gameBound = true;
		oz_OzTween.Add(odt1);
		oz_OzTween.DelayedCall(function() {
			_g.guiSprite.set_visible(false);
		},5);
		var curTmTime = states_StatePlay.FrameTimeToTmTime(this.gameSystem.updateFrame - this.numTimeTricks * 15);
		var prevBest = Globals.levelScores[Globals.currentLevel];
		if(prevBest < 0 || prevBest > curTmTime) {
			prevBest = curTmTime;
			this.winSprite.getChild("bestTime").makeBubble2();
			Globals.levelScores[Globals.currentLevel] = curTmTime;
			Globals.save();
		}
		Globals.TextDock11(this.winSprite.getChild("txtLevelName"),"LEVEL " + (Globals.currentLevel + 1),oz_TextAlign.CENTER);
		Globals.TextNeonWhiteSmall(this.winSprite.getChild("txtGoldTime"),states_StatePlay.TmTimeToString(this.timeGold),oz_TextAlign.CENTER);
		Globals.TextNeonWhiteSmall(this.winSprite.getChild("txtSilverTime"),states_StatePlay.TmTimeToString(this.timeSilver),oz_TextAlign.CENTER);
		Globals.TextNeonWhiteSmall(this.winSprite.getChild("txtSilverTime"),states_StatePlay.TmTimeToString(this.timeSilver),oz_TextAlign.CENTER);
		Globals.TextNeonWhiteSmall(this.winSprite.getChild("txtTime"),states_StatePlay.TmTimeToString(curTmTime),oz_TextAlign.CENTER);
		Globals.TextNeonWhiteSmall(this.winSprite.getChild("txtBestTime"),states_StatePlay.TmTimeToString(prevBest),oz_TextAlign.CENTER);
		var numStars = 1;
		if(curTmTime <= this.timeGold) numStars = 3; else if(curTmTime <= this.timeSilver) numStars = 2;
		this.winSprite.getChild("star1").gotoAndStop(1);
		this.winSprite.getChild("star2").gotoAndStop(1);
		this.winSprite.getChild("star3").gotoAndStop(1);
		if(numStars > 0) oz_OzTween.DelayedCall($bind(this,this.show1star),40);
		if(numStars > 1) oz_OzTween.DelayedCall($bind(this,this.show2star),55);
		if(numStars > 2) oz_OzTween.DelayedCall($bind(this,this.show3star),70);
	}
	,lose: function() {
		Audio.StopMusic();
		if(this.state == states_StatePlay.NORMAL || this.state == states_StatePlay.WAITING) {
			if(this.loseTriggeredCnt >= 0) return;
			this.loseTriggeredCnt = this.gameSystem.updateFrame;
			Globals.lastScore = this.score;
			Globals.bestScore = Math.round(Math.max(Globals.lastScore,Globals.bestScore));
			Globals.coins += this.score;
			Globals.save();
			this.state = states_StatePlay.LOSE;
			Globals.ChangeLiveAndSave(-1);
			oz_OzTween.DelayedCall($bind(this,this.realLose),45);
			Audio.PlaySound("lose");
		}
	}
	,realLose: function() {
		if(states_StatePlay.mode == 1) ExternalAPI.GdShowBanner();
		this.goRestart();
	}
	,goRestart: function(e) {
		var _g = this;
		ExternalAPI.CmgGameEvent("replay",Globals.currentLevel + 1);
		if(states_StatePlay.mode == 2) states_StatePlay.StartDirectly = true;
		this.paused = true;
		if(!Main.instance.transition) {
			var m = Main.instance;
			m.transition = true;
			m.whiteRect.set_visible(true);
			m.whiteRect.set_alpha(0);
			var odt = oz_OzTween.New();
			odt.startValue = Main.instance.whiteRect.get_alpha();
			odt.endValue = 1;
			odt.duration = 10;
			odt.cnt = 0;
			odt.updateFunc = function(a) {
				a = a * (2 - a);
				Main.instance.whiteRect.set_alpha((1 - a) * odt.startValue + a * odt.endValue);
			};
			odt.repeat = 0;
			odt.endFunc = function() {
				var m1 = Main.instance;
				m1.disposeState();
				m1.transition = false;
				m1.transitionChangeState(new states_StatePlay(_g.p),10);
			};
			odt.stateBound = true;
			odt.gameBound = false;
			oz_OzTween.Add(odt);
		}
	}
	,goNext: function(e) {
		if(this.goingNextAlready) return;
		this.goingNextAlready = true;
		if(Globals.currentLevel >= 39 || Globals.gameBeatTest) this.goGameToLevels(null); else {
			Globals.currentLevel++;
			ExternalAPI.CmgGameEvent("start",Globals.currentLevel + 1);
			this.goRestart();
		}
	}
	,toggleMuteMusic: function(e) {
		Audio.ToggleMuteMusic();
		this.playSprite.getChild("btnMusic").setFrameOnBool(Audio.muteMusic);
		this.dialogSprite.getChild("btnMusic").setFrameOnBool(Audio.muteMusic);
		Globals.muteMusic = Audio.muteMusic;
		Globals.save();
	}
	,toggleMuteSound: function(e) {
		Audio.ToggleMuteSound();
		this.playSprite.getChild("btnSound").setFrameOnBool(Audio.muteSound);
		this.dialogSprite.getChild("btnSound").setFrameOnBool(Audio.muteSound);
		Globals.muteSound = Audio.muteSound;
		Globals.save();
	}
	,__class__: states_StatePlay
});
var zpp_$nape_ZPP_$ID = function() { };
$hxClasses["zpp_nape.ZPP_ID"] = zpp_$nape_ZPP_$ID;
zpp_$nape_ZPP_$ID.__name__ = ["zpp_nape","ZPP_ID"];
zpp_$nape_ZPP_$ID.Constraint = function() {
	return zpp_$nape_ZPP_$ID._Constraint++;
};
zpp_$nape_ZPP_$ID.Interactor = function() {
	return zpp_$nape_ZPP_$ID._Interactor++;
};
zpp_$nape_ZPP_$ID.CbType = function() {
	return zpp_$nape_ZPP_$ID._CbType++;
};
zpp_$nape_ZPP_$ID.CbSet = function() {
	return zpp_$nape_ZPP_$ID._CbSet++;
};
zpp_$nape_ZPP_$ID.Listener = function() {
	return zpp_$nape_ZPP_$ID._Listener++;
};
var zpp_$nape_callbacks_ZPP_$Callback = function() {
	this.constraint = null;
	this.body = null;
	this.pre_swapped = false;
	this.pre_arbiter = null;
	this.wrap_arbiters = null;
	this.set = null;
	this.int2 = null;
	this.int1 = null;
	this.length = 0;
	this.prev = null;
	this.next = null;
	this.listener = null;
	this.event = 0;
	this.outer_int = null;
	this.outer_con = null;
	this.outer_body = null;
	this.length = 0;
};
$hxClasses["zpp_nape.callbacks.ZPP_Callback"] = zpp_$nape_callbacks_ZPP_$Callback;
zpp_$nape_callbacks_ZPP_$Callback.__name__ = ["zpp_nape","callbacks","ZPP_Callback"];
zpp_$nape_callbacks_ZPP_$Callback.prototype = {
	wrapper_body: function() {
		if(this.outer_body == null) {
			zpp_$nape_callbacks_ZPP_$Callback.internal = true;
			this.outer_body = new nape_callbacks_BodyCallback();
			zpp_$nape_callbacks_ZPP_$Callback.internal = false;
			this.outer_body.zpp_inner = this;
		}
		return this.outer_body;
	}
	,wrapper_con: function() {
		if(this.outer_con == null) {
			zpp_$nape_callbacks_ZPP_$Callback.internal = true;
			this.outer_con = new nape_callbacks_ConstraintCallback();
			zpp_$nape_callbacks_ZPP_$Callback.internal = false;
			this.outer_con.zpp_inner = this;
		}
		return this.outer_con;
	}
	,wrapper_int: function() {
		if(this.outer_int == null) {
			zpp_$nape_callbacks_ZPP_$Callback.internal = true;
			this.outer_int = new nape_callbacks_InteractionCallback();
			zpp_$nape_callbacks_ZPP_$Callback.internal = false;
			this.outer_int.zpp_inner = this;
		}
		if(this.wrap_arbiters == null) this.wrap_arbiters = zpp_$nape_util_ZPP_$ArbiterList.get(this.set.arbiters,true); else this.wrap_arbiters.zpp_inner.inner = this.set.arbiters;
		this.wrap_arbiters.zpp_inner.zip_length = true;
		this.wrap_arbiters.zpp_inner.at_ite = null;
		return this.outer_int;
	}
	,push: function(obj) {
		if(this.prev != null) this.prev.next = obj; else this.next = obj;
		obj.prev = this.prev;
		obj.next = null;
		this.prev = obj;
		this.length++;
	}
	,pop: function() {
		var ret = this.next;
		this.next = ret.next;
		if(this.next == null) this.prev = null; else this.next.prev = null;
		this.length--;
		return ret;
	}
	,empty: function() {
		return this.next == null;
	}
	,__class__: zpp_$nape_callbacks_ZPP_$Callback
};
var zpp_$nape_callbacks_ZPP_$CbSet = function() {
	this.constraints = null;
	this.interactors = null;
	this.zip_conlisteners = false;
	this.conlisteners = null;
	this.zip_bodylisteners = false;
	this.bodylisteners = null;
	this.zip_listeners = false;
	this.listeners = null;
	this.cbpairs = null;
	this.manager = null;
	this.id = 0;
	this.next = null;
	this.count = 0;
	this.cbTypes = null;
	this.cbTypes = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
	this.listeners = new zpp_$nape_util_ZNPList_$ZPP_$InteractionListener();
	this.zip_listeners = true;
	this.bodylisteners = new zpp_$nape_util_ZNPList_$ZPP_$BodyListener();
	this.zip_bodylisteners = true;
	this.conlisteners = new zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener();
	this.zip_conlisteners = true;
	this.constraints = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this.interactors = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
	this.id = zpp_$nape_ZPP_$ID.CbSet();
	this.cbpairs = new zpp_$nape_util_ZNPList_$ZPP_$CbSetPair();
};
$hxClasses["zpp_nape.callbacks.ZPP_CbSet"] = zpp_$nape_callbacks_ZPP_$CbSet;
zpp_$nape_callbacks_ZPP_$CbSet.__name__ = ["zpp_nape","callbacks","ZPP_CbSet"];
zpp_$nape_callbacks_ZPP_$CbSet.setlt = function(a,b) {
	var i = a.cbTypes.head;
	var j = b.cbTypes.head;
	while(i != null && j != null) {
		var ca = i.elt;
		var cb = j.elt;
		if(ca.id < cb.id) return true;
		if(cb.id < ca.id) return false; else {
			i = i.next;
			j = j.next;
		}
	}
	return j != null && i == null;
};
zpp_$nape_callbacks_ZPP_$CbSet.get = function(cbTypes) {
	var ret;
	if(zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool == null) ret = new zpp_$nape_callbacks_ZPP_$CbSet(); else {
		ret = zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool;
		zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool = ret.next;
		ret.next = null;
	}
	null;
	var ite = null;
	var cx_ite = cbTypes.head;
	while(cx_ite != null) {
		var cb = cx_ite.elt;
		ite = ret.cbTypes.insert(ite,cb);
		cb.cbsets.add(ret);
		cx_ite = cx_ite.next;
	}
	return ret;
};
zpp_$nape_callbacks_ZPP_$CbSet.single_intersection = function(a,b,i) {
	return a.manager.pair(a,b).single_intersection(i);
};
zpp_$nape_callbacks_ZPP_$CbSet.find_all = function(a,b,event,cb) {
	a.manager.pair(a,b).forall(event,cb);
};
zpp_$nape_callbacks_ZPP_$CbSet.prototype = {
	invalidate_pairs: function() {
		var cx_ite = this.cbpairs.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.zip_listeners = true;
			cx_ite = cx_ite.next;
		}
	}
	,realvalidate_listeners: function() {
		this.listeners.clear();
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			var npre = null;
			var nite = this.listeners.head;
			var cite = cb.listeners.head;
			while(cite != null) {
				var cx = cite.elt;
				if(nite != null && nite.elt == cx) {
					cite = cite.next;
					npre = nite;
					nite = nite.next;
				} else if(nite == null || zpp_$nape_callbacks_ZPP_$Listener.setlt(cx,nite.elt)) {
					if(cx.space == this.manager.space) npre = this.listeners.inlined_insert(npre,cx);
					cite = cite.next;
				} else {
					npre = nite;
					nite = nite.next;
				}
			}
			cx_ite = cx_ite.next;
		}
	}
	,realvalidate_bodylisteners: function() {
		this.bodylisteners.clear();
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			var npre = null;
			var nite = this.bodylisteners.head;
			var cite = cb.bodylisteners.head;
			while(cite != null) {
				var cx = cite.elt;
				if(nite != null && nite.elt == cx) {
					cite = cite.next;
					npre = nite;
					nite = nite.next;
				} else if(nite == null || zpp_$nape_callbacks_ZPP_$Listener.setlt(cx,nite.elt)) {
					if(!cx.options.excluded(this.cbTypes) && cx.space == this.manager.space) npre = this.bodylisteners.inlined_insert(npre,cx);
					cite = cite.next;
				} else {
					npre = nite;
					nite = nite.next;
				}
			}
			cx_ite = cx_ite.next;
		}
	}
	,realvalidate_conlisteners: function() {
		this.conlisteners.clear();
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			var npre = null;
			var nite = this.conlisteners.head;
			var cite = cb.conlisteners.head;
			while(cite != null) {
				var cx = cite.elt;
				if(nite != null && nite.elt == cx) {
					cite = cite.next;
					npre = nite;
					nite = nite.next;
				} else if(nite == null || zpp_$nape_callbacks_ZPP_$Listener.setlt(cx,nite.elt)) {
					if(!cx.options.excluded(this.cbTypes) && cx.space == this.manager.space) npre = this.conlisteners.inlined_insert(npre,cx);
					cite = cite.next;
				} else {
					npre = nite;
					nite = nite.next;
				}
			}
			cx_ite = cx_ite.next;
		}
	}
	,validate: function() {
		if(this.zip_listeners) {
			this.zip_listeners = false;
			this.realvalidate_listeners();
		}
		if(this.zip_bodylisteners) {
			this.zip_bodylisteners = false;
			this.realvalidate_bodylisteners();
		}
		if(this.zip_conlisteners) {
			this.zip_conlisteners = false;
			this.realvalidate_conlisteners();
		}
	}
	,free: function() {
		this.listeners.clear();
		this.zip_listeners = true;
		this.bodylisteners.clear();
		this.zip_bodylisteners = true;
		this.conlisteners.clear();
		this.zip_conlisteners = true;
		while(!(this.cbTypes.head == null)) {
			var cb = this.cbTypes.pop_unsafe();
			cb.cbsets.remove(this);
		}
	}
	,__class__: zpp_$nape_callbacks_ZPP_$CbSet
};
var zpp_$nape_callbacks_ZPP_$CbSetPair = function() {
	this.listeners = null;
	this.zip_listeners = false;
	this.next = null;
	this.b = null;
	this.a = null;
	this.listeners = new zpp_$nape_util_ZNPList_$ZPP_$InteractionListener();
};
$hxClasses["zpp_nape.callbacks.ZPP_CbSetPair"] = zpp_$nape_callbacks_ZPP_$CbSetPair;
zpp_$nape_callbacks_ZPP_$CbSetPair.__name__ = ["zpp_nape","callbacks","ZPP_CbSetPair"];
zpp_$nape_callbacks_ZPP_$CbSetPair.get = function(a,b) {
	var ret;
	if(zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool == null) ret = new zpp_$nape_callbacks_ZPP_$CbSetPair(); else {
		ret = zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool;
		zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool = ret.next;
		ret.next = null;
	}
	ret.zip_listeners = true;
	if(zpp_$nape_callbacks_ZPP_$CbSet.setlt(a,b)) {
		ret.a = a;
		ret.b = b;
	} else {
		ret.a = b;
		ret.b = a;
	}
	return ret;
};
zpp_$nape_callbacks_ZPP_$CbSetPair.setlt = function(x,y) {
	return zpp_$nape_callbacks_ZPP_$CbSet.setlt(x.a,y.a) || x.a == y.a && zpp_$nape_callbacks_ZPP_$CbSet.setlt(x.b,y.b);
};
zpp_$nape_callbacks_ZPP_$CbSetPair.prototype = {
	__validate: function() {
		this.listeners.clear();
		var aite = this.a.listeners.head;
		var bite = this.b.listeners.head;
		while(aite != null && bite != null) {
			var ax = aite.elt;
			var bx = bite.elt;
			if(ax == bx) {
				if(ax.options1.compatible(this.a.cbTypes) && ax.options2.compatible(this.b.cbTypes) || ax.options2.compatible(this.a.cbTypes) && ax.options1.compatible(this.b.cbTypes)) this.listeners.add(ax);
				aite = aite.next;
				bite = bite.next;
			} else if(ax.precedence > bx.precedence || ax.precedence == bx.precedence && ax.id > bx.id) aite = aite.next; else bite = bite.next;
		}
	}
	,empty_intersection: function() {
		return this.listeners.head == null;
	}
	,single_intersection: function(i) {
		var ite = this.listeners.head;
		return ite != null && ite.elt == i && ite.next == null;
	}
	,forall: function(event,cb) {
		var cx_ite = this.listeners.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x.event == event) cb(x);
			cx_ite = cx_ite.next;
		}
	}
	,__class__: zpp_$nape_callbacks_ZPP_$CbSetPair
};
var zpp_$nape_util_ZNPList_$ZPP_$InteractionListener = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_InteractionListener"] = zpp_$nape_util_ZNPList_$ZPP_$InteractionListener;
zpp_$nape_util_ZNPList_$ZPP_$InteractionListener.__name__ = ["zpp_nape","util","ZNPList_ZPP_InteractionListener"];
zpp_$nape_util_ZNPList_$ZPP_$InteractionListener.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,inlined_clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$InteractionListener
};
var zpp_$nape_util_ZNPList_$ZPP_$BodyListener = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_BodyListener"] = zpp_$nape_util_ZNPList_$ZPP_$BodyListener;
zpp_$nape_util_ZNPList_$ZPP_$BodyListener.__name__ = ["zpp_nape","util","ZNPList_ZPP_BodyListener"];
zpp_$nape_util_ZNPList_$ZPP_$BodyListener.prototype = {
	inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$BodyListener(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$BodyListener
};
var zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_ConstraintListener"] = zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener;
zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener.__name__ = ["zpp_nape","util","ZNPList_ZPP_ConstraintListener"];
zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener.prototype = {
	inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener
};
var zpp_$nape_util_ZNPList_$ZPP_$Constraint = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Constraint"] = zpp_$nape_util_ZNPList_$ZPP_$Constraint;
zpp_$nape_util_ZNPList_$ZPP_$Constraint.__name__ = ["zpp_nape","util","ZNPList_ZPP_Constraint"];
zpp_$nape_util_ZNPList_$ZPP_$Constraint.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Constraint(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Constraint(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Constraint.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Constraint
};
var zpp_$nape_util_ZNPList_$ZPP_$CbSet = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_CbSet"] = zpp_$nape_util_ZNPList_$ZPP_$CbSet;
zpp_$nape_util_ZNPList_$ZPP_$CbSet.__name__ = ["zpp_nape","util","ZNPList_ZPP_CbSet"];
zpp_$nape_util_ZNPList_$ZPP_$CbSet.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$CbSet(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CbSet.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$CbSet
};
var zpp_$nape_callbacks_ZPP_$CbType = function() {
	this.conlisteners = null;
	this.bodylisteners = null;
	this.listeners = null;
	this.cbsets = null;
	this.id = 0;
	this.outer = null;
	this.id = zpp_$nape_ZPP_$ID.CbType();
	this.listeners = new zpp_$nape_util_ZNPList_$ZPP_$InteractionListener();
	this.bodylisteners = new zpp_$nape_util_ZNPList_$ZPP_$BodyListener();
	this.conlisteners = new zpp_$nape_util_ZNPList_$ZPP_$ConstraintListener();
	this.constraints = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this.interactors = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
	this.cbsets = new zpp_$nape_util_ZNPList_$ZPP_$CbSet();
};
$hxClasses["zpp_nape.callbacks.ZPP_CbType"] = zpp_$nape_callbacks_ZPP_$CbType;
zpp_$nape_callbacks_ZPP_$CbType.__name__ = ["zpp_nape","callbacks","ZPP_CbType"];
zpp_$nape_callbacks_ZPP_$CbType.prototype = {
	addint: function(x) {
		var pre = null;
		var cx_ite = this.listeners.head;
		while(cx_ite != null) {
			var j = cx_ite.elt;
			if(x.precedence > j.precedence || x.precedence == j.precedence && x.id > j.id) break;
			pre = cx_ite;
			cx_ite = cx_ite.next;
		}
		this.listeners.inlined_insert(pre,x);
		this.invalidateint();
	}
	,invalidateint: function() {
		var cx_ite = this.cbsets.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.zip_listeners = true;
			cb.invalidate_pairs();
			cx_ite = cx_ite.next;
		}
	}
	,addbody: function(x) {
		var pre = null;
		var cx_ite = this.bodylisteners.head;
		while(cx_ite != null) {
			var j = cx_ite.elt;
			if(x.precedence > j.precedence || x.precedence == j.precedence && x.id > j.id) break;
			pre = cx_ite;
			cx_ite = cx_ite.next;
		}
		this.bodylisteners.inlined_insert(pre,x);
		this.invalidatebody();
	}
	,invalidatebody: function() {
		var cx_ite = this.cbsets.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.zip_bodylisteners = true;
			cx_ite = cx_ite.next;
		}
	}
	,addconstraint: function(x) {
		var pre = null;
		var cx_ite = this.conlisteners.head;
		while(cx_ite != null) {
			var j = cx_ite.elt;
			if(x.precedence > j.precedence || x.precedence == j.precedence && x.id > j.id) break;
			pre = cx_ite;
			cx_ite = cx_ite.next;
		}
		this.conlisteners.inlined_insert(pre,x);
		this.invalidateconstraint();
	}
	,invalidateconstraint: function() {
		var cx_ite = this.cbsets.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.zip_conlisteners = true;
			cx_ite = cx_ite.next;
		}
	}
	,__class__: zpp_$nape_callbacks_ZPP_$CbType
};
var zpp_$nape_util_ZPP_$Flags = function() { };
$hxClasses["zpp_nape.util.ZPP_Flags"] = zpp_$nape_util_ZPP_$Flags;
zpp_$nape_util_ZPP_$Flags.__name__ = ["zpp_nape","util","ZPP_Flags"];
var zpp_$nape_callbacks_ZPP_$Listener = function() {
	this.space = null;
	this.interaction = null;
	this.constraint = null;
	this.body = null;
	this.precedence = 0;
	this.event = 0;
	this.type = 0;
	this.id = 0;
	this.outer = null;
	this.id = zpp_$nape_ZPP_$ID.Listener();
};
$hxClasses["zpp_nape.callbacks.ZPP_Listener"] = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$Listener.__name__ = ["zpp_nape","callbacks","ZPP_Listener"];
zpp_$nape_callbacks_ZPP_$Listener.setlt = function(a,b) {
	return a.precedence > b.precedence || a.precedence == b.precedence && a.id > b.id;
};
zpp_$nape_callbacks_ZPP_$Listener.prototype = {
	addedToSpace: function() {
	}
	,removedFromSpace: function() {
	}
	,__class__: zpp_$nape_callbacks_ZPP_$Listener
};
var zpp_$nape_callbacks_ZPP_$BodyListener = function() {
	this.handler = null;
	this.options = null;
	this.outer_zn = null;
};
$hxClasses["zpp_nape.callbacks.ZPP_BodyListener"] = zpp_$nape_callbacks_ZPP_$BodyListener;
zpp_$nape_callbacks_ZPP_$BodyListener.__name__ = ["zpp_nape","callbacks","ZPP_BodyListener"];
zpp_$nape_callbacks_ZPP_$BodyListener.__super__ = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$BodyListener.prototype = $extend(zpp_$nape_callbacks_ZPP_$Listener.prototype,{
	addedToSpace: function() {
		this.options.handler = $bind(this,this.cbtype_change);
		var cx_ite = this.options.includes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.addbody(this);
			cx_ite = cx_ite.next;
		}
	}
	,removedFromSpace: function() {
		var cx_ite = this.options.includes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.bodylisteners.remove(this);
			cb.invalidatebody();
			cx_ite = cx_ite.next;
		}
		this.options.handler = null;
	}
	,cbtype_change: function(cb,included,added) {
		this.removedFromSpace();
		this.options.effect_change(cb,included,added);
		this.addedToSpace();
	}
	,__class__: zpp_$nape_callbacks_ZPP_$BodyListener
});
var zpp_$nape_callbacks_ZPP_$ConstraintListener = function() {
	this.handler = null;
	this.options = null;
	this.outer_zn = null;
};
$hxClasses["zpp_nape.callbacks.ZPP_ConstraintListener"] = zpp_$nape_callbacks_ZPP_$ConstraintListener;
zpp_$nape_callbacks_ZPP_$ConstraintListener.__name__ = ["zpp_nape","callbacks","ZPP_ConstraintListener"];
zpp_$nape_callbacks_ZPP_$ConstraintListener.__super__ = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$ConstraintListener.prototype = $extend(zpp_$nape_callbacks_ZPP_$Listener.prototype,{
	addedToSpace: function() {
		this.options.handler = $bind(this,this.cbtype_change);
		var cx_ite = this.options.includes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.addconstraint(this);
			cx_ite = cx_ite.next;
		}
	}
	,removedFromSpace: function() {
		var cx_ite = this.options.includes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.conlisteners.remove(this);
			cb.invalidateconstraint();
			cx_ite = cx_ite.next;
		}
		this.options.handler = null;
	}
	,cbtype_change: function(cb,included,added) {
		this.removedFromSpace();
		this.options.effect_change(cb,included,added);
		this.addedToSpace();
	}
	,__class__: zpp_$nape_callbacks_ZPP_$ConstraintListener
});
var zpp_$nape_util_ZNPList_$ZPP_$CbType = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_CbType"] = zpp_$nape_util_ZNPList_$ZPP_$CbType;
zpp_$nape_util_ZNPList_$ZPP_$CbType.__name__ = ["zpp_nape","util","ZNPList_ZPP_CbType"];
zpp_$nape_util_ZNPList_$ZPP_$CbType.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$CbType(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$CbType(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CbType.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,has: function(obj) {
		return this.inlined_has(obj);
	}
	,inlined_has: function(obj) {
		var ret;
		ret = false;
		var cx_ite = this.head;
		while(cx_ite != null) {
			var npite = cx_ite.elt;
			if(npite == obj) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$CbType
};
var zpp_$nape_callbacks_ZPP_$InteractionListener = function(options1,options2,event,type) {
	this.handlerp = null;
	this.pure = false;
	this.allowSleepingCallbacks = false;
	this.handleri = null;
	this.options2 = null;
	this.options1 = null;
	this.itype = 0;
	this.outer_znp = null;
	this.outer_zni = null;
	zpp_$nape_callbacks_ZPP_$Listener.call(this);
	this.type = type;
	this.interaction = this;
	this.event = event;
	this.options1 = options1.zpp_inner;
	this.options2 = options2.zpp_inner;
	this.allowSleepingCallbacks = false;
};
$hxClasses["zpp_nape.callbacks.ZPP_InteractionListener"] = zpp_$nape_callbacks_ZPP_$InteractionListener;
zpp_$nape_callbacks_ZPP_$InteractionListener.__name__ = ["zpp_nape","callbacks","ZPP_InteractionListener"];
zpp_$nape_callbacks_ZPP_$InteractionListener.__super__ = zpp_$nape_callbacks_ZPP_$Listener;
zpp_$nape_callbacks_ZPP_$InteractionListener.prototype = $extend(zpp_$nape_callbacks_ZPP_$Listener.prototype,{
	CbSetset: function(A,B,lambda) {
		var U = zpp_$nape_callbacks_ZPP_$InteractionListener.UCbSet;
		var V = zpp_$nape_callbacks_ZPP_$InteractionListener.VCbSet;
		var W = zpp_$nape_callbacks_ZPP_$InteractionListener.WCbSet;
		var aite = A.head;
		var bite = B.head;
		while(aite != null && bite != null) {
			var a = aite.elt;
			var b = bite.elt;
			if(a == b) {
				W.inlined_add(a);
				aite = aite.next;
				bite = bite.next;
			} else if(zpp_$nape_callbacks_ZPP_$CbSet.setlt(a,b)) {
				U.inlined_add(a);
				aite = aite.next;
			} else {
				V.inlined_add(b);
				bite = bite.next;
			}
		}
		while(aite != null) {
			U.inlined_add(aite.elt);
			aite = aite.next;
		}
		while(bite != null) {
			V.inlined_add(bite.elt);
			bite = bite.next;
		}
		while(!(U.head == null)) {
			var x = U.pop_unsafe();
			var cx_ite = B.head;
			while(cx_ite != null) {
				var y = cx_ite.elt;
				lambda(x,y);
				cx_ite = cx_ite.next;
			}
		}
		while(!(V.head == null)) {
			var x1 = V.pop_unsafe();
			var cx_ite1 = W.head;
			while(cx_ite1 != null) {
				var y1 = cx_ite1.elt;
				lambda(x1,y1);
				cx_ite1 = cx_ite1.next;
			}
		}
		while(!(W.head == null)) {
			var x2 = W.pop_unsafe();
			lambda(x2,x2);
			var cx_ite2 = W.head;
			while(cx_ite2 != null) {
				var y2 = cx_ite2.elt;
				lambda(x2,y2);
				cx_ite2 = cx_ite2.next;
			}
		}
	}
	,CbTypeset: function(A,B,lambda) {
		var U = zpp_$nape_callbacks_ZPP_$InteractionListener.UCbType;
		var V = zpp_$nape_callbacks_ZPP_$InteractionListener.VCbType;
		var W = zpp_$nape_callbacks_ZPP_$InteractionListener.WCbType;
		var aite = A.head;
		var bite = B.head;
		while(aite != null && bite != null) {
			var a = aite.elt;
			var b = bite.elt;
			if(a == b) {
				W.inlined_add(a);
				aite = aite.next;
				bite = bite.next;
			} else if(a.id < b.id) {
				U.inlined_add(a);
				aite = aite.next;
			} else {
				V.inlined_add(b);
				bite = bite.next;
			}
		}
		while(aite != null) {
			U.inlined_add(aite.elt);
			aite = aite.next;
		}
		while(bite != null) {
			V.inlined_add(bite.elt);
			bite = bite.next;
		}
		while(!(U.head == null)) {
			var x = U.pop_unsafe();
			var cx_ite = B.head;
			while(cx_ite != null) {
				var y = cx_ite.elt;
				lambda(x,y);
				cx_ite = cx_ite.next;
			}
		}
		while(!(V.head == null)) {
			var x1 = V.pop_unsafe();
			var cx_ite1 = W.head;
			while(cx_ite1 != null) {
				var y1 = cx_ite1.elt;
				lambda(x1,y1);
				cx_ite1 = cx_ite1.next;
			}
		}
		while(!(W.head == null)) {
			var x2 = W.pop_unsafe();
			lambda(x2,x2);
			var cx_ite2 = W.head;
			while(cx_ite2 != null) {
				var y2 = cx_ite2.elt;
				lambda(x2,y2);
				cx_ite2 = cx_ite2.next;
			}
		}
	}
	,with_uniquesets: function(fresh) {
		var _g = this;
		var set;
		if(zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool == null) set = new zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair(); else {
			set = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool;
			zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool = set.next;
			set.next = null;
		}
		null;
		set.lt = zpp_$nape_callbacks_ZPP_$CbSetPair.setlt;
		this.CbTypeset(this.options1.includes,this.options2.includes,function(a,b) {
			_g.CbSetset(a.cbsets,b.cbsets,function(a1,b1) {
				a1.validate();
				b1.validate();
				if(zpp_$nape_callbacks_ZPP_$CbSet.single_intersection(a1,b1,_g)) set.try_insert(zpp_$nape_callbacks_ZPP_$CbSetPair.get(a1,b1));
			});
		});
		set.clear_with(function(pair) {
			if(fresh) _g.space.freshListenerType(pair.a,pair.b); else _g.space.nullListenerType(pair.a,pair.b);
			var o = pair;
			o.a = o.b = null;
			o.listeners.clear();
			o.next = zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool;
			zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool = o;
		});
		var o1 = set;
		o1.data = null;
		o1.lt = null;
		o1.swapped = null;
		o1.next = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool;
		zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool = o1;
	}
	,with_union: function(lambda) {
		var ite1 = this.options1.includes.head;
		var ite2 = this.options2.includes.head;
		while(ite1 != null && ite2 != null) {
			var cb1 = ite1.elt;
			var cb2 = ite2.elt;
			if(cb1 == cb2) {
				lambda(cb1);
				ite1 = ite1.next;
				ite2 = ite2.next;
			} else if(cb1.id < cb2.id) {
				lambda(cb1);
				ite1 = ite1.next;
			} else {
				lambda(cb2);
				ite2 = ite2.next;
			}
		}
		while(ite1 != null) {
			lambda(ite1.elt);
			ite1 = ite1.next;
		}
		while(ite2 != null) {
			lambda(ite2.elt);
			ite2 = ite2.next;
		}
	}
	,addedToSpace: function() {
		var _g = this;
		var pre = this.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_PRE;
		this.with_union(function(cb) {
			cb.addint(_g);
			if(pre) {
				var cx_ite = cb.interactors.head;
				while(cx_ite != null) {
					var i = cx_ite.elt;
					i.wake();
					cx_ite = cx_ite.next;
				}
			}
		});
		this.options1.handler = $bind(this,this.cbtype_change1);
		this.options2.handler = $bind(this,this.cbtype_change2);
		this.with_uniquesets(true);
	}
	,removedFromSpace: function() {
		var _g = this;
		this.with_uniquesets(false);
		var pre = this.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_PRE;
		this.with_union(function(cb) {
			cb.listeners.remove(_g);
			cb.invalidateint();
			if(pre) {
				var cx_ite = cb.interactors.head;
				while(cx_ite != null) {
					var i = cx_ite.elt;
					i.wake();
					cx_ite = cx_ite.next;
				}
			}
		});
		this.options1.handler = null;
		this.options2.handler = null;
	}
	,cbtype_change1: function(cb,included,added) {
		this.cbtype_change(this.options1,cb,included,added);
	}
	,cbtype_change2: function(cb,included,added) {
		this.cbtype_change(this.options2,cb,included,added);
	}
	,cbtype_change: function(options,cb,included,added) {
		this.removedFromSpace();
		options.effect_change(cb,included,added);
		this.addedToSpace();
		null;
	}
	,__class__: zpp_$nape_callbacks_ZPP_$InteractionListener
});
var zpp_$nape_callbacks_ZPP_$OptionType = function() {
	this.wrap_excludes = null;
	this.wrap_includes = null;
	this.excludes = null;
	this.includes = null;
	this.handler = null;
	this.outer = null;
	this.includes = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
	this.excludes = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
};
$hxClasses["zpp_nape.callbacks.ZPP_OptionType"] = zpp_$nape_callbacks_ZPP_$OptionType;
zpp_$nape_callbacks_ZPP_$OptionType.__name__ = ["zpp_nape","callbacks","ZPP_OptionType"];
zpp_$nape_callbacks_ZPP_$OptionType.argument = function(val) {
	if(val == null) return new nape_callbacks_OptionType(); else if(js_Boot.__instanceof(val,nape_callbacks_OptionType)) return val; else return new nape_callbacks_OptionType().including(val);
};
zpp_$nape_callbacks_ZPP_$OptionType.prototype = {
	setup_includes: function() {
		this.wrap_includes = zpp_$nape_util_ZPP_$CbTypeList.get(this.includes,true);
	}
	,setup_excludes: function() {
		this.wrap_excludes = zpp_$nape_util_ZPP_$CbTypeList.get(this.excludes,true);
	}
	,excluded: function(xs) {
		return this.nonemptyintersection(xs,this.excludes);
	}
	,compatible: function(xs) {
		return this.nonemptyintersection(xs,this.includes) && !this.nonemptyintersection(xs,this.excludes);
	}
	,nonemptyintersection: function(xs,ys) {
		var ret = false;
		var xite = xs.head;
		var eite = ys.head;
		while(eite != null && xite != null) {
			var ex = eite.elt;
			var xi = xite.elt;
			if(ex == xi) {
				ret = true;
				break;
			} else if(ex.id < xi.id) eite = eite.next; else xite = xite.next;
		}
		return ret;
	}
	,effect_change: function(val,included,added) {
		if(included) {
			if(added) {
				var pre = null;
				var cx_ite = this.includes.head;
				while(cx_ite != null) {
					var j = cx_ite.elt;
					if(val.id < j.id) break;
					pre = cx_ite;
					cx_ite = cx_ite.next;
				}
				this.includes.inlined_insert(pre,val);
			} else this.includes.remove(val);
		} else if(added) {
			var pre1 = null;
			var cx_ite1 = this.excludes.head;
			while(cx_ite1 != null) {
				var j1 = cx_ite1.elt;
				if(val.id < j1.id) break;
				pre1 = cx_ite1;
				cx_ite1 = cx_ite1.next;
			}
			this.excludes.inlined_insert(pre1,val);
		} else this.excludes.remove(val);
	}
	,append_type: function(list,val) {
		if(list == this.includes) {
			if(!this.includes.has(val)) {
				if(!this.excludes.has(val)) {
					if(this.handler != null) this.handler(val,true,true); else this.effect_change(val,true,true);
				} else if(this.handler != null) this.handler(val,false,false); else this.effect_change(val,false,false);
			}
		} else if(!this.excludes.has(val)) {
			if(!this.includes.has(val)) {
				if(this.handler != null) this.handler(val,false,true); else this.effect_change(val,false,true);
			} else if(this.handler != null) this.handler(val,true,false); else this.effect_change(val,true,false);
		}
	}
	,append: function(list,val) {
		if(val == null) throw new js__$Boot_HaxeError("Error: Cannot append null, only CbType and CbType list values");
		if(js_Boot.__instanceof(val,nape_callbacks_CbType)) {
			var cb = val;
			this.append_type(list,cb.zpp_inner);
		} else if(js_Boot.__instanceof(val,nape_callbacks_CbTypeList)) {
			var cbs = val;
			var _g;
			cbs.zpp_inner.valmod();
			_g = nape_callbacks_CbTypeIterator.get(cbs);
			while(_g.hasNext()) {
				var cb1;
				_g.zpp_critical = false;
				cb1 = _g.zpp_inner.at(_g.zpp_i++);
				this.append_type(list,cb1.zpp_inner);
			}
		} else if((val instanceof Array) && val.__enum__ == null) {
			var cbs1 = val;
			var _g1 = 0;
			while(_g1 < cbs1.length) {
				var cb2 = cbs1[_g1];
				++_g1;
				if(!js_Boot.__instanceof(cb2,nape_callbacks_CbType)) throw new js__$Boot_HaxeError("Error: Cannot append non-CbType or CbType list value");
				var cbx = cb2;
				this.append_type(list,cbx.zpp_inner);
			}
		} else throw new js__$Boot_HaxeError("Error: Cannot append non-CbType or CbType list value");
	}
	,__class__: zpp_$nape_callbacks_ZPP_$OptionType
};
var zpp_$nape_constraint_ZPP_$Constraint = function() {
	this.pre_dt = 0.0;
	this.cbSet = null;
	this.cbTypes = null;
	this.__velocity = false;
	this.ignore = false;
	this.component = null;
	this.removeOnBreak = false;
	this.breakUnderError = false;
	this.breakUnderForce = false;
	this.maxError = 0.0;
	this.maxForce = 0.0;
	this.damping = 0.0;
	this.frequency = 0.0;
	this.stiff = false;
	this.active = false;
	this.space = null;
	this.compound = null;
	this.userData = null;
	this.id = 0;
	this.outer = null;
	this.__velocity = false;
	this.id = zpp_$nape_ZPP_$ID.Constraint();
	this.stiff = true;
	this.active = true;
	this.ignore = false;
	this.frequency = 10;
	this.damping = 1;
	this.maxForce = Infinity;
	this.maxError = Infinity;
	this.breakUnderForce = false;
	this.removeOnBreak = true;
	this.pre_dt = -1.0;
	this.cbTypes = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
};
$hxClasses["zpp_nape.constraint.ZPP_Constraint"] = zpp_$nape_constraint_ZPP_$Constraint;
zpp_$nape_constraint_ZPP_$Constraint.__name__ = ["zpp_nape","constraint","ZPP_Constraint"];
zpp_$nape_constraint_ZPP_$Constraint.prototype = {
	immutable_midstep: function(name) {
		if(this.space != null && this.space.midstep) throw new js__$Boot_HaxeError("Error: Constraint::" + name + " cannot be set during space step()");
	}
	,insert_cbtype: function(cb) {
		if(!this.cbTypes.has(cb)) {
			if(this.space != null) {
				this.dealloc_cbSet();
				cb.constraints.add(this);
			}
			var pre = null;
			var cx_ite = this.cbTypes.head;
			while(cx_ite != null) {
				var j = cx_ite.elt;
				if(cb.id < j.id) break;
				pre = cx_ite;
				cx_ite = cx_ite.next;
			}
			this.cbTypes.inlined_insert(pre,cb);
			if(this.space != null) {
				this.alloc_cbSet();
				this.wake();
			}
		}
	}
	,alloc_cbSet: function() {
		if((this.cbSet = this.space.cbsets.get(this.cbTypes)) != null) {
			this.cbSet.count++;
			this.cbSet.constraints.add(this);
		}
	}
	,dealloc_cbSet: function() {
		if(this.cbSet != null) {
			this.cbSet.constraints.remove(this);
			if(--this.cbSet.count == 0) {
				this.space.cbsets.remove(this.cbSet);
				var o = this.cbSet;
				o.free();
				o.next = zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool;
				zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool = o;
			}
			this.cbSet = null;
		}
	}
	,addedToSpace: function() {
		if(this.active) this.activeInSpace();
		this.activeBodies();
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.constraints.add(this);
			cx_ite = cx_ite.next;
		}
	}
	,removedFromSpace: function() {
		if(this.active) this.inactiveOrOutSpace();
		this.inactiveBodies();
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.constraints.remove(this);
			cx_ite = cx_ite.next;
		}
	}
	,activeInSpace: function() {
		this.alloc_cbSet();
		if(zpp_$nape_space_ZPP_$Component.zpp_pool == null) this.component = new zpp_$nape_space_ZPP_$Component(); else {
			this.component = zpp_$nape_space_ZPP_$Component.zpp_pool;
			zpp_$nape_space_ZPP_$Component.zpp_pool = this.component.next;
			this.component.next = null;
		}
		null;
		this.component.isBody = false;
		this.component.constraint = this;
	}
	,inactiveOrOutSpace: function() {
		this.dealloc_cbSet();
		var o = this.component;
		o.body = null;
		o.constraint = null;
		null;
		o.next = zpp_$nape_space_ZPP_$Component.zpp_pool;
		zpp_$nape_space_ZPP_$Component.zpp_pool = o;
		this.component = null;
	}
	,activeBodies: function() {
	}
	,inactiveBodies: function() {
	}
	,clearcache: function() {
	}
	,validate: function() {
	}
	,wake_connected: function() {
	}
	,forest: function() {
	}
	,pair_exists: function(id,di) {
		return false;
	}
	,broken: function() {
	}
	,warmStart: function() {
	}
	,preStep: function(dt) {
		return false;
	}
	,applyImpulseVel: function() {
		return false;
	}
	,applyImpulsePos: function() {
		return false;
	}
	,wake: function() {
		if(this.space != null) this.space.wake_constraint(this);
	}
	,__class__: zpp_$nape_constraint_ZPP_$Constraint
};
var zpp_$nape_constraint_ZPP_$DistanceJoint = function() {
	this.stepped = false;
	this.bias = 0.0;
	this.gamma = 0.0;
	this.jMax = 0.0;
	this.jAcc = 0.0;
	this.kMass = 0.0;
	this.wrap_a2 = null;
	this.a2rely = 0.0;
	this.a2relx = 0.0;
	this.a2localy = 0.0;
	this.a2localx = 0.0;
	this.b2 = null;
	this.wrap_a1 = null;
	this.a1rely = 0.0;
	this.a1relx = 0.0;
	this.a1localy = 0.0;
	this.a1localx = 0.0;
	this.b1 = null;
	this.cx2 = 0.0;
	this.cx1 = 0.0;
	this.ny = 0.0;
	this.nx = 0.0;
	this.equal = false;
	this.slack = false;
	this.jointMax = 0.0;
	this.jointMin = 0.0;
	this.outer_zn = null;
	zpp_$nape_constraint_ZPP_$Constraint.call(this);
	this.a1localx = 0;
	this.a1localy = 0;
	this.a1relx = 0;
	this.a1rely = 0;
	this.a2localx = 0;
	this.a2localy = 0;
	this.a2relx = 0;
	this.a2rely = 0;
	this.jAcc = 0;
	this.jMax = Infinity;
	this.stepped = false;
	this.cx1 = this.cx2 = 0;
};
$hxClasses["zpp_nape.constraint.ZPP_DistanceJoint"] = zpp_$nape_constraint_ZPP_$DistanceJoint;
zpp_$nape_constraint_ZPP_$DistanceJoint.__name__ = ["zpp_nape","constraint","ZPP_DistanceJoint"];
zpp_$nape_constraint_ZPP_$DistanceJoint.__super__ = zpp_$nape_constraint_ZPP_$Constraint;
zpp_$nape_constraint_ZPP_$DistanceJoint.prototype = $extend(zpp_$nape_constraint_ZPP_$Constraint.prototype,{
	activeBodies: function() {
		if(this.b1 != null) this.b1.constraints.add(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.add(this);
		}
	}
	,inactiveBodies: function() {
		if(this.b1 != null) this.b1.constraints.remove(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.remove(this);
		}
	}
	,validate_a1: function() {
		this.wrap_a1.zpp_inner.x = this.a1localx;
		this.wrap_a1.zpp_inner.y = this.a1localy;
	}
	,invalidate_a1: function(x) {
		this.immutable_midstep("Constraint::" + "a1");
		this.a1localx = x.x;
		this.a1localy = x.y;
		this.wake();
	}
	,setup_a1: function() {
		this.wrap_a1 = nape_geom_Vec2.get(this.a1localx,this.a1localy,null);
		this.wrap_a1.zpp_inner._inuse = true;
		this.wrap_a1.zpp_inner._validate = $bind(this,this.validate_a1);
		this.wrap_a1.zpp_inner._invalidate = $bind(this,this.invalidate_a1);
	}
	,validate_a2: function() {
		this.wrap_a2.zpp_inner.x = this.a2localx;
		this.wrap_a2.zpp_inner.y = this.a2localy;
	}
	,invalidate_a2: function(x) {
		this.immutable_midstep("Constraint::" + "a2");
		this.a2localx = x.x;
		this.a2localy = x.y;
		this.wake();
	}
	,setup_a2: function() {
		this.wrap_a2 = nape_geom_Vec2.get(this.a2localx,this.a2localy,null);
		this.wrap_a2.zpp_inner._inuse = true;
		this.wrap_a2.zpp_inner._validate = $bind(this,this.validate_a2);
		this.wrap_a2.zpp_inner._invalidate = $bind(this,this.invalidate_a2);
	}
	,validate: function() {
		if(this.b1 == null || this.b2 == null) throw new js__$Boot_HaxeError("Error: DistanceJoint cannot be simulated null bodies");
		if(this.b1 == this.b2) throw new js__$Boot_HaxeError("Error: DistanceJoint cannot be simulated with body1 == body2");
		if(this.b1.space != this.space || this.b2.space != this.space) throw new js__$Boot_HaxeError("Error: Constraints must have each body within the same space to which the constraint has been assigned");
		if(this.jointMin > this.jointMax) throw new js__$Boot_HaxeError("Error: DistanceJoint must have jointMin <= jointMax");
		if(!(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) throw new js__$Boot_HaxeError("Error: Constraints cannot have both bodies non-dynamic");
	}
	,wake_connected: function() {
		if(this.b1 != null && this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b1.wake();
		if(this.b2 != null && this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b2.wake();
	}
	,forest: function() {
		if(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr;
			if(this.b1.component == this.b1.component.parent) xr = this.b1.component; else {
				var obj = this.b1.component;
				var stack = null;
				while(obj != obj.parent) {
					var nxt = obj.parent;
					obj.parent = stack;
					stack = obj;
					obj = nxt;
				}
				while(stack != null) {
					var nxt1 = stack.parent;
					stack.parent = obj;
					stack = nxt1;
				}
				xr = obj;
			}
			var yr;
			if(this.component == this.component.parent) yr = this.component; else {
				var obj1 = this.component;
				var stack1 = null;
				while(obj1 != obj1.parent) {
					var nxt2 = obj1.parent;
					obj1.parent = stack1;
					stack1 = obj1;
					obj1 = nxt2;
				}
				while(stack1 != null) {
					var nxt3 = stack1.parent;
					stack1.parent = obj1;
					stack1 = nxt3;
				}
				yr = obj1;
			}
			if(xr != yr) {
				if(xr.rank < yr.rank) xr.parent = yr; else if(xr.rank > yr.rank) yr.parent = xr; else {
					yr.parent = xr;
					xr.rank++;
				}
			}
		}
		if(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr1;
			if(this.b2.component == this.b2.component.parent) xr1 = this.b2.component; else {
				var obj2 = this.b2.component;
				var stack2 = null;
				while(obj2 != obj2.parent) {
					var nxt4 = obj2.parent;
					obj2.parent = stack2;
					stack2 = obj2;
					obj2 = nxt4;
				}
				while(stack2 != null) {
					var nxt5 = stack2.parent;
					stack2.parent = obj2;
					stack2 = nxt5;
				}
				xr1 = obj2;
			}
			var yr1;
			if(this.component == this.component.parent) yr1 = this.component; else {
				var obj3 = this.component;
				var stack3 = null;
				while(obj3 != obj3.parent) {
					var nxt6 = obj3.parent;
					obj3.parent = stack3;
					stack3 = obj3;
					obj3 = nxt6;
				}
				while(stack3 != null) {
					var nxt7 = stack3.parent;
					stack3.parent = obj3;
					stack3 = nxt7;
				}
				yr1 = obj3;
			}
			if(xr1 != yr1) {
				if(xr1.rank < yr1.rank) xr1.parent = yr1; else if(xr1.rank > yr1.rank) yr1.parent = xr1; else {
					yr1.parent = xr1;
					xr1.rank++;
				}
			}
		}
	}
	,pair_exists: function(id,di) {
		return this.b1.id == id && this.b2.id == di || this.b1.id == di && this.b2.id == id;
	}
	,clearcache: function() {
		this.jAcc = 0;
		this.pre_dt = -1.0;
	}
	,preStep: function(dt) {
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		this.stepped = true;
		this.equal = this.jointMin == this.jointMax;
		this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var C;
		this.nx = this.b2.posx + this.a2relx - (this.b1.posx + this.a1relx);
		this.ny = this.b2.posy + this.a2rely - (this.b1.posy + this.a1rely);
		var C1 = this.nx * this.nx + this.ny * this.ny;
		if(C1 < nape_Config.epsilon) {
			this.nx = 0;
			this.ny = 0;
			C1 = 0;
			this.slack = true;
		} else {
			C1 = Math.sqrt(C1);
			var t = 1.0 / C1;
			this.nx *= t;
			this.ny *= t;
			if(this.equal) {
				C1 -= this.jointMax;
				this.slack = false;
			} else if(C1 < this.jointMin) {
				C1 = this.jointMin - C1;
				this.nx = -this.nx;
				this.ny = -this.ny;
				this.slack = false;
			} else if(C1 > this.jointMax) {
				C1 -= this.jointMax;
				this.slack = false;
			} else {
				this.nx = 0;
				this.ny = 0;
				C1 = 0;
				this.slack = true;
			}
		}
		C = C1;
		if(!this.slack) {
			this.cx1 = this.ny * this.a1relx - this.nx * this.a1rely;
			this.cx2 = this.ny * this.a2relx - this.nx * this.a2rely;
			this.kMass = this.b1.smass + this.b2.smass + this.cx1 * this.cx1 * this.b1.sinertia + this.cx2 * this.cx2 * this.b2.sinertia;
			if(this.kMass != 0) this.kMass = 1 / this.kMass; else this.jAcc = 0;
			if(!this.stiff) {
				if(this.breakUnderError && C * C > this.maxError * this.maxError) return true;
				var biasCoef;
				var omega = 2 * Math.PI * this.frequency;
				this.gamma = 1 / (dt * omega * (2 * this.damping + omega * dt));
				var ig = 1 / (1 + this.gamma);
				biasCoef = dt * omega * omega * this.gamma;
				this.gamma *= ig;
				this.kMass *= ig;
				this.bias = -C * biasCoef;
				if(this.bias < -this.maxError) this.bias = -this.maxError; else if(this.bias > this.maxError) this.bias = this.maxError;
			} else {
				this.bias = 0;
				this.gamma = 0;
			}
			this.jAcc *= dtratio;
			this.jMax = this.maxForce * dt;
		}
		return false;
	}
	,warmStart: function() {
		if(!this.slack) {
			var t = this.b1.imass * this.jAcc;
			this.b1.velx -= this.nx * t;
			this.b1.vely -= this.ny * t;
			var t1 = this.b2.imass * this.jAcc;
			this.b2.velx += this.nx * t1;
			this.b2.vely += this.ny * t1;
			this.b1.angvel -= this.cx1 * this.b1.iinertia * this.jAcc;
			this.b2.angvel += this.cx2 * this.b2.iinertia * this.jAcc;
		}
	}
	,applyImpulseVel: function() {
		if(this.slack) return false;
		var E = this.nx * (this.b2.velx + this.b2.kinvelx - this.b1.velx - this.b1.kinvelx) + this.ny * (this.b2.vely + this.b2.kinvely - this.b1.vely - this.b1.kinvely) + (this.b2.angvel + this.b2.kinangvel) * this.cx2 - (this.b1.angvel + this.b1.kinangvel) * this.cx1;
		var j = this.kMass * (this.bias - E) - this.jAcc * this.gamma;
		var jOld = this.jAcc;
		this.jAcc += j;
		if(!this.equal && this.jAcc > 0) this.jAcc = 0;
		if(this.breakUnderForce && this.jAcc < -this.jMax) return true;
		if(!this.stiff) {
			if(this.jAcc < -this.jMax) this.jAcc = -this.jMax;
		}
		j = this.jAcc - jOld;
		var t = this.b1.imass * j;
		this.b1.velx -= this.nx * t;
		this.b1.vely -= this.ny * t;
		var t1 = this.b2.imass * j;
		this.b2.velx += this.nx * t1;
		this.b2.vely += this.ny * t1;
		this.b1.angvel -= this.cx1 * this.b1.iinertia * j;
		this.b2.angvel += this.cx2 * this.b2.iinertia * j;
		return false;
	}
	,applyImpulsePos: function() {
		var E;
		var j;
		var r1x = 0.0;
		var r1y = 0.0;
		r1x = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		r1y = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		var r2x = 0.0;
		var r2y = 0.0;
		r2x = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		r2y = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var slack;
		var nx = 0.0;
		var ny = 0.0;
		nx = this.b2.posx + r2x - (this.b1.posx + r1x);
		ny = this.b2.posy + r2y - (this.b1.posy + r1y);
		var C = nx * nx + ny * ny;
		if(C < nape_Config.epsilon) {
			nx = 0;
			ny = 0;
			C = 0;
			slack = true;
		} else {
			C = Math.sqrt(C);
			var t = 1.0 / C;
			nx *= t;
			ny *= t;
			if(this.equal) {
				C -= this.jointMax;
				slack = false;
			} else if(C < this.jointMin) {
				C = this.jointMin - C;
				nx = -nx;
				ny = -ny;
				slack = false;
			} else if(C > this.jointMax) {
				C -= this.jointMax;
				slack = false;
			} else {
				nx = 0;
				ny = 0;
				C = 0;
				slack = true;
			}
		}
		E = C;
		if(!slack) {
			if(this.breakUnderError && E * E > this.maxError * this.maxError) return true;
			if(E * E < nape_Config.constraintLinearSlop * nape_Config.constraintLinearSlop) return false;
			E *= 0.5;
			if(E * E > 6) {
				var k1 = this.b1.smass + this.b2.smass;
				if(k1 > nape_Config.epsilon) {
					k1 = 0.75 / k1;
					j = -E * k1;
					if(this.equal || j < 0) {
						var t1 = j * this.b1.imass;
						this.b1.posx -= nx * t1;
						this.b1.posy -= ny * t1;
						var t2 = j * this.b2.imass;
						this.b2.posx += nx * t2;
						this.b2.posy += ny * t2;
						nx = this.b2.posx + r2x - (this.b1.posx + r1x);
						ny = this.b2.posy + r2y - (this.b1.posy + r1y);
						var C1 = nx * nx + ny * ny;
						if(C1 < nape_Config.epsilon) {
							nx = 0;
							ny = 0;
							C1 = 0;
							slack = true;
						} else {
							C1 = Math.sqrt(C1);
							var t3 = 1.0 / C1;
							nx *= t3;
							ny *= t3;
							if(this.equal) {
								C1 -= this.jointMax;
								slack = false;
							} else if(C1 < this.jointMin) {
								C1 = this.jointMin - C1;
								nx = -nx;
								ny = -ny;
								slack = false;
							} else if(C1 > this.jointMax) {
								C1 -= this.jointMax;
								slack = false;
							} else {
								nx = 0;
								ny = 0;
								C1 = 0;
								slack = true;
							}
						}
						E = C1;
						E *= 0.5;
					}
				}
			}
			var cx1;
			var cx2;
			var k;
			cx1 = ny * r1x - nx * r1y;
			cx2 = ny * r2x - nx * r2y;
			k = this.b1.smass + this.b2.smass + cx1 * cx1 * this.b1.sinertia + cx2 * cx2 * this.b2.sinertia;
			if(k != 0) k = 1 / k;
			j = -E * k;
			if(this.equal || j < 0) {
				var t4 = this.b1.imass * j;
				this.b1.posx -= nx * t4;
				this.b1.posy -= ny * t4;
				var t5 = this.b2.imass * j;
				this.b2.posx += nx * t5;
				this.b2.posy += ny * t5;
				this.b1.delta_rot(-cx1 * this.b1.iinertia * j);
				this.b2.delta_rot(cx2 * this.b2.iinertia * j);
			}
		}
		return false;
	}
	,__class__: zpp_$nape_constraint_ZPP_$DistanceJoint
});
var zpp_$nape_constraint_ZPP_$LineJoint = function() {
	this.biasy = 0.0;
	this.biasx = 0.0;
	this.jAccy = 0.0;
	this.jAccx = 0.0;
	this.kMassc = 0.0;
	this.kMassb = 0.0;
	this.kMassa = 0.0;
	this.wrap_n = null;
	this.nrely = 0.0;
	this.nrelx = 0.0;
	this.nlocaly = 0.0;
	this.nlocalx = 0.0;
	this.wrap_a2 = null;
	this.a2rely = 0.0;
	this.a2relx = 0.0;
	this.a2localy = 0.0;
	this.a2localx = 0.0;
	this.wrap_a1 = null;
	this.a1rely = 0.0;
	this.a1relx = 0.0;
	this.a1localy = 0.0;
	this.a1localx = 0.0;
	this.cx2 = 0.0;
	this.cx1 = 0.0;
	this.dot2 = 0.0;
	this.dot1 = 0.0;
	this.equal = false;
	this.jointMax = 0.0;
	this.jointMin = 0.0;
	this.scale = 0.0;
	this.outer_zn = null;
	zpp_$nape_constraint_ZPP_$Constraint.call(this);
	this.a1localx = 0;
	this.a1localy = 0;
	this.a1relx = 0;
	this.a1rely = 0;
	this.a2localx = 0;
	this.a2localy = 0;
	this.a2relx = 0;
	this.a2rely = 0;
	this.nlocalx = 0;
	this.nlocaly = 0;
	this.nrelx = 0;
	this.nrely = 0;
	this.jAccx = 0;
	this.jAccy = 0;
	this.jMax = Infinity;
	this.jointMin = -Infinity;
	this.jointMax = Infinity;
	this.stepped = false;
};
$hxClasses["zpp_nape.constraint.ZPP_LineJoint"] = zpp_$nape_constraint_ZPP_$LineJoint;
zpp_$nape_constraint_ZPP_$LineJoint.__name__ = ["zpp_nape","constraint","ZPP_LineJoint"];
zpp_$nape_constraint_ZPP_$LineJoint.__super__ = zpp_$nape_constraint_ZPP_$Constraint;
zpp_$nape_constraint_ZPP_$LineJoint.prototype = $extend(zpp_$nape_constraint_ZPP_$Constraint.prototype,{
	activeBodies: function() {
		if(this.b1 != null) this.b1.constraints.add(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.add(this);
		}
	}
	,inactiveBodies: function() {
		if(this.b1 != null) this.b1.constraints.remove(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.remove(this);
		}
	}
	,validate_a1: function() {
		this.wrap_a1.zpp_inner.x = this.a1localx;
		this.wrap_a1.zpp_inner.y = this.a1localy;
	}
	,invalidate_a1: function(x) {
		this.immutable_midstep("Constraint::" + "a1");
		this.a1localx = x.x;
		this.a1localy = x.y;
		this.wake();
	}
	,setup_a1: function() {
		this.wrap_a1 = nape_geom_Vec2.get(this.a1localx,this.a1localy,null);
		this.wrap_a1.zpp_inner._inuse = true;
		this.wrap_a1.zpp_inner._validate = $bind(this,this.validate_a1);
		this.wrap_a1.zpp_inner._invalidate = $bind(this,this.invalidate_a1);
	}
	,validate_a2: function() {
		this.wrap_a2.zpp_inner.x = this.a2localx;
		this.wrap_a2.zpp_inner.y = this.a2localy;
	}
	,invalidate_a2: function(x) {
		this.immutable_midstep("Constraint::" + "a2");
		this.a2localx = x.x;
		this.a2localy = x.y;
		this.wake();
	}
	,setup_a2: function() {
		this.wrap_a2 = nape_geom_Vec2.get(this.a2localx,this.a2localy,null);
		this.wrap_a2.zpp_inner._inuse = true;
		this.wrap_a2.zpp_inner._validate = $bind(this,this.validate_a2);
		this.wrap_a2.zpp_inner._invalidate = $bind(this,this.invalidate_a2);
	}
	,validate_n: function() {
		this.wrap_n.zpp_inner.x = this.nlocalx;
		this.wrap_n.zpp_inner.y = this.nlocaly;
	}
	,invalidate_n: function(x) {
		this.immutable_midstep("Constraint::" + "n");
		this.nlocalx = x.x;
		this.nlocaly = x.y;
		this.zip_n = true;
		this.wake();
	}
	,setup_n: function() {
		this.wrap_n = nape_geom_Vec2.get(this.nlocalx,this.nlocaly,null);
		this.wrap_n.zpp_inner._inuse = true;
		this.wrap_n.zpp_inner._validate = $bind(this,this.validate_n);
		this.wrap_n.zpp_inner._invalidate = $bind(this,this.invalidate_n);
	}
	,validate_norm: function() {
		if(this.zip_n) {
			this.zip_n = false;
			var d = this.nlocalx * this.nlocalx + this.nlocaly * this.nlocaly;
			var imag = 1.0 / Math.sqrt(d);
			var t = imag;
			this.nlocalx *= t;
			this.nlocaly *= t;
		}
	}
	,validate: function() {
		if(this.b1 == null || this.b2 == null) throw new js__$Boot_HaxeError("Error: AngleJoint cannot be simulated null bodies");
		if(this.b1 == this.b2) throw new js__$Boot_HaxeError("Error: DistanceJoint cannot be simulated with body1 == body2");
		if(this.b1.space != this.space || this.b2.space != this.space) throw new js__$Boot_HaxeError("Error: Constraints must have each body within the same space to which the constraint has been assigned");
		if(this.jointMin > this.jointMax) throw new js__$Boot_HaxeError("Error: DistanceJoint must have jointMin <= jointMax");
		if(this.nlocalx * this.nlocalx + this.nlocaly * this.nlocaly < nape_Config.epsilon) throw new js__$Boot_HaxeError("Error: DistanceJoint direction must be non-degenerate");
		if(!(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) throw new js__$Boot_HaxeError("Error: Constraints cannot have both bodies non-dynamic");
	}
	,wake_connected: function() {
		if(this.b1 != null && this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b1.wake();
		if(this.b2 != null && this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b2.wake();
	}
	,forest: function() {
		if(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr;
			if(this.b1.component == this.b1.component.parent) xr = this.b1.component; else {
				var obj = this.b1.component;
				var stack = null;
				while(obj != obj.parent) {
					var nxt = obj.parent;
					obj.parent = stack;
					stack = obj;
					obj = nxt;
				}
				while(stack != null) {
					var nxt1 = stack.parent;
					stack.parent = obj;
					stack = nxt1;
				}
				xr = obj;
			}
			var yr;
			if(this.component == this.component.parent) yr = this.component; else {
				var obj1 = this.component;
				var stack1 = null;
				while(obj1 != obj1.parent) {
					var nxt2 = obj1.parent;
					obj1.parent = stack1;
					stack1 = obj1;
					obj1 = nxt2;
				}
				while(stack1 != null) {
					var nxt3 = stack1.parent;
					stack1.parent = obj1;
					stack1 = nxt3;
				}
				yr = obj1;
			}
			if(xr != yr) {
				if(xr.rank < yr.rank) xr.parent = yr; else if(xr.rank > yr.rank) yr.parent = xr; else {
					yr.parent = xr;
					xr.rank++;
				}
			}
		}
		if(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr1;
			if(this.b2.component == this.b2.component.parent) xr1 = this.b2.component; else {
				var obj2 = this.b2.component;
				var stack2 = null;
				while(obj2 != obj2.parent) {
					var nxt4 = obj2.parent;
					obj2.parent = stack2;
					stack2 = obj2;
					obj2 = nxt4;
				}
				while(stack2 != null) {
					var nxt5 = stack2.parent;
					stack2.parent = obj2;
					stack2 = nxt5;
				}
				xr1 = obj2;
			}
			var yr1;
			if(this.component == this.component.parent) yr1 = this.component; else {
				var obj3 = this.component;
				var stack3 = null;
				while(obj3 != obj3.parent) {
					var nxt6 = obj3.parent;
					obj3.parent = stack3;
					stack3 = obj3;
					obj3 = nxt6;
				}
				while(stack3 != null) {
					var nxt7 = stack3.parent;
					stack3.parent = obj3;
					stack3 = nxt7;
				}
				yr1 = obj3;
			}
			if(xr1 != yr1) {
				if(xr1.rank < yr1.rank) xr1.parent = yr1; else if(xr1.rank > yr1.rank) yr1.parent = xr1; else {
					yr1.parent = xr1;
					xr1.rank++;
				}
			}
		}
	}
	,pair_exists: function(id,di) {
		return this.b1.id == id && this.b2.id == di || this.b1.id == di && this.b2.id == id;
	}
	,clearcache: function() {
		this.jAccx = 0;
		this.jAccy = 0;
		this.pre_dt = -1.0;
	}
	,preStep: function(dt) {
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		this.equal = this.jointMin == this.jointMax;
		this.stepped = true;
		this.validate_norm();
		this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		this.nrelx = this.b1.axisy * this.nlocalx - this.b1.axisx * this.nlocaly;
		this.nrely = this.nlocalx * this.b1.axisx + this.nlocaly * this.b1.axisy;
		this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var dx = 0.0;
		var dy = 0.0;
		var Cx = 0.0;
		var Cy = 0.0;
		dx = this.b2.posx + this.a2relx - this.b1.posx - this.a1relx;
		dy = this.b2.posy + this.a2rely - this.b1.posy - this.a1rely;
		Cx = dy * this.nrelx - dx * this.nrely;
		Cy = this.nrelx * dx + this.nrely * dy;
		if(this.equal) {
			Cy -= this.jointMin;
			this.scale = 1.0;
		} else if(Cy > this.jointMax) {
			Cy -= this.jointMax;
			this.scale = 1.0;
		} else if(Cy < this.jointMin) {
			Cy = this.jointMin - Cy;
			this.scale = -1.0;
		} else {
			Cy = 0;
			this.scale = 0;
		}
		var drx = 0.0;
		var dry = 0.0;
		drx = dx + this.a1relx;
		dry = dy + this.a1rely;
		this.dot1 = this.nrelx * drx + this.nrely * dry;
		this.cx1 = dry * this.nrelx - drx * this.nrely;
		this.dot2 = this.nrelx * this.a2relx + this.nrely * this.a2rely;
		this.cx2 = this.a2rely * this.nrelx - this.a2relx * this.nrely;
		this.kMassa = this.b1.smass + this.b2.smass + this.dot1 * this.dot1 * this.b1.sinertia + this.dot2 * this.dot2 * this.b2.sinertia;
		this.kMassb = -this.scale * (this.dot1 * this.cx1 * this.b1.sinertia + this.dot2 * this.cx2 * this.b2.sinertia);
		this.kMassc = this.scale * this.scale * (this.b1.smass + this.b2.smass + this.cx1 * this.cx1 * this.b1.sinertia + this.cx2 * this.cx2 * this.b2.sinertia);
		var flag;
		var det = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
		if(det != det) {
			this.kMassa = this.kMassb = this.kMassc = 0;
			flag = 3;
		} else if(det == 0) {
			var flag1 = 0;
			if(this.kMassa != 0) this.kMassa = 1 / this.kMassa; else {
				this.kMassa = 0;
				flag1 |= 1;
			}
			if(this.kMassc != 0) this.kMassc = 1 / this.kMassc; else {
				this.kMassc = 0;
				flag1 |= 2;
			}
			this.kMassb = 0;
			flag = flag1;
		} else {
			det = 1 / det;
			var t = this.kMassc * det;
			this.kMassc = this.kMassa * det;
			this.kMassa = t;
			this.kMassb *= -det;
			flag = 0;
		}
		if((flag & 1) != 0) this.jAccx = 0;
		if((flag & 2) != 0) this.jAccy = 0;
		if(!this.stiff) {
			if(this.breakUnderError && Cx * Cx + Cy * Cy > this.maxError * this.maxError) return true;
			var biasCoef;
			var X;
			var omega = 2 * Math.PI * this.frequency;
			this.gamma = 1 / (dt * omega * (2 * this.damping + omega * dt));
			var ig = 1 / (1 + this.gamma);
			biasCoef = dt * omega * omega * this.gamma;
			this.gamma *= ig;
			X = ig;
			this.kMassa *= X;
			this.kMassb *= X;
			this.kMassc *= X;
			this.biasx = Cx;
			this.biasy = Cy;
			var t1 = -biasCoef;
			this.biasx *= t1;
			this.biasy *= t1;
			var t2 = this.maxError;
			var ls = this.biasx * this.biasx + this.biasy * this.biasy;
			if(ls > t2 * t2) {
				var t3 = t2 * (1.0 / Math.sqrt(ls));
				this.biasx *= t3;
				this.biasy *= t3;
			}
		} else {
			this.gamma = 0;
			this.biasx = 0;
			this.biasy = 0;
		}
		var t4 = dtratio;
		this.jAccx *= t4;
		this.jAccy *= t4;
		this.jMax = this.maxForce * dt;
		return false;
	}
	,warmStart: function() {
		var J2x = this.scale * this.nrelx * this.jAccy - this.nrely * this.jAccx;
		var J2y = this.nrelx * this.jAccx + this.scale * this.nrely * this.jAccy;
		var t = this.b1.imass;
		this.b1.velx -= J2x * t;
		this.b1.vely -= J2y * t;
		var t1 = this.b2.imass;
		this.b2.velx += J2x * t1;
		this.b2.vely += J2y * t1;
		this.b1.angvel += (this.scale * this.cx1 * this.jAccy - this.dot1 * this.jAccx) * this.b1.iinertia;
		this.b2.angvel += (this.dot2 * this.jAccx - this.scale * this.cx2 * this.jAccy) * this.b2.iinertia;
	}
	,applyImpulseVel: function() {
		var Ex = 0.0;
		var Ey = 0.0;
		var dvx = 0.0;
		var dvy = 0.0;
		dvx = this.b2.velx - this.b1.velx;
		dvy = this.b2.vely - this.b1.vely;
		dvx += this.b2.kinvelx - this.b1.kinvelx;
		dvy += this.b2.kinvely - this.b1.kinvely;
		Ex = dvy * this.nrelx - dvx * this.nrely + (this.b2.angvel + this.b2.kinangvel) * this.dot2 - (this.b1.angvel + this.b1.kinangvel) * this.dot1;
		Ey = this.scale * (this.nrelx * dvx + this.nrely * dvy - (this.b2.angvel + this.b2.kinangvel) * this.cx2 + (this.b1.angvel + this.b1.kinangvel) * this.cx1);
		var Jx = 0.0;
		var Jy = 0.0;
		Jx = this.biasx - Ex;
		Jy = this.biasy - Ey;
		var t = this.kMassa * Jx + this.kMassb * Jy;
		Jy = this.kMassb * Jx + this.kMassc * Jy;
		Jx = t;
		var t1 = this.gamma;
		Jx -= this.jAccx * t1;
		Jy -= this.jAccy * t1;
		var jOldx = 0.0;
		var jOldy = 0.0;
		jOldx = this.jAccx;
		jOldy = this.jAccy;
		var t2 = 1.0;
		this.jAccx += Jx * t2;
		this.jAccy += Jy * t2;
		if(this.jAccy > 0) this.jAccy = 0;
		if(this.breakUnderForce) {
			if(this.jAccx * this.jAccx + this.jAccy * this.jAccy > this.jMax * this.jMax) return true;
		} else if(!this.stiff) {
			var t3 = this.jMax;
			var ls = this.jAccx * this.jAccx + this.jAccy * this.jAccy;
			if(ls > t3 * t3) {
				var t4 = t3 * (1.0 / Math.sqrt(ls));
				this.jAccx *= t4;
				this.jAccy *= t4;
			}
		}
		Jx = this.jAccx - jOldx;
		Jy = this.jAccy - jOldy;
		var J2x = this.scale * this.nrelx * Jy - this.nrely * Jx;
		var J2y = this.nrelx * Jx + this.scale * this.nrely * Jy;
		var t5 = this.b1.imass;
		this.b1.velx -= J2x * t5;
		this.b1.vely -= J2y * t5;
		var t6 = this.b2.imass;
		this.b2.velx += J2x * t6;
		this.b2.vely += J2y * t6;
		this.b1.angvel += (this.scale * this.cx1 * Jy - this.dot1 * Jx) * this.b1.iinertia;
		this.b2.angvel += (this.dot2 * Jx - this.scale * this.cx2 * Jy) * this.b2.iinertia;
		return false;
	}
	,applyImpulsePos: function() {
		var nx = 0.0;
		var ny = 0.0;
		nx = this.b1.axisy * this.nlocalx - this.b1.axisx * this.nlocaly;
		ny = this.nlocalx * this.b1.axisx + this.nlocaly * this.b1.axisy;
		var r1x = 0.0;
		var r1y = 0.0;
		r1x = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		r1y = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		var r2x = 0.0;
		var r2y = 0.0;
		r2x = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		r2y = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var dx = 0.0;
		var dy = 0.0;
		var scale;
		var Ex = 0.0;
		var Ey = 0.0;
		dx = this.b2.posx + r2x - this.b1.posx - r1x;
		dy = this.b2.posy + r2y - this.b1.posy - r1y;
		Ex = dy * nx - dx * ny;
		Ey = nx * dx + ny * dy;
		if(this.equal) {
			Ey -= this.jointMin;
			scale = 1.0;
		} else if(Ey > this.jointMax) {
			Ey -= this.jointMax;
			scale = 1.0;
		} else if(Ey < this.jointMin) {
			Ey = this.jointMin - Ey;
			scale = -1.0;
		} else {
			Ey = 0;
			scale = 0;
		}
		if(this.breakUnderError && Ex * Ex + Ey * Ey > this.maxError * this.maxError) return true;
		if(Ex * Ex + Ey * Ey < nape_Config.constraintLinearSlop * nape_Config.constraintLinearSlop) return false;
		var Jx = 0.0;
		var Jy = 0.0;
		var t = 0.5;
		Ex *= t;
		Ey *= t;
		if(Ex * Ex + Ey * Ey > 6) {
			var k = this.b1.smass + this.b2.smass;
			if(k > nape_Config.epsilon) {
				k = 0.8 / k;
				var Jx1 = k * (ny * Ex - scale * nx * Ey);
				var Jy1 = k * (nx * Ex * scale - ny * Ex);
				var t1 = this.b1.imass;
				this.b1.posx -= Jx1 * t1;
				this.b1.posy -= Jy1 * t1;
				var t2 = this.b2.imass;
				this.b2.posx += Jx1 * t2;
				this.b2.posy += Jy1 * t2;
				dx = this.b2.posx + r2x - this.b1.posx - r1x;
				dy = this.b2.posy + r2y - this.b1.posy - r1y;
				Ex = dy * nx - dx * ny;
				Ey = nx * dx + ny * dy;
				if(this.equal) {
					Ey -= this.jointMin;
					scale = 1.0;
				} else if(Ey > this.jointMax) {
					Ey -= this.jointMax;
					scale = 1.0;
				} else if(Ey < this.jointMin) {
					Ey = this.jointMin - Ey;
					scale = -1.0;
				} else {
					Ey = 0;
					scale = 0;
				}
				var t3 = 0.5;
				Ex *= t3;
				Ey *= t3;
			}
		}
		var dot1;
		var dot2;
		var cx1;
		var cx2;
		var Ka = 0.0;
		var Kb = 0.0;
		var Kc = 0.0;
		var drx = 0.0;
		var dry = 0.0;
		drx = dx + r1x;
		dry = dy + r1y;
		dot1 = nx * drx + ny * dry;
		cx1 = dry * nx - drx * ny;
		dot2 = nx * r2x + ny * r2y;
		cx2 = r2y * nx - r2x * ny;
		Ka = this.b1.smass + this.b2.smass + dot1 * dot1 * this.b1.sinertia + dot2 * dot2 * this.b2.sinertia;
		Kb = -scale * (dot1 * cx1 * this.b1.sinertia + dot2 * cx2 * this.b2.sinertia);
		Kc = scale * scale * (this.b1.smass + this.b2.smass + cx1 * cx1 * this.b1.sinertia + cx2 * cx2 * this.b2.sinertia);
		Jx = -Ex;
		Jy = -Ey;
		var det = Ka * Kc - Kb * Kb;
		if(det != det) Jx = Jy = 0; else if(det == 0) {
			if(Ka != 0) Jx /= Ka; else Jx = 0;
			if(Kc != 0) Jy /= Kc; else Jy = 0;
		} else {
			det = 1 / det;
			var t4 = det * (Kc * Jx - Kb * Jy);
			Jy = det * (Ka * Jy - Kb * Jx);
			Jx = t4;
		}
		if(Jy > 0) Jy = 0;
		var J2x = scale * nx * Jy - ny * Jx;
		var J2y = nx * Jx + scale * ny * Jy;
		var t5 = this.b1.imass;
		this.b1.posx -= J2x * t5;
		this.b1.posy -= J2y * t5;
		var t6 = this.b2.imass;
		this.b2.posx += J2x * t6;
		this.b2.posy += J2y * t6;
		this.b1.delta_rot((scale * cx1 * Jy - dot1 * Jx) * this.b1.iinertia);
		this.b2.delta_rot((dot2 * Jx - scale * cx2 * Jy) * this.b2.iinertia);
		return false;
	}
	,__class__: zpp_$nape_constraint_ZPP_$LineJoint
});
var zpp_$nape_constraint_ZPP_$MotorJoint = function() {
	this.stepped = false;
	this.jMax = 0.0;
	this.jAcc = 0.0;
	this.kMass = 0.0;
	this.b2 = null;
	this.b1 = null;
	this.rate = 0.0;
	this.ratio = 0.0;
	this.outer_zn = null;
	zpp_$nape_constraint_ZPP_$Constraint.call(this);
	this.jAcc = 0;
	this.stepped = false;
	this.__velocity = true;
};
$hxClasses["zpp_nape.constraint.ZPP_MotorJoint"] = zpp_$nape_constraint_ZPP_$MotorJoint;
zpp_$nape_constraint_ZPP_$MotorJoint.__name__ = ["zpp_nape","constraint","ZPP_MotorJoint"];
zpp_$nape_constraint_ZPP_$MotorJoint.__super__ = zpp_$nape_constraint_ZPP_$Constraint;
zpp_$nape_constraint_ZPP_$MotorJoint.prototype = $extend(zpp_$nape_constraint_ZPP_$Constraint.prototype,{
	activeBodies: function() {
		if(this.b1 != null) this.b1.constraints.add(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.add(this);
		}
	}
	,inactiveBodies: function() {
		if(this.b1 != null) this.b1.constraints.remove(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.remove(this);
		}
	}
	,validate: function() {
		if(this.b1 == null || this.b2 == null) throw new js__$Boot_HaxeError("Error: AngleJoint cannot be simulated null bodies");
		if(this.b1 == this.b2) throw new js__$Boot_HaxeError("Error: MotorJoint cannot be simulated with body1 == body2");
		if(this.b1.space != this.space || this.b2.space != this.space) throw new js__$Boot_HaxeError("Error: Constraints must have each body within the same space to which the constraint has been assigned");
		if(!(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) throw new js__$Boot_HaxeError("Error: Constraints cannot have both bodies non-dynamic");
	}
	,wake_connected: function() {
		if(this.b1 != null && this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b1.wake();
		if(this.b2 != null && this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b2.wake();
	}
	,forest: function() {
		if(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr;
			if(this.b1.component == this.b1.component.parent) xr = this.b1.component; else {
				var obj = this.b1.component;
				var stack = null;
				while(obj != obj.parent) {
					var nxt = obj.parent;
					obj.parent = stack;
					stack = obj;
					obj = nxt;
				}
				while(stack != null) {
					var nxt1 = stack.parent;
					stack.parent = obj;
					stack = nxt1;
				}
				xr = obj;
			}
			var yr;
			if(this.component == this.component.parent) yr = this.component; else {
				var obj1 = this.component;
				var stack1 = null;
				while(obj1 != obj1.parent) {
					var nxt2 = obj1.parent;
					obj1.parent = stack1;
					stack1 = obj1;
					obj1 = nxt2;
				}
				while(stack1 != null) {
					var nxt3 = stack1.parent;
					stack1.parent = obj1;
					stack1 = nxt3;
				}
				yr = obj1;
			}
			if(xr != yr) {
				if(xr.rank < yr.rank) xr.parent = yr; else if(xr.rank > yr.rank) yr.parent = xr; else {
					yr.parent = xr;
					xr.rank++;
				}
			}
		}
		if(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr1;
			if(this.b2.component == this.b2.component.parent) xr1 = this.b2.component; else {
				var obj2 = this.b2.component;
				var stack2 = null;
				while(obj2 != obj2.parent) {
					var nxt4 = obj2.parent;
					obj2.parent = stack2;
					stack2 = obj2;
					obj2 = nxt4;
				}
				while(stack2 != null) {
					var nxt5 = stack2.parent;
					stack2.parent = obj2;
					stack2 = nxt5;
				}
				xr1 = obj2;
			}
			var yr1;
			if(this.component == this.component.parent) yr1 = this.component; else {
				var obj3 = this.component;
				var stack3 = null;
				while(obj3 != obj3.parent) {
					var nxt6 = obj3.parent;
					obj3.parent = stack3;
					stack3 = obj3;
					obj3 = nxt6;
				}
				while(stack3 != null) {
					var nxt7 = stack3.parent;
					stack3.parent = obj3;
					stack3 = nxt7;
				}
				yr1 = obj3;
			}
			if(xr1 != yr1) {
				if(xr1.rank < yr1.rank) xr1.parent = yr1; else if(xr1.rank > yr1.rank) yr1.parent = xr1; else {
					yr1.parent = xr1;
					xr1.rank++;
				}
			}
		}
	}
	,pair_exists: function(id,di) {
		return this.b1.id == id && this.b2.id == di || this.b1.id == di && this.b2.id == id;
	}
	,clearcache: function() {
		this.jAcc = 0;
		this.pre_dt = -1.0;
	}
	,preStep: function(dt) {
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		this.stepped = true;
		this.kMass = this.b1.sinertia + this.ratio * this.ratio * this.b2.sinertia;
		this.kMass = 1.0 / this.kMass;
		this.jAcc *= dtratio;
		this.jMax = this.maxForce * dt;
		return false;
	}
	,warmStart: function() {
		this.b1.angvel -= this.b1.iinertia * this.jAcc;
		this.b2.angvel += this.ratio * this.b2.iinertia * this.jAcc;
	}
	,applyImpulseVel: function() {
		var E = this.ratio * (this.b2.angvel + this.b2.kinangvel) - this.b1.angvel - this.b1.kinangvel - this.rate;
		var j = -this.kMass * E;
		var jOld = this.jAcc;
		this.jAcc += j;
		if(this.breakUnderForce) {
			if(this.jAcc > this.jMax || this.jAcc < -this.jMax) return true;
		} else if(this.jAcc < -this.jMax) this.jAcc = -this.jMax; else if(this.jAcc > this.jMax) this.jAcc = this.jMax;
		j = this.jAcc - jOld;
		this.b1.angvel -= this.b1.iinertia * j;
		this.b2.angvel += this.ratio * this.b2.iinertia * j;
		return false;
	}
	,applyImpulsePos: function() {
		return false;
	}
	,__class__: zpp_$nape_constraint_ZPP_$MotorJoint
});
var zpp_$nape_constraint_ZPP_$PivotJoint = function() {
	this.stepped = false;
	this.biasy = 0.0;
	this.biasx = 0.0;
	this.gamma = 0.0;
	this.jMax = 0.0;
	this.jAccy = 0.0;
	this.jAccx = 0.0;
	this.kMassc = 0.0;
	this.kMassb = 0.0;
	this.kMassa = 0.0;
	this.wrap_a2 = null;
	this.a2rely = 0.0;
	this.a2relx = 0.0;
	this.a2localy = 0.0;
	this.a2localx = 0.0;
	this.b2 = null;
	this.wrap_a1 = null;
	this.a1rely = 0.0;
	this.a1relx = 0.0;
	this.a1localy = 0.0;
	this.a1localx = 0.0;
	this.b1 = null;
	this.outer_zn = null;
	zpp_$nape_constraint_ZPP_$Constraint.call(this);
	this.stepped = false;
	this.jAccx = 0;
	this.jAccy = 0;
	this.jMax = Infinity;
	this.a1localx = 0;
	this.a1localy = 0;
	this.a1relx = 0;
	this.a1rely = 0;
	this.a2localx = 0;
	this.a2localy = 0;
	this.a2relx = 0;
	this.a2rely = 0;
};
$hxClasses["zpp_nape.constraint.ZPP_PivotJoint"] = zpp_$nape_constraint_ZPP_$PivotJoint;
zpp_$nape_constraint_ZPP_$PivotJoint.__name__ = ["zpp_nape","constraint","ZPP_PivotJoint"];
zpp_$nape_constraint_ZPP_$PivotJoint.__super__ = zpp_$nape_constraint_ZPP_$Constraint;
zpp_$nape_constraint_ZPP_$PivotJoint.prototype = $extend(zpp_$nape_constraint_ZPP_$Constraint.prototype,{
	activeBodies: function() {
		if(this.b1 != null) this.b1.constraints.add(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.add(this);
		}
	}
	,inactiveBodies: function() {
		if(this.b1 != null) this.b1.constraints.remove(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.remove(this);
		}
	}
	,validate_a1: function() {
		this.wrap_a1.zpp_inner.x = this.a1localx;
		this.wrap_a1.zpp_inner.y = this.a1localy;
	}
	,invalidate_a1: function(x) {
		this.immutable_midstep("Constraint::" + "a1");
		this.a1localx = x.x;
		this.a1localy = x.y;
		this.wake();
	}
	,setup_a1: function() {
		this.wrap_a1 = nape_geom_Vec2.get(this.a1localx,this.a1localy,null);
		this.wrap_a1.zpp_inner._inuse = true;
		this.wrap_a1.zpp_inner._validate = $bind(this,this.validate_a1);
		this.wrap_a1.zpp_inner._invalidate = $bind(this,this.invalidate_a1);
	}
	,validate_a2: function() {
		this.wrap_a2.zpp_inner.x = this.a2localx;
		this.wrap_a2.zpp_inner.y = this.a2localy;
	}
	,invalidate_a2: function(x) {
		this.immutable_midstep("Constraint::" + "a2");
		this.a2localx = x.x;
		this.a2localy = x.y;
		this.wake();
	}
	,setup_a2: function() {
		this.wrap_a2 = nape_geom_Vec2.get(this.a2localx,this.a2localy,null);
		this.wrap_a2.zpp_inner._inuse = true;
		this.wrap_a2.zpp_inner._validate = $bind(this,this.validate_a2);
		this.wrap_a2.zpp_inner._invalidate = $bind(this,this.invalidate_a2);
	}
	,validate: function() {
		if(this.b1 == null || this.b2 == null) throw new js__$Boot_HaxeError("Error: PivotJoint cannot be simulated null bodies");
		if(this.b1 == this.b2) throw new js__$Boot_HaxeError("Error: PivotJoint cannot be simulated with body1 == body2 (body1=body2=" + this.b1.outer.toString() + ")");
		if(this.b1.space != this.space || this.b2.space != this.space) throw new js__$Boot_HaxeError("Error: Constraints must have each body within the same space to which the constraint has been assigned (body1=" + this.b1.outer.toString() + ", body2=" + this.b2.outer.toString() + ")");
		if(!(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) throw new js__$Boot_HaxeError("Error: Constraints cannot have both bodies non-dynamic (body1=" + this.b1.outer.toString() + ", body2=" + this.b2.outer.toString() + ")");
	}
	,wake_connected: function() {
		if(this.b1 != null && this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b1.wake();
		if(this.b2 != null && this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b2.wake();
	}
	,forest: function() {
		if(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr;
			if(this.b1.component == this.b1.component.parent) xr = this.b1.component; else {
				var obj = this.b1.component;
				var stack = null;
				while(obj != obj.parent) {
					var nxt = obj.parent;
					obj.parent = stack;
					stack = obj;
					obj = nxt;
				}
				while(stack != null) {
					var nxt1 = stack.parent;
					stack.parent = obj;
					stack = nxt1;
				}
				xr = obj;
			}
			var yr;
			if(this.component == this.component.parent) yr = this.component; else {
				var obj1 = this.component;
				var stack1 = null;
				while(obj1 != obj1.parent) {
					var nxt2 = obj1.parent;
					obj1.parent = stack1;
					stack1 = obj1;
					obj1 = nxt2;
				}
				while(stack1 != null) {
					var nxt3 = stack1.parent;
					stack1.parent = obj1;
					stack1 = nxt3;
				}
				yr = obj1;
			}
			if(xr != yr) {
				if(xr.rank < yr.rank) xr.parent = yr; else if(xr.rank > yr.rank) yr.parent = xr; else {
					yr.parent = xr;
					xr.rank++;
				}
			}
		}
		if(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr1;
			if(this.b2.component == this.b2.component.parent) xr1 = this.b2.component; else {
				var obj2 = this.b2.component;
				var stack2 = null;
				while(obj2 != obj2.parent) {
					var nxt4 = obj2.parent;
					obj2.parent = stack2;
					stack2 = obj2;
					obj2 = nxt4;
				}
				while(stack2 != null) {
					var nxt5 = stack2.parent;
					stack2.parent = obj2;
					stack2 = nxt5;
				}
				xr1 = obj2;
			}
			var yr1;
			if(this.component == this.component.parent) yr1 = this.component; else {
				var obj3 = this.component;
				var stack3 = null;
				while(obj3 != obj3.parent) {
					var nxt6 = obj3.parent;
					obj3.parent = stack3;
					stack3 = obj3;
					obj3 = nxt6;
				}
				while(stack3 != null) {
					var nxt7 = stack3.parent;
					stack3.parent = obj3;
					stack3 = nxt7;
				}
				yr1 = obj3;
			}
			if(xr1 != yr1) {
				if(xr1.rank < yr1.rank) xr1.parent = yr1; else if(xr1.rank > yr1.rank) yr1.parent = xr1; else {
					yr1.parent = xr1;
					xr1.rank++;
				}
			}
		}
	}
	,pair_exists: function(id,di) {
		return this.b1.id == id && this.b2.id == di || this.b1.id == di && this.b2.id == id;
	}
	,clearcache: function() {
		this.jAccx = 0;
		this.jAccy = 0;
		this.pre_dt = -1.0;
	}
	,preStep: function(dt) {
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		this.stepped = true;
		this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var m = this.b1.smass + this.b2.smass;
		this.kMassa = m;
		this.kMassb = 0;
		this.kMassc = m;
		if(this.b1.sinertia != 0) {
			var X = this.a1relx * this.b1.sinertia;
			var Y = this.a1rely * this.b1.sinertia;
			this.kMassa += Y * this.a1rely;
			this.kMassb += -Y * this.a1relx;
			this.kMassc += X * this.a1relx;
		}
		if(this.b2.sinertia != 0) {
			var X1 = this.a2relx * this.b2.sinertia;
			var Y1 = this.a2rely * this.b2.sinertia;
			this.kMassa += Y1 * this.a2rely;
			this.kMassb += -Y1 * this.a2relx;
			this.kMassc += X1 * this.a2relx;
		}
		var flag;
		var det = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
		if(det != det) {
			this.kMassa = this.kMassb = this.kMassc = 0;
			flag = 3;
		} else if(det == 0) {
			var flag1 = 0;
			if(this.kMassa != 0) this.kMassa = 1 / this.kMassa; else {
				this.kMassa = 0;
				flag1 |= 1;
			}
			if(this.kMassc != 0) this.kMassc = 1 / this.kMassc; else {
				this.kMassc = 0;
				flag1 |= 2;
			}
			this.kMassb = 0;
			flag = flag1;
		} else {
			det = 1 / det;
			var t = this.kMassc * det;
			this.kMassc = this.kMassa * det;
			this.kMassa = t;
			this.kMassb *= -det;
			flag = 0;
		}
		if((flag & 1) != 0) this.jAccx = 0;
		if((flag & 2) != 0) this.jAccy = 0;
		if(!this.stiff) {
			var biasCoef;
			var X2;
			var omega = 2 * Math.PI * this.frequency;
			this.gamma = 1 / (dt * omega * (2 * this.damping + omega * dt));
			var ig = 1 / (1 + this.gamma);
			biasCoef = dt * omega * omega * this.gamma;
			this.gamma *= ig;
			X2 = ig;
			this.kMassa *= X2;
			this.kMassb *= X2;
			this.kMassc *= X2;
			this.biasx = this.b2.posx + this.a2relx - (this.b1.posx + this.a1relx);
			this.biasy = this.b2.posy + this.a2rely - (this.b1.posy + this.a1rely);
			if(this.breakUnderError && this.biasx * this.biasx + this.biasy * this.biasy > this.maxError * this.maxError) return true;
			var t1 = -biasCoef;
			this.biasx *= t1;
			this.biasy *= t1;
			var t2 = this.maxError;
			var ls = this.biasx * this.biasx + this.biasy * this.biasy;
			if(ls > t2 * t2) {
				var t3 = t2 * (1.0 / Math.sqrt(ls));
				this.biasx *= t3;
				this.biasy *= t3;
			}
		} else {
			this.biasx = 0;
			this.biasy = 0;
			this.gamma = 0;
		}
		var t4 = dtratio;
		this.jAccx *= t4;
		this.jAccy *= t4;
		this.jMax = this.maxForce * dt;
		return false;
	}
	,warmStart: function() {
		var t = this.b1.imass;
		this.b1.velx -= this.jAccx * t;
		this.b1.vely -= this.jAccy * t;
		var t1 = this.b2.imass;
		this.b2.velx += this.jAccx * t1;
		this.b2.vely += this.jAccy * t1;
		this.b1.angvel -= (this.jAccy * this.a1relx - this.jAccx * this.a1rely) * this.b1.iinertia;
		this.b2.angvel += (this.jAccy * this.a2relx - this.jAccx * this.a2rely) * this.b2.iinertia;
	}
	,applyImpulseVel: function() {
		var Ex = 0.0;
		var Ey = 0.0;
		Ex = this.b2.velx + this.b2.kinvelx - this.a2rely * (this.b2.angvel + this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.a1rely * (this.b1.angvel + this.b1.kinangvel));
		Ey = this.b2.vely + this.b2.kinvely + this.a2relx * (this.b2.angvel + this.b2.kinangvel) - (this.b1.vely + this.b1.kinvely + this.a1relx * (this.b1.angvel + this.b1.kinangvel));
		var Jx = 0.0;
		var Jy = 0.0;
		Jx = this.biasx - Ex;
		Jy = this.biasy - Ey;
		var t = this.kMassa * Jx + this.kMassb * Jy;
		Jy = this.kMassb * Jx + this.kMassc * Jy;
		Jx = t;
		var t1 = this.gamma;
		Jx -= this.jAccx * t1;
		Jy -= this.jAccy * t1;
		var jOldx = 0.0;
		var jOldy = 0.0;
		jOldx = this.jAccx;
		jOldy = this.jAccy;
		var t2 = 1.0;
		this.jAccx += Jx * t2;
		this.jAccy += Jy * t2;
		if(this.breakUnderForce) {
			if(this.jAccx * this.jAccx + this.jAccy * this.jAccy > this.jMax * this.jMax) return true;
		} else if(!this.stiff) {
			var t3 = this.jMax;
			var ls = this.jAccx * this.jAccx + this.jAccy * this.jAccy;
			if(ls > t3 * t3) {
				var t4 = t3 * (1.0 / Math.sqrt(ls));
				this.jAccx *= t4;
				this.jAccy *= t4;
			}
		}
		Jx = this.jAccx - jOldx;
		Jy = this.jAccy - jOldy;
		var t5 = this.b1.imass;
		this.b1.velx -= Jx * t5;
		this.b1.vely -= Jy * t5;
		var t6 = this.b2.imass;
		this.b2.velx += Jx * t6;
		this.b2.vely += Jy * t6;
		this.b1.angvel -= (Jy * this.a1relx - Jx * this.a1rely) * this.b1.iinertia;
		this.b2.angvel += (Jy * this.a2relx - Jx * this.a2rely) * this.b2.iinertia;
		return false;
	}
	,applyImpulsePos: function() {
		var r1x = 0.0;
		var r1y = 0.0;
		r1x = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		r1y = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		var r2x = 0.0;
		var r2y = 0.0;
		r2x = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		r2y = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var Ex = 0.0;
		var Ey = 0.0;
		Ex = this.b2.posx + r2x - (this.b1.posx + r1x);
		Ey = this.b2.posy + r2y - (this.b1.posy + r1y);
		if(this.breakUnderError && Ex * Ex + Ey * Ey > this.maxError * this.maxError) return true;
		if(Ex * Ex + Ey * Ey < nape_Config.constraintLinearSlop * nape_Config.constraintLinearSlop) return false;
		var t = 0.5;
		Ex *= t;
		Ey *= t;
		var Jx = 0.0;
		var Jy = 0.0;
		if(Ex * Ex + Ey * Ey > 6) {
			var k = this.b1.smass + this.b2.smass;
			if(k > nape_Config.epsilon) {
				k = 0.75 / k;
				Jx = -Ex * k;
				Jy = -Ey * k;
				var t1 = 20;
				var ls = Jx * Jx + Jy * Jy;
				if(ls > t1 * t1) {
					var t2 = t1 * (1.0 / Math.sqrt(ls));
					Jx *= t2;
					Jy *= t2;
				}
				var t3 = this.b1.imass;
				this.b1.posx -= Jx * t3;
				this.b1.posy -= Jy * t3;
				var t4 = this.b2.imass;
				this.b2.posx += Jx * t4;
				this.b2.posy += Jy * t4;
				Ex = this.b2.posx + r2x - (this.b1.posx + r1x);
				Ey = this.b2.posy + r2y - (this.b1.posy + r1y);
				var t5 = 0.5;
				Ex *= t5;
				Ey *= t5;
			}
		}
		var Ka = 0.0;
		var Kb = 0.0;
		var Kc = 0.0;
		var m = this.b1.smass + this.b2.smass;
		Ka = m;
		Kb = 0;
		Kc = m;
		if(this.b1.sinertia != 0) {
			var X = r1x * this.b1.sinertia;
			var Y = r1y * this.b1.sinertia;
			Ka += Y * r1y;
			Kb += -Y * r1x;
			Kc += X * r1x;
		}
		if(this.b2.sinertia != 0) {
			var X1 = r2x * this.b2.sinertia;
			var Y1 = r2y * this.b2.sinertia;
			Ka += Y1 * r2y;
			Kb += -Y1 * r2x;
			Kc += X1 * r2x;
		}
		Jx = -Ex;
		Jy = -Ey;
		var t6 = 6;
		var ls1 = Jx * Jx + Jy * Jy;
		if(ls1 > t6 * t6) {
			var t7 = t6 * (1.0 / Math.sqrt(ls1));
			Jx *= t7;
			Jy *= t7;
		}
		var det = Ka * Kc - Kb * Kb;
		if(det != det) Jx = Jy = 0; else if(det == 0) {
			if(Ka != 0) Jx /= Ka; else Jx = 0;
			if(Kc != 0) Jy /= Kc; else Jy = 0;
		} else {
			det = 1 / det;
			var t8 = det * (Kc * Jx - Kb * Jy);
			Jy = det * (Ka * Jy - Kb * Jx);
			Jx = t8;
		}
		var t9 = this.b1.imass;
		this.b1.posx -= Jx * t9;
		this.b1.posy -= Jy * t9;
		var t10 = this.b2.imass;
		this.b2.posx += Jx * t10;
		this.b2.posy += Jy * t10;
		this.b1.delta_rot(-(Jy * r1x - Jx * r1y) * this.b1.iinertia);
		this.b2.delta_rot((Jy * r2x - Jx * r2y) * this.b2.iinertia);
		return false;
	}
	,__class__: zpp_$nape_constraint_ZPP_$PivotJoint
});
var zpp_$nape_constraint_ZPP_$PulleyJoint = function() {
	this.stepped = false;
	this.bias = 0.0;
	this.gamma = 0.0;
	this.jMax = 0.0;
	this.jAcc = 0.0;
	this.kMass = 0.0;
	this.wrap_a4 = null;
	this.a4rely = 0.0;
	this.a4relx = 0.0;
	this.a4localy = 0.0;
	this.a4localx = 0.0;
	this.b4 = null;
	this.wrap_a3 = null;
	this.a3rely = 0.0;
	this.a3relx = 0.0;
	this.a3localy = 0.0;
	this.a3localx = 0.0;
	this.b3 = null;
	this.wrap_a2 = null;
	this.a2rely = 0.0;
	this.a2relx = 0.0;
	this.a2localy = 0.0;
	this.a2localx = 0.0;
	this.b2 = null;
	this.wrap_a1 = null;
	this.a1rely = 0.0;
	this.a1relx = 0.0;
	this.a1localy = 0.0;
	this.a1localx = 0.0;
	this.b1 = null;
	this.cx4 = 0.0;
	this.cx3 = 0.0;
	this.cx2 = 0.0;
	this.cx1 = 0.0;
	this.n34y = 0.0;
	this.n34x = 0.0;
	this.n12y = 0.0;
	this.n12x = 0.0;
	this.equal = false;
	this.slack = false;
	this.jointMax = 0.0;
	this.jointMin = 0.0;
	this.ratio = 1.0;
	this.outer_zn = null;
	zpp_$nape_constraint_ZPP_$Constraint.call(this);
	this.a1localx = 0;
	this.a1localy = 0;
	this.a1relx = 0;
	this.a1rely = 0;
	this.a2localx = 0;
	this.a2localy = 0;
	this.a2relx = 0;
	this.a2rely = 0;
	this.a3localx = 0;
	this.a3localy = 0;
	this.a3relx = 0;
	this.a3rely = 0;
	this.a4localx = 0;
	this.a4localy = 0;
	this.a4relx = 0;
	this.a4rely = 0;
	this.n12x = 1;
	this.n12y = 0;
	this.n34x = 1;
	this.n34y = 0;
	this.jAcc = 0;
	this.jMax = Infinity;
	this.stepped = false;
	this.cx1 = this.cx2 = this.cx3 = this.cx4 = 0;
};
$hxClasses["zpp_nape.constraint.ZPP_PulleyJoint"] = zpp_$nape_constraint_ZPP_$PulleyJoint;
zpp_$nape_constraint_ZPP_$PulleyJoint.__name__ = ["zpp_nape","constraint","ZPP_PulleyJoint"];
zpp_$nape_constraint_ZPP_$PulleyJoint.__super__ = zpp_$nape_constraint_ZPP_$Constraint;
zpp_$nape_constraint_ZPP_$PulleyJoint.prototype = $extend(zpp_$nape_constraint_ZPP_$Constraint.prototype,{
	activeBodies: function() {
		if(this.b1 != null) this.b1.constraints.add(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.add(this);
		}
		if(this.b3 != this.b1 && this.b3 != this.b2) {
			if(this.b3 != null) this.b3.constraints.add(this);
		}
		if(this.b4 != this.b1 && this.b4 != this.b2 && this.b4 != this.b3) {
			if(this.b4 != null) this.b4.constraints.add(this);
		}
	}
	,inactiveBodies: function() {
		if(this.b1 != null) this.b1.constraints.remove(this);
		if(this.b2 != this.b1) {
			if(this.b2 != null) this.b2.constraints.remove(this);
		}
		if(this.b3 != this.b1 && this.b3 != this.b2) {
			if(this.b3 != null) this.b3.constraints.remove(this);
		}
		if(this.b4 != this.b1 && this.b4 != this.b2 && this.b4 != this.b3) {
			if(this.b4 != null) this.b4.constraints.remove(this);
		}
	}
	,validate_a1: function() {
		this.wrap_a1.zpp_inner.x = this.a1localx;
		this.wrap_a1.zpp_inner.y = this.a1localy;
	}
	,invalidate_a1: function(x) {
		this.immutable_midstep("Constraint::" + "a1");
		this.a1localx = x.x;
		this.a1localy = x.y;
		this.wake();
	}
	,setup_a1: function() {
		this.wrap_a1 = nape_geom_Vec2.get(this.a1localx,this.a1localy,null);
		this.wrap_a1.zpp_inner._inuse = true;
		this.wrap_a1.zpp_inner._validate = $bind(this,this.validate_a1);
		this.wrap_a1.zpp_inner._invalidate = $bind(this,this.invalidate_a1);
	}
	,validate_a2: function() {
		this.wrap_a2.zpp_inner.x = this.a2localx;
		this.wrap_a2.zpp_inner.y = this.a2localy;
	}
	,invalidate_a2: function(x) {
		this.immutable_midstep("Constraint::" + "a2");
		this.a2localx = x.x;
		this.a2localy = x.y;
		this.wake();
	}
	,setup_a2: function() {
		this.wrap_a2 = nape_geom_Vec2.get(this.a2localx,this.a2localy,null);
		this.wrap_a2.zpp_inner._inuse = true;
		this.wrap_a2.zpp_inner._validate = $bind(this,this.validate_a2);
		this.wrap_a2.zpp_inner._invalidate = $bind(this,this.invalidate_a2);
	}
	,validate_a3: function() {
		this.wrap_a3.zpp_inner.x = this.a3localx;
		this.wrap_a3.zpp_inner.y = this.a3localy;
	}
	,invalidate_a3: function(x) {
		this.immutable_midstep("Constraint::" + "a3");
		this.a3localx = x.x;
		this.a3localy = x.y;
		this.wake();
	}
	,setup_a3: function() {
		this.wrap_a3 = nape_geom_Vec2.get(this.a3localx,this.a3localy,null);
		this.wrap_a3.zpp_inner._inuse = true;
		this.wrap_a3.zpp_inner._validate = $bind(this,this.validate_a3);
		this.wrap_a3.zpp_inner._invalidate = $bind(this,this.invalidate_a3);
	}
	,validate_a4: function() {
		this.wrap_a4.zpp_inner.x = this.a4localx;
		this.wrap_a4.zpp_inner.y = this.a4localy;
	}
	,invalidate_a4: function(x) {
		this.immutable_midstep("Constraint::" + "a4");
		this.a4localx = x.x;
		this.a4localy = x.y;
		this.wake();
	}
	,setup_a4: function() {
		this.wrap_a4 = nape_geom_Vec2.get(this.a4localx,this.a4localy,null);
		this.wrap_a4.zpp_inner._inuse = true;
		this.wrap_a4.zpp_inner._validate = $bind(this,this.validate_a4);
		this.wrap_a4.zpp_inner._invalidate = $bind(this,this.invalidate_a4);
	}
	,validate: function() {
		if(this.b1 == null || this.b2 == null || this.b3 == null || this.b4 == null) throw new js__$Boot_HaxeError("Error: PulleyJoint cannot be simulated with null bodies");
		if(this.b1 == this.b2 || this.b3 == this.b4) throw new js__$Boot_HaxeError("Error: PulleyJoint cannot have body1==body2 or body3==body4");
		if(this.b1.space != this.space || this.b2.space != this.space || this.b3.space != this.space || this.b4.space != this.space) throw new js__$Boot_HaxeError("Error: Constraints must have each body within the same space to which the constraint has been assigned");
		if(this.jointMin > this.jointMax) throw new js__$Boot_HaxeError("Error: PulleyJoint must have jointMin <= jointMax");
		if(!(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) throw new js__$Boot_HaxeError("Error: PulleyJoint cannot have both bodies in a linked pair non-dynamic");
		if(!(this.b3.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) && !(this.b4.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) throw new js__$Boot_HaxeError("Error: PulleyJoint cannot have both bodies in a linked pair non-dynamic");
	}
	,wake_connected: function() {
		if(this.b1 != null && this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b1.wake();
		if(this.b2 != null && this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b2.wake();
		if(this.b3 != null && this.b3.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b3.wake();
		if(this.b4 != null && this.b4.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.b4.wake();
	}
	,forest: function() {
		if(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr;
			if(this.b1.component == this.b1.component.parent) xr = this.b1.component; else {
				var obj = this.b1.component;
				var stack = null;
				while(obj != obj.parent) {
					var nxt = obj.parent;
					obj.parent = stack;
					stack = obj;
					obj = nxt;
				}
				while(stack != null) {
					var nxt1 = stack.parent;
					stack.parent = obj;
					stack = nxt1;
				}
				xr = obj;
			}
			var yr;
			if(this.component == this.component.parent) yr = this.component; else {
				var obj1 = this.component;
				var stack1 = null;
				while(obj1 != obj1.parent) {
					var nxt2 = obj1.parent;
					obj1.parent = stack1;
					stack1 = obj1;
					obj1 = nxt2;
				}
				while(stack1 != null) {
					var nxt3 = stack1.parent;
					stack1.parent = obj1;
					stack1 = nxt3;
				}
				yr = obj1;
			}
			if(xr != yr) {
				if(xr.rank < yr.rank) xr.parent = yr; else if(xr.rank > yr.rank) yr.parent = xr; else {
					yr.parent = xr;
					xr.rank++;
				}
			}
		}
		if(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr1;
			if(this.b2.component == this.b2.component.parent) xr1 = this.b2.component; else {
				var obj2 = this.b2.component;
				var stack2 = null;
				while(obj2 != obj2.parent) {
					var nxt4 = obj2.parent;
					obj2.parent = stack2;
					stack2 = obj2;
					obj2 = nxt4;
				}
				while(stack2 != null) {
					var nxt5 = stack2.parent;
					stack2.parent = obj2;
					stack2 = nxt5;
				}
				xr1 = obj2;
			}
			var yr1;
			if(this.component == this.component.parent) yr1 = this.component; else {
				var obj3 = this.component;
				var stack3 = null;
				while(obj3 != obj3.parent) {
					var nxt6 = obj3.parent;
					obj3.parent = stack3;
					stack3 = obj3;
					obj3 = nxt6;
				}
				while(stack3 != null) {
					var nxt7 = stack3.parent;
					stack3.parent = obj3;
					stack3 = nxt7;
				}
				yr1 = obj3;
			}
			if(xr1 != yr1) {
				if(xr1.rank < yr1.rank) xr1.parent = yr1; else if(xr1.rank > yr1.rank) yr1.parent = xr1; else {
					yr1.parent = xr1;
					xr1.rank++;
				}
			}
		}
		if(this.b3.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr2;
			if(this.b3.component == this.b3.component.parent) xr2 = this.b3.component; else {
				var obj4 = this.b3.component;
				var stack4 = null;
				while(obj4 != obj4.parent) {
					var nxt8 = obj4.parent;
					obj4.parent = stack4;
					stack4 = obj4;
					obj4 = nxt8;
				}
				while(stack4 != null) {
					var nxt9 = stack4.parent;
					stack4.parent = obj4;
					stack4 = nxt9;
				}
				xr2 = obj4;
			}
			var yr2;
			if(this.component == this.component.parent) yr2 = this.component; else {
				var obj5 = this.component;
				var stack5 = null;
				while(obj5 != obj5.parent) {
					var nxt10 = obj5.parent;
					obj5.parent = stack5;
					stack5 = obj5;
					obj5 = nxt10;
				}
				while(stack5 != null) {
					var nxt11 = stack5.parent;
					stack5.parent = obj5;
					stack5 = nxt11;
				}
				yr2 = obj5;
			}
			if(xr2 != yr2) {
				if(xr2.rank < yr2.rank) xr2.parent = yr2; else if(xr2.rank > yr2.rank) yr2.parent = xr2; else {
					yr2.parent = xr2;
					xr2.rank++;
				}
			}
		}
		if(this.b4.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var xr3;
			if(this.b4.component == this.b4.component.parent) xr3 = this.b4.component; else {
				var obj6 = this.b4.component;
				var stack6 = null;
				while(obj6 != obj6.parent) {
					var nxt12 = obj6.parent;
					obj6.parent = stack6;
					stack6 = obj6;
					obj6 = nxt12;
				}
				while(stack6 != null) {
					var nxt13 = stack6.parent;
					stack6.parent = obj6;
					stack6 = nxt13;
				}
				xr3 = obj6;
			}
			var yr3;
			if(this.component == this.component.parent) yr3 = this.component; else {
				var obj7 = this.component;
				var stack7 = null;
				while(obj7 != obj7.parent) {
					var nxt14 = obj7.parent;
					obj7.parent = stack7;
					stack7 = obj7;
					obj7 = nxt14;
				}
				while(stack7 != null) {
					var nxt15 = stack7.parent;
					stack7.parent = obj7;
					stack7 = nxt15;
				}
				yr3 = obj7;
			}
			if(xr3 != yr3) {
				if(xr3.rank < yr3.rank) xr3.parent = yr3; else if(xr3.rank > yr3.rank) yr3.parent = xr3; else {
					yr3.parent = xr3;
					xr3.rank++;
				}
			}
		}
	}
	,pair_exists: function(id,di) {
		return this.b1.id == id && (this.b2.id == di || this.b3.id == di || this.b4.id == di) || this.b2.id == id && (this.b3.id == di || this.b4.id == di || this.b1.id == di) || this.b3.id == id && (this.b4.id == di || this.b1.id == di || this.b2.id == di) || this.b4.id == id && (this.b1.id == di || this.b2.id == di || this.b3.id == di);
	}
	,clearcache: function() {
		this.jAcc = 0;
		this.pre_dt = -1.0;
	}
	,preStep: function(dt) {
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		this.stepped = true;
		this.equal = this.jointMin == this.jointMax;
		this.a1relx = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		this.a1rely = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		this.a2relx = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		this.a2rely = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		this.a3relx = this.b3.axisy * this.a3localx - this.b3.axisx * this.a3localy;
		this.a3rely = this.a3localx * this.b3.axisx + this.a3localy * this.b3.axisy;
		this.a4relx = this.b4.axisy * this.a4localx - this.b4.axisx * this.a4localy;
		this.a4rely = this.a4localx * this.b4.axisx + this.a4localy * this.b4.axisy;
		var C;
		var t12x = 0.0;
		var t12y = 0.0;
		var t34x = 0.0;
		var t34y = 0.0;
		t12x = this.b2.posx + this.a2relx - (this.b1.posx + this.a1relx);
		t12y = this.b2.posy + this.a2rely - (this.b1.posy + this.a1rely);
		t34x = this.b4.posx + this.a4relx - (this.b3.posx + this.a3relx);
		t34y = this.b4.posy + this.a4rely - (this.b3.posy + this.a3rely);
		var C12 = Math.sqrt(t12x * t12x + t12y * t12y);
		var C34 = Math.sqrt(t34x * t34x + t34y * t34y);
		if(C12 != 0) {
			var t = 1.0 / C12;
			this.n12x = t12x * t;
			this.n12y = t12y * t;
		}
		if(C34 != 0) {
			var t1 = 1.0 / C34;
			this.n34x = t34x * t1;
			this.n34y = t34y * t1;
			var t2 = this.ratio;
			this.n34x *= t2;
			this.n34y *= t2;
		} else {
			var t3 = this.ratio / Math.sqrt(this.n34x * this.n34x + this.n34y * this.n34y);
			this.n34x *= t3;
			this.n34y *= t3;
		}
		var C1 = C12 + this.ratio * C34;
		if(this.equal) {
			C1 -= this.jointMax;
			this.slack = false;
		} else if(C1 < this.jointMin) {
			C1 = this.jointMin - C1;
			this.n12x = -this.n12x;
			this.n12y = -this.n12y;
			this.n34x = -this.n34x;
			this.n34y = -this.n34y;
			this.slack = false;
		} else if(C1 > this.jointMax) {
			C1 -= this.jointMax;
			this.slack = false;
		} else {
			this.n12x = 0;
			this.n12y = 0;
			this.n34x = 0;
			this.n34y = 0;
			C1 = 0;
			this.slack = true;
		}
		C = C1;
		if(!this.slack) {
			this.cx1 = this.n12y * this.a1relx - this.n12x * this.a1rely;
			this.cx2 = this.n12y * this.a2relx - this.n12x * this.a2rely;
			this.cx3 = this.n34y * this.a3relx - this.n34x * this.a3rely;
			this.cx4 = this.n34y * this.a4relx - this.n34x * this.a4rely;
			var ratioSq = this.ratio * this.ratio;
			var K = this.b1.smass + this.b2.smass + ratioSq * (this.b3.smass + this.b4.smass) + this.b1.sinertia * this.cx1 * this.cx1 + this.b2.sinertia * this.cx2 * this.cx2 + this.b3.sinertia * this.cx3 * this.cx3 + this.b4.sinertia * this.cx4 * this.cx4;
			if(this.b1 == this.b4) K -= 2 * ((this.n12x * this.n34x + this.n12y * this.n34y) * this.b1.smass + this.cx1 * this.cx4 * this.b1.sinertia);
			if(this.b1 == this.b3) K += 2 * ((this.n12x * this.n34x + this.n12y * this.n34y) * this.b1.smass + this.cx1 * this.cx3 * this.b1.sinertia);
			if(this.b2 == this.b3) K -= 2 * ((this.n12x * this.n34x + this.n12y * this.n34y) * this.b2.smass + this.cx2 * this.cx3 * this.b2.sinertia);
			if(this.b2 == this.b4) K += 2 * ((this.n12x * this.n34x + this.n12y * this.n34y) * this.b2.smass + this.cx2 * this.cx4 * this.b2.sinertia);
			this.kMass = K;
			if(this.kMass != 0) this.kMass = 1 / this.kMass; else this.jAcc = 0;
			if(!this.stiff) {
				if(this.breakUnderError && C * C > this.maxError * this.maxError) return true;
				var biasCoef;
				var omega = 2 * Math.PI * this.frequency;
				this.gamma = 1 / (dt * omega * (2 * this.damping + omega * dt));
				var ig = 1 / (1 + this.gamma);
				biasCoef = dt * omega * omega * this.gamma;
				this.gamma *= ig;
				this.kMass *= ig;
				this.bias = -C * biasCoef;
				if(this.bias < -this.maxError) this.bias = -this.maxError; else if(this.bias > this.maxError) this.bias = this.maxError;
			} else {
				this.bias = 0;
				this.gamma = 0;
			}
			this.jAcc *= dtratio;
			this.jMax = this.maxForce * dt;
		}
		return false;
	}
	,warmStart: function() {
		if(!this.slack) {
			var t = this.b1.imass * this.jAcc;
			this.b1.velx -= this.n12x * t;
			this.b1.vely -= this.n12y * t;
			var t1 = this.b2.imass * this.jAcc;
			this.b2.velx += this.n12x * t1;
			this.b2.vely += this.n12y * t1;
			var t2 = this.b3.imass * this.jAcc;
			this.b3.velx -= this.n34x * t2;
			this.b3.vely -= this.n34y * t2;
			var t3 = this.b4.imass * this.jAcc;
			this.b4.velx += this.n34x * t3;
			this.b4.vely += this.n34y * t3;
			this.b1.angvel -= this.cx1 * this.b1.iinertia * this.jAcc;
			this.b2.angvel += this.cx2 * this.b2.iinertia * this.jAcc;
			this.b3.angvel -= this.cx3 * this.b3.iinertia * this.jAcc;
			this.b4.angvel += this.cx4 * this.b4.iinertia * this.jAcc;
		}
	}
	,applyImpulseVel: function() {
		if(this.slack) return false;
		var E = this.n12x * (this.b2.velx + this.b2.kinvelx - this.b1.velx - this.b1.kinvelx) + this.n12y * (this.b2.vely + this.b2.kinvely - this.b1.vely - this.b1.kinvely) + this.n34x * (this.b4.velx + this.b4.kinvelx - this.b3.velx - this.b3.kinvelx) + this.n34y * (this.b4.vely + this.b4.kinvely - this.b3.vely - this.b3.kinvely) + (this.b2.angvel + this.b2.kinangvel) * this.cx2 - (this.b1.angvel + this.b1.kinangvel) * this.cx1 + (this.b4.angvel + this.b4.kinangvel) * this.cx4 - (this.b3.angvel + this.b3.kinangvel) * this.cx3;
		var j = this.kMass * (this.bias - E) - this.jAcc * this.gamma;
		var jOld = this.jAcc;
		this.jAcc += j;
		if(!this.equal && this.jAcc > 0) this.jAcc = 0;
		if(this.breakUnderForce && this.jAcc < -this.jMax) return true;
		if(!this.stiff) {
			if(this.jAcc < -this.jMax) this.jAcc = -this.jMax;
		}
		j = this.jAcc - jOld;
		var t = this.b1.imass * j;
		this.b1.velx -= this.n12x * t;
		this.b1.vely -= this.n12y * t;
		var t1 = this.b2.imass * j;
		this.b2.velx += this.n12x * t1;
		this.b2.vely += this.n12y * t1;
		var t2 = this.b3.imass * j;
		this.b3.velx -= this.n34x * t2;
		this.b3.vely -= this.n34y * t2;
		var t3 = this.b4.imass * j;
		this.b4.velx += this.n34x * t3;
		this.b4.vely += this.n34y * t3;
		this.b1.angvel -= this.cx1 * this.b1.iinertia * j;
		this.b2.angvel += this.cx2 * this.b2.iinertia * j;
		this.b3.angvel -= this.cx3 * this.b3.iinertia * j;
		this.b4.angvel += this.cx4 * this.b4.iinertia * j;
		return false;
	}
	,applyImpulsePos: function() {
		var E;
		var j;
		var r1x = 0.0;
		var r1y = 0.0;
		r1x = this.b1.axisy * this.a1localx - this.b1.axisx * this.a1localy;
		r1y = this.a1localx * this.b1.axisx + this.a1localy * this.b1.axisy;
		var r2x = 0.0;
		var r2y = 0.0;
		r2x = this.b2.axisy * this.a2localx - this.b2.axisx * this.a2localy;
		r2y = this.a2localx * this.b2.axisx + this.a2localy * this.b2.axisy;
		var r3x = 0.0;
		var r3y = 0.0;
		r3x = this.b3.axisy * this.a3localx - this.b3.axisx * this.a3localy;
		r3y = this.a3localx * this.b3.axisx + this.a3localy * this.b3.axisy;
		var r4x = 0.0;
		var r4y = 0.0;
		r4x = this.b4.axisy * this.a4localx - this.b4.axisx * this.a4localy;
		r4y = this.a4localx * this.b4.axisx + this.a4localy * this.b4.axisy;
		var slack;
		var n12x = 0.0;
		var n12y = 0.0;
		var n34x = 0.0;
		var n34y = 0.0;
		n12x = this.n12x;
		n12y = this.n12y;
		n34x = this.n34x;
		n34y = this.n34y;
		var t12x = 0.0;
		var t12y = 0.0;
		var t34x = 0.0;
		var t34y = 0.0;
		t12x = this.b2.posx + r2x - (this.b1.posx + r1x);
		t12y = this.b2.posy + r2y - (this.b1.posy + r1y);
		t34x = this.b4.posx + r4x - (this.b3.posx + r3x);
		t34y = this.b4.posy + r4y - (this.b3.posy + r3y);
		var C12 = Math.sqrt(t12x * t12x + t12y * t12y);
		var C34 = Math.sqrt(t34x * t34x + t34y * t34y);
		if(C12 != 0) {
			var t = 1.0 / C12;
			n12x = t12x * t;
			n12y = t12y * t;
		}
		if(C34 != 0) {
			var t1 = 1.0 / C34;
			n34x = t34x * t1;
			n34y = t34y * t1;
			var t2 = this.ratio;
			n34x *= t2;
			n34y *= t2;
		} else {
			var t3 = this.ratio / Math.sqrt(n34x * n34x + n34y * n34y);
			n34x *= t3;
			n34y *= t3;
		}
		var C = C12 + this.ratio * C34;
		if(this.equal) {
			C -= this.jointMax;
			slack = false;
		} else if(C < this.jointMin) {
			C = this.jointMin - C;
			n12x = -n12x;
			n12y = -n12y;
			n34x = -n34x;
			n34y = -n34y;
			slack = false;
		} else if(C > this.jointMax) {
			C -= this.jointMax;
			slack = false;
		} else {
			n12x = 0;
			n12y = 0;
			n34x = 0;
			n34y = 0;
			C = 0;
			slack = true;
		}
		E = C;
		if(!slack) {
			if(this.breakUnderError && E * E > this.maxError * this.maxError) return true;
			if(E * E < nape_Config.constraintLinearSlop * nape_Config.constraintLinearSlop) return false;
			E *= 0.5;
			if(E * E > 6) {
				var k1 = this.b1.smass + this.b2.smass;
				if(k1 > nape_Config.epsilon) {
					k1 = 0.75 / k1;
					j = -E * k1;
					if(this.equal || j < 0) {
						var t4 = j * this.b1.imass;
						this.b1.posx -= n12x * t4;
						this.b1.posy -= n12y * t4;
						var t5 = j * this.b2.imass;
						this.b2.posx += n12x * t5;
						this.b2.posy += n12y * t5;
						var t6 = j * this.b3.imass;
						this.b3.posx -= n34x * t6;
						this.b3.posy -= n34y * t6;
						var t7 = j * this.b4.imass;
						this.b4.posx += n34x * t7;
						this.b4.posy += n34y * t7;
						var t12x1 = 0.0;
						var t12y1 = 0.0;
						var t34x1 = 0.0;
						var t34y1 = 0.0;
						t12x1 = this.b2.posx + r2x - (this.b1.posx + r1x);
						t12y1 = this.b2.posy + r2y - (this.b1.posy + r1y);
						t34x1 = this.b4.posx + r4x - (this.b3.posx + r3x);
						t34y1 = this.b4.posy + r4y - (this.b3.posy + r3y);
						var C121 = Math.sqrt(t12x1 * t12x1 + t12y1 * t12y1);
						var C341 = Math.sqrt(t34x1 * t34x1 + t34y1 * t34y1);
						if(C121 != 0) {
							var t8 = 1.0 / C121;
							n12x = t12x1 * t8;
							n12y = t12y1 * t8;
						}
						if(C341 != 0) {
							var t9 = 1.0 / C341;
							n34x = t34x1 * t9;
							n34y = t34y1 * t9;
							var t10 = this.ratio;
							n34x *= t10;
							n34y *= t10;
						} else {
							var t11 = this.ratio / Math.sqrt(n34x * n34x + n34y * n34y);
							n34x *= t11;
							n34y *= t11;
						}
						var C1 = C121 + this.ratio * C341;
						if(this.equal) {
							C1 -= this.jointMax;
							slack = false;
						} else if(C1 < this.jointMin) {
							C1 = this.jointMin - C1;
							n12x = -n12x;
							n12y = -n12y;
							n34x = -n34x;
							n34y = -n34y;
							slack = false;
						} else if(C1 > this.jointMax) {
							C1 -= this.jointMax;
							slack = false;
						} else {
							n12x = 0;
							n12y = 0;
							n34x = 0;
							n34y = 0;
							C1 = 0;
							slack = true;
						}
						E = C1;
						E *= 0.5;
					}
				}
			}
			var cx1;
			var cx2;
			var cx3;
			var cx4;
			var k;
			cx1 = n12y * r1x - n12x * r1y;
			cx2 = n12y * r2x - n12x * r2y;
			cx3 = n34y * r3x - n34x * r3y;
			cx4 = n34y * r4x - n34x * r4y;
			var ratioSq = this.ratio * this.ratio;
			var K = this.b1.smass + this.b2.smass + ratioSq * (this.b3.smass + this.b4.smass) + this.b1.sinertia * cx1 * cx1 + this.b2.sinertia * cx2 * cx2 + this.b3.sinertia * cx3 * cx3 + this.b4.sinertia * cx4 * cx4;
			if(this.b1 == this.b4) K -= 2 * ((n12x * n34x + n12y * n34y) * this.b1.smass + cx1 * cx4 * this.b1.sinertia);
			if(this.b1 == this.b3) K += 2 * ((n12x * n34x + n12y * n34y) * this.b1.smass + cx1 * cx3 * this.b1.sinertia);
			if(this.b2 == this.b3) K -= 2 * ((n12x * n34x + n12y * n34y) * this.b2.smass + cx2 * cx3 * this.b2.sinertia);
			if(this.b2 == this.b4) K += 2 * ((n12x * n34x + n12y * n34y) * this.b2.smass + cx2 * cx4 * this.b2.sinertia);
			k = K;
			if(k != 0) k = 1 / k;
			j = -E * k;
			if(this.equal || j < 0) {
				var t12 = this.b1.imass * j;
				this.b1.posx -= n12x * t12;
				this.b1.posy -= n12y * t12;
				var t13 = this.b2.imass * j;
				this.b2.posx += n12x * t13;
				this.b2.posy += n12y * t13;
				var t14 = this.b3.imass * j;
				this.b3.posx -= n34x * t14;
				this.b3.posy -= n34y * t14;
				var t15 = this.b4.imass * j;
				this.b4.posx += n34x * t15;
				this.b4.posy += n34y * t15;
				this.b1.delta_rot(-cx1 * this.b1.iinertia * j);
				this.b2.delta_rot(cx2 * this.b2.iinertia * j);
				this.b3.delta_rot(-cx3 * this.b3.iinertia * j);
				this.b4.delta_rot(cx4 * this.b4.iinertia * j);
			}
		}
		return false;
	}
	,__class__: zpp_$nape_constraint_ZPP_$PulleyJoint
});
var zpp_$nape_dynamics_ZPP_$Arbiter = function() {
	this.sensorarb = null;
	this.fluidarb = null;
	this.colarb = null;
	this.type = 0;
	this.pair = null;
	this.ws2 = null;
	this.ws1 = null;
	this.b2 = null;
	this.b1 = null;
	this.invalidated = false;
	this.immState = 0;
	this.fresh = false;
	this.continuous = false;
	this.presentable = false;
	this.intchange = false;
	this.present = 0;
	this.sleeping = false;
	this.cleared = false;
	this.active = false;
	this.endGenerated = 0;
	this.sleep_stamp = 0;
	this.up_stamp = 0;
	this.stamp = 0;
	this.di = 0;
	this.id = 0;
	this.outer = null;
};
$hxClasses["zpp_nape.dynamics.ZPP_Arbiter"] = zpp_$nape_dynamics_ZPP_$Arbiter;
zpp_$nape_dynamics_ZPP_$Arbiter.__name__ = ["zpp_nape","dynamics","ZPP_Arbiter"];
zpp_$nape_dynamics_ZPP_$Arbiter.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			zpp_$nape_dynamics_ZPP_$Arbiter.internal = true;
			if(this.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) {
				this.colarb.outer_zn = new nape_dynamics_CollisionArbiter();
				this.outer = this.colarb.outer_zn;
			} else if(this.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID) {
				this.fluidarb.outer_zn = new nape_dynamics_FluidArbiter();
				this.outer = this.fluidarb.outer_zn;
			} else this.outer = new nape_dynamics_Arbiter();
			this.outer.zpp_inner = this;
			zpp_$nape_dynamics_ZPP_$Arbiter.internal = false;
		}
		return this.outer;
	}
	,__class__: zpp_$nape_dynamics_ZPP_$Arbiter
};
var zpp_$nape_dynamics_ZPP_$SensorArbiter = function() {
	this.next = null;
	zpp_$nape_dynamics_ZPP_$Arbiter.call(this);
	this.type = zpp_$nape_dynamics_ZPP_$Arbiter.SENSOR;
	this.sensorarb = this;
};
$hxClasses["zpp_nape.dynamics.ZPP_SensorArbiter"] = zpp_$nape_dynamics_ZPP_$SensorArbiter;
zpp_$nape_dynamics_ZPP_$SensorArbiter.__name__ = ["zpp_nape","dynamics","ZPP_SensorArbiter"];
zpp_$nape_dynamics_ZPP_$SensorArbiter.__super__ = zpp_$nape_dynamics_ZPP_$Arbiter;
zpp_$nape_dynamics_ZPP_$SensorArbiter.prototype = $extend(zpp_$nape_dynamics_ZPP_$Arbiter.prototype,{
	retire: function() {
		if(!this.cleared) {
			this.b1.arbiters.inlined_try_remove(this);
			this.b2.arbiters.inlined_try_remove(this);
			if(this.pair != null) {
				this.pair.arb = null;
				this.pair = null;
			}
		}
		this.b1 = this.b2 = null;
		this.active = false;
		this.intchange = false;
		var o = this;
		o.next = zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool;
		zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool = o;
	}
	,__class__: zpp_$nape_dynamics_ZPP_$SensorArbiter
});
var zpp_$nape_dynamics_ZPP_$FluidArbiter = function() {
	this.pre_dt = 0.0;
	this.mutable = false;
	this.wrap_position = null;
	this.buoyy = 0.0;
	this.buoyx = 0.0;
	this.ny = 0.0;
	this.nx = 0.0;
	this.lgamma = 0.0;
	this.dampy = 0.0;
	this.dampx = 0.0;
	this.vMassc = 0.0;
	this.vMassb = 0.0;
	this.vMassa = 0.0;
	this.agamma = 0.0;
	this.adamp = 0.0;
	this.wMass = 0.0;
	this.nodrag = false;
	this.r2y = 0.0;
	this.r2x = 0.0;
	this.r1y = 0.0;
	this.r1x = 0.0;
	this.overlap = 0.0;
	this.centroidy = 0.0;
	this.centroidx = 0.0;
	this.next = null;
	this.outer_zn = null;
	zpp_$nape_dynamics_ZPP_$Arbiter.call(this);
	this.type = zpp_$nape_dynamics_ZPP_$Arbiter.FLUID;
	this.fluidarb = this;
	this.buoyx = 0;
	this.buoyy = 0;
	this.pre_dt = -1.0;
};
$hxClasses["zpp_nape.dynamics.ZPP_FluidArbiter"] = zpp_$nape_dynamics_ZPP_$FluidArbiter;
zpp_$nape_dynamics_ZPP_$FluidArbiter.__name__ = ["zpp_nape","dynamics","ZPP_FluidArbiter"];
zpp_$nape_dynamics_ZPP_$FluidArbiter.__super__ = zpp_$nape_dynamics_ZPP_$Arbiter;
zpp_$nape_dynamics_ZPP_$FluidArbiter.prototype = $extend(zpp_$nape_dynamics_ZPP_$Arbiter.prototype,{
	retire: function() {
		if(!this.cleared) {
			this.b1.arbiters.inlined_try_remove(this);
			this.b2.arbiters.inlined_try_remove(this);
			if(this.pair != null) {
				this.pair.arb = null;
				this.pair = null;
			}
		}
		this.b1 = this.b2 = null;
		this.active = false;
		this.intchange = false;
		var o = this;
		o.next = zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool;
		zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool = o;
		this.pre_dt = -1.0;
	}
	,preStep: function(s,dt) {
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		this.r1x = this.centroidx - this.b1.posx;
		this.r1y = this.centroidy - this.b1.posy;
		this.r2x = this.centroidx - this.b2.posx;
		this.r2y = this.centroidy - this.b2.posy;
		var g1x = 0.0;
		var g1y = 0.0;
		if(this.ws1.fluidEnabled && this.ws1.fluidProperties.wrap_gravity != null) {
			g1x = this.ws1.fluidProperties.gravityx;
			g1y = this.ws1.fluidProperties.gravityy;
		} else {
			g1x = s.gravityx;
			g1y = s.gravityy;
		}
		var g2x = 0.0;
		var g2y = 0.0;
		if(this.ws2.fluidEnabled && this.ws2.fluidProperties.wrap_gravity != null) {
			g2x = this.ws2.fluidProperties.gravityx;
			g2y = this.ws2.fluidProperties.gravityy;
		} else {
			g2x = s.gravityx;
			g2y = s.gravityy;
		}
		var buoyx = 0;
		var buoyy = 0;
		if(this.ws1.fluidEnabled && this.ws2.fluidEnabled) {
			var mass1 = this.overlap * this.ws1.fluidProperties.density;
			var mass2 = this.overlap * this.ws2.fluidProperties.density;
			if(mass1 > mass2) {
				var t = mass1 + mass2;
				buoyx -= g1x * t;
				buoyy -= g1y * t;
			} else if(mass1 < mass2) {
				var t1 = mass1 + mass2;
				buoyx += g2x * t1;
				buoyy += g2y * t1;
			} else {
				var gx = 0.0;
				var gy = 0.0;
				gx = g1x + g2x;
				gy = g1y + g2y;
				var t2 = 0.5;
				gx *= t2;
				gy *= t2;
				if(this.ws1.worldCOMx * gx + this.ws1.worldCOMy * gy > this.ws2.worldCOMx * gx + this.ws2.worldCOMy * gy) {
					var t3 = mass1 + mass2;
					buoyx -= gx * t3;
					buoyy -= gy * t3;
				} else {
					var t4 = mass1 + mass2;
					buoyx += gx * t4;
					buoyy += gy * t4;
				}
			}
		} else if(this.ws1.fluidEnabled) {
			var mass = this.overlap * this.ws1.fluidProperties.density;
			var t5 = mass;
			buoyx -= g1x * t5;
			buoyy -= g1y * t5;
		} else if(this.ws2.fluidEnabled) {
			var mass3 = this.overlap * this.ws2.fluidProperties.density;
			var t6 = mass3;
			buoyx += g2x * t6;
			buoyy += g2y * t6;
		}
		var t7 = dt;
		buoyx *= t7;
		buoyy *= t7;
		this.buoyx = buoyx;
		this.buoyy = buoyy;
		if(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var t8 = this.b1.imass;
			this.b1.velx -= buoyx * t8;
			this.b1.vely -= buoyy * t8;
			this.b1.angvel -= (buoyy * this.r1x - buoyx * this.r1y) * this.b1.iinertia;
		}
		if(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var t9 = this.b2.imass;
			this.b2.velx += buoyx * t9;
			this.b2.vely += buoyy * t9;
			this.b2.angvel += (buoyy * this.r2x - buoyx * this.r2y) * this.b2.iinertia;
		}
		if((!this.ws1.fluidEnabled || this.ws1.fluidProperties.viscosity == 0) && (!this.ws2.fluidEnabled || this.ws2.fluidProperties.viscosity == 0)) {
			this.nodrag = true;
			this.dampx = 0;
			this.dampy = 0;
			this.adamp = 0;
		} else {
			this.nodrag = false;
			var tViscosity = 0.0;
			if(this.ws1.fluidEnabled) {
				this.ws2.validate_angDrag();
				tViscosity += this.ws1.fluidProperties.viscosity * this.ws2.angDrag * this.overlap / this.ws2.area;
			}
			if(this.ws2.fluidEnabled) {
				this.ws1.validate_angDrag();
				tViscosity += this.ws2.fluidProperties.viscosity * this.ws1.angDrag * this.overlap / this.ws1.area;
			}
			if(tViscosity != 0) {
				var iSum = this.b1.sinertia + this.b2.sinertia;
				if(iSum != 0) this.wMass = 1 / iSum; else this.wMass = 0.0;
				var biasCoef;
				tViscosity *= 0.0004;
				var omega = 2 * Math.PI * tViscosity;
				this.agamma = 1 / (dt * omega * (2 + omega * dt));
				var ig = 1 / (1 + this.agamma);
				biasCoef = dt * omega * omega * this.agamma;
				this.agamma *= ig;
				this.wMass *= ig;
			} else {
				this.wMass = 0.0;
				this.agamma = 0.0;
			}
			var vrnx = this.b2.velx + this.b2.kinvelx - this.r2y * (this.b2.angvel + this.b2.kinangvel) - (this.b1.velx + this.b1.kinvelx - this.r1y * (this.b2.angvel + this.b2.kinangvel));
			var vrny = this.b2.vely + this.b2.kinvely + this.r2x * (this.b2.angvel + this.b2.kinangvel) - (this.b1.vely + this.b1.kinvely + this.r1x * (this.b1.angvel + this.b1.kinangvel));
			if(vrnx * vrnx + vrny * vrny < nape_Config.epsilon * nape_Config.epsilon) {
			} else {
				var d = vrnx * vrnx + vrny * vrny;
				var imag = 1.0 / Math.sqrt(d);
				var t10 = imag;
				vrnx *= t10;
				vrny *= t10;
				this.nx = vrnx;
				this.ny = vrny;
			}
			var tViscosity1 = 0.0;
			if(this.ws1.fluidEnabled) {
				var f = -this.ws1.fluidProperties.viscosity * this.overlap / this.ws2.area;
				if(this.ws2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) tViscosity1 -= f * this.ws2.circle.radius * nape_Config.fluidLinearDrag / (2 * this.ws2.circle.radius * Math.PI); else {
					var poly = this.ws2.polygon;
					var bord = 0.0;
					var acc = 0.0;
					var cx_ite = poly.edges.head;
					while(cx_ite != null) {
						var ex = cx_ite.elt;
						bord += ex.length;
						var fact = f * ex.length * (ex.gnormx * this.nx + ex.gnormy * this.ny);
						if(fact > 0) fact = fact *= -nape_Config.fluidVacuumDrag;
						acc -= fact * 0.5 * nape_Config.fluidLinearDrag;
						cx_ite = cx_ite.next;
					}
					tViscosity1 += acc / bord;
				}
			}
			if(this.ws2.fluidEnabled) {
				var f1 = -this.ws2.fluidProperties.viscosity * this.overlap / this.ws1.area;
				if(this.ws1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) tViscosity1 -= f1 * this.ws1.circle.radius * nape_Config.fluidLinearDrag / (2 * this.ws1.circle.radius * Math.PI); else {
					var poly1 = this.ws1.polygon;
					var bord1 = 0.0;
					var acc1 = 0.0;
					var cx_ite1 = poly1.edges.head;
					while(cx_ite1 != null) {
						var ex1 = cx_ite1.elt;
						bord1 += ex1.length;
						var fact1 = f1 * ex1.length * (ex1.gnormx * this.nx + ex1.gnormy * this.ny);
						if(fact1 > 0) fact1 = fact1 *= -nape_Config.fluidVacuumDrag;
						acc1 -= fact1 * 0.5 * nape_Config.fluidLinearDrag;
						cx_ite1 = cx_ite1.next;
					}
					tViscosity1 += acc1 / bord1;
				}
			}
			if(tViscosity1 != 0) {
				var m = this.b1.smass + this.b2.smass;
				var Ka = 0.0;
				var Kb = 0.0;
				var Kc = 0.0;
				Ka = m;
				Kb = 0;
				Kc = m;
				if(this.b1.sinertia != 0) {
					var X = this.r1x * this.b1.sinertia;
					var Y = this.r1y * this.b1.sinertia;
					Ka += Y * this.r1y;
					Kb += -Y * this.r1x;
					Kc += X * this.r1x;
				}
				if(this.b2.sinertia != 0) {
					var X1 = this.r2x * this.b2.sinertia;
					var Y1 = this.r2y * this.b2.sinertia;
					Ka += Y1 * this.r2y;
					Kb += -Y1 * this.r2x;
					Kc += X1 * this.r2x;
				}
				var det = Ka * Kc - Kb * Kb;
				if(det != det) {
					Ka = Kb = Kc = 0;
					3;
				} else if(det == 0) {
					var flag = 0;
					if(Ka != 0) Ka = 1 / Ka; else {
						Ka = 0;
						flag |= 1;
					}
					if(Kc != 0) Kc = 1 / Kc; else {
						Kc = 0;
						flag |= 2;
					}
					Kb = 0;
					flag;
				} else {
					det = 1 / det;
					var t11 = Kc * det;
					Kc = Ka * det;
					Ka = t11;
					Kb *= -det;
					0;
				}
				this.vMassa = Ka;
				this.vMassb = Kb;
				this.vMassc = Kc;
				var biasCoef1;
				var X2;
				var omega1 = 2 * Math.PI * tViscosity1;
				this.lgamma = 1 / (dt * omega1 * (2 + omega1 * dt));
				var ig1 = 1 / (1 + this.lgamma);
				biasCoef1 = dt * omega1 * omega1 * this.lgamma;
				this.lgamma *= ig1;
				X2 = ig1;
				this.vMassa *= X2;
				this.vMassb *= X2;
				this.vMassc *= X2;
			} else {
				this.vMassa = 0;
				this.vMassb = 0;
				this.vMassc = 0;
				this.lgamma = 0.0;
			}
		}
		var t12 = dtratio;
		this.dampx *= t12;
		this.dampy *= t12;
		this.adamp *= dtratio;
	}
	,warmStart: function() {
		var t = this.b1.imass;
		this.b1.velx -= this.dampx * t;
		this.b1.vely -= this.dampy * t;
		var t1 = this.b2.imass;
		this.b2.velx += this.dampx * t1;
		this.b2.vely += this.dampy * t1;
		this.b1.angvel -= this.b1.iinertia * (this.dampy * this.r1x - this.dampx * this.r1y);
		this.b2.angvel += this.b2.iinertia * (this.dampy * this.r2x - this.dampx * this.r2y);
		this.b1.angvel -= this.adamp * this.b1.iinertia;
		this.b2.angvel += this.adamp * this.b2.iinertia;
	}
	,applyImpulseVel: function() {
		if(!this.nodrag) {
			var w1 = this.b1.angvel + this.b1.kinangvel;
			var w2 = this.b2.angvel + this.b2.kinangvel;
			var jx = this.b1.velx + this.b1.kinvelx - this.r1y * w1 - (this.b2.velx + this.b2.kinvelx - this.r2y * w2);
			var jy = this.b1.vely + this.b1.kinvely + this.r1x * w1 - (this.b2.vely + this.b2.kinvely + this.r2x * w2);
			var t = this.vMassa * jx + this.vMassb * jy;
			jy = this.vMassb * jx + this.vMassc * jy;
			jx = t;
			var t1 = this.lgamma;
			jx -= this.dampx * t1;
			jy -= this.dampy * t1;
			var t2 = 1.0;
			this.dampx += jx * t2;
			this.dampy += jy * t2;
			var t3 = this.b1.imass;
			this.b1.velx -= jx * t3;
			this.b1.vely -= jy * t3;
			var t4 = this.b2.imass;
			this.b2.velx += jx * t4;
			this.b2.vely += jy * t4;
			this.b1.angvel -= this.b1.iinertia * (jy * this.r1x - jx * this.r1y);
			this.b2.angvel += this.b2.iinertia * (jy * this.r2x - jx * this.r2y);
			var j_damp = (w1 - w2) * this.wMass - this.adamp * this.agamma;
			this.adamp += j_damp;
			this.b1.angvel -= j_damp * this.b1.iinertia;
			this.b2.angvel += j_damp * this.b2.iinertia;
		}
	}
	,__class__: zpp_$nape_dynamics_ZPP_$FluidArbiter
});
var zpp_$nape_dynamics_ZPP_$ColArbiter = function() {
	this.pre_dt = 0.0;
	this.mutable = false;
	this.stat = false;
	this.next = null;
	this.hpc2 = false;
	this.hc2 = false;
	this.oc2 = null;
	this.c2 = null;
	this.oc1 = null;
	this.c1 = null;
	this.__ref_vertex = 0;
	this.__ref_edge2 = null;
	this.__ref_edge1 = null;
	this.biasCoef = 0.0;
	this.rev = false;
	this.radius = 0.0;
	this.lproj = 0.0;
	this.lnormy = 0.0;
	this.lnormx = 0.0;
	this.surfacey = 0.0;
	this.surfacex = 0.0;
	this.k2y = 0.0;
	this.k2x = 0.0;
	this.k1y = 0.0;
	this.k1x = 0.0;
	this.rt2b = 0.0;
	this.rn2b = 0.0;
	this.rt2a = 0.0;
	this.rn2a = 0.0;
	this.rt1b = 0.0;
	this.rn1b = 0.0;
	this.rt1a = 0.0;
	this.rn1a = 0.0;
	this.jrAcc = 0.0;
	this.rMass = 0.0;
	this.Kc = 0.0;
	this.Kb = 0.0;
	this.Ka = 0.0;
	this.kMassc = 0.0;
	this.kMassb = 0.0;
	this.kMassa = 0.0;
	this.wrap_normal = null;
	this.ny = 0.0;
	this.nx = 0.0;
	this.innards = null;
	this.wrap_contacts = null;
	this.contacts = null;
	this.s2 = null;
	this.s1 = null;
	this.userdef_rfric = false;
	this.userdef_restitution = false;
	this.userdef_stat_fric = false;
	this.userdef_dyn_fric = false;
	this.rfric = 0.0;
	this.restitution = 0.0;
	this.stat_fric = 0.0;
	this.dyn_fric = 0.0;
	this.outer_zn = null;
	zpp_$nape_dynamics_ZPP_$Arbiter.call(this);
	this.pre_dt = -1.0;
	this.contacts = new zpp_$nape_dynamics_ZPP_$Contact();
	this.innards = new zpp_$nape_dynamics_ZPP_$IContact();
	this.type = zpp_$nape_dynamics_ZPP_$Arbiter.COL;
	this.colarb = this;
};
$hxClasses["zpp_nape.dynamics.ZPP_ColArbiter"] = zpp_$nape_dynamics_ZPP_$ColArbiter;
zpp_$nape_dynamics_ZPP_$ColArbiter.__name__ = ["zpp_nape","dynamics","ZPP_ColArbiter"];
zpp_$nape_dynamics_ZPP_$ColArbiter.__super__ = zpp_$nape_dynamics_ZPP_$Arbiter;
zpp_$nape_dynamics_ZPP_$ColArbiter.prototype = $extend(zpp_$nape_dynamics_ZPP_$Arbiter.prototype,{
	normal_validate: function() {
		if(this.cleared) throw new js__$Boot_HaxeError("Error: Arbiter not currently in use");
		this.wrap_normal.zpp_inner.x = this.nx;
		this.wrap_normal.zpp_inner.y = this.ny;
		if(this.ws1.id > this.ws2.id) {
			this.wrap_normal.zpp_inner.x = -this.wrap_normal.zpp_inner.x;
			this.wrap_normal.zpp_inner.y = -this.wrap_normal.zpp_inner.y;
		}
	}
	,getnormal: function() {
		this.wrap_normal = nape_geom_Vec2.get(0,0,null);
		this.wrap_normal.zpp_inner._immutable = true;
		this.wrap_normal.zpp_inner._inuse = true;
		this.wrap_normal.zpp_inner._validate = $bind(this,this.normal_validate);
	}
	,injectContact: function(px,py,nx,ny,dist,hash,posOnly) {
		if(posOnly == null) posOnly = false;
		var c = null;
		var cx_ite = this.contacts.next;
		while(cx_ite != null) {
			var cur = cx_ite;
			if(hash == cur.hash) {
				c = cur;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(c == null) {
			if(zpp_$nape_dynamics_ZPP_$Contact.zpp_pool == null) c = new zpp_$nape_dynamics_ZPP_$Contact(); else {
				c = zpp_$nape_dynamics_ZPP_$Contact.zpp_pool;
				zpp_$nape_dynamics_ZPP_$Contact.zpp_pool = c.next;
				c.next = null;
			}
			null;
			var ci = c.inner;
			ci.jnAcc = ci.jtAcc = 0;
			c.hash = hash;
			c.fresh = true;
			c.arbiter = this;
			this.jrAcc = 0;
			this.contacts.inlined_add(c);
			this.innards.add(ci);
		} else c.fresh = false;
		c.px = px;
		c.py = py;
		this.nx = nx;
		this.ny = ny;
		c.dist = dist;
		c.stamp = this.stamp;
		c.posOnly = posOnly;
		return c;
	}
	,retire: function() {
		if(!this.cleared) {
			this.b1.arbiters.inlined_try_remove(this);
			this.b2.arbiters.inlined_try_remove(this);
			if(this.pair != null) {
				this.pair.arb = null;
				this.pair = null;
			}
		}
		this.b1 = this.b2 = null;
		this.active = false;
		this.intchange = false;
		while(!(this.contacts.next == null)) {
			var o = this.contacts.inlined_pop_unsafe();
			o.arbiter = null;
			o.next = zpp_$nape_dynamics_ZPP_$Contact.zpp_pool;
			zpp_$nape_dynamics_ZPP_$Contact.zpp_pool = o;
			this.innards.inlined_pop();
		}
		var o1 = this;
		o1.userdef_dyn_fric = false;
		o1.userdef_stat_fric = false;
		o1.userdef_restitution = false;
		o1.userdef_rfric = false;
		o1.__ref_edge1 = o1.__ref_edge2 = null;
		o1.next = zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool;
		zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool = o1;
		this.pre_dt = -1.0;
	}
	,contacts_adder: function(x) {
		throw new js__$Boot_HaxeError("Error: Cannot add new contacts, information required is far too specific and detailed :)");
		return false;
	}
	,contacts_subber: function(x) {
		var pre = null;
		var prei = null;
		var cx_itei = this.innards.next;
		var cx_ite = this.contacts.next;
		while(cx_ite != null) {
			var c = cx_ite;
			if(c == x.zpp_inner) {
				this.contacts.erase(pre);
				this.innards.erase(prei);
				var o = c;
				o.arbiter = null;
				o.next = zpp_$nape_dynamics_ZPP_$Contact.zpp_pool;
				zpp_$nape_dynamics_ZPP_$Contact.zpp_pool = o;
				break;
			}
			pre = cx_ite;
			prei = cx_itei;
			cx_itei = cx_itei.next;
			cx_ite = cx_ite.next;
		}
	}
	,setupcontacts: function() {
		this.wrap_contacts = zpp_$nape_util_ZPP_$ContactList.get(this.contacts,true);
		this.wrap_contacts.zpp_inner.immutable = !this.mutable;
		this.wrap_contacts.zpp_inner.adder = $bind(this,this.contacts_adder);
		this.wrap_contacts.zpp_inner.dontremove = true;
		this.wrap_contacts.zpp_inner.subber = $bind(this,this.contacts_subber);
	}
	,cleanupContacts: function() {
		var fst = true;
		var pre = null;
		var prei = null;
		var cx_itei = this.innards.next;
		this.hc2 = false;
		var cx_ite = this.contacts.next;
		while(cx_ite != null) {
			var c = cx_ite;
			if(c.stamp + nape_Config.arbiterExpirationDelay < this.stamp) {
				cx_ite = this.contacts.inlined_erase(pre);
				cx_itei = this.innards.inlined_erase(prei);
				var o = c;
				o.arbiter = null;
				o.next = zpp_$nape_dynamics_ZPP_$Contact.zpp_pool;
				zpp_$nape_dynamics_ZPP_$Contact.zpp_pool = o;
				continue;
			}
			var ci = c.inner;
			var pact = c.active;
			c.active = c.stamp == this.stamp;
			if(c.active) {
				if(fst) {
					fst = false;
					this.c1 = ci;
					this.oc1 = c;
				} else {
					this.hc2 = true;
					this.c2 = ci;
					this.oc2 = c;
				}
			}
			if(pact != c.active) this.contacts.modified = true;
			pre = cx_ite;
			prei = cx_itei;
			cx_itei = cx_itei.next;
			cx_ite = cx_ite.next;
		}
		if(this.hc2) {
			this.hpc2 = true;
			if(this.oc1.posOnly) {
				var tmp = this.c1;
				this.c1 = this.c2;
				this.c2 = tmp;
				var tmp2 = this.oc1;
				this.oc1 = this.oc2;
				this.oc2 = tmp2;
				this.hc2 = false;
			} else if(this.oc2.posOnly) this.hc2 = false;
			if(this.oc1.posOnly) fst = true;
		} else this.hpc2 = false;
		return fst;
	}
	,preStep: function(dt) {
		if(this.invalidated) {
			this.invalidated = false;
			if(!this.userdef_restitution) {
				if(this.s1.material.elasticity <= -Infinity || this.s2.material.elasticity <= -Infinity) this.restitution = 0; else if(this.s1.material.elasticity >= Infinity || this.s2.material.elasticity >= Infinity) this.restitution = 1; else this.restitution = (this.s1.material.elasticity + this.s2.material.elasticity) / 2;
				if(this.restitution < 0) this.restitution = 0;
				if(this.restitution > 1) this.restitution = 1;
			}
			if(!this.userdef_dyn_fric) this.dyn_fric = Math.sqrt(this.s1.material.dynamicFriction * this.s2.material.dynamicFriction);
			if(!this.userdef_stat_fric) this.stat_fric = Math.sqrt(this.s1.material.staticFriction * this.s2.material.staticFriction);
			if(!this.userdef_rfric) this.rfric = Math.sqrt(this.s1.material.rollingFriction * this.s2.material.rollingFriction);
		}
		if(this.pre_dt == -1.0) this.pre_dt = dt;
		var dtratio = dt / this.pre_dt;
		this.pre_dt = dt;
		var mass_sum = this.b1.smass + this.b2.smass;
		this.hc2 = false;
		var fst = true;
		var statType = !(this.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) || !(this.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC);
		var bias;
		if(statType) {
			if(this.continuous) bias = nape_Config.contactContinuousStaticBiasCoef; else bias = nape_Config.contactStaticBiasCoef;
		} else if(this.continuous) bias = nape_Config.contactContinuousBiasCoef; else bias = nape_Config.contactBiasCoef;
		this.biasCoef = bias;
		this.continuous = false;
		var pre = null;
		var prei = null;
		var cx_itei = this.innards.next;
		var cx_ite = this.contacts.next;
		while(cx_ite != null) {
			var c = cx_ite;
			if(c.stamp + nape_Config.arbiterExpirationDelay < this.stamp) {
				cx_ite = this.contacts.inlined_erase(pre);
				cx_itei = this.innards.inlined_erase(prei);
				var o = c;
				o.arbiter = null;
				o.next = zpp_$nape_dynamics_ZPP_$Contact.zpp_pool;
				zpp_$nape_dynamics_ZPP_$Contact.zpp_pool = o;
				continue;
			}
			var ci = c.inner;
			var pact = c.active;
			c.active = c.stamp == this.stamp;
			if(c.active) {
				if(fst) {
					fst = false;
					this.c1 = ci;
					this.oc1 = c;
				} else {
					this.hc2 = true;
					this.c2 = ci;
					this.oc2 = c;
				}
				ci.r2x = c.px - this.b2.posx;
				ci.r2y = c.py - this.b2.posy;
				ci.r1x = c.px - this.b1.posx;
				ci.r1y = c.py - this.b1.posy;
				var kt = mass_sum + this.b2.sinertia * zpp_$nape_util_ZPP_$Math.sqr(ci.r2x * this.nx + ci.r2y * this.ny);
				kt += this.b1.sinertia * zpp_$nape_util_ZPP_$Math.sqr(ci.r1x * this.nx + ci.r1y * this.ny);
				if(kt < nape_Config.epsilon * nape_Config.epsilon) ci.tMass = 0; else ci.tMass = 1.0 / kt;
				var nt = mass_sum + this.b2.sinertia * zpp_$nape_util_ZPP_$Math.sqr(this.ny * ci.r2x - this.nx * ci.r2y);
				nt += this.b1.sinertia * zpp_$nape_util_ZPP_$Math.sqr(this.ny * ci.r1x - this.nx * ci.r1y);
				if(nt < nape_Config.epsilon * nape_Config.epsilon) ci.nMass = 0; else ci.nMass = 1.0 / nt;
				var vrx = 0.0;
				var vry = 0.0;
				var ang = this.b2.angvel + this.b2.kinangvel;
				vrx = this.b2.velx + this.b2.kinvelx - ci.r2y * ang;
				vry = this.b2.vely + this.b2.kinvely + ci.r2x * ang;
				ang = this.b1.angvel + this.b1.kinangvel;
				vrx -= this.b1.velx + this.b1.kinvelx - ci.r1y * ang;
				vry -= this.b1.vely + this.b1.kinvely + ci.r1x * ang;
				var vdot = this.nx * vrx + this.ny * vry;
				c.elasticity = this.restitution;
				ci.bounce = vdot * c.elasticity;
				if(ci.bounce > -nape_Config.elasticThreshold) ci.bounce = 0;
				vdot = vry * this.nx - vrx * this.ny;
				var thr = nape_Config.staticFrictionThreshold;
				if(vdot * vdot > thr * thr) ci.friction = this.dyn_fric; else ci.friction = this.stat_fric;
				ci.jnAcc *= dtratio;
				ci.jtAcc *= dtratio;
			}
			if(pact != c.active) this.contacts.modified = true;
			pre = cx_ite;
			prei = cx_itei;
			cx_itei = cx_itei.next;
			cx_ite = cx_ite.next;
		}
		if(this.hc2) {
			this.hpc2 = true;
			if(this.oc1.posOnly) {
				var tmp = this.c1;
				this.c1 = this.c2;
				this.c2 = tmp;
				var tmp2 = this.oc1;
				this.oc1 = this.oc2;
				this.oc2 = tmp2;
				this.hc2 = false;
			} else if(this.oc2.posOnly) this.hc2 = false;
			if(this.oc1.posOnly) fst = true;
		} else this.hpc2 = false;
		this.jrAcc *= dtratio;
		if(!fst) {
			this.rn1a = this.ny * this.c1.r1x - this.nx * this.c1.r1y;
			this.rt1a = this.c1.r1x * this.nx + this.c1.r1y * this.ny;
			this.rn1b = this.ny * this.c1.r2x - this.nx * this.c1.r2y;
			this.rt1b = this.c1.r2x * this.nx + this.c1.r2y * this.ny;
			this.k1x = this.b2.kinvelx - this.c1.r2y * this.b2.kinangvel - (this.b1.kinvelx - this.c1.r1y * this.b1.kinangvel);
			this.k1y = this.b2.kinvely + this.c1.r2x * this.b2.kinangvel - (this.b1.kinvely + this.c1.r1x * this.b1.kinangvel);
		}
		if(this.hc2) {
			this.rn2a = this.ny * this.c2.r1x - this.nx * this.c2.r1y;
			this.rt2a = this.c2.r1x * this.nx + this.c2.r1y * this.ny;
			this.rn2b = this.ny * this.c2.r2x - this.nx * this.c2.r2y;
			this.rt2b = this.c2.r2x * this.nx + this.c2.r2y * this.ny;
			this.k2x = this.b2.kinvelx - this.c2.r2y * this.b2.kinangvel - (this.b1.kinvelx - this.c2.r1y * this.b1.kinangvel);
			this.k2y = this.b2.kinvely + this.c2.r2x * this.b2.kinangvel - (this.b1.kinvely + this.c2.r1x * this.b1.kinangvel);
			this.kMassa = mass_sum + this.b1.sinertia * this.rn1a * this.rn1a + this.b2.sinertia * this.rn1b * this.rn1b;
			this.kMassb = mass_sum + this.b1.sinertia * this.rn1a * this.rn2a + this.b2.sinertia * this.rn1b * this.rn2b;
			this.kMassc = mass_sum + this.b1.sinertia * this.rn2a * this.rn2a + this.b2.sinertia * this.rn2b * this.rn2b;
			var norm = this.kMassa * this.kMassa + 2 * this.kMassb * this.kMassb + this.kMassc * this.kMassc;
			if(norm < nape_Config.illConditionedThreshold * (this.kMassa * this.kMassc - this.kMassb * this.kMassb)) {
				this.Ka = this.kMassa;
				this.Kb = this.kMassb;
				this.Kc = this.kMassc;
				var det = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
				if(det != det) {
					this.kMassa = this.kMassb = this.kMassc = 0;
					3;
				} else if(det == 0) {
					var flag = 0;
					if(this.kMassa != 0) this.kMassa = 1 / this.kMassa; else {
						this.kMassa = 0;
						flag |= 1;
					}
					if(this.kMassc != 0) this.kMassc = 1 / this.kMassc; else {
						this.kMassc = 0;
						flag |= 2;
					}
					this.kMassb = 0;
					flag;
				} else {
					det = 1 / det;
					var t = this.kMassc * det;
					this.kMassc = this.kMassa * det;
					this.kMassa = t;
					this.kMassb *= -det;
					0;
				}
			} else {
				this.hc2 = false;
				if(this.oc2.dist < this.oc1.dist) {
					var t1 = this.c1;
					this.c1 = this.c2;
					this.c2 = t1;
				}
				this.oc2.active = false;
				this.contacts.modified = true;
			}
		}
		this.surfacex = this.b2.svelx;
		this.surfacey = this.b2.svely;
		var t2 = 1.0;
		this.surfacex += this.b1.svelx * t2;
		this.surfacey += this.b1.svely * t2;
		this.surfacex = -this.surfacex;
		this.surfacey = -this.surfacey;
		this.rMass = this.b1.sinertia + this.b2.sinertia;
		if(this.rMass != 0) this.rMass = 1 / this.rMass;
		return fst;
	}
	,warmStart: function() {
		var jx = this.nx * this.c1.jnAcc - this.ny * this.c1.jtAcc;
		var jy = this.ny * this.c1.jnAcc + this.nx * this.c1.jtAcc;
		var t = this.b1.imass;
		this.b1.velx -= jx * t;
		this.b1.vely -= jy * t;
		this.b1.angvel -= this.b1.iinertia * (jy * this.c1.r1x - jx * this.c1.r1y);
		var t1 = this.b2.imass;
		this.b2.velx += jx * t1;
		this.b2.vely += jy * t1;
		this.b2.angvel += this.b2.iinertia * (jy * this.c1.r2x - jx * this.c1.r2y);
		if(this.hc2) {
			var jx1 = this.nx * this.c2.jnAcc - this.ny * this.c2.jtAcc;
			var jy1 = this.ny * this.c2.jnAcc + this.nx * this.c2.jtAcc;
			var t2 = this.b1.imass;
			this.b1.velx -= jx1 * t2;
			this.b1.vely -= jy1 * t2;
			this.b1.angvel -= this.b1.iinertia * (jy1 * this.c2.r1x - jx1 * this.c2.r1y);
			var t3 = this.b2.imass;
			this.b2.velx += jx1 * t3;
			this.b2.vely += jy1 * t3;
			this.b2.angvel += this.b2.iinertia * (jy1 * this.c2.r2x - jx1 * this.c2.r2y);
		}
		this.b2.angvel += this.jrAcc * this.b2.iinertia;
		this.b1.angvel -= this.jrAcc * this.b1.iinertia;
	}
	,applyImpulseVel: function() {
		var jx;
		var jy;
		var j;
		var jMax;
		var jOld;
		var cjAcc;
		var v1x = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel);
		var v1y = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel);
		j = (v1y * this.nx - v1x * this.ny + this.surfacex) * this.c1.tMass;
		jMax = this.c1.friction * this.c1.jnAcc;
		jOld = this.c1.jtAcc;
		cjAcc = jOld - j;
		if(cjAcc > jMax) cjAcc = jMax; else if(cjAcc < -jMax) cjAcc = -jMax;
		j = cjAcc - jOld;
		this.c1.jtAcc = cjAcc;
		jx = -this.ny * j;
		jy = this.nx * j;
		this.b2.velx += jx * this.b2.imass;
		this.b2.vely += jy * this.b2.imass;
		this.b1.velx -= jx * this.b1.imass;
		this.b1.vely -= jy * this.b1.imass;
		this.b2.angvel += this.rt1b * j * this.b2.iinertia;
		this.b1.angvel -= this.rt1a * j * this.b1.iinertia;
		if(this.hc2) {
			var v2x = this.k2x + this.b2.velx - this.c2.r2y * this.b2.angvel - (this.b1.velx - this.c2.r1y * this.b1.angvel);
			var v2y = this.k2y + this.b2.vely + this.c2.r2x * this.b2.angvel - (this.b1.vely + this.c2.r1x * this.b1.angvel);
			j = (v2y * this.nx - v2x * this.ny + this.surfacex) * this.c2.tMass;
			jMax = this.c2.friction * this.c2.jnAcc;
			jOld = this.c2.jtAcc;
			cjAcc = jOld - j;
			if(cjAcc > jMax) cjAcc = jMax; else if(cjAcc < -jMax) cjAcc = -jMax;
			j = cjAcc - jOld;
			this.c2.jtAcc = cjAcc;
			jx = -this.ny * j;
			jy = this.nx * j;
			this.b2.velx += jx * this.b2.imass;
			this.b2.vely += jy * this.b2.imass;
			this.b1.velx -= jx * this.b1.imass;
			this.b1.vely -= jy * this.b1.imass;
			this.b2.angvel += this.rt2b * j * this.b2.iinertia;
			this.b1.angvel -= this.rt2a * j * this.b1.iinertia;
			v1x = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel);
			v1y = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel);
			v2x = this.k2x + this.b2.velx - this.c2.r2y * this.b2.angvel - (this.b1.velx - this.c2.r1y * this.b1.angvel);
			v2y = this.k2y + this.b2.vely + this.c2.r2x * this.b2.angvel - (this.b1.vely + this.c2.r1x * this.b1.angvel);
			var ax = this.c1.jnAcc;
			var ay = this.c2.jnAcc;
			var jnx = v1x * this.nx + v1y * this.ny + this.surfacey + this.c1.bounce - (this.Ka * ax + this.Kb * ay);
			var jny = v2x * this.nx + v2y * this.ny + this.surfacey + this.c2.bounce - (this.Kb * ax + this.Kc * ay);
			var xx = -(this.kMassa * jnx + this.kMassb * jny);
			var xy = -(this.kMassb * jnx + this.kMassc * jny);
			if(xx >= 0 && xy >= 0) {
				jnx = xx - ax;
				jny = xy - ay;
				this.c1.jnAcc = xx;
				this.c2.jnAcc = xy;
			} else {
				xx = -this.c1.nMass * jnx;
				if(xx >= 0 && this.Kb * xx + jny >= 0) {
					jnx = xx - ax;
					jny = -ay;
					this.c1.jnAcc = xx;
					this.c2.jnAcc = 0;
				} else {
					xy = -this.c2.nMass * jny;
					if(xy >= 0 && this.Kb * xy + jnx >= 0) {
						jnx = -ax;
						jny = xy - ay;
						this.c1.jnAcc = 0;
						this.c2.jnAcc = xy;
					} else if(jnx >= 0 && jny >= 0) {
						jnx = -ax;
						jny = -ay;
						this.c1.jnAcc = this.c2.jnAcc = 0;
					} else {
						jnx = 0;
						jny = 0;
					}
				}
			}
			j = jnx + jny;
			jx = this.nx * j;
			jy = this.ny * j;
			this.b2.velx += jx * this.b2.imass;
			this.b2.vely += jy * this.b2.imass;
			this.b1.velx -= jx * this.b1.imass;
			this.b1.vely -= jy * this.b1.imass;
			this.b2.angvel += (this.rn1b * jnx + this.rn2b * jny) * this.b2.iinertia;
			this.b1.angvel -= (this.rn1a * jnx + this.rn2a * jny) * this.b1.iinertia;
		} else {
			if(this.radius != 0.0) {
				var dw = this.b2.angvel - this.b1.angvel;
				j = dw * this.rMass;
				jMax = this.rfric * this.c1.jnAcc;
				jOld = this.jrAcc;
				this.jrAcc -= j;
				if(this.jrAcc > jMax) this.jrAcc = jMax; else if(this.jrAcc < -jMax) this.jrAcc = -jMax;
				j = this.jrAcc - jOld;
				this.b2.angvel += j * this.b2.iinertia;
				this.b1.angvel -= j * this.b1.iinertia;
			}
			v1x = this.k1x + this.b2.velx - this.c1.r2y * this.b2.angvel - (this.b1.velx - this.c1.r1y * this.b1.angvel);
			v1y = this.k1y + this.b2.vely + this.c1.r2x * this.b2.angvel - (this.b1.vely + this.c1.r1x * this.b1.angvel);
			j = (this.c1.bounce + (this.nx * v1x + this.ny * v1y) + this.surfacey) * this.c1.nMass;
			jOld = this.c1.jnAcc;
			cjAcc = jOld - j;
			if(cjAcc < 0.0) cjAcc = 0.0;
			j = cjAcc - jOld;
			this.c1.jnAcc = cjAcc;
			jx = this.nx * j;
			jy = this.ny * j;
			this.b2.velx += jx * this.b2.imass;
			this.b2.vely += jy * this.b2.imass;
			this.b1.velx -= jx * this.b1.imass;
			this.b1.vely -= jy * this.b1.imass;
			this.b2.angvel += this.rn1b * j * this.b2.iinertia;
			this.b1.angvel -= this.rn1a * j * this.b1.iinertia;
		}
	}
	,applyImpulsePos: function() {
		if(this.ptype == 2) {
			var c = this.c1;
			var dx = 0.0;
			var dy = 0.0;
			var r2x = 0.0;
			var r2y = 0.0;
			r2x = this.b2.axisy * c.lr2x - this.b2.axisx * c.lr2y;
			r2y = c.lr2x * this.b2.axisx + c.lr2y * this.b2.axisy;
			var t = 1.0;
			r2x += this.b2.posx * t;
			r2y += this.b2.posy * t;
			var r1x = 0.0;
			var r1y = 0.0;
			r1x = this.b1.axisy * c.lr1x - this.b1.axisx * c.lr1y;
			r1y = c.lr1x * this.b1.axisx + c.lr1y * this.b1.axisy;
			var t1 = 1.0;
			r1x += this.b1.posx * t1;
			r1y += this.b1.posy * t1;
			var dx1 = 0.0;
			var dy1 = 0.0;
			dx1 = r2x - r1x;
			dy1 = r2y - r1y;
			var dl = Math.sqrt(dx1 * dx1 + dy1 * dy1);
			var r = this.radius - nape_Config.collisionSlop;
			var err = dl - r;
			if(dx1 * this.nx + dy1 * this.ny < 0) {
				dx1 = -dx1;
				dy1 = -dy1;
				err -= this.radius;
			}
			if(err < 0) {
				if(dl < nape_Config.epsilon) {
					if(this.b1.smass != 0.0) this.b1.posx += nape_Config.epsilon * 10; else this.b2.posx += nape_Config.epsilon * 10;
				} else {
					var t2 = 1.0 / dl;
					dx1 *= t2;
					dy1 *= t2;
					var px = 0.5 * (r1x + r2x);
					var py = 0.5 * (r1y + r2y);
					var pen = dl - r;
					r1x = px - this.b1.posx;
					r1y = py - this.b1.posy;
					r2x = px - this.b2.posx;
					r2y = py - this.b2.posy;
					var rn1 = dy1 * r1x - dx1 * r1y;
					var rn2 = dy1 * r2x - dx1 * r2y;
					var K = this.b2.smass + rn2 * rn2 * this.b2.sinertia + this.b1.smass + rn1 * rn1 * this.b1.sinertia;
					if(K != 0) {
						var jn = -this.biasCoef * pen / K;
						var Jx = 0.0;
						var Jy = 0.0;
						var t3 = jn;
						Jx = dx1 * t3;
						Jy = dy1 * t3;
						var t4 = this.b1.imass;
						this.b1.posx -= Jx * t4;
						this.b1.posy -= Jy * t4;
						this.b1.delta_rot(-rn1 * this.b1.iinertia * jn);
						var t5 = this.b2.imass;
						this.b2.posx += Jx * t5;
						this.b2.posy += Jy * t5;
						this.b2.delta_rot(rn2 * this.b2.iinertia * jn);
					}
				}
			}
		} else {
			var gnormx = 0.0;
			var gnormy = 0.0;
			var gproj;
			var clip1x = 0.0;
			var clip1y = 0.0;
			var clip2x = 0;
			var clip2y = 0;
			if(this.ptype == 0) {
				gnormx = this.b1.axisy * this.lnormx - this.b1.axisx * this.lnormy;
				gnormy = this.lnormx * this.b1.axisx + this.lnormy * this.b1.axisy;
				gproj = this.lproj + (gnormx * this.b1.posx + gnormy * this.b1.posy);
				clip1x = this.b2.axisy * this.c1.lr1x - this.b2.axisx * this.c1.lr1y;
				clip1y = this.c1.lr1x * this.b2.axisx + this.c1.lr1y * this.b2.axisy;
				var t6 = 1.0;
				clip1x += this.b2.posx * t6;
				clip1y += this.b2.posy * t6;
				if(this.hpc2) {
					clip2x = this.b2.axisy * this.c2.lr1x - this.b2.axisx * this.c2.lr1y;
					clip2y = this.c2.lr1x * this.b2.axisx + this.c2.lr1y * this.b2.axisy;
					var t7 = 1.0;
					clip2x += this.b2.posx * t7;
					clip2y += this.b2.posy * t7;
				}
			} else {
				gnormx = this.b2.axisy * this.lnormx - this.b2.axisx * this.lnormy;
				gnormy = this.lnormx * this.b2.axisx + this.lnormy * this.b2.axisy;
				gproj = this.lproj + (gnormx * this.b2.posx + gnormy * this.b2.posy);
				clip1x = this.b1.axisy * this.c1.lr1x - this.b1.axisx * this.c1.lr1y;
				clip1y = this.c1.lr1x * this.b1.axisx + this.c1.lr1y * this.b1.axisy;
				var t8 = 1.0;
				clip1x += this.b1.posx * t8;
				clip1y += this.b1.posy * t8;
				if(this.hpc2) {
					clip2x = this.b1.axisy * this.c2.lr1x - this.b1.axisx * this.c2.lr1y;
					clip2y = this.c2.lr1x * this.b1.axisx + this.c2.lr1y * this.b1.axisy;
					var t9 = 1.0;
					clip2x += this.b1.posx * t9;
					clip2y += this.b1.posy * t9;
				}
			}
			var err1 = clip1x * gnormx + clip1y * gnormy - gproj - this.radius;
			err1 += nape_Config.collisionSlop;
			var err2 = 0.0;
			if(this.hpc2) {
				err2 = clip2x * gnormx + clip2y * gnormy - gproj - this.radius;
				err2 += nape_Config.collisionSlop;
			}
			if(err1 < 0 || err2 < 0) {
				if(this.rev) {
					gnormx = -gnormx;
					gnormy = -gnormy;
				}
				var c1r1x = 0.0;
				var c1r1y = 0.0;
				c1r1x = clip1x - this.b1.posx;
				c1r1y = clip1y - this.b1.posy;
				var c1r2x = 0.0;
				var c1r2y = 0.0;
				c1r2x = clip1x - this.b2.posx;
				c1r2y = clip1y - this.b2.posy;
				var c2r1x = 0;
				var c2r1y = 0;
				var c2r2x = 0;
				var c2r2y = 0;
				if(this.hpc2) {
					c2r1x = clip2x - this.b1.posx;
					c2r1y = clip2y - this.b1.posy;
					c2r2x = clip2x - this.b2.posx;
					c2r2y = clip2y - this.b2.posy;
					var rn1a = gnormy * c1r1x - gnormx * c1r1y;
					var rn1b = gnormy * c1r2x - gnormx * c1r2y;
					var rn2a = gnormy * c2r1x - gnormx * c2r1y;
					var rn2b = gnormy * c2r2x - gnormx * c2r2y;
					var mass_sum = this.b1.smass + this.b2.smass;
					this.kMassa = mass_sum + this.b1.sinertia * rn1a * rn1a + this.b2.sinertia * rn1b * rn1b;
					this.kMassb = mass_sum + this.b1.sinertia * rn1a * rn2a + this.b2.sinertia * rn1b * rn2b;
					this.kMassc = mass_sum + this.b1.sinertia * rn2a * rn2a + this.b2.sinertia * rn2b * rn2b;
					var Ka = 0.0;
					var Kb = 0.0;
					var Kc = 0.0;
					Ka = this.kMassa;
					Kb = this.kMassb;
					Kc = this.kMassc;
					var bx = err1 * this.biasCoef;
					var by = err2 * this.biasCoef;
					do {
						var xx = 0.0;
						var xy = 0.0;
						xx = bx;
						xy = by;
						xx = -xx;
						xy = -xy;
						var det = this.kMassa * this.kMassc - this.kMassb * this.kMassb;
						if(det != det) xx = xy = 0; else if(det == 0) {
							if(this.kMassa != 0) xx /= this.kMassa; else xx = 0;
							if(this.kMassc != 0) xy /= this.kMassc; else xy = 0;
						} else {
							det = 1 / det;
							var t10 = det * (this.kMassc * xx - this.kMassb * xy);
							xy = det * (this.kMassa * xy - this.kMassb * xx);
							xx = t10;
						}
						if(xx >= 0 && xy >= 0) {
							var t11 = (xx + xy) * this.b1.imass;
							this.b1.posx -= gnormx * t11;
							this.b1.posy -= gnormy * t11;
							this.b1.delta_rot(-this.b1.iinertia * (rn1a * xx + rn2a * xy));
							var t12 = (xx + xy) * this.b2.imass;
							this.b2.posx += gnormx * t12;
							this.b2.posy += gnormy * t12;
							this.b2.delta_rot(this.b2.iinertia * (rn1b * xx + rn2b * xy));
							break;
						}
						xx = -bx / Ka;
						xy = 0;
						var vn2 = Kb * xx + by;
						if(xx >= 0 && vn2 >= 0) {
							var t13 = (xx + xy) * this.b1.imass;
							this.b1.posx -= gnormx * t13;
							this.b1.posy -= gnormy * t13;
							this.b1.delta_rot(-this.b1.iinertia * (rn1a * xx + rn2a * xy));
							var t14 = (xx + xy) * this.b2.imass;
							this.b2.posx += gnormx * t14;
							this.b2.posy += gnormy * t14;
							this.b2.delta_rot(this.b2.iinertia * (rn1b * xx + rn2b * xy));
							break;
						}
						xx = 0;
						xy = -by / Kc;
						var vn1 = Kb * xy + bx;
						if(xy >= 0 && vn1 >= 0) {
							var t15 = (xx + xy) * this.b1.imass;
							this.b1.posx -= gnormx * t15;
							this.b1.posy -= gnormy * t15;
							this.b1.delta_rot(-this.b1.iinertia * (rn1a * xx + rn2a * xy));
							var t16 = (xx + xy) * this.b2.imass;
							this.b2.posx += gnormx * t16;
							this.b2.posy += gnormy * t16;
							this.b2.delta_rot(this.b2.iinertia * (rn1b * xx + rn2b * xy));
							break;
						}
					} while(false);
				} else {
					var rn11 = gnormy * c1r1x - gnormx * c1r1y;
					var rn21 = gnormy * c1r2x - gnormx * c1r2y;
					var K1 = this.b2.smass + rn21 * rn21 * this.b2.sinertia + this.b1.smass + rn11 * rn11 * this.b1.sinertia;
					if(K1 != 0) {
						var jn1 = -this.biasCoef * err1 / K1;
						var Jx1 = 0.0;
						var Jy1 = 0.0;
						var t17 = jn1;
						Jx1 = gnormx * t17;
						Jy1 = gnormy * t17;
						var t18 = this.b1.imass;
						this.b1.posx -= Jx1 * t18;
						this.b1.posy -= Jy1 * t18;
						this.b1.delta_rot(-rn11 * this.b1.iinertia * jn1);
						var t19 = this.b2.imass;
						this.b2.posx += Jx1 * t19;
						this.b2.posy += Jy1 * t19;
						this.b2.delta_rot(rn21 * this.b2.iinertia * jn1);
					}
				}
			}
		}
	}
	,__class__: zpp_$nape_dynamics_ZPP_$ColArbiter
});
var zpp_$nape_dynamics_ZPP_$Contact = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
	this.elasticity = 0.0;
	this.dist = 0.0;
	this.fresh = false;
	this.hash = 0;
	this.stamp = 0;
	this.posOnly = false;
	this.active = false;
	this.inner = null;
	this.arbiter = null;
	this.wrap_position = null;
	this.py = 0.0;
	this.px = 0.0;
	this.outer = null;
	this.inner = new zpp_$nape_dynamics_ZPP_$IContact();
};
$hxClasses["zpp_nape.dynamics.ZPP_Contact"] = zpp_$nape_dynamics_ZPP_$Contact;
zpp_$nape_dynamics_ZPP_$Contact.__name__ = ["zpp_nape","dynamics","ZPP_Contact"];
zpp_$nape_dynamics_ZPP_$Contact.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			zpp_$nape_dynamics_ZPP_$Contact.internal = true;
			this.outer = new nape_dynamics_Contact();
			zpp_$nape_dynamics_ZPP_$Contact.internal = false;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,position_validate: function() {
		if(this.inactiveme()) throw new js__$Boot_HaxeError("Error: Contact not currently in use");
		this.wrap_position.zpp_inner.x = this.px;
		this.wrap_position.zpp_inner.y = this.py;
	}
	,getposition: function() {
		var me = this;
		this.wrap_position = nape_geom_Vec2.get(null,null,null);
		this.wrap_position.zpp_inner._inuse = true;
		this.wrap_position.zpp_inner._immutable = true;
		this.wrap_position.zpp_inner._validate = $bind(this,this.position_validate);
	}
	,inactiveme: function() {
		return !(this.active && this.arbiter != null && !(!this.arbiter.active));
	}
	,inlined_add: function(o) {
		var temp;
		o._inuse = true;
		temp = o;
		temp.next = this.next;
		this.next = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.next;
		this.next = ret.next;
		ret._inuse = false;
		if(this.next == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,inlined_pop_unsafe: function() {
		var ret = this.next;
		this.pop();
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.next;
			ret = old.next;
			this.next = ret;
			if(this.next == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		old._inuse = false;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_dynamics_ZPP_$Contact
};
var zpp_$nape_dynamics_ZPP_$IContact = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
	this.lr2y = 0.0;
	this.lr2x = 0.0;
	this.lr1y = 0.0;
	this.lr1x = 0.0;
	this.jtAcc = 0.0;
	this.jnAcc = 0.0;
	this.friction = 0.0;
	this.bounce = 0.0;
	this.tMass = 0.0;
	this.nMass = 0.0;
	this.r2y = 0.0;
	this.r2x = 0.0;
	this.r1y = 0.0;
	this.r1x = 0.0;
};
$hxClasses["zpp_nape.dynamics.ZPP_IContact"] = zpp_$nape_dynamics_ZPP_$IContact;
zpp_$nape_dynamics_ZPP_$IContact.__name__ = ["zpp_nape","dynamics","ZPP_IContact"];
zpp_$nape_dynamics_ZPP_$IContact.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		o._inuse = true;
		temp = o;
		temp.next = this.next;
		this.next = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,inlined_pop: function() {
		var ret = this.next;
		this.next = ret.next;
		ret._inuse = false;
		if(this.next == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.next;
			ret = old.next;
			this.next = ret;
			if(this.next == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		old._inuse = false;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_dynamics_ZPP_$IContact
};
var zpp_$nape_dynamics_ZPP_$InteractionFilter = function() {
	this.fluidMask = 0;
	this.fluidGroup = 0;
	this.sensorMask = 0;
	this.sensorGroup = 0;
	this.collisionMask = 0;
	this.collisionGroup = 0;
	this.shapes = null;
	this.outer = null;
	this.next = null;
	this.shapes = new zpp_$nape_util_ZNPList_$ZPP_$Shape();
	this.collisionGroup = this.sensorGroup = this.fluidGroup = 1;
	this.collisionMask = this.sensorMask = this.fluidMask = -1;
};
$hxClasses["zpp_nape.dynamics.ZPP_InteractionFilter"] = zpp_$nape_dynamics_ZPP_$InteractionFilter;
zpp_$nape_dynamics_ZPP_$InteractionFilter.__name__ = ["zpp_nape","dynamics","ZPP_InteractionFilter"];
zpp_$nape_dynamics_ZPP_$InteractionFilter.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			this.outer = new nape_dynamics_InteractionFilter();
			var o = this.outer.zpp_inner;
			o.outer = null;
			o.next = zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool;
			zpp_$nape_dynamics_ZPP_$InteractionFilter.zpp_pool = o;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,shouldCollide: function(x) {
		return (this.collisionMask & x.collisionGroup) != 0 && (x.collisionMask & this.collisionGroup) != 0;
	}
	,shouldSense: function(x) {
		return (this.sensorMask & x.sensorGroup) != 0 && (x.sensorMask & this.sensorGroup) != 0;
	}
	,shouldFlow: function(x) {
		return (this.fluidMask & x.fluidGroup) != 0 && (x.fluidMask & this.fluidGroup) != 0;
	}
	,invalidate: function() {
		var cx_ite = this.shapes.head;
		while(cx_ite != null) {
			var s = cx_ite.elt;
			s.invalidate_filter();
			cx_ite = cx_ite.next;
		}
	}
	,__class__: zpp_$nape_dynamics_ZPP_$InteractionFilter
};
var zpp_$nape_geom_ZPP_$AABB = function() {
	this.wrap_max = null;
	this.maxy = 0.0;
	this.maxx = 0.0;
	this.wrap_min = null;
	this.miny = 0.0;
	this.minx = 0.0;
	this.next = null;
	this.outer = null;
	this._immutable = false;
	this._validate = null;
	this._invalidate = null;
};
$hxClasses["zpp_nape.geom.ZPP_AABB"] = zpp_$nape_geom_ZPP_$AABB;
zpp_$nape_geom_ZPP_$AABB.__name__ = ["zpp_nape","geom","ZPP_AABB"];
zpp_$nape_geom_ZPP_$AABB.get = function(minx,miny,maxx,maxy) {
	var ret;
	if(zpp_$nape_geom_ZPP_$AABB.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$AABB(); else {
		ret = zpp_$nape_geom_ZPP_$AABB.zpp_pool;
		zpp_$nape_geom_ZPP_$AABB.zpp_pool = ret.next;
		ret.next = null;
	}
	null;
	ret.minx = minx;
	ret.miny = miny;
	ret.maxx = maxx;
	ret.maxy = maxy;
	return ret;
};
zpp_$nape_geom_ZPP_$AABB.prototype = {
	validate: function() {
		if(this._validate != null) this._validate();
	}
	,perimeter: function() {
		return (this.maxx - this.minx + (this.maxy - this.miny)) * 2;
	}
	,intersectY: function(x) {
		return !(x.miny > this.maxy || this.miny > x.maxy);
	}
	,intersect: function(x) {
		return x.miny <= this.maxy && this.miny <= x.maxy && x.minx <= this.maxx && this.minx <= x.maxx;
	}
	,combine: function(x) {
		if(x.minx < this.minx) this.minx = x.minx;
		if(x.maxx > this.maxx) this.maxx = x.maxx;
		if(x.miny < this.miny) this.miny = x.miny;
		if(x.maxy > this.maxy) this.maxy = x.maxy;
	}
	,contains: function(x) {
		return x.minx >= this.minx && x.miny >= this.miny && x.maxx <= this.maxx && x.maxy <= this.maxy;
	}
	,containsPoint: function(v) {
		return v.x >= this.minx && v.x <= this.maxx && v.y >= this.miny && v.y <= this.maxy;
	}
	,setCombine: function(a,b) {
		if(a.minx < b.minx) this.minx = a.minx; else this.minx = b.minx;
		if(a.miny < b.miny) this.miny = a.miny; else this.miny = b.miny;
		if(a.maxx > b.maxx) this.maxx = a.maxx; else this.maxx = b.maxx;
		if(a.maxy > b.maxy) this.maxy = a.maxy; else this.maxy = b.maxy;
	}
	,setExpand: function(a,fatten) {
		this.minx = a.minx - fatten;
		this.miny = a.miny - fatten;
		this.maxx = a.maxx + fatten;
		this.maxy = a.maxy + fatten;
	}
	,toString: function() {
		return "{ x: " + this.minx + " y: " + this.miny + " w: " + (this.maxx - this.minx) + " h: " + (this.maxy - this.miny) + " }";
	}
	,__class__: zpp_$nape_geom_ZPP_$AABB
};
var zpp_$nape_util_ZNPList_$ZPP_$Vec2 = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Vec2"] = zpp_$nape_util_ZNPList_$ZPP_$Vec2;
zpp_$nape_util_ZNPList_$ZPP_$Vec2.__name__ = ["zpp_nape","util","ZNPList_ZPP_Vec2"];
zpp_$nape_util_ZNPList_$ZPP_$Vec2.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Vec2(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Vec2(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Vec2.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,clear: function() {
		while(!(this.head == null)) this.inlined_pop();
		this.pushmod = true;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Vec2
};
var zpp_$nape_geom_ZPP_$Collide = function() { };
$hxClasses["zpp_nape.geom.ZPP_Collide"] = zpp_$nape_geom_ZPP_$Collide;
zpp_$nape_geom_ZPP_$Collide.__name__ = ["zpp_nape","geom","ZPP_Collide"];
zpp_$nape_geom_ZPP_$Collide.circleContains = function(c,p) {
	var dx = 0.0;
	var dy = 0.0;
	dx = p.x - c.worldCOMx;
	dy = p.y - c.worldCOMy;
	return dx * dx + dy * dy < c.radius * c.radius;
};
zpp_$nape_geom_ZPP_$Collide.polyContains = function(s,p) {
	var retvar;
	retvar = true;
	var cx_ite = s.edges.head;
	while(cx_ite != null) {
		var a = cx_ite.elt;
		if(a.gnormx * p.x + a.gnormy * p.y <= a.gprojection) {
			cx_ite = cx_ite.next;
			continue;
		} else {
			retvar = false;
			break;
		}
		cx_ite = cx_ite.next;
	}
	return retvar;
};
zpp_$nape_geom_ZPP_$Collide.contactCollide = function(s1,s2,arb,rev) {
	if(s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
		if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
			var cont = true;
			var max = -1e+100;
			var maxmin = -1e+100;
			var maxi = -1;
			var axis1 = null;
			var axis2 = null;
			var cx_ite = s1.polygon.edges.head;
			while(cx_ite != null) {
				var ax = cx_ite.elt;
				var min = 1e100;
				var cx_ite1 = s2.polygon.gverts.next;
				while(cx_ite1 != null) {
					var v = cx_ite1;
					var k = ax.gnormx * v.x + ax.gnormy * v.y;
					if(k < min) min = k;
					if(min - ax.gprojection <= max) break;
					cx_ite1 = cx_ite1.next;
				}
				min -= ax.gprojection;
				if(min >= 0) {
					cont = false;
					break;
				}
				if(min > max) {
					max = min;
					axis1 = ax;
					maxi = 1;
				}
				cx_ite = cx_ite.next;
			}
			if(cont) {
				var cx_ite2 = s2.polygon.edges.head;
				while(cx_ite2 != null) {
					var ax1 = cx_ite2.elt;
					var min1 = 1e100;
					var cx_ite3 = s1.polygon.gverts.next;
					while(cx_ite3 != null) {
						var v1 = cx_ite3;
						var k1 = ax1.gnormx * v1.x + ax1.gnormy * v1.y;
						if(k1 < min1) min1 = k1;
						if(min1 - ax1.gprojection <= max) break;
						cx_ite3 = cx_ite3.next;
					}
					min1 -= ax1.gprojection;
					if(min1 >= 0) {
						cont = false;
						break;
					}
					if(min1 > max) {
						max = min1;
						axis2 = ax1;
						maxi = 2;
					}
					cx_ite2 = cx_ite2.next;
				}
				if(!cont) return false; else {
					var q1;
					var q2;
					var ax2;
					var scale;
					if(maxi == 1) {
						q1 = s1.polygon;
						q2 = s2.polygon;
						ax2 = axis1;
						scale = 1.0;
					} else {
						q1 = s2.polygon;
						q2 = s1.polygon;
						ax2 = axis2;
						scale = -1.0;
					}
					var ay = null;
					var min2 = 1e100;
					var cx_ite4 = q2.edges.head;
					while(cx_ite4 != null) {
						var axis = cx_ite4.elt;
						var k2 = ax2.gnormx * axis.gnormx + ax2.gnormy * axis.gnormy;
						if(k2 < min2) {
							min2 = k2;
							ay = axis;
						}
						cx_ite4 = cx_ite4.next;
					}
					var c0x = 0.0;
					var c0y = 0.0;
					c0x = ay.gp0.x;
					c0y = ay.gp0.y;
					var c1x = 0.0;
					var c1y = 0.0;
					c1x = ay.gp1.x;
					c1y = ay.gp1.y;
					var dvx = 0.0;
					var dvy = 0.0;
					dvx = c1x - c0x;
					dvy = c1y - c0y;
					var d0 = ax2.gnormy * c0x - ax2.gnormx * c0y;
					var d1 = ax2.gnormy * c1x - ax2.gnormx * c1y;
					var den = 1 / (d1 - d0);
					var t = (-ax2.tp1 - d0) * den;
					if(t > nape_Config.epsilon) {
						var t2 = t;
						c0x += dvx * t2;
						c0y += dvy * t2;
					}
					var t1 = (-ax2.tp0 - d1) * den;
					if(t1 < -nape_Config.epsilon) {
						var t3 = t1;
						c1x += dvx * t3;
						c1y += dvy * t3;
					}
					var nx = 0.0;
					var ny = 0.0;
					var t4 = scale;
					nx = ax2.gnormx * t4;
					ny = ax2.gnormy * t4;
					arb.lnormx = ax2.lnormx;
					arb.lnormy = ax2.lnormy;
					arb.lproj = ax2.lprojection;
					arb.radius = 0;
					arb.rev = rev != (scale == -1);
					if(arb.rev) arb.ptype = 1; else arb.ptype = 0;
					var c0d = c0x * ax2.gnormx + c0y * ax2.gnormy - ax2.gprojection;
					var c1d = c1x * ax2.gnormx + c1y * ax2.gnormy - ax2.gprojection;
					if(c0d > 0 && c1d > 0) return false; else {
						if(rev) {
							nx = -nx;
							ny = -ny;
						}
						var con = arb.injectContact(c0x - ax2.gnormx * c0d * 0.5,c0y - ax2.gnormy * c0d * 0.5,nx,ny,c0d,arb.rev?1:0,c0d > 0);
						var t5 = 1.0;
						c0x -= q2.body.posx * t5;
						c0y -= q2.body.posy * t5;
						con.inner.lr1x = c0x * q2.body.axisy + c0y * q2.body.axisx;
						con.inner.lr1y = c0y * q2.body.axisy - c0x * q2.body.axisx;
						con = arb.injectContact(c1x - ax2.gnormx * c1d * 0.5,c1y - ax2.gnormy * c1d * 0.5,nx,ny,c1d,arb.rev?0:1,c1d > 0);
						var t6 = 1.0;
						c1x -= q2.body.posx * t6;
						c1y -= q2.body.posy * t6;
						con.inner.lr1x = c1x * q2.body.axisy + c1y * q2.body.axisx;
						con.inner.lr1y = c1y * q2.body.axisy - c1x * q2.body.axisx;
						if(maxi == 1) {
							arb.__ref_edge1 = ax2;
							arb.__ref_edge2 = ay;
						} else {
							arb.__ref_edge2 = ax2;
							arb.__ref_edge1 = ay;
						}
						return true;
					}
				}
			} else return false;
		} else {
			var max1 = -1e+100;
			var minmax = -1e+100;
			var cont1 = true;
			var a0 = null;
			var vi = null;
			var vite = s2.polygon.gverts.next;
			var cx_ite5 = s2.polygon.edges.head;
			while(cx_ite5 != null) {
				var a = cx_ite5.elt;
				var dist = a.gnormx * s1.circle.worldCOMx + a.gnormy * s1.circle.worldCOMy - a.gprojection - s1.circle.radius;
				if(dist > 0) {
					cont1 = false;
					break;
				}
				if(dist > max1) {
					max1 = dist;
					a0 = a;
					vi = vite;
				}
				vite = vite.next;
				cx_ite5 = cx_ite5.next;
			}
			if(cont1) {
				var v0 = vi;
				var v11;
				if(vi.next == null) v11 = s2.polygon.gverts.next; else v11 = vi.next;
				var dt = s1.circle.worldCOMy * a0.gnormx - s1.circle.worldCOMx * a0.gnormy;
				if(dt <= v0.y * a0.gnormx - v0.x * a0.gnormy) {
					var co;
					var minDist = s1.circle.radius;
					var px = 0.0;
					var py = 0.0;
					px = v0.x - s1.circle.worldCOMx;
					py = v0.y - s1.circle.worldCOMy;
					var distSqr = px * px + py * py;
					if(distSqr > minDist * minDist) co = null; else if(distSqr < nape_Config.epsilon * nape_Config.epsilon) co = arb.injectContact(s1.circle.worldCOMx,s1.circle.worldCOMy,1,0,-minDist,0,null); else {
						var invDist = 1.0 / Math.sqrt(distSqr);
						var dist1;
						if(invDist < nape_Config.epsilon) dist1 = 1e100; else dist1 = 1.0 / invDist;
						var df = 0.5 + (s1.circle.radius - 0.5 * minDist) * invDist;
						if(rev) co = arb.injectContact(s1.circle.worldCOMx + px * df,s1.circle.worldCOMy + py * df,-px * invDist,-py * invDist,dist1 - minDist,0,null); else co = arb.injectContact(s1.circle.worldCOMx + px * df,s1.circle.worldCOMy + py * df,px * invDist,py * invDist,dist1 - minDist,0,null);
					}
					if(co != null) {
						var con1 = co.inner;
						arb.ptype = 2;
						var vx = 0.0;
						var vy = 0.0;
						vx = v0.x - s2.polygon.body.posx;
						vy = v0.y - s2.polygon.body.posy;
						arb.__ref_edge1 = a0;
						arb.__ref_vertex = -1;
						if(rev) {
							con1.lr1x = vx * s2.polygon.body.axisy + vy * s2.polygon.body.axisx;
							con1.lr1y = vy * s2.polygon.body.axisy - vx * s2.polygon.body.axisx;
							con1.lr2x = s1.circle.localCOMx;
							con1.lr2y = s1.circle.localCOMy;
						} else {
							con1.lr2x = vx * s2.polygon.body.axisy + vy * s2.polygon.body.axisx;
							con1.lr2y = vy * s2.polygon.body.axisy - vx * s2.polygon.body.axisx;
							con1.lr1x = s1.circle.localCOMx;
							con1.lr1y = s1.circle.localCOMy;
						}
						arb.radius = s1.circle.radius;
					}
					return co != null;
				} else if(dt >= v11.y * a0.gnormx - v11.x * a0.gnormy) {
					var co1;
					var minDist1 = s1.circle.radius;
					var px1 = 0.0;
					var py1 = 0.0;
					px1 = v11.x - s1.circle.worldCOMx;
					py1 = v11.y - s1.circle.worldCOMy;
					var distSqr1 = px1 * px1 + py1 * py1;
					if(distSqr1 > minDist1 * minDist1) co1 = null; else if(distSqr1 < nape_Config.epsilon * nape_Config.epsilon) co1 = arb.injectContact(s1.circle.worldCOMx,s1.circle.worldCOMy,1,0,-minDist1,0,null); else {
						var invDist1 = 1.0 / Math.sqrt(distSqr1);
						var dist2;
						if(invDist1 < nape_Config.epsilon) dist2 = 1e100; else dist2 = 1.0 / invDist1;
						var df1 = 0.5 + (s1.circle.radius - 0.5 * minDist1) * invDist1;
						if(rev) co1 = arb.injectContact(s1.circle.worldCOMx + px1 * df1,s1.circle.worldCOMy + py1 * df1,-px1 * invDist1,-py1 * invDist1,dist2 - minDist1,0,null); else co1 = arb.injectContact(s1.circle.worldCOMx + px1 * df1,s1.circle.worldCOMy + py1 * df1,px1 * invDist1,py1 * invDist1,dist2 - minDist1,0,null);
					}
					if(co1 != null) {
						var con2 = co1.inner;
						arb.ptype = 2;
						var vx1 = 0.0;
						var vy1 = 0.0;
						vx1 = v11.x - s2.polygon.body.posx;
						vy1 = v11.y - s2.polygon.body.posy;
						arb.__ref_edge1 = a0;
						arb.__ref_vertex = 1;
						if(rev) {
							con2.lr1x = vx1 * s2.polygon.body.axisy + vy1 * s2.polygon.body.axisx;
							con2.lr1y = vy1 * s2.polygon.body.axisy - vx1 * s2.polygon.body.axisx;
							con2.lr2x = s1.circle.localCOMx;
							con2.lr2y = s1.circle.localCOMy;
						} else {
							con2.lr2x = vx1 * s2.polygon.body.axisy + vy1 * s2.polygon.body.axisx;
							con2.lr2y = vy1 * s2.polygon.body.axisy - vx1 * s2.polygon.body.axisx;
							con2.lr1x = s1.circle.localCOMx;
							con2.lr1y = s1.circle.localCOMy;
						}
						arb.radius = s1.circle.radius;
					}
					return co1 != null;
				} else {
					var nx1 = 0.0;
					var ny1 = 0.0;
					var t7 = s1.circle.radius + max1 * 0.5;
					nx1 = a0.gnormx * t7;
					ny1 = a0.gnormy * t7;
					var px2 = 0.0;
					var py2 = 0.0;
					px2 = s1.circle.worldCOMx - nx1;
					py2 = s1.circle.worldCOMy - ny1;
					var con3;
					if(rev) con3 = arb.injectContact(px2,py2,a0.gnormx,a0.gnormy,max1,0,null); else con3 = arb.injectContact(px2,py2,-a0.gnormx,-a0.gnormy,max1,0,null);
					if(rev) arb.ptype = 0; else arb.ptype = 1;
					arb.lnormx = a0.lnormx;
					arb.lnormy = a0.lnormy;
					arb.rev = !rev;
					arb.lproj = a0.lprojection;
					arb.radius = s1.circle.radius;
					con3.inner.lr1x = s1.circle.localCOMx;
					con3.inner.lr1y = s1.circle.localCOMy;
					arb.__ref_edge1 = a0;
					arb.__ref_vertex = 0;
					return true;
				}
			} else return false;
		}
	} else {
		var co2;
		var minDist2 = s1.circle.radius + s2.circle.radius;
		var px3 = 0.0;
		var py3 = 0.0;
		px3 = s2.circle.worldCOMx - s1.circle.worldCOMx;
		py3 = s2.circle.worldCOMy - s1.circle.worldCOMy;
		var distSqr2 = px3 * px3 + py3 * py3;
		if(distSqr2 > minDist2 * minDist2) co2 = null; else if(distSqr2 < nape_Config.epsilon * nape_Config.epsilon) co2 = arb.injectContact(s1.circle.worldCOMx,s1.circle.worldCOMy,1,0,-minDist2,0,null); else {
			var invDist2 = 1.0 / Math.sqrt(distSqr2);
			var dist3;
			if(invDist2 < nape_Config.epsilon) dist3 = 1e100; else dist3 = 1.0 / invDist2;
			var df2 = 0.5 + (s1.circle.radius - 0.5 * minDist2) * invDist2;
			if(rev) co2 = arb.injectContact(s1.circle.worldCOMx + px3 * df2,s1.circle.worldCOMy + py3 * df2,-px3 * invDist2,-py3 * invDist2,dist3 - minDist2,0,null); else co2 = arb.injectContact(s1.circle.worldCOMx + px3 * df2,s1.circle.worldCOMy + py3 * df2,px3 * invDist2,py3 * invDist2,dist3 - minDist2,0,null);
		}
		if(co2 != null) {
			var con4 = co2.inner;
			if(rev) {
				con4.lr1x = s2.circle.localCOMx;
				con4.lr1y = s2.circle.localCOMy;
				con4.lr2x = s1.circle.localCOMx;
				con4.lr2y = s1.circle.localCOMy;
			} else {
				con4.lr1x = s1.circle.localCOMx;
				con4.lr1y = s1.circle.localCOMy;
				con4.lr2x = s2.circle.localCOMx;
				con4.lr2y = s2.circle.localCOMy;
			}
			arb.radius = s1.circle.radius + s2.circle.radius;
			arb.ptype = 2;
			return true;
		} else return false;
	}
};
zpp_$nape_geom_ZPP_$Collide.testCollide_safe = function(s1,s2) {
	if(s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
		var t = s1;
		s1 = s2;
		s2 = t;
	}
	return zpp_$nape_geom_ZPP_$Collide.testCollide(s1,s2);
};
zpp_$nape_geom_ZPP_$Collide.testCollide = function(s1,s2) {
	if(s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
		var cont = true;
		var cx_ite = s1.polygon.edges.head;
		while(cx_ite != null) {
			var ax = cx_ite.elt;
			var min = 1e100;
			var cx_ite1 = s2.polygon.gverts.next;
			while(cx_ite1 != null) {
				var v = cx_ite1;
				var k = ax.gnormx * v.x + ax.gnormy * v.y;
				if(k < min) min = k;
				cx_ite1 = cx_ite1.next;
			}
			min -= ax.gprojection;
			if(min > 0) {
				cont = false;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(cont) {
			var cx_ite2 = s2.polygon.edges.head;
			while(cx_ite2 != null) {
				var ax1 = cx_ite2.elt;
				var min1 = 1e100;
				var cx_ite3 = s1.polygon.gverts.next;
				while(cx_ite3 != null) {
					var v1 = cx_ite3;
					var k1 = ax1.gnormx * v1.x + ax1.gnormy * v1.y;
					if(k1 < min1) min1 = k1;
					cx_ite3 = cx_ite3.next;
				}
				min1 -= ax1.gprojection;
				if(min1 > 0) {
					cont = false;
					break;
				}
				cx_ite2 = cx_ite2.next;
			}
			return cont;
		} else return false;
	} else {
		var a0 = null;
		var vi = null;
		var cont1 = true;
		var max = -1e+100;
		var vite = s2.polygon.gverts.next;
		var cx_ite4 = s2.polygon.edges.head;
		while(cx_ite4 != null) {
			var a = cx_ite4.elt;
			var dist = a.gnormx * s1.circle.worldCOMx + a.gnormy * s1.circle.worldCOMy - a.gprojection - s1.circle.radius;
			if(dist > 0) {
				cont1 = false;
				break;
			}
			if(dist > max) {
				max = dist;
				a0 = a;
				vi = vite;
			}
			vite = vite.next;
			cx_ite4 = cx_ite4.next;
		}
		if(cont1) {
			var v0 = vi;
			var v11;
			if(vi.next == null) v11 = s2.polygon.gverts.next; else v11 = vi.next;
			var dt = s1.circle.worldCOMy * a0.gnormx - s1.circle.worldCOMx * a0.gnormy;
			if(dt <= v0.y * a0.gnormx - v0.x * a0.gnormy) {
				var minDist = s1.circle.radius;
				var px = 0.0;
				var py = 0.0;
				px = v0.x - s1.circle.worldCOMx;
				py = v0.y - s1.circle.worldCOMy;
				var distSqr = px * px + py * py;
				return distSqr <= minDist * minDist;
			} else if(dt >= v11.y * a0.gnormx - v11.x * a0.gnormy) {
				var minDist1 = s1.circle.radius;
				var px1 = 0.0;
				var py1 = 0.0;
				px1 = v11.x - s1.circle.worldCOMx;
				py1 = v11.y - s1.circle.worldCOMy;
				var distSqr1 = px1 * px1 + py1 * py1;
				return distSqr1 <= minDist1 * minDist1;
			} else return true;
		} else return false;
	} else {
		var minDist2 = s1.circle.radius + s2.circle.radius;
		var px2 = 0.0;
		var py2 = 0.0;
		px2 = s2.circle.worldCOMx - s1.circle.worldCOMx;
		py2 = s2.circle.worldCOMy - s1.circle.worldCOMy;
		var distSqr2 = px2 * px2 + py2 * py2;
		return distSqr2 <= minDist2 * minDist2;
	}
};
zpp_$nape_geom_ZPP_$Collide.flowCollide = function(s1,s2,arb) {
	if(s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
		var out1 = [];
		var out2 = [];
		var cont = true;
		var total = true;
		var cx_ite = s1.polygon.edges.head;
		while(cx_ite != null) {
			var ax = cx_ite.elt;
			var min = 1e100;
			var ind = 0;
			var cx_ite1 = s2.polygon.gverts.next;
			while(cx_ite1 != null) {
				var v = cx_ite1;
				var k = ax.gnormx * v.x + ax.gnormy * v.y;
				if(k < min) min = k;
				if(k >= ax.gprojection + nape_Config.epsilon) {
					out2[ind] = true;
					total = false;
				}
				ind++;
				cx_ite1 = cx_ite1.next;
			}
			min -= ax.gprojection;
			if(min > 0) {
				cont = false;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(total) {
			s2.polygon.validate_worldCOM();
			arb.overlap = s2.polygon.area;
			arb.centroidx = s2.polygon.worldCOMx;
			arb.centroidy = s2.polygon.worldCOMy;
			null;
			return true;
		} else if(cont) {
			total = true;
			var cx_ite2 = s2.polygon.edges.head;
			while(cx_ite2 != null) {
				var ax1 = cx_ite2.elt;
				var min1 = 1e100;
				var ind1 = 0;
				var cx_ite3 = s1.polygon.gverts.next;
				while(cx_ite3 != null) {
					var v1 = cx_ite3;
					var k1 = ax1.gnormx * v1.x + ax1.gnormy * v1.y;
					if(k1 < min1) min1 = k1;
					if(k1 >= ax1.gprojection + nape_Config.epsilon) {
						out1[ind1] = true;
						total = false;
					}
					ind1++;
					cx_ite3 = cx_ite3.next;
				}
				min1 -= ax1.gprojection;
				if(min1 > 0) {
					cont = false;
					break;
				}
				cx_ite2 = cx_ite2.next;
			}
			if(total) {
				s1.polygon.validate_worldCOM();
				arb.overlap = s1.polygon.area;
				arb.centroidx = s1.polygon.worldCOMx;
				arb.centroidy = s1.polygon.worldCOMy;
				null;
				return true;
			} else if(cont) {
				while(!(zpp_$nape_geom_ZPP_$Collide.flowpoly.head == null)) {
					var p = zpp_$nape_geom_ZPP_$Collide.flowpoly.pop_unsafe();
					if(!p._inuse) {
						var o = p;
						if(o.outer != null) {
							o.outer.zpp_inner = null;
							o.outer = null;
						}
						o._isimmutable = null;
						o._validate = null;
						o._invalidate = null;
						o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
						zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
					}
				}
				var fst_vert = null;
				var poly1 = false;
				var ite1 = s1.polygon.gverts.next;
				var ind11 = 0;
				var ite2 = s2.polygon.gverts.next;
				var ind2 = 0;
				var _g1 = 0;
				var _g = s2.polygon.edgeCnt;
				while(_g1 < _g) {
					var i = _g1++;
					if(!out2[i]) {
						ind2 = i;
						break;
					} else ite2 = ite2.next;
				}
				if(ite2 == null) {
					ite2 = s2.polygon.gverts.next;
					poly1 = true;
					var _g11 = 0;
					var _g2 = s1.polygon.edgeCnt;
					while(_g11 < _g2) {
						var i1 = _g11++;
						if(!out1[i1]) {
							ind11 = i1;
							break;
						} else ite1 = ite1.next;
					}
					if(ite1 == null) ite1 = s1.polygon.gverts.next; else {
						zpp_$nape_geom_ZPP_$Collide.flowpoly.add(ite1);
						fst_vert = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
					}
				} else {
					zpp_$nape_geom_ZPP_$Collide.flowpoly.add(ite2);
					fst_vert = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
				}
				var cnt = 1;
				if(zpp_$nape_geom_ZPP_$Collide.flowpoly.head == null) {
					var cx_cont = true;
					var cx_itei = s1.polygon.gverts.next;
					var u = cx_itei;
					var cx_itej = cx_itei.next;
					while(cx_itej != null) {
						var v2 = cx_itej;
						var min2 = 2.0;
						var cx_cont1 = true;
						var cx_itei1 = s2.polygon.gverts.next;
						var a = cx_itei1;
						var cx_itej1 = cx_itei1.next;
						while(cx_itej1 != null) {
							var b = cx_itej1;
							var t = 0.0;
							if((function($this) {
								var $r;
								var _sx = 0.0;
								var _sy = 0.0;
								{
									_sx = u.x - a.x;
									_sy = u.y - a.y;
								}
								var _vx = 0.0;
								var _vy = 0.0;
								{
									_vx = v2.x - u.x;
									_vy = v2.y - u.y;
								}
								var _qx = 0.0;
								var _qy = 0.0;
								{
									_qx = b.x - a.x;
									_qy = b.y - a.y;
								}
								var den = _vy * _qx - _vx * _qy;
								$r = den * den > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den = 1 / den;
									var txx = (_qy * _sx - _qx * _sy) * den;
									$r = txx > nape_Config.epsilon && txx < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx = (_vy * _sx - _vx * _sy) * den;
										$r = sxx > nape_Config.epsilon && sxx < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t = txx;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t < min2) {
									min2 = t;
									ite2 = cx_itei1;
								}
							}
							cx_itei1 = cx_itej1;
							a = b;
							cx_itej1 = cx_itej1.next;
						}
						if(cx_cont1) do {
							cx_itej1 = s2.polygon.gverts.next;
							var b1 = cx_itej1;
							var t1 = 0.0;
							if((function($this) {
								var $r;
								var _sx1 = 0.0;
								var _sy1 = 0.0;
								{
									_sx1 = u.x - a.x;
									_sy1 = u.y - a.y;
								}
								var _vx1 = 0.0;
								var _vy1 = 0.0;
								{
									_vx1 = v2.x - u.x;
									_vy1 = v2.y - u.y;
								}
								var _qx1 = 0.0;
								var _qy1 = 0.0;
								{
									_qx1 = b1.x - a.x;
									_qy1 = b1.y - a.y;
								}
								var den1 = _vy1 * _qx1 - _vx1 * _qy1;
								$r = den1 * den1 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den1 = 1 / den1;
									var txx1 = (_qy1 * _sx1 - _qx1 * _sy1) * den1;
									$r = txx1 > nape_Config.epsilon && txx1 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx1 = (_vy1 * _sx1 - _vx1 * _sy1) * den1;
										$r = sxx1 > nape_Config.epsilon && sxx1 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t1 = txx1;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t1 < min2) {
									min2 = t1;
									ite2 = cx_itei1;
								}
							}
						} while(false);
						if(min2 != 2.0) {
							var cx = 0.0;
							var cy = 0.0;
							var T = min2;
							cx = u.x + (v2.x - u.x) * T;
							cy = u.y + (v2.y - u.y) * T;
							fst_vert = zpp_$nape_geom_ZPP_$Vec2.get(cx,cy,null);
							zpp_$nape_geom_ZPP_$Collide.flowpoly.add(fst_vert);
							poly1 = true;
							ite1 = cx_itei;
							cx_cont = false;
							break;
						}
						cx_itei = cx_itej;
						u = v2;
						cx_itej = cx_itej.next;
					}
					if(cx_cont) do {
						cx_itej = s1.polygon.gverts.next;
						var v3 = cx_itej;
						var min3 = 2.0;
						var cx_cont2 = true;
						var cx_itei2 = s2.polygon.gverts.next;
						var a1 = cx_itei2;
						var cx_itej2 = cx_itei2.next;
						while(cx_itej2 != null) {
							var b2 = cx_itej2;
							var t2 = 0.0;
							if((function($this) {
								var $r;
								var _sx2 = 0.0;
								var _sy2 = 0.0;
								{
									_sx2 = u.x - a1.x;
									_sy2 = u.y - a1.y;
								}
								var _vx2 = 0.0;
								var _vy2 = 0.0;
								{
									_vx2 = v3.x - u.x;
									_vy2 = v3.y - u.y;
								}
								var _qx2 = 0.0;
								var _qy2 = 0.0;
								{
									_qx2 = b2.x - a1.x;
									_qy2 = b2.y - a1.y;
								}
								var den2 = _vy2 * _qx2 - _vx2 * _qy2;
								$r = den2 * den2 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den2 = 1 / den2;
									var txx2 = (_qy2 * _sx2 - _qx2 * _sy2) * den2;
									$r = txx2 > nape_Config.epsilon && txx2 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx2 = (_vy2 * _sx2 - _vx2 * _sy2) * den2;
										$r = sxx2 > nape_Config.epsilon && sxx2 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t2 = txx2;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t2 < min3) {
									min3 = t2;
									ite2 = cx_itei2;
								}
							}
							cx_itei2 = cx_itej2;
							a1 = b2;
							cx_itej2 = cx_itej2.next;
						}
						if(cx_cont2) do {
							cx_itej2 = s2.polygon.gverts.next;
							var b3 = cx_itej2;
							var t3 = 0.0;
							if((function($this) {
								var $r;
								var _sx3 = 0.0;
								var _sy3 = 0.0;
								{
									_sx3 = u.x - a1.x;
									_sy3 = u.y - a1.y;
								}
								var _vx3 = 0.0;
								var _vy3 = 0.0;
								{
									_vx3 = v3.x - u.x;
									_vy3 = v3.y - u.y;
								}
								var _qx3 = 0.0;
								var _qy3 = 0.0;
								{
									_qx3 = b3.x - a1.x;
									_qy3 = b3.y - a1.y;
								}
								var den3 = _vy3 * _qx3 - _vx3 * _qy3;
								$r = den3 * den3 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den3 = 1 / den3;
									var txx3 = (_qy3 * _sx3 - _qx3 * _sy3) * den3;
									$r = txx3 > nape_Config.epsilon && txx3 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx3 = (_vy3 * _sx3 - _vx3 * _sy3) * den3;
										$r = sxx3 > nape_Config.epsilon && sxx3 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t3 = txx3;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t3 < min3) {
									min3 = t3;
									ite2 = cx_itei2;
								}
							}
						} while(false);
						if(min3 != 2.0) {
							var cx1 = 0.0;
							var cy1 = 0.0;
							var T1 = min3;
							cx1 = u.x + (v3.x - u.x) * T1;
							cy1 = u.y + (v3.y - u.y) * T1;
							fst_vert = zpp_$nape_geom_ZPP_$Vec2.get(cx1,cy1,null);
							zpp_$nape_geom_ZPP_$Collide.flowpoly.add(fst_vert);
							poly1 = true;
							ite1 = cx_itei;
							break;
						}
					} while(false);
					cnt = 2;
				}
				while(true) if(poly1) {
					ite1 = ite1.next;
					ind11++;
					if(ite1 == null) {
						ite1 = s1.polygon.gverts.next;
						ind11 = 0;
					}
					if(!out1[ind11]) {
						var ex = ite1;
						if(fst_vert != null && zpp_$nape_geom_ZPP_$VecMath.vec_dsq(ex.x,ex.y,fst_vert.x,fst_vert.y) < nape_Config.epsilon) break;
						zpp_$nape_geom_ZPP_$Collide.flowpoly.add(ex);
						if(fst_vert == null) fst_vert = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
						cnt = 1;
					} else {
						var a2 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
						var b4 = ite1;
						var u1 = ite2;
						var itm = ite2.next;
						if(itm == null) itm = s2.polygon.gverts.next;
						var max = -1.0;
						var itmo = null;
						var indo = 0;
						var icnt = 0;
						var beg_ite = itm;
						var cx_ite4 = itm;
						do {
							var v5 = cx_ite4;
							var t4 = 0.0;
							if((function($this) {
								var $r;
								var _sx4 = 0.0;
								var _sy4 = 0.0;
								{
									_sx4 = u1.x - a2.x;
									_sy4 = u1.y - a2.y;
								}
								var _vx4 = 0.0;
								var _vy4 = 0.0;
								{
									_vx4 = v5.x - u1.x;
									_vy4 = v5.y - u1.y;
								}
								var _qx4 = 0.0;
								var _qy4 = 0.0;
								{
									_qx4 = b4.x - a2.x;
									_qy4 = b4.y - a2.y;
								}
								var den4 = _vy4 * _qx4 - _vx4 * _qy4;
								$r = den4 * den4 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den4 = 1 / den4;
									var txx4 = (_qy4 * _sx4 - _qx4 * _sy4) * den4;
									$r = txx4 > nape_Config.epsilon && txx4 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx4 = (_vy4 * _sx4 - _vx4 * _sy4) * den4;
										$r = sxx4 > nape_Config.epsilon && sxx4 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t4 = txx4;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t4 >= max) {
									itmo = ite2;
									indo = ind2;
									if(++icnt == cnt) {
										max = t4;
										cx_ite4 = beg_ite;
										break;
									} else max = t4;
								}
							}
							u1 = v5;
							ite2 = cx_ite4;
							ind2++;
							if(ind2 >= s2.polygon.edgeCnt) ind2 = 0;
							cx_ite4 = cx_ite4.next;
							if(cx_ite4 == null) cx_ite4 = s2.polygon.gverts.next;
						} while(false);
						while(cx_ite4 != beg_ite) {
							var v6 = cx_ite4;
							var t5 = 0.0;
							if((function($this) {
								var $r;
								var _sx5 = 0.0;
								var _sy5 = 0.0;
								{
									_sx5 = u1.x - a2.x;
									_sy5 = u1.y - a2.y;
								}
								var _vx5 = 0.0;
								var _vy5 = 0.0;
								{
									_vx5 = v6.x - u1.x;
									_vy5 = v6.y - u1.y;
								}
								var _qx5 = 0.0;
								var _qy5 = 0.0;
								{
									_qx5 = b4.x - a2.x;
									_qy5 = b4.y - a2.y;
								}
								var den5 = _vy5 * _qx5 - _vx5 * _qy5;
								$r = den5 * den5 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den5 = 1 / den5;
									var txx5 = (_qy5 * _sx5 - _qx5 * _sy5) * den5;
									$r = txx5 > nape_Config.epsilon && txx5 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx5 = (_vy5 * _sx5 - _vx5 * _sy5) * den5;
										$r = sxx5 > nape_Config.epsilon && sxx5 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t5 = txx5;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t5 >= max) {
									itmo = ite2;
									indo = ind2;
									if(++icnt == cnt) {
										max = t5;
										cx_ite4 = beg_ite;
										break;
									} else max = t5;
								}
							}
							u1 = v6;
							ite2 = cx_ite4;
							ind2++;
							if(ind2 >= s2.polygon.edgeCnt) ind2 = 0;
							cx_ite4 = cx_ite4.next;
							if(cx_ite4 == null) cx_ite4 = s2.polygon.gverts.next;
						}
						if(itmo == null) break;
						var u2 = itmo;
						var itm2 = itmo.next;
						if(itm2 == null) itm2 = s2.polygon.gverts.next;
						var v4 = itm2;
						var cx2 = 0.0;
						var cy2 = 0.0;
						var T2 = max;
						cx2 = u2.x + (v4.x - u2.x) * T2;
						cy2 = u2.y + (v4.y - u2.y) * T2;
						if(fst_vert != null && zpp_$nape_geom_ZPP_$VecMath.vec_dsq(cx2,cy2,fst_vert.x,fst_vert.y) < nape_Config.epsilon) break;
						zpp_$nape_geom_ZPP_$Collide.flowpoly.add(zpp_$nape_geom_ZPP_$Vec2.get(cx2,cy2,null));
						if(fst_vert == null) fst_vert = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
						ite2 = itmo;
						ind2 = indo;
						poly1 = !poly1;
						cnt = 2;
					}
				} else {
					ite2 = ite2.next;
					ind2++;
					if(ite2 == null) {
						ite2 = s2.polygon.gverts.next;
						ind2 = 0;
					}
					if(!out2[ind2]) {
						var ex1 = ite2;
						if(fst_vert != null && zpp_$nape_geom_ZPP_$VecMath.vec_dsq(ex1.x,ex1.y,fst_vert.x,fst_vert.y) < nape_Config.epsilon) break;
						zpp_$nape_geom_ZPP_$Collide.flowpoly.add(ex1);
						if(fst_vert == null) fst_vert = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
						cnt = 1;
					} else {
						var a3 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
						var b5 = ite2;
						var u3 = ite1;
						var itm1 = ite1.next;
						if(itm1 == null) itm1 = s1.polygon.gverts.next;
						var max1 = -1.0;
						var itmo1 = null;
						var indo1 = 0;
						var icnt1 = 0;
						var beg_ite1 = itm1;
						var cx_ite5 = itm1;
						do {
							var v8 = cx_ite5;
							var t6 = 0.0;
							if((function($this) {
								var $r;
								var _sx6 = 0.0;
								var _sy6 = 0.0;
								{
									_sx6 = u3.x - a3.x;
									_sy6 = u3.y - a3.y;
								}
								var _vx6 = 0.0;
								var _vy6 = 0.0;
								{
									_vx6 = v8.x - u3.x;
									_vy6 = v8.y - u3.y;
								}
								var _qx6 = 0.0;
								var _qy6 = 0.0;
								{
									_qx6 = b5.x - a3.x;
									_qy6 = b5.y - a3.y;
								}
								var den6 = _vy6 * _qx6 - _vx6 * _qy6;
								$r = den6 * den6 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den6 = 1 / den6;
									var txx6 = (_qy6 * _sx6 - _qx6 * _sy6) * den6;
									$r = txx6 > nape_Config.epsilon && txx6 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx6 = (_vy6 * _sx6 - _vx6 * _sy6) * den6;
										$r = sxx6 > nape_Config.epsilon && sxx6 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t6 = txx6;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t6 >= max1) {
									itmo1 = ite1;
									indo1 = ind11;
									if(++icnt1 == cnt) {
										max1 = t6;
										cx_ite5 = beg_ite1;
										break;
									} else max1 = t6;
								}
							}
							u3 = v8;
							ite1 = cx_ite5;
							ind11++;
							if(ind11 >= s1.polygon.edgeCnt) ind11 = 0;
							cx_ite5 = cx_ite5.next;
							if(cx_ite5 == null) cx_ite5 = s1.polygon.gverts.next;
						} while(false);
						while(cx_ite5 != beg_ite1) {
							var v9 = cx_ite5;
							var t7 = 0.0;
							if((function($this) {
								var $r;
								var _sx7 = 0.0;
								var _sy7 = 0.0;
								{
									_sx7 = u3.x - a3.x;
									_sy7 = u3.y - a3.y;
								}
								var _vx7 = 0.0;
								var _vy7 = 0.0;
								{
									_vx7 = v9.x - u3.x;
									_vy7 = v9.y - u3.y;
								}
								var _qx7 = 0.0;
								var _qy7 = 0.0;
								{
									_qx7 = b5.x - a3.x;
									_qy7 = b5.y - a3.y;
								}
								var den7 = _vy7 * _qx7 - _vx7 * _qy7;
								$r = den7 * den7 > nape_Config.epsilon * nape_Config.epsilon?(function($this) {
									var $r;
									den7 = 1 / den7;
									var txx7 = (_qy7 * _sx7 - _qx7 * _sy7) * den7;
									$r = txx7 > nape_Config.epsilon && txx7 < 1 - nape_Config.epsilon?(function($this) {
										var $r;
										var sxx7 = (_vy7 * _sx7 - _vx7 * _sy7) * den7;
										$r = sxx7 > nape_Config.epsilon && sxx7 < 1 - nape_Config.epsilon?(function($this) {
											var $r;
											t7 = txx7;
											$r = true;
											return $r;
										}($this)):false;
										return $r;
									}($this)):false;
									return $r;
								}($this)):false;
								return $r;
							}(this))) {
								if(t7 >= max1) {
									itmo1 = ite1;
									indo1 = ind11;
									if(++icnt1 == cnt) {
										max1 = t7;
										cx_ite5 = beg_ite1;
										break;
									} else max1 = t7;
								}
							}
							u3 = v9;
							ite1 = cx_ite5;
							ind11++;
							if(ind11 >= s1.polygon.edgeCnt) ind11 = 0;
							cx_ite5 = cx_ite5.next;
							if(cx_ite5 == null) cx_ite5 = s1.polygon.gverts.next;
						}
						if(itmo1 == null) break;
						var u4 = itmo1;
						var itm21 = itmo1.next;
						if(itm21 == null) itm21 = s1.polygon.gverts.next;
						var v7 = itm21;
						var cx3 = 0.0;
						var cy3 = 0.0;
						var T3 = max1;
						cx3 = u4.x + (v7.x - u4.x) * T3;
						cy3 = u4.y + (v7.y - u4.y) * T3;
						if(fst_vert != null && zpp_$nape_geom_ZPP_$VecMath.vec_dsq(cx3,cy3,fst_vert.x,fst_vert.y) < nape_Config.epsilon) break;
						zpp_$nape_geom_ZPP_$Collide.flowpoly.add(zpp_$nape_geom_ZPP_$Vec2.get(cx3,cy3,null));
						if(fst_vert == null) fst_vert = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
						ite1 = itmo1;
						ind11 = indo1;
						poly1 = !poly1;
						cnt = 2;
					}
				}
				if(zpp_$nape_geom_ZPP_$Collide.flowpoly.head != null && zpp_$nape_geom_ZPP_$Collide.flowpoly.head.next != null && zpp_$nape_geom_ZPP_$Collide.flowpoly.head.next.next != null) {
					var area = 0.0;
					var COMx = 0.0;
					var COMy = 0.0;
					COMx = 0;
					COMy = 0;
					area = 0.0;
					var cx_ite6 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head;
					var u5 = cx_ite6.elt;
					cx_ite6 = cx_ite6.next;
					var v10 = cx_ite6.elt;
					cx_ite6 = cx_ite6.next;
					while(cx_ite6 != null) {
						var w2 = cx_ite6.elt;
						area += v10.x * (w2.y - u5.y);
						var cf = w2.y * v10.x - w2.x * v10.y;
						COMx += (v10.x + w2.x) * cf;
						COMy += (v10.y + w2.y) * cf;
						u5 = v10;
						v10 = w2;
						cx_ite6 = cx_ite6.next;
					}
					cx_ite6 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head;
					var w = cx_ite6.elt;
					area += v10.x * (w.y - u5.y);
					var cf1 = w.y * v10.x - w.x * v10.y;
					COMx += (v10.x + w.x) * cf1;
					COMy += (v10.y + w.y) * cf1;
					u5 = v10;
					v10 = w;
					cx_ite6 = cx_ite6.next;
					var w1 = cx_ite6.elt;
					area += v10.x * (w1.y - u5.y);
					var cf2 = w1.y * v10.x - w1.x * v10.y;
					COMx += (v10.x + w1.x) * cf2;
					COMy += (v10.y + w1.y) * cf2;
					area *= 0.5;
					var ia = 1 / (6 * area);
					var t8 = ia;
					COMx *= t8;
					COMy *= t8;
					arb.overlap = -area;
					arb.centroidx = COMx;
					arb.centroidy = COMy;
					null;
					return true;
				} else return false;
			} else return false;
		} else return false;
	} else {
		var inte = [];
		var total1 = true;
		var a0 = null;
		var vi = null;
		var max2 = -1e+100;
		var cont1 = true;
		var vite = s2.polygon.gverts.next;
		var ind3 = 0;
		var cx_ite7 = s2.polygon.edges.head;
		while(cx_ite7 != null) {
			var a4 = cx_ite7.elt;
			var dist = a4.gnormx * s1.circle.worldCOMx + a4.gnormy * s1.circle.worldCOMy;
			if(dist > a4.gprojection + s1.circle.radius) {
				cont1 = false;
				break;
			} else if(dist + s1.circle.radius > a4.gprojection + nape_Config.epsilon) {
				total1 = false;
				inte[ind3] = true;
			}
			dist -= a4.gprojection + s1.circle.radius;
			if(dist > max2) {
				max2 = dist;
				a0 = a4;
				vi = vite;
			}
			vite = vite.next;
			ind3++;
			cx_ite7 = cx_ite7.next;
		}
		if(cont1) {
			if(total1) {
				arb.overlap = s1.circle.area;
				arb.centroidx = s1.circle.worldCOMx;
				arb.centroidy = s1.circle.worldCOMy;
				null;
				return true;
			} else {
				var v0 = vi;
				var v11;
				if(vi.next == null) v11 = s2.polygon.gverts.next; else v11 = vi.next;
				var dt = s1.circle.worldCOMy * a0.gnormx - s1.circle.worldCOMx * a0.gnormy;
				if(dt <= v0.y * a0.gnormx - v0.x * a0.gnormy?(function($this) {
					var $r;
					var minDist = s1.circle.radius;
					var px = 0.0;
					var py = 0.0;
					{
						px = v0.x - s1.circle.worldCOMx;
						py = v0.y - s1.circle.worldCOMy;
					}
					var distSqr = px * px + py * py;
					$r = distSqr <= minDist * minDist;
					return $r;
				}(this)):dt >= v11.y * a0.gnormx - v11.x * a0.gnormy?(function($this) {
					var $r;
					var minDist1 = s1.circle.radius;
					var px1 = 0.0;
					var py1 = 0.0;
					{
						px1 = v11.x - s1.circle.worldCOMx;
						py1 = v11.y - s1.circle.worldCOMy;
					}
					var distSqr1 = px1 * px1 + py1 * py1;
					$r = distSqr1 <= minDist1 * minDist1;
					return $r;
				}(this)):true) {
					var ins = [];
					var ind4 = 0;
					var total2 = true;
					var vi1 = null;
					var vind = 0;
					var cx_ite8 = s2.polygon.gverts.next;
					while(cx_ite8 != null) {
						var v12 = cx_ite8;
						var dist1 = zpp_$nape_geom_ZPP_$VecMath.vec_dsq(v12.x,v12.y,s1.circle.worldCOMx,s1.circle.worldCOMy);
						if(!(ins[ind4] = dist1 <= s1.circle.radius * s1.circle.radius)) total2 = false; else {
							vind = ind4;
							vi1 = cx_ite8;
						}
						ind4++;
						cx_ite8 = cx_ite8.next;
					}
					if(total2) {
						s2.polygon.validate_worldCOM();
						arb.overlap = s2.polygon.area;
						arb.centroidx = s2.polygon.worldCOMx;
						arb.centroidy = s2.polygon.worldCOMy;
						null;
						return true;
					} else {
						while(!(zpp_$nape_geom_ZPP_$Collide.flowpoly.head == null)) {
							var p1 = zpp_$nape_geom_ZPP_$Collide.flowpoly.pop_unsafe();
							if(!p1._inuse) {
								var o1 = p1;
								if(o1.outer != null) {
									o1.outer.zpp_inner = null;
									o1.outer = null;
								}
								o1._isimmutable = null;
								o1._validate = null;
								o1._invalidate = null;
								o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
								zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
							}
						}
						zpp_$nape_geom_ZPP_$Collide.flowsegs.clear();
						var fst_vert1 = null;
						var state = 1;
						if(vi1 == null) {
							vi1 = s2.polygon.gverts.next;
							state = 2;
						} else zpp_$nape_geom_ZPP_$Collide.flowpoly.add(fst_vert1 = vi1);
						while(state != 0) if(state == 1) {
							vi1 = vi1.next;
							if(vi1 == null) vi1 = s2.polygon.gverts.next;
							vind++;
							if(vind >= s2.polygon.edgeCnt) vind = 0;
							if(ins[vind]) {
								if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(fst_vert1.x,fst_vert1.y,vi1.x,vi1.y) < nape_Config.epsilon) break;
								zpp_$nape_geom_ZPP_$Collide.flowpoly.add(vi1);
							} else {
								var u6 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
								var v13 = vi1;
								var tval;
								var vx = 0.0;
								var vy = 0.0;
								vx = v13.x - u6.x;
								vy = v13.y - u6.y;
								var qx = 0.0;
								var qy = 0.0;
								qx = u6.x - s1.circle.worldCOMx;
								qy = u6.y - s1.circle.worldCOMy;
								var A = vx * vx + vy * vy;
								var B = 2 * (qx * vx + qy * vy);
								var C = qx * qx + qy * qy - s1.circle.radius * s1.circle.radius;
								var D = Math.sqrt(B * B - 4 * A * C);
								A = 1 / (2 * A);
								var t9 = (-B - D) * A;
								if(t9 < nape_Config.epsilon) tval = (-B + D) * A; else tval = t9;
								var cx4 = 0.0;
								var cy4 = 0.0;
								var T4 = tval;
								cx4 = u6.x + (v13.x - u6.x) * T4;
								cy4 = u6.y + (v13.y - u6.y) * T4;
								if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(fst_vert1.x,fst_vert1.y,cx4,cy4) < nape_Config.epsilon) break;
								zpp_$nape_geom_ZPP_$Collide.flowpoly.add(zpp_$nape_geom_ZPP_$Vec2.get(cx4,cy4,null));
								state = 2;
							}
						} else if(state == 2) {
							var vi2 = vi1.next;
							if(vi2 == null) vi2 = s2.polygon.gverts.next;
							var u7 = vi1;
							state = 0;
							var beg_ite2 = vi2;
							var cx_ite9 = vi2;
							do {
								var v14 = cx_ite9;
								var vind2 = vind + 1;
								if(vind2 == s2.polygon.edgeCnt) vind2 = 0;
								if(inte[vind]) {
									if(ins[vind2]) {
										var tval1;
										var vx1 = 0.0;
										var vy1 = 0.0;
										vx1 = v14.x - u7.x;
										vy1 = v14.y - u7.y;
										var qx1 = 0.0;
										var qy1 = 0.0;
										qx1 = u7.x - s1.circle.worldCOMx;
										qy1 = u7.y - s1.circle.worldCOMy;
										var A1 = vx1 * vx1 + vy1 * vy1;
										var B1 = 2 * (qx1 * vx1 + qy1 * vy1);
										var C1 = qx1 * qx1 + qy1 * qy1 - s1.circle.radius * s1.circle.radius;
										var D1 = Math.sqrt(B1 * B1 - 4 * A1 * C1);
										A1 = 1 / (2 * A1);
										var t10 = (-B1 - D1) * A1;
										if(t10 < nape_Config.epsilon) tval1 = (-B1 + D1) * A1; else tval1 = t10;
										var cx5 = 0.0;
										var cy5 = 0.0;
										var T5 = tval1;
										cx5 = u7.x + (v14.x - u7.x) * T5;
										cy5 = u7.y + (v14.y - u7.y) * T5;
										if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(fst_vert1.x,fst_vert1.y,cx5,cy5) < nape_Config.epsilon) {
											state = 0;
											cx_ite9 = beg_ite2;
											break;
										}
										var cp = zpp_$nape_geom_ZPP_$Vec2.get(cx5,cy5,null);
										zpp_$nape_geom_ZPP_$Collide.flowsegs.add(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt);
										zpp_$nape_geom_ZPP_$Collide.flowsegs.add(cp);
										zpp_$nape_geom_ZPP_$Collide.flowpoly.add(cp);
										state = 1;
										cx_ite9 = beg_ite2;
										break;
									} else {
										var t0 = 0.0;
										var t11 = 0.0;
										var two;
										var vx2 = 0.0;
										var vy2 = 0.0;
										vx2 = v14.x - u7.x;
										vy2 = v14.y - u7.y;
										var qx2 = 0.0;
										var qy2 = 0.0;
										qx2 = u7.x - s1.circle.worldCOMx;
										qy2 = u7.y - s1.circle.worldCOMy;
										var A2 = vx2 * vx2 + vy2 * vy2;
										var B2 = 2 * (qx2 * vx2 + qy2 * vy2);
										var C2 = qx2 * qx2 + qy2 * qy2 - s1.circle.radius * s1.circle.radius;
										var D2 = B2 * B2 - 4 * A2 * C2;
										if(D2 * D2 < nape_Config.epsilon) {
											if(D2 < 0) t0 = 10.0; else t0 = t11 = -B2 / (2 * A2);
											two = false;
										} else {
											D2 = Math.sqrt(D2);
											A2 = 1 / (2 * A2);
											t0 = (-B2 - D2) * A2;
											t11 = (-B2 + D2) * A2;
											two = true;
										}
										if(t0 < 1 - nape_Config.epsilon && t11 > nape_Config.epsilon) {
											var cx6 = 0.0;
											var cy6 = 0.0;
											var T6 = t0;
											cx6 = u7.x + (v14.x - u7.x) * T6;
											cy6 = u7.y + (v14.y - u7.y) * T6;
											if(fst_vert1 != null && zpp_$nape_geom_ZPP_$VecMath.vec_dsq(fst_vert1.x,fst_vert1.y,cx6,cy6) < nape_Config.epsilon) {
												state = 0;
												cx_ite9 = beg_ite2;
												break;
											}
											var cp1 = zpp_$nape_geom_ZPP_$Vec2.get(cx6,cy6,null);
											if(!(zpp_$nape_geom_ZPP_$Collide.flowpoly.head == null)) {
												zpp_$nape_geom_ZPP_$Collide.flowsegs.add(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt);
												zpp_$nape_geom_ZPP_$Collide.flowsegs.add(cp1);
											}
											zpp_$nape_geom_ZPP_$Collide.flowpoly.add(cp1);
											if(fst_vert1 == null) fst_vert1 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
											if(two) {
												var cx7 = 0.0;
												var cy7 = 0.0;
												var T7 = t11;
												cx7 = u7.x + (v14.x - u7.x) * T7;
												cy7 = u7.y + (v14.y - u7.y) * T7;
												zpp_$nape_geom_ZPP_$Collide.flowpoly.add(zpp_$nape_geom_ZPP_$Vec2.get(cx7,cy7,null));
											}
										}
									}
								}
								u7 = v14;
								vi1 = cx_ite9;
								vind = vind2;
								cx_ite9 = cx_ite9.next;
								if(cx_ite9 == null) cx_ite9 = s2.polygon.gverts.next;
							} while(false);
							while(cx_ite9 != beg_ite2) {
								var v15 = cx_ite9;
								var vind21 = vind + 1;
								if(vind21 == s2.polygon.edgeCnt) vind21 = 0;
								if(inte[vind]) {
									if(ins[vind21]) {
										var tval2;
										var vx3 = 0.0;
										var vy3 = 0.0;
										vx3 = v15.x - u7.x;
										vy3 = v15.y - u7.y;
										var qx3 = 0.0;
										var qy3 = 0.0;
										qx3 = u7.x - s1.circle.worldCOMx;
										qy3 = u7.y - s1.circle.worldCOMy;
										var A3 = vx3 * vx3 + vy3 * vy3;
										var B3 = 2 * (qx3 * vx3 + qy3 * vy3);
										var C3 = qx3 * qx3 + qy3 * qy3 - s1.circle.radius * s1.circle.radius;
										var D3 = Math.sqrt(B3 * B3 - 4 * A3 * C3);
										A3 = 1 / (2 * A3);
										var t12 = (-B3 - D3) * A3;
										if(t12 < nape_Config.epsilon) tval2 = (-B3 + D3) * A3; else tval2 = t12;
										var cx8 = 0.0;
										var cy8 = 0.0;
										var T8 = tval2;
										cx8 = u7.x + (v15.x - u7.x) * T8;
										cy8 = u7.y + (v15.y - u7.y) * T8;
										if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(fst_vert1.x,fst_vert1.y,cx8,cy8) < nape_Config.epsilon) {
											state = 0;
											cx_ite9 = beg_ite2;
											break;
										}
										var cp2 = zpp_$nape_geom_ZPP_$Vec2.get(cx8,cy8,null);
										zpp_$nape_geom_ZPP_$Collide.flowsegs.add(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt);
										zpp_$nape_geom_ZPP_$Collide.flowsegs.add(cp2);
										zpp_$nape_geom_ZPP_$Collide.flowpoly.add(cp2);
										state = 1;
										cx_ite9 = beg_ite2;
										break;
									} else {
										var t01 = 0.0;
										var t13 = 0.0;
										var two1;
										var vx4 = 0.0;
										var vy4 = 0.0;
										vx4 = v15.x - u7.x;
										vy4 = v15.y - u7.y;
										var qx4 = 0.0;
										var qy4 = 0.0;
										qx4 = u7.x - s1.circle.worldCOMx;
										qy4 = u7.y - s1.circle.worldCOMy;
										var A4 = vx4 * vx4 + vy4 * vy4;
										var B4 = 2 * (qx4 * vx4 + qy4 * vy4);
										var C4 = qx4 * qx4 + qy4 * qy4 - s1.circle.radius * s1.circle.radius;
										var D4 = B4 * B4 - 4 * A4 * C4;
										if(D4 * D4 < nape_Config.epsilon) {
											if(D4 < 0) t01 = 10.0; else t01 = t13 = -B4 / (2 * A4);
											two1 = false;
										} else {
											D4 = Math.sqrt(D4);
											A4 = 1 / (2 * A4);
											t01 = (-B4 - D4) * A4;
											t13 = (-B4 + D4) * A4;
											two1 = true;
										}
										if(t01 < 1 - nape_Config.epsilon && t13 > nape_Config.epsilon) {
											var cx9 = 0.0;
											var cy9 = 0.0;
											var T9 = t01;
											cx9 = u7.x + (v15.x - u7.x) * T9;
											cy9 = u7.y + (v15.y - u7.y) * T9;
											if(fst_vert1 != null && zpp_$nape_geom_ZPP_$VecMath.vec_dsq(fst_vert1.x,fst_vert1.y,cx9,cy9) < nape_Config.epsilon) {
												state = 0;
												cx_ite9 = beg_ite2;
												break;
											}
											var cp3 = zpp_$nape_geom_ZPP_$Vec2.get(cx9,cy9,null);
											if(!(zpp_$nape_geom_ZPP_$Collide.flowpoly.head == null)) {
												zpp_$nape_geom_ZPP_$Collide.flowsegs.add(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt);
												zpp_$nape_geom_ZPP_$Collide.flowsegs.add(cp3);
											}
											zpp_$nape_geom_ZPP_$Collide.flowpoly.add(cp3);
											if(fst_vert1 == null) fst_vert1 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt;
											if(two1) {
												var cx10 = 0.0;
												var cy10 = 0.0;
												var T10 = t13;
												cx10 = u7.x + (v15.x - u7.x) * T10;
												cy10 = u7.y + (v15.y - u7.y) * T10;
												zpp_$nape_geom_ZPP_$Collide.flowpoly.add(zpp_$nape_geom_ZPP_$Vec2.get(cx10,cy10,null));
											}
										}
									}
								}
								u7 = v15;
								vi1 = cx_ite9;
								vind = vind21;
								cx_ite9 = cx_ite9.next;
								if(cx_ite9 == null) cx_ite9 = s2.polygon.gverts.next;
							}
						}
						if(zpp_$nape_geom_ZPP_$Collide.flowpoly.head == null) return false; else if(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.next == null) {
							var all = true;
							var cx_ite10 = s2.polygon.edges.head;
							while(cx_ite10 != null) {
								var e = cx_ite10.elt;
								var dist2 = e.gnormx * s1.circle.worldCOMx + e.gnormy * s1.circle.worldCOMy;
								if(dist2 > e.gprojection) {
									all = false;
									break;
								}
								cx_ite10 = cx_ite10.next;
							}
							if(all) {
								arb.overlap = s1.circle.area;
								arb.centroidx = s1.circle.worldCOMx;
								arb.centroidy = s1.circle.worldCOMy;
								null;
								return true;
							} else return false;
						} else {
							var COMx1 = 0;
							var COMy1 = 0;
							var area1 = 0.0;
							if(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.next.next != null) {
								var parea = 0.0;
								var pCOMx = 0.0;
								var pCOMy = 0.0;
								pCOMx = 0;
								pCOMy = 0;
								parea = 0.0;
								var cx_ite11 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head;
								var u8 = cx_ite11.elt;
								cx_ite11 = cx_ite11.next;
								var v16 = cx_ite11.elt;
								cx_ite11 = cx_ite11.next;
								while(cx_ite11 != null) {
									var w5 = cx_ite11.elt;
									parea += v16.x * (w5.y - u8.y);
									var cf3 = w5.y * v16.x - w5.x * v16.y;
									pCOMx += (v16.x + w5.x) * cf3;
									pCOMy += (v16.y + w5.y) * cf3;
									u8 = v16;
									v16 = w5;
									cx_ite11 = cx_ite11.next;
								}
								cx_ite11 = zpp_$nape_geom_ZPP_$Collide.flowpoly.head;
								var w3 = cx_ite11.elt;
								parea += v16.x * (w3.y - u8.y);
								var cf4 = w3.y * v16.x - w3.x * v16.y;
								pCOMx += (v16.x + w3.x) * cf4;
								pCOMy += (v16.y + w3.y) * cf4;
								u8 = v16;
								v16 = w3;
								cx_ite11 = cx_ite11.next;
								var w4 = cx_ite11.elt;
								parea += v16.x * (w4.y - u8.y);
								var cf5 = w4.y * v16.x - w4.x * v16.y;
								pCOMx += (v16.x + w4.x) * cf5;
								pCOMy += (v16.y + w4.y) * cf5;
								parea *= 0.5;
								var ia1 = 1 / (6 * parea);
								var t14 = ia1;
								pCOMx *= t14;
								pCOMy *= t14;
								var t15 = -parea;
								COMx1 += pCOMx * t15;
								COMy1 += pCOMy * t15;
								area1 -= parea;
							} else {
								zpp_$nape_geom_ZPP_$Collide.flowsegs.add(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.elt);
								zpp_$nape_geom_ZPP_$Collide.flowsegs.add(zpp_$nape_geom_ZPP_$Collide.flowpoly.head.next.elt);
							}
							while(!(zpp_$nape_geom_ZPP_$Collide.flowsegs.head == null)) {
								var u9 = zpp_$nape_geom_ZPP_$Collide.flowsegs.pop_unsafe();
								var v17 = zpp_$nape_geom_ZPP_$Collide.flowsegs.pop_unsafe();
								var dx = 0.0;
								var dy = 0.0;
								dx = v17.x - u9.x;
								dy = v17.y - u9.y;
								var nx = 0.0;
								var ny = 0.0;
								nx = dx;
								ny = dy;
								var d = nx * nx + ny * ny;
								var imag = 1.0 / Math.sqrt(d);
								var t16 = imag;
								nx *= t16;
								ny *= t16;
								var t17 = nx;
								nx = -ny;
								ny = t17;
								var cx11 = 0.0;
								var cy11 = 0.0;
								cx11 = u9.x + v17.x;
								cy11 = u9.y + v17.y;
								var t18 = 0.5;
								cx11 *= t18;
								cy11 *= t18;
								var t19 = 1.0;
								cx11 -= s1.circle.worldCOMx * t19;
								cy11 -= s1.circle.worldCOMy * t19;
								var xd = nx * cx11 + ny * cy11;
								var carea = 0.0;
								var ccom = 0.0;
								var X = xd;
								var cos = X / s1.circle.radius;
								var sin = Math.sqrt(1 - cos * cos);
								var theta = Math.acos(cos);
								carea = s1.circle.radius * (s1.circle.radius * theta - X * sin);
								ccom = 0.66666666666666663 * s1.circle.radius * sin * sin * sin / (theta - cos * sin);
								cx11 = s1.circle.worldCOMx;
								cy11 = s1.circle.worldCOMy;
								var t20 = ccom;
								cx11 += nx * t20;
								cy11 += ny * t20;
								var t21 = carea;
								COMx1 += cx11 * t21;
								COMy1 += cy11 * t21;
								area1 += carea;
							}
							var t22 = 1.0 / area1;
							COMx1 *= t22;
							COMy1 *= t22;
							arb.overlap = area1;
							arb.centroidx = COMx1;
							arb.centroidy = COMy1;
							null;
							return true;
						}
					}
				} else return false;
			}
		} else return false;
	} else {
		var c1 = s1.circle;
		var c2 = s2.circle;
		var deltax = 0.0;
		var deltay = 0.0;
		deltax = c2.worldCOMx - c1.worldCOMx;
		deltay = c2.worldCOMy - c1.worldCOMy;
		var cr = c1.radius + c2.radius;
		var ds = deltax * deltax + deltay * deltay;
		if(ds > cr * cr) return false; else if(ds < nape_Config.epsilon * nape_Config.epsilon) {
			if(c1.radius < c2.radius) {
				arb.overlap = c1.area;
				arb.centroidx = c1.worldCOMx;
				arb.centroidy = c1.worldCOMy;
				null;
			} else {
				arb.overlap = c2.area;
				arb.centroidx = c2.worldCOMx;
				arb.centroidy = c2.worldCOMy;
				null;
			}
			return true;
		} else {
			var d1 = Math.sqrt(ds);
			var id = 1 / d1;
			var x1 = 0.5 * (d1 - (c2.radius * c2.radius - c1.radius * c1.radius) * id);
			if(x1 <= -c1.radius) {
				arb.overlap = c1.area;
				arb.centroidx = c1.worldCOMx;
				arb.centroidy = c1.worldCOMy;
				null;
			} else {
				var x2 = d1 - x1;
				if(x2 <= -c2.radius) {
					arb.overlap = c2.area;
					arb.centroidx = c2.worldCOMx;
					arb.centroidy = c2.worldCOMy;
					null;
				} else {
					var area11 = 0.0;
					var y1 = 0.0;
					var area2 = 0.0;
					var y2 = 0.0;
					var X1 = x1;
					var cos1 = X1 / c1.radius;
					var sin1 = Math.sqrt(1 - cos1 * cos1);
					var theta1 = Math.acos(cos1);
					area11 = c1.radius * (c1.radius * theta1 - X1 * sin1);
					y1 = 0.66666666666666663 * c1.radius * sin1 * sin1 * sin1 / (theta1 - cos1 * sin1);
					var X2 = x2;
					var cos2 = X2 / c2.radius;
					var sin2 = Math.sqrt(1 - cos2 * cos2);
					var theta2 = Math.acos(cos2);
					area2 = c2.radius * (c2.radius * theta2 - X2 * sin2);
					y2 = 0.66666666666666663 * c2.radius * sin2 * sin2 * sin2 / (theta2 - cos2 * sin2);
					var tarea = area11 + area2;
					var ya = (y1 * area11 + (d1 - y2) * area2) / tarea * id;
					arb.overlap = tarea;
					arb.centroidx = c1.worldCOMx + deltax * ya;
					arb.centroidy = c1.worldCOMy + deltay * ya;
					null;
				}
			}
			return true;
		}
	}
};
var zpp_$nape_geom_ZPP_$Convex = function() { };
$hxClasses["zpp_nape.geom.ZPP_Convex"] = zpp_$nape_geom_ZPP_$Convex;
zpp_$nape_geom_ZPP_$Convex.__name__ = ["zpp_nape","geom","ZPP_Convex"];
zpp_$nape_geom_ZPP_$Convex.isinner = function(a,b,c) {
	var ux = 0.0;
	var uy = 0.0;
	ux = a.x - b.x;
	uy = a.y - b.y;
	var vx = 0.0;
	var vy = 0.0;
	vx = c.x - b.x;
	vy = c.y - b.y;
	return vy * ux - vx * uy >= 0;
};
zpp_$nape_geom_ZPP_$Convex.optimise = function(P) {
	var F = P.vertices;
	var L = P.vertices;
	if(F != null) {
		var nite = F;
		do {
			var p = nite;
			p.sort();
			nite = nite.next;
		} while(nite != L);
	}
	var F1 = P.vertices;
	var L1 = P.vertices;
	if(F1 != null) {
		var nite1 = F1;
		do {
			var p1 = nite1;
			var pright = p1.prev;
			var ppre = null;
			var cx_ite = p1.diagonals.head;
			while(cx_ite != null) {
				var pdiag = cx_ite.elt;
				var pleft;
				if(cx_ite.next == null) pleft = p1.next; else pleft = cx_ite.next.elt;
				if(!zpp_$nape_geom_ZPP_$Convex.isinner(pleft,p1,pright)) {
					ppre = cx_ite;
					pright = pdiag;
					cx_ite = cx_ite.next;
					continue;
				}
				var removable = true;
				var q = pdiag;
				var qright = q.prev;
				var qpre = null;
				var cx_ite1 = q.diagonals.head;
				while(cx_ite1 != null) {
					var qdiag = cx_ite1.elt;
					if(qdiag == p1) {
						var qleft;
						if(cx_ite1.next == null) qleft = q.next; else qleft = cx_ite1.next.elt;
						removable = zpp_$nape_geom_ZPP_$Convex.isinner(qleft,q,qright);
						break;
					}
					qright = qdiag;
					qpre = cx_ite1;
					cx_ite1 = cx_ite1.next;
				}
				if(removable) {
					cx_ite = p1.diagonals.erase(ppre);
					q.diagonals.erase(qpre);
					continue;
				}
				pright = pdiag;
				ppre = cx_ite;
				cx_ite = cx_ite.next;
			}
			nite1 = nite1.next;
		} while(nite1 != L1);
	}
};
var zpp_$nape_geom_ZPP_$ConvexRayResult = function() {
	this.toiDistance = 0.0;
	this.next = null;
	this.inner = false;
	this.shape = null;
};
$hxClasses["zpp_nape.geom.ZPP_ConvexRayResult"] = zpp_$nape_geom_ZPP_$ConvexRayResult;
zpp_$nape_geom_ZPP_$ConvexRayResult.__name__ = ["zpp_nape","geom","ZPP_ConvexRayResult"];
zpp_$nape_geom_ZPP_$ConvexRayResult.prototype = {
	__class__: zpp_$nape_geom_ZPP_$ConvexRayResult
};
var zpp_$nape_geom_ZPP_$GeomVert = function() {
	this.forced = false;
	this.wrap = null;
	this.next = null;
	this.prev = null;
	this.y = 0.0;
	this.x = 0.0;
};
$hxClasses["zpp_nape.geom.ZPP_GeomVert"] = zpp_$nape_geom_ZPP_$GeomVert;
zpp_$nape_geom_ZPP_$GeomVert.__name__ = ["zpp_nape","geom","ZPP_GeomVert"];
zpp_$nape_geom_ZPP_$GeomVert.get = function(x,y) {
	var ret;
	if(zpp_$nape_geom_ZPP_$GeomVert.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$GeomVert(); else {
		ret = zpp_$nape_geom_ZPP_$GeomVert.zpp_pool;
		zpp_$nape_geom_ZPP_$GeomVert.zpp_pool = ret.next;
		ret.next = null;
	}
	ret.forced = false;
	ret.x = x;
	ret.y = y;
	return ret;
};
zpp_$nape_geom_ZPP_$GeomVert.prototype = {
	wrapper: function() {
		if(this.wrap == null) {
			this.wrap = nape_geom_Vec2.get(this.x,this.y,null);
			this.wrap.zpp_inner._inuse = true;
			this.wrap.zpp_inner._invalidate = $bind(this,this.modwrap);
			this.wrap.zpp_inner._validate = $bind(this,this.getwrap);
		}
		return this.wrap;
	}
	,modwrap: function(n) {
		this.x = n.x;
		this.y = n.y;
	}
	,getwrap: function() {
		this.wrap.zpp_inner.x = this.x;
		this.wrap.zpp_inner.y = this.y;
	}
	,__class__: zpp_$nape_geom_ZPP_$GeomVert
};
var zpp_$nape_geom_ZPP_$GeomPoly = function(outer) {
	this.vertices = null;
	this.outer = null;
	this.outer = outer;
};
$hxClasses["zpp_nape.geom.ZPP_GeomPoly"] = zpp_$nape_geom_ZPP_$GeomPoly;
zpp_$nape_geom_ZPP_$GeomPoly.__name__ = ["zpp_nape","geom","ZPP_GeomPoly"];
zpp_$nape_geom_ZPP_$GeomPoly.prototype = {
	__class__: zpp_$nape_geom_ZPP_$GeomPoly
};
var zpp_$nape_geom_ZPP_$GeomVertexIterator = function() {
	this.next = null;
	this.outer = null;
	this.forward = false;
	this.first = false;
	this.start = null;
	this.ptr = null;
	zpp_$nape_geom_ZPP_$GeomVertexIterator.internal = true;
	this.outer = new nape_geom_GeomVertexIterator();
	zpp_$nape_geom_ZPP_$GeomVertexIterator.internal = false;
};
$hxClasses["zpp_nape.geom.ZPP_GeomVertexIterator"] = zpp_$nape_geom_ZPP_$GeomVertexIterator;
zpp_$nape_geom_ZPP_$GeomVertexIterator.__name__ = ["zpp_nape","geom","ZPP_GeomVertexIterator"];
zpp_$nape_geom_ZPP_$GeomVertexIterator.get = function(poly,forward) {
	var ret;
	if(zpp_$nape_geom_ZPP_$GeomVertexIterator.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$GeomVertexIterator(); else {
		ret = zpp_$nape_geom_ZPP_$GeomVertexIterator.zpp_pool;
		zpp_$nape_geom_ZPP_$GeomVertexIterator.zpp_pool = ret.next;
		ret.next = null;
	}
	null;
	ret.outer.zpp_inner = ret;
	ret.ptr = poly;
	ret.forward = forward;
	ret.start = poly;
	ret.first = poly != null;
	return ret.outer;
};
zpp_$nape_geom_ZPP_$GeomVertexIterator.prototype = {
	__class__: zpp_$nape_geom_ZPP_$GeomVertexIterator
};
var zpp_$nape_geom_ZPP_$Mat23 = function() {
	this.ty = 0.0;
	this.tx = 0.0;
	this.d = 0.0;
	this.c = 0.0;
	this.b = 0.0;
	this.a = 0.0;
};
$hxClasses["zpp_nape.geom.ZPP_Mat23"] = zpp_$nape_geom_ZPP_$Mat23;
zpp_$nape_geom_ZPP_$Mat23.__name__ = ["zpp_nape","geom","ZPP_Mat23"];
zpp_$nape_geom_ZPP_$Mat23.prototype = {
	__class__: zpp_$nape_geom_ZPP_$Mat23
};
var zpp_$nape_geom_ZPP_$MatMN = function() {
	this.x = null;
	this.n = 0;
	this.m = 0;
};
$hxClasses["zpp_nape.geom.ZPP_MatMN"] = zpp_$nape_geom_ZPP_$MatMN;
zpp_$nape_geom_ZPP_$MatMN.__name__ = ["zpp_nape","geom","ZPP_MatMN"];
zpp_$nape_geom_ZPP_$MatMN.prototype = {
	__class__: zpp_$nape_geom_ZPP_$MatMN
};
var zpp_$nape_geom_ZPP_$Monotone = function() { };
$hxClasses["zpp_nape.geom.ZPP_Monotone"] = zpp_$nape_geom_ZPP_$Monotone;
zpp_$nape_geom_ZPP_$Monotone.__name__ = ["zpp_nape","geom","ZPP_Monotone"];
zpp_$nape_geom_ZPP_$Monotone.bisector = function(b) {
	var a = b.prev;
	var c = b.next;
	var ux = 0.0;
	var uy = 0.0;
	ux = b.x - a.x;
	uy = b.y - a.y;
	var vx = 0.0;
	var vy = 0.0;
	vx = c.x - b.x;
	vy = c.y - b.y;
	var ret = zpp_$nape_geom_ZPP_$Vec2.get(-uy - vy,ux + vx,null);
	var d = ret.x * ret.x + ret.y * ret.y;
	var imag = 1.0 / Math.sqrt(d);
	var t = imag;
	ret.x *= t;
	ret.y *= t;
	if(vy * ux - vx * uy < 0) {
		ret.x = -ret.x;
		ret.y = -ret.y;
	}
	return ret;
};
zpp_$nape_geom_ZPP_$Monotone.below = function(p,q) {
	if(p.y < q.y) return true; else if(p.y > q.y) return false; else if(p.x < q.x) return true; else if(p.x > q.x) return false; else {
		var po = zpp_$nape_geom_ZPP_$Monotone.bisector(p);
		var qo = zpp_$nape_geom_ZPP_$Monotone.bisector(q);
		var t = 1.0;
		po.x += p.x * t;
		po.y += p.y * t;
		var t1 = 1.0;
		qo.x += q.x * t1;
		qo.y += q.y * t1;
		var ret = po.x < qo.x || po.x == qo.x && po.y < qo.y;
		var o = po;
		if(o.outer != null) {
			o.outer.zpp_inner = null;
			o.outer = null;
		}
		o._isimmutable = null;
		o._validate = null;
		o._invalidate = null;
		o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
		var o1 = qo;
		if(o1.outer != null) {
			o1.outer.zpp_inner = null;
			o1.outer = null;
		}
		o1._isimmutable = null;
		o1._validate = null;
		o1._invalidate = null;
		o1.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o1;
		return ret;
	}
};
zpp_$nape_geom_ZPP_$Monotone.above = function(p,q) {
	return zpp_$nape_geom_ZPP_$Monotone.below(q,p);
};
zpp_$nape_geom_ZPP_$Monotone.left_vertex = function(p) {
	var pre = p.prev;
	return pre.y > p.y || pre.y == p.y && p.next.y < p.y;
};
zpp_$nape_geom_ZPP_$Monotone.decompose = function(P,poly) {
	if(poly == null) poly = new zpp_$nape_geom_ZPP_$PartitionedPoly(P); else poly.init(P);
	if(poly.vertices == null) return poly;
	if(zpp_$nape_geom_ZPP_$Monotone.queue == null) zpp_$nape_geom_ZPP_$Monotone.queue = new zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex();
	var F = poly.vertices;
	var L = poly.vertices;
	if(F != null) {
		var nite = F;
		do {
			var p = nite;
			zpp_$nape_geom_ZPP_$Monotone.queue.add(p);
			var ux = 0.0;
			var uy = 0.0;
			ux = p.next.x - p.x;
			uy = p.next.y - p.y;
			var vx = 0.0;
			var vy = 0.0;
			vx = p.prev.x - p.x;
			vy = p.prev.y - p.y;
			var cx = vy * ux - vx * uy > 0.0;
			if(zpp_$nape_geom_ZPP_$Monotone.below(p.prev,p)) {
				if(zpp_$nape_geom_ZPP_$Monotone.below(p.next,p)) {
					if(cx) p.type = 0; else p.type = 3;
				} else p.type = 4;
			} else if(zpp_$nape_geom_ZPP_$Monotone.below(p,p.next)) {
				if(cx) p.type = 1; else p.type = 2;
			} else p.type = 4;
			nite = nite.next;
		} while(nite != L);
	}
	var xxlist = zpp_$nape_geom_ZPP_$Monotone.queue;
	if(!(xxlist.head == null) && xxlist.head.next != null) {
		var head = xxlist.head;
		var tail = null;
		var left = null;
		var right = null;
		var nxt = null;
		var listSize = 1;
		var numMerges;
		var leftSize;
		var rightSize;
		do {
			numMerges = 0;
			left = head;
			tail = head = null;
			while(left != null) {
				numMerges++;
				right = left;
				leftSize = 0;
				rightSize = listSize;
				while(right != null && leftSize < listSize) {
					leftSize++;
					right = right.next;
				}
				while(leftSize > 0 || rightSize > 0 && right != null) {
					if(leftSize == 0) {
						nxt = right;
						right = right.next;
						rightSize--;
					} else if(rightSize == 0 || right == null) {
						nxt = left;
						left = left.next;
						leftSize--;
					} else if(zpp_$nape_geom_ZPP_$Monotone.above(left.elt,right.elt)) {
						nxt = left;
						left = left.next;
						leftSize--;
					} else {
						nxt = right;
						right = right.next;
						rightSize--;
					}
					if(tail != null) tail.next = nxt; else head = nxt;
					tail = nxt;
				}
				left = right;
			}
			tail.next = null;
			listSize <<= 1;
		} while(numMerges > 1);
		xxlist.head = head;
		xxlist.modified = true;
		xxlist.pushmod = true;
	}
	if(zpp_$nape_geom_ZPP_$Monotone.edges == null) {
		if(zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool == null) zpp_$nape_geom_ZPP_$Monotone.edges = new zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex(); else {
			zpp_$nape_geom_ZPP_$Monotone.edges = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool;
			zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool = zpp_$nape_geom_ZPP_$Monotone.edges.next;
			zpp_$nape_geom_ZPP_$Monotone.edges.next = null;
		}
		null;
		zpp_$nape_geom_ZPP_$Monotone.edges.lt = zpp_$nape_geom_ZPP_$PartitionVertex.edge_lt;
		zpp_$nape_geom_ZPP_$Monotone.edges.swapped = zpp_$nape_geom_ZPP_$PartitionVertex.edge_swap;
	}
	while(!(zpp_$nape_geom_ZPP_$Monotone.queue.head == null)) {
		var v = zpp_$nape_geom_ZPP_$Monotone.queue.pop_unsafe();
		var _g = v.type;
		switch(_g) {
		case 0:
			v.helper = v;
			v.node = zpp_$nape_geom_ZPP_$Monotone.edges.insert(v);
			break;
		case 1:
			var e = v.prev;
			if(e.helper == null) throw new js__$Boot_HaxeError("Fatal error (1): Polygon is not weakly-simple and clockwise");
			if(e.helper.type == 2) poly.add_diagonal(v,e.helper);
			zpp_$nape_geom_ZPP_$Monotone.edges.remove_node(e.node);
			e.helper = null;
			break;
		case 3:
			var e1;
			var ret = null;
			if(!zpp_$nape_geom_ZPP_$Monotone.edges.empty()) {
				var set_ite = zpp_$nape_geom_ZPP_$Monotone.edges.parent;
				while(set_ite.prev != null) set_ite = set_ite.prev;
				while(set_ite != null) {
					var elt = set_ite.data;
					if(!zpp_$nape_geom_ZPP_$PartitionVertex.vert_lt(elt,v)) {
						ret = elt;
						break;
					}
					if(set_ite.next != null) {
						set_ite = set_ite.next;
						while(set_ite.prev != null) set_ite = set_ite.prev;
					} else {
						while(set_ite.parent != null && set_ite == set_ite.parent.next) set_ite = set_ite.parent;
						set_ite = set_ite.parent;
					}
				}
			}
			e1 = ret;
			if(e1 != null) {
				if(e1.helper == null) throw new js__$Boot_HaxeError("Fatal error (2): Polygon is not weakly-simple and clockwise");
				poly.add_diagonal(v,e1.helper);
				e1.helper = v;
			}
			v.node = zpp_$nape_geom_ZPP_$Monotone.edges.insert(v);
			v.helper = v;
			break;
		case 2:
			var e2 = v.prev;
			if(e2.helper == null) throw new js__$Boot_HaxeError("Fatal error (3): Polygon is not weakly-simple and clockwise");
			if(e2.helper.type == 2) poly.add_diagonal(v,e2.helper);
			zpp_$nape_geom_ZPP_$Monotone.edges.remove_node(e2.node);
			e2.helper = null;
			var e3;
			var ret1 = null;
			if(!zpp_$nape_geom_ZPP_$Monotone.edges.empty()) {
				var set_ite1 = zpp_$nape_geom_ZPP_$Monotone.edges.parent;
				while(set_ite1.prev != null) set_ite1 = set_ite1.prev;
				while(set_ite1 != null) {
					var elt1 = set_ite1.data;
					if(!zpp_$nape_geom_ZPP_$PartitionVertex.vert_lt(elt1,v)) {
						ret1 = elt1;
						break;
					}
					if(set_ite1.next != null) {
						set_ite1 = set_ite1.next;
						while(set_ite1.prev != null) set_ite1 = set_ite1.prev;
					} else {
						while(set_ite1.parent != null && set_ite1 == set_ite1.parent.next) set_ite1 = set_ite1.parent;
						set_ite1 = set_ite1.parent;
					}
				}
			}
			e3 = ret1;
			if(e3 != null) {
				if(e3.helper == null) throw new js__$Boot_HaxeError("Fatal error (4): Polygon is not weakly-simple and clockwise");
				if(e3.helper.type == 2) poly.add_diagonal(v,e3.helper);
				e3.helper = v;
			}
			break;
		case 4:
			var pre = v.prev;
			if(zpp_$nape_geom_ZPP_$Monotone.left_vertex(v)) {
				if(pre.helper == null) throw new js__$Boot_HaxeError("Fatal error (5): Polygon is not weakly-simple and clockwise");
				if(pre.helper.type == 2) poly.add_diagonal(v,pre.helper);
				zpp_$nape_geom_ZPP_$Monotone.edges.remove_node(pre.node);
				pre.helper = null;
				v.node = zpp_$nape_geom_ZPP_$Monotone.edges.insert(v);
				v.helper = v;
			} else {
				var e4;
				var ret2 = null;
				if(!zpp_$nape_geom_ZPP_$Monotone.edges.empty()) {
					var set_ite2 = zpp_$nape_geom_ZPP_$Monotone.edges.parent;
					while(set_ite2.prev != null) set_ite2 = set_ite2.prev;
					while(set_ite2 != null) {
						var elt2 = set_ite2.data;
						if(!zpp_$nape_geom_ZPP_$PartitionVertex.vert_lt(elt2,v)) {
							ret2 = elt2;
							break;
						}
						if(set_ite2.next != null) {
							set_ite2 = set_ite2.next;
							while(set_ite2.prev != null) set_ite2 = set_ite2.prev;
						} else {
							while(set_ite2.parent != null && set_ite2 == set_ite2.parent.next) set_ite2 = set_ite2.parent;
							set_ite2 = set_ite2.parent;
						}
					}
				}
				e4 = ret2;
				if(e4 == null || e4.helper == null) throw new js__$Boot_HaxeError("Fatal error (6): Polygon is not weakly-simple and clockwise");
				if(e4.helper.type == 2) poly.add_diagonal(v,e4.helper);
				e4.helper = v;
			}
			break;
		}
	}
	return poly;
};
var zpp_$nape_geom_ZPP_$PartitionVertex = function() {
	this.node = null;
	this.prev = null;
	this.next = null;
	this.rightchain = false;
	this.helper = null;
	this.type = 0;
	this.diagonals = null;
	this.forced = false;
	this.y = 0.0;
	this.x = 0.0;
	this.mag = 0;
	this.id = 0;
	this.id = zpp_$nape_geom_ZPP_$PartitionVertex.nextId++;
	this.diagonals = new zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex();
};
$hxClasses["zpp_nape.geom.ZPP_PartitionVertex"] = zpp_$nape_geom_ZPP_$PartitionVertex;
zpp_$nape_geom_ZPP_$PartitionVertex.__name__ = ["zpp_nape","geom","ZPP_PartitionVertex"];
zpp_$nape_geom_ZPP_$PartitionVertex.get = function(x) {
	var ret;
	if(zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$PartitionVertex(); else {
		ret = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
		zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = ret.next;
		ret.next = null;
	}
	null;
	ret.x = x.x;
	ret.y = x.y;
	return ret;
};
zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance = function(edge,vert) {
	var flip = edge.next.y > edge.y;
	var ux = 0.0;
	var uy = 0.0;
	ux = edge.next.x - edge.x;
	uy = edge.next.y - edge.y;
	var vx = 0.0;
	var vy = 0.0;
	vx = vert.x - edge.x;
	vy = vert.y - edge.y;
	return (flip?-1.0:1.0) * (vy * ux - vx * uy);
};
zpp_$nape_geom_ZPP_$PartitionVertex.vert_lt = function(edge,vert) {
	if(vert == edge || vert == edge.next) return true; else if(edge.y == edge.next.y) return (function($this) {
		var $r;
		var x = edge.x;
		var y = edge.next.x;
		$r = x < y?x:y;
		return $r;
	}(this)) <= vert.x; else return zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(edge,vert) <= 0.0;
};
zpp_$nape_geom_ZPP_$PartitionVertex.edge_swap = function(p,q) {
	var t = p.node;
	p.node = q.node;
	q.node = t;
};
zpp_$nape_geom_ZPP_$PartitionVertex.edge_lt = function(p,q) {
	if(p == q && p.next == q.next) return false;
	if(p == q.next) return !zpp_$nape_geom_ZPP_$PartitionVertex.vert_lt(p,q); else if(q == p.next) return zpp_$nape_geom_ZPP_$PartitionVertex.vert_lt(q,p); else if(p.y == p.next.y) if(q.y == q.next.y) return (function($this) {
		var $r;
		var x = p.x;
		var y = p.next.x;
		$r = x > y?x:y;
		return $r;
	}(this)) > (function($this) {
		var $r;
		var x1 = q.x;
		var y1 = q.next.x;
		$r = x1 > y1?x1:y1;
		return $r;
	}(this)); else return zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(q,p) > 0.0 || zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(q,p.next) > 0.0; else {
		var qRight = zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(p,q);
		var qNextRight = zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(p,q.next);
		if(qRight == 0 && qNextRight == 0) return (function($this) {
			var $r;
			var x2 = p.x;
			var y2 = p.next.x;
			$r = x2 > y2?x2:y2;
			return $r;
		}(this)) > (function($this) {
			var $r;
			var x3 = q.x;
			var y3 = q.next.x;
			$r = x3 > y3?x3:y3;
			return $r;
		}(this));
		if(qRight * qNextRight >= 0) return qRight < 0 || qNextRight < 0;
		var pRight = zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(q,p);
		var pNextRight = zpp_$nape_geom_ZPP_$PartitionVertex.rightdistance(q,p.next);
		if(pRight * pNextRight >= 0) return pRight > 0 || pNextRight > 0;
		return false;
	}
};
zpp_$nape_geom_ZPP_$PartitionVertex.prototype = {
	copy: function() {
		var ret;
		if(zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$PartitionVertex(); else {
			ret = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
			zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.x = this.x;
		ret.y = this.y;
		ret.forced = this.forced;
		return ret;
	}
	,sort: function() {
		var ux = 0.0;
		var uy = 0.0;
		var vx = 0.0;
		var vy = 0.0;
		var vorient;
		ux = this.prev.x - this.x;
		uy = this.prev.y - this.y;
		vx = this.next.x - this.x;
		vy = this.next.y - this.y;
		var ret = vy * ux - vx * uy;
		if(ret > 0) vorient = -1; else if(ret == 0) vorient = 0; else vorient = 1;
		var xxlist = this.diagonals;
		if(!(xxlist.head == null) && xxlist.head.next != null) {
			var head = xxlist.head;
			var tail = null;
			var left = null;
			var right = null;
			var nxt = null;
			var listSize = 1;
			var numMerges;
			var leftSize;
			var rightSize;
			do {
				numMerges = 0;
				left = head;
				tail = head = null;
				while(left != null) {
					numMerges++;
					right = left;
					leftSize = 0;
					rightSize = listSize;
					while(right != null && leftSize < listSize) {
						leftSize++;
						right = right.next;
					}
					while(leftSize > 0 || rightSize > 0 && right != null) {
						if(leftSize == 0) {
							nxt = right;
							right = right.next;
							rightSize--;
						} else if(rightSize == 0 || right == null) {
							nxt = left;
							left = left.next;
							leftSize--;
						} else if(vorient == 1?(function($this) {
							var $r;
							{
								ux = left.elt.x - $this.x;
								uy = left.elt.y - $this.y;
							}
							{
								vx = right.elt.x - $this.x;
								vy = right.elt.y - $this.y;
							}
							var ret1 = vy * ux - vx * uy;
							$r = ret1 > 0?-1:ret1 == 0?0:1;
							return $r;
						}(this)) == 1:(function($this) {
							var $r;
							var d1;
							{
								ux = $this.prev.x - $this.x;
								uy = $this.prev.y - $this.y;
								vx = left.elt.x - $this.x;
								vy = left.elt.y - $this.y;
								var ret2 = vy * ux - vx * uy;
								if(ret2 > 0) d1 = -1; else if(ret2 == 0) d1 = 0; else d1 = 1;
							}
							var d2;
							{
								ux = $this.prev.x - $this.x;
								uy = $this.prev.y - $this.y;
								vx = right.elt.x - $this.x;
								vy = right.elt.y - $this.y;
								var ret3 = vy * ux - vx * uy;
								if(ret3 > 0) d2 = -1; else if(ret3 == 0) d2 = 0; else d2 = 1;
							}
							$r = d1 * d2 == 1 || d1 * d2 == 0 && (d1 == 1 || d2 == 1)?(function($this) {
								var $r;
								{
									ux = left.elt.x - $this.x;
									uy = left.elt.y - $this.y;
								}
								{
									vx = right.elt.x - $this.x;
									vy = right.elt.y - $this.y;
								}
								var ret4 = vy * ux - vx * uy;
								$r = ret4 > 0?-1:ret4 == 0?0:1;
								return $r;
							}($this)) == 1:d1 == -1 || d2 == -1?d2 == -1:d1 == 0 && d2 == 0?(function($this) {
								var $r;
								{
									ux = $this.x - $this.prev.x;
									uy = $this.y - $this.prev.y;
								}
								{
									vx = left.elt.x - $this.x;
									vy = left.elt.y - $this.y;
								}
								var d11 = ux * vx + uy * vy;
								{
									vx = right.elt.x - $this.x;
									vy = right.elt.y - $this.y;
								}
								var d21 = ux * vx + uy * vy;
								$r = d11 < 0 && d21 > 0?true:d21 < 0 && d11 > 0?false:true;
								return $r;
							}($this)):true;
							return $r;
						}(this))) {
							nxt = left;
							left = left.next;
							leftSize--;
						} else {
							nxt = right;
							right = right.next;
							rightSize--;
						}
						if(tail != null) tail.next = nxt; else head = nxt;
						tail = nxt;
					}
					left = right;
				}
				tail.next = null;
				listSize <<= 1;
			} while(numMerges > 1);
			xxlist.head = head;
			xxlist.modified = true;
			xxlist.pushmod = true;
		}
	}
	,__class__: zpp_$nape_geom_ZPP_$PartitionVertex
};
var zpp_$nape_geom_ZPP_$PartitionedPoly = function(P) {
	this.next = null;
	this.vertices = null;
	this.init(P);
};
$hxClasses["zpp_nape.geom.ZPP_PartitionedPoly"] = zpp_$nape_geom_ZPP_$PartitionedPoly;
zpp_$nape_geom_ZPP_$PartitionedPoly.__name__ = ["zpp_nape","geom","ZPP_PartitionedPoly"];
zpp_$nape_geom_ZPP_$PartitionedPoly.prototype = {
	eq: function(a,b) {
		return zpp_$nape_geom_ZPP_$VecMath.vec_dsq(a.x,a.y,b.x,b.y) < nape_Config.epsilon * nape_Config.epsilon;
	}
	,init: function(P) {
		if(P == null) return;
		var cw;
		cw = (function($this) {
			var $r;
			var area = 0.0;
			{
				var F = P;
				var L = P;
				if(F != null) {
					var nite = F;
					do {
						var v = nite;
						area += v.x * (v.next.y - v.prev.y);
						nite = nite.next;
					} while(nite != L);
				}
			}
			$r = area * 0.5;
			return $r;
		}(this)) > 0.0;
		var p = P;
		do {
			if(cw) {
				var obj = zpp_$nape_geom_ZPP_$PartitionVertex.get(p);
				if(this.vertices == null) this.vertices = obj.prev = obj.next = obj; else {
					obj.prev = this.vertices;
					obj.next = this.vertices.next;
					this.vertices.next.prev = obj;
					this.vertices.next = obj;
				}
				this.vertices = obj;
			} else {
				var obj1 = zpp_$nape_geom_ZPP_$PartitionVertex.get(p);
				if(this.vertices == null) this.vertices = obj1.prev = obj1.next = obj1; else {
					obj1.next = this.vertices;
					obj1.prev = this.vertices.prev;
					this.vertices.prev.next = obj1;
					this.vertices.prev = obj1;
				}
				this.vertices = obj1;
			}
			this.vertices.forced = p.forced;
			p = p.next;
		} while(p != P);
		this.remove_collinear_vertices();
	}
	,remove_collinear_vertices: function() {
		var p = this.vertices;
		var skip = true;
		while(skip || p != this.vertices) {
			skip = false;
			if(this.eq(p,p.next)) {
				if(p == this.vertices) {
					this.vertices = p.next;
					skip = true;
				}
				if(p.forced) p.next.forced = true;
				if(p != null && p.prev == p) {
					p.next = p.prev = null;
					var o = p;
					o.helper = null;
					null;
					o.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
					zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o;
					p = p = null;
				} else {
					var retnodes = p.next;
					p.prev.next = p.next;
					p.next.prev = p.prev;
					p.next = p.prev = null;
					var o1 = p;
					o1.helper = null;
					null;
					o1.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
					zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o1;
					p = null;
					p = retnodes;
				}
				if(p == null) {
					this.vertices = null;
					break;
				}
			} else p = p.next;
		}
		if(this.vertices == null) return true;
		var removed;
		do {
			removed = false;
			p = this.vertices;
			skip = true;
			while(skip || p != this.vertices) {
				skip = false;
				var pre = p.prev;
				var ux = 0.0;
				var uy = 0.0;
				ux = p.x - pre.x;
				uy = p.y - pre.y;
				var vx = 0.0;
				var vy = 0.0;
				vx = p.next.x - p.x;
				vy = p.next.y - p.y;
				var crs = vy * ux - vx * uy;
				if(crs * crs >= nape_Config.epsilon * nape_Config.epsilon) p = p.next; else {
					if(p == this.vertices) {
						this.vertices = p.next;
						skip = true;
					}
					if(p != null && p.prev == p) {
						p.next = p.prev = null;
						var o2 = p;
						o2.helper = null;
						null;
						o2.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
						zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o2;
						p = p = null;
					} else {
						var retnodes1 = p.next;
						p.prev.next = p.next;
						p.next.prev = p.prev;
						p.next = p.prev = null;
						var o3 = p;
						o3.helper = null;
						null;
						o3.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
						zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o3;
						p = null;
						p = retnodes1;
					}
					removed = true;
					if(p == null) {
						removed = false;
						this.vertices = null;
						break;
					}
				}
			}
		} while(removed);
		return this.vertices == null;
	}
	,add_diagonal: function(p,q) {
		p.diagonals.add(q);
		q.diagonals.add(p);
		p.forced = q.forced = true;
	}
	,extract_partitions: function(ret) {
		if(ret == null) ret = new zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly();
		if(this.vertices != null) {
			var F = this.vertices;
			var L = this.vertices;
			if(F != null) {
				var nite = F;
				do {
					var c = nite;
					c.sort();
					nite = nite.next;
				} while(nite != L);
			}
			this.pull_partitions(this.vertices,ret);
			while(!(this.vertices == null)) if(this.vertices != null && this.vertices.prev == this.vertices) {
				this.vertices.next = this.vertices.prev = null;
				var o = this.vertices;
				o.helper = null;
				null;
				o.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
				zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o;
				this.vertices = this.vertices = null;
			} else {
				var retnodes = this.vertices.next;
				this.vertices.prev.next = this.vertices.next;
				this.vertices.next.prev = this.vertices.prev;
				this.vertices.next = this.vertices.prev = null;
				var o1 = this.vertices;
				o1.helper = null;
				null;
				o1.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
				zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o1;
				this.vertices = null;
				this.vertices = retnodes;
			}
			var pre = null;
			var cx_ite = ret.head;
			while(cx_ite != null) {
				var p = cx_ite.elt;
				if(p.remove_collinear_vertices()) {
					ret.erase(pre);
					continue;
				}
				pre = cx_ite;
				cx_ite = cx_ite.next;
			}
		}
		return ret;
	}
	,pull_partitions: function(start,ret) {
		var poly;
		if(zpp_$nape_geom_ZPP_$PartitionedPoly.zpp_pool == null) poly = new zpp_$nape_geom_ZPP_$PartitionedPoly(); else {
			poly = zpp_$nape_geom_ZPP_$PartitionedPoly.zpp_pool;
			zpp_$nape_geom_ZPP_$PartitionedPoly.zpp_pool = poly.next;
			poly.next = null;
		}
		null;
		var next = start;
		do {
			var obj = next.copy();
			if(poly.vertices == null) poly.vertices = obj.prev = obj.next = obj; else {
				obj.prev = poly.vertices;
				obj.next = poly.vertices.next;
				poly.vertices.next.prev = obj;
				poly.vertices.next = obj;
			}
			poly.vertices = obj;
			poly.vertices.forced = next.forced;
			if(!(next.diagonals.head == null)) {
				var diag = next.diagonals.inlined_pop_unsafe();
				if(diag == start) break; else next = this.pull_partitions(next,ret);
			} else next = next.next;
		} while(next != start);
		if((function($this) {
			var $r;
			var area = 0.0;
			{
				var F = poly.vertices;
				var L = poly.vertices;
				if(F != null) {
					var nite = F;
					do {
						var v = nite;
						area += v.x * (v.next.y - v.prev.y);
						nite = nite.next;
					} while(nite != L);
				}
			}
			$r = area * 0.5;
			return $r;
		}(this)) != 0) ret.add(poly);
		return next;
	}
	,extract: function(ret) {
		if(ret == null) ret = new zpp_$nape_util_ZNPList_$ZPP_$GeomVert();
		if(this.vertices != null) {
			var F = this.vertices;
			var L = this.vertices;
			if(F != null) {
				var nite = F;
				do {
					var c = nite;
					c.sort();
					nite = nite.next;
				} while(nite != L);
			}
			this.pull(this.vertices,ret);
			while(!(this.vertices == null)) if(this.vertices != null && this.vertices.prev == this.vertices) {
				this.vertices.next = this.vertices.prev = null;
				var o = this.vertices;
				o.helper = null;
				null;
				o.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
				zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o;
				this.vertices = this.vertices = null;
			} else {
				var retnodes = this.vertices.next;
				this.vertices.prev.next = this.vertices.next;
				this.vertices.next.prev = this.vertices.prev;
				this.vertices.next = this.vertices.prev = null;
				var o1 = this.vertices;
				o1.helper = null;
				null;
				o1.next = zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool;
				zpp_$nape_geom_ZPP_$PartitionVertex.zpp_pool = o1;
				this.vertices = null;
				this.vertices = retnodes;
			}
		}
		return ret;
	}
	,pull: function(start,ret) {
		var poly = null;
		var next = start;
		do {
			var obj = zpp_$nape_geom_ZPP_$GeomVert.get(next.x,next.y);
			if(poly == null) poly = obj.prev = obj.next = obj; else {
				obj.prev = poly;
				obj.next = poly.next;
				poly.next.prev = obj;
				poly.next = obj;
			}
			poly = obj;
			poly.forced = next.forced;
			if(!(next.diagonals.head == null)) {
				var diag = next.diagonals.inlined_pop_unsafe();
				if(diag == start) break; else next = this.pull(next,ret);
			} else next = next.next;
		} while(next != start);
		var area;
		var area1 = 0.0;
		var F = poly;
		var L = poly;
		if(F != null) {
			var nite = F;
			do {
				var v = nite;
				area1 += v.x * (v.next.y - v.prev.y);
				nite = nite.next;
			} while(nite != L);
		}
		area = area1 * 0.5;
		if(area * area >= nape_Config.epsilon * nape_Config.epsilon) {
			if(!(function($this) {
				var $r;
				var p = poly;
				var skip = true;
				while(skip || p != poly) {
					skip = false;
					if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(p.x,p.y,p.next.x,p.next.y) < nape_Config.epsilon * nape_Config.epsilon) {
						if(p == poly) {
							poly = p.next;
							skip = true;
						}
						if(p.forced) p.next.forced = true;
						if(p != null && p.prev == p) {
							p.next = p.prev = null;
							p = p = null;
						} else {
							var retnodes = p.next;
							p.prev.next = p.next;
							p.next.prev = p.prev;
							p.next = p.prev = null;
							p = null;
							p = retnodes;
						}
						if(p == null) {
							poly = null;
							break;
						}
					} else p = p.next;
				}
				if(poly != null) {
					var removed;
					do {
						removed = false;
						p = poly;
						skip = true;
						while(skip || p != poly) {
							skip = false;
							var pre = p.prev;
							var ux = 0.0;
							var uy = 0.0;
							ux = p.x - pre.x;
							uy = p.y - pre.y;
							var vx = 0.0;
							var vy = 0.0;
							vx = p.next.x - p.x;
							vy = p.next.y - p.y;
							var crs = vy * ux - vx * uy;
							if(crs * crs >= nape_Config.epsilon * nape_Config.epsilon) p = p.next; else {
								if(p == poly) {
									poly = p.next;
									skip = true;
								}
								if(p != null && p.prev == p) {
									p.next = p.prev = null;
									p = p = null;
								} else {
									var retnodes1 = p.next;
									p.prev.next = p.next;
									p.next.prev = p.prev;
									p.next = p.prev = null;
									p = null;
									p = retnodes1;
								}
								removed = true;
								if(p == null) {
									removed = false;
									poly = null;
									break;
								}
							}
						}
					} while(removed);
				}
				$r = poly == null;
				return $r;
			}(this))) ret.add(poly);
		}
		return next;
	}
	,__class__: zpp_$nape_geom_ZPP_$PartitionedPoly
};
var zpp_$nape_geom_ZPP_$ToiEvent = function() {
	this.kinematic = false;
	this.failed = false;
	this.slipped = false;
	this.axis = null;
	this.c2 = null;
	this.c1 = null;
	this.frozen2 = false;
	this.frozen1 = false;
	this.arbiter = null;
	this.s2 = null;
	this.s1 = null;
	this.toi = 0.0;
	this.next = null;
	this.c1 = new zpp_$nape_geom_ZPP_$Vec2();
	this.c2 = new zpp_$nape_geom_ZPP_$Vec2();
	this.axis = new zpp_$nape_geom_ZPP_$Vec2();
};
$hxClasses["zpp_nape.geom.ZPP_ToiEvent"] = zpp_$nape_geom_ZPP_$ToiEvent;
zpp_$nape_geom_ZPP_$ToiEvent.__name__ = ["zpp_nape","geom","ZPP_ToiEvent"];
zpp_$nape_geom_ZPP_$ToiEvent.prototype = {
	__class__: zpp_$nape_geom_ZPP_$ToiEvent
};
var zpp_$nape_geom_ZPP_$SweepDistance = function() { };
$hxClasses["zpp_nape.geom.ZPP_SweepDistance"] = zpp_$nape_geom_ZPP_$SweepDistance;
zpp_$nape_geom_ZPP_$SweepDistance.__name__ = ["zpp_nape","geom","ZPP_SweepDistance"];
zpp_$nape_geom_ZPP_$SweepDistance.dynamicSweep = function(toi,timeStep,lowerBound,negRadius,userAPI) {
	if(userAPI == null) userAPI = false;
	var s1 = toi.s1;
	var s2 = toi.s2;
	var b1 = s1.body;
	var b2 = s2.body;
	var deltax = 0.0;
	var deltay = 0.0;
	deltax = b2.velx - b1.velx;
	deltay = b2.vely - b1.vely;
	var ang1 = b1.angvel;
	if(ang1 < 0) ang1 = -ang1;
	var ang2 = b2.angvel;
	if(ang2 < 0) ang2 = -ang2;
	var angBias = s1.sweepCoef * ang1 + s2.sweepCoef * ang2;
	if(!userAPI && !toi.kinematic && deltax * deltax + deltay * deltay < nape_Config.dynamicSweepLinearThreshold * nape_Config.dynamicSweepLinearThreshold && angBias < nape_Config.dynamicSweepAngularThreshold) {
		toi.toi = -1;
		toi.failed = true;
		return;
	}
	var c1 = toi.c1;
	var c2 = toi.c2;
	var axis = toi.axis;
	var curTOI = lowerBound;
	var curIter = 0;
	while(true) {
		b1.sweepIntegrate(curTOI * timeStep);
		b1.sweepValidate(s1);
		b2.sweepIntegrate(curTOI * timeStep);
		b2.sweepValidate(s2);
		var sep = zpp_$nape_geom_ZPP_$SweepDistance.distance(s1,s2,c1,c2,axis,null) + negRadius;
		var dot = deltax * axis.x + deltay * axis.y;
		if(sep < nape_Config.distanceThresholdCCD) {
			if(userAPI) break;
			var d1x = 0.0;
			var d1y = 0.0;
			d1x = c1.x - b1.posx;
			d1y = c1.y - b1.posy;
			var d2x = 0.0;
			var d2y = 0.0;
			d2x = c2.x - b2.posx;
			d2y = c2.y - b2.posy;
			var proj = dot - b1.sweep_angvel * (axis.y * d1x - axis.x * d1y) + b2.sweep_angvel * (axis.y * d2x - axis.x * d2y);
			if(proj > 0) toi.slipped = true;
			if(proj <= 0 || sep < nape_Config.distanceThresholdCCD * 0.5) break;
		}
		var denom = (angBias - dot) * timeStep;
		if(denom <= 0) {
			curTOI = -1;
			break;
		}
		var delta = sep / denom;
		if(delta < 1e-6) delta = 1e-6;
		curTOI += delta;
		if(curTOI >= 1) {
			curTOI = 1;
			b1.sweepIntegrate(curTOI * timeStep);
			b1.sweepValidate(s1);
			b2.sweepIntegrate(curTOI * timeStep);
			b2.sweepValidate(s2);
			var sep1 = zpp_$nape_geom_ZPP_$SweepDistance.distance(s1,s2,c1,c2,axis,null) + negRadius;
			var dot1 = deltax * axis.x + deltay * axis.y;
			if(sep1 < nape_Config.distanceThresholdCCD) {
				if(userAPI) break;
				var d1x1 = 0.0;
				var d1y1 = 0.0;
				d1x1 = c1.x - b1.posx;
				d1y1 = c1.y - b1.posy;
				var d2x1 = 0.0;
				var d2y1 = 0.0;
				d2x1 = c2.x - b2.posx;
				d2y1 = c2.y - b2.posy;
				var proj1 = dot1 - b1.sweep_angvel * (axis.y * d1x1 - axis.x * d1y1) + b2.sweep_angvel * (axis.y * d2x1 - axis.x * d2y1);
				if(proj1 > 0) toi.slipped = true;
				if(proj1 <= 0 || sep1 < nape_Config.distanceThresholdCCD * 0.5) break;
			}
			curTOI = -1;
			break;
		}
		if(++curIter >= 40) {
			if(sep > negRadius) toi.failed = true;
			break;
		}
	}
	toi.toi = curTOI;
};
zpp_$nape_geom_ZPP_$SweepDistance.staticSweep = function(toi,timeStep,lowerBound,negRadius) {
	var s1 = toi.s1;
	var s2 = toi.s2;
	var b1 = s1.body;
	var b2 = s2.body;
	var deltax = 0.0;
	var deltay = 0.0;
	deltax = -b1.velx;
	deltay = -b1.vely;
	var ang1 = b1.sweep_angvel;
	if(ang1 < 0) ang1 = -ang1;
	var angBias = s1.sweepCoef * ang1;
	var c1 = toi.c1;
	var c2 = toi.c2;
	var axis = toi.axis;
	var curTOI = lowerBound;
	var curIter = 0;
	while(true) {
		b1.sweepIntegrate(curTOI * timeStep);
		b1.sweepValidate(s1);
		var sep = zpp_$nape_geom_ZPP_$SweepDistance.distance(s1,s2,c1,c2,axis,null) + negRadius;
		var dot = deltax * axis.x + deltay * axis.y;
		if(sep < nape_Config.distanceThresholdCCD) {
			var d1x = 0.0;
			var d1y = 0.0;
			d1x = c1.x - b1.posx;
			d1y = c1.y - b1.posy;
			var proj = dot - b1.sweep_angvel * (axis.y * d1x - axis.x * d1y);
			if(proj > 0) toi.slipped = true;
			if(proj <= 0 || sep < nape_Config.distanceThresholdCCD * 0.5) break;
		}
		var denom = (angBias - dot) * timeStep;
		if(denom <= 0) {
			curTOI = -1;
			break;
		}
		var delta = sep / denom;
		if(delta < 1e-6) delta = 1e-6;
		curTOI += delta;
		if(curTOI >= 1) {
			curTOI = 1;
			b1.sweepIntegrate(curTOI * timeStep);
			b1.sweepValidate(s1);
			var sep1 = zpp_$nape_geom_ZPP_$SweepDistance.distance(s1,s2,c1,c2,axis,null) + negRadius;
			var dot1 = deltax * axis.x + deltay * axis.y;
			if(sep1 < nape_Config.distanceThresholdCCD) {
				var d1x1 = 0.0;
				var d1y1 = 0.0;
				d1x1 = c1.x - b1.posx;
				d1y1 = c1.y - b1.posy;
				var proj1 = dot1 - b1.sweep_angvel * (axis.y * d1x1 - axis.x * d1y1);
				if(proj1 > 0) toi.slipped = true;
				if(proj1 <= 0 || sep1 < nape_Config.distanceThresholdCCD * 0.5) break;
			}
			curTOI = -1;
			break;
		}
		if(++curIter >= 40) {
			if(sep > negRadius) toi.failed = true;
			break;
		}
	}
	toi.toi = curTOI;
};
zpp_$nape_geom_ZPP_$SweepDistance.distance = function(s1,s2,w1,w2,axis,upperBound) {
	if(upperBound == null) upperBound = 1e100;
	if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE && s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
		var c1 = s1.circle;
		var c2 = s2.circle;
		var dist;
		var nx = 0.0;
		var ny = 0.0;
		nx = c2.worldCOMx - c1.worldCOMx;
		ny = c2.worldCOMy - c1.worldCOMy;
		var len = Math.sqrt(nx * nx + ny * ny);
		dist = len - (c1.radius + c2.radius);
		if(dist < upperBound) {
			if(len == 0) {
				nx = 1;
				ny = 0;
			} else {
				var t = 1.0 / len;
				nx *= t;
				ny *= t;
			}
			var t1 = c1.radius;
			w1.x = c1.worldCOMx + nx * t1;
			w1.y = c1.worldCOMy + ny * t1;
			var t2 = -c2.radius;
			w2.x = c2.worldCOMx + nx * t2;
			w2.y = c2.worldCOMy + ny * t2;
			axis.x = nx;
			axis.y = ny;
		}
		return dist;
	} else {
		var swapped = false;
		if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE && s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
			var tmp = s1;
			s1 = s2;
			s2 = tmp;
			var tmp2 = w1;
			w1 = w2;
			w2 = tmp2;
			swapped = true;
		}
		if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON && s2.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
			var poly = s1.polygon;
			var circle = s2.circle;
			var best = -1e+100;
			var a0 = null;
			var cx_ite = poly.edges.head;
			while(cx_ite != null) {
				var a = cx_ite.elt;
				var dist1 = a.gnormx * circle.worldCOMx + a.gnormy * circle.worldCOMy - a.gprojection - circle.radius;
				if(dist1 > upperBound) {
					best = dist1;
					break;
				}
				if(dist1 > 0) {
					if(dist1 > best) {
						best = dist1;
						a0 = a;
					}
				} else if(best < 0 && dist1 > best) {
					best = dist1;
					a0 = a;
				}
				cx_ite = cx_ite.next;
			}
			if(best < upperBound) {
				var v0 = a0.gp0;
				var v1 = a0.gp1;
				var dt = circle.worldCOMy * a0.gnormx - circle.worldCOMx * a0.gnormy;
				if(dt <= v0.y * a0.gnormx - v0.x * a0.gnormy) {
					var nx1 = 0.0;
					var ny1 = 0.0;
					nx1 = circle.worldCOMx - v0.x;
					ny1 = circle.worldCOMy - v0.y;
					var len1 = Math.sqrt(nx1 * nx1 + ny1 * ny1);
					best = len1 - circle.radius;
					if(best < upperBound) {
						if(len1 == 0) {
							nx1 = 1;
							ny1 = 0;
						} else {
							var t3 = 1.0 / len1;
							nx1 *= t3;
							ny1 *= t3;
						}
						var t4 = 0;
						w1.x = v0.x + nx1 * t4;
						w1.y = v0.y + ny1 * t4;
						var t5 = -circle.radius;
						w2.x = circle.worldCOMx + nx1 * t5;
						w2.y = circle.worldCOMy + ny1 * t5;
						axis.x = nx1;
						axis.y = ny1;
					}
				} else if(dt >= v1.y * a0.gnormx - v1.x * a0.gnormy) {
					var nx2 = 0.0;
					var ny2 = 0.0;
					nx2 = circle.worldCOMx - v1.x;
					ny2 = circle.worldCOMy - v1.y;
					var len2 = Math.sqrt(nx2 * nx2 + ny2 * ny2);
					best = len2 - circle.radius;
					if(best < upperBound) {
						if(len2 == 0) {
							nx2 = 1;
							ny2 = 0;
						} else {
							var t6 = 1.0 / len2;
							nx2 *= t6;
							ny2 *= t6;
						}
						var t7 = 0;
						w1.x = v1.x + nx2 * t7;
						w1.y = v1.y + ny2 * t7;
						var t8 = -circle.radius;
						w2.x = circle.worldCOMx + nx2 * t8;
						w2.y = circle.worldCOMy + ny2 * t8;
						axis.x = nx2;
						axis.y = ny2;
					}
				} else {
					var t9 = -circle.radius;
					w2.x = circle.worldCOMx + a0.gnormx * t9;
					w2.y = circle.worldCOMy + a0.gnormy * t9;
					var t10 = -best;
					w1.x = w2.x + a0.gnormx * t10;
					w1.y = w2.y + a0.gnormy * t10;
					axis.x = a0.gnormx;
					axis.y = a0.gnormy;
				}
			}
			if(swapped) {
				axis.x = -axis.x;
				axis.y = -axis.y;
			}
			return best;
		} else {
			var p1 = s1.polygon;
			var p2 = s2.polygon;
			var best1 = -1e+100;
			var a1 = null;
			var a2 = null;
			var besti = 0;
			var cx_ite1 = p1.edges.head;
			while(cx_ite1 != null) {
				var a3 = cx_ite1.elt;
				var min = 1e100;
				var cx_ite2 = p2.gverts.next;
				while(cx_ite2 != null) {
					var v = cx_ite2;
					var k = a3.gnormx * v.x + a3.gnormy * v.y;
					if(k < min) min = k;
					cx_ite2 = cx_ite2.next;
				}
				min -= a3.gprojection;
				if(min > upperBound) {
					best1 = min;
					break;
				}
				if(min > 0) {
					if(min > best1) {
						best1 = min;
						a1 = a3;
						besti = 1;
					}
				} else if(best1 < 0 && min > best1) {
					best1 = min;
					a1 = a3;
					besti = 1;
				}
				cx_ite1 = cx_ite1.next;
			}
			if(best1 < upperBound) {
				var cx_ite3 = p2.edges.head;
				while(cx_ite3 != null) {
					var a4 = cx_ite3.elt;
					var min1 = 1e100;
					var cx_ite4 = p1.gverts.next;
					while(cx_ite4 != null) {
						var v2 = cx_ite4;
						var k1 = a4.gnormx * v2.x + a4.gnormy * v2.y;
						if(k1 < min1) min1 = k1;
						cx_ite4 = cx_ite4.next;
					}
					min1 -= a4.gprojection;
					if(min1 > upperBound) {
						best1 = min1;
						break;
					}
					if(min1 > 0) {
						if(min1 > best1) {
							best1 = min1;
							a2 = a4;
							besti = 2;
						}
					} else if(best1 < 0 && min1 > best1) {
						best1 = min1;
						a2 = a4;
						besti = 2;
					}
					cx_ite3 = cx_ite3.next;
				}
				if(best1 < upperBound) {
					var q1;
					var q2;
					var ax;
					if(besti == 1) {
						q1 = p1;
						q2 = p2;
						ax = a1;
					} else {
						q1 = p2;
						q2 = p1;
						ax = a2;
						var tmp1 = w1;
						w1 = w2;
						w2 = tmp1;
						swapped = !swapped;
					}
					var ay = null;
					var min2 = 1e100;
					var cx_ite5 = q2.edges.head;
					while(cx_ite5 != null) {
						var a5 = cx_ite5.elt;
						var k2 = ax.gnormx * a5.gnormx + ax.gnormy * a5.gnormy;
						if(k2 < min2) {
							min2 = k2;
							ay = a5;
						}
						cx_ite5 = cx_ite5.next;
					}
					if(swapped) {
						axis.x = -ax.gnormx;
						axis.y = -ax.gnormy;
					} else {
						axis.x = ax.gnormx;
						axis.y = ax.gnormy;
					}
					if(best1 >= 0) {
						var v01 = ax.gp0;
						var v11 = ax.gp1;
						var q0 = ay.gp0;
						var q11 = ay.gp1;
						var vx = 0.0;
						var vy = 0.0;
						var qx = 0.0;
						var qy = 0.0;
						vx = v11.x - v01.x;
						vy = v11.y - v01.y;
						qx = q11.x - q0.x;
						qy = q11.y - q0.y;
						var vdot = 1 / (vx * vx + vy * vy);
						var qdot = 1 / (qx * qx + qy * qy);
						var t11 = -(vx * (v01.x - q0.x) + vy * (v01.y - q0.y)) * vdot;
						var t21 = -(vx * (v01.x - q11.x) + vy * (v01.y - q11.y)) * vdot;
						var s11 = -(qx * (q0.x - v01.x) + qy * (q0.y - v01.y)) * qdot;
						var s21 = -(qx * (q0.x - v11.x) + qy * (q0.y - v11.y)) * qdot;
						if(t11 < 0) t11 = 0; else if(t11 > 1) t11 = 1;
						if(t21 < 0) t21 = 0; else if(t21 > 1) t21 = 1;
						if(s11 < 0) s11 = 0; else if(s11 > 1) s11 = 1;
						if(s21 < 0) s21 = 0; else if(s21 > 1) s21 = 1;
						var f1x = 0.0;
						var f1y = 0.0;
						var t12 = t11;
						f1x = v01.x + vx * t12;
						f1y = v01.y + vy * t12;
						var f2x = 0.0;
						var f2y = 0.0;
						var t13 = t21;
						f2x = v01.x + vx * t13;
						f2y = v01.y + vy * t13;
						var g1x = 0.0;
						var g1y = 0.0;
						var t14 = s11;
						g1x = q0.x + qx * t14;
						g1y = q0.y + qy * t14;
						var g2x = 0.0;
						var g2y = 0.0;
						var t15 = s21;
						g2x = q0.x + qx * t15;
						g2y = q0.y + qy * t15;
						var d1 = zpp_$nape_geom_ZPP_$VecMath.vec_dsq(f1x,f1y,q0.x,q0.y);
						var d2 = zpp_$nape_geom_ZPP_$VecMath.vec_dsq(f2x,f2y,q11.x,q11.y);
						var e1 = zpp_$nape_geom_ZPP_$VecMath.vec_dsq(g1x,g1y,v01.x,v01.y);
						var e2 = zpp_$nape_geom_ZPP_$VecMath.vec_dsq(g2x,g2y,v11.x,v11.y);
						var minfx = 0.0;
						var minfy = 0.0;
						var minq = null;
						if(d1 < d2) {
							minfx = f1x;
							minfy = f1y;
							minq = q0;
						} else {
							minfx = f2x;
							minfy = f2y;
							minq = q11;
							d1 = d2;
						}
						var mingx = 0.0;
						var mingy = 0.0;
						var minv = null;
						if(e1 < e2) {
							mingx = g1x;
							mingy = g1y;
							minv = v01;
						} else {
							mingx = g2x;
							mingy = g2y;
							minv = v11;
							e1 = e2;
						}
						if(d1 < e1) {
							w1.x = minfx;
							w1.y = minfy;
							w2.x = minq.x;
							w2.y = minq.y;
							best1 = Math.sqrt(d1);
						} else {
							w2.x = mingx;
							w2.y = mingy;
							w1.x = minv.x;
							w1.y = minv.y;
							best1 = Math.sqrt(e1);
						}
						if(best1 != 0) {
							axis.x = w2.x - w1.x;
							axis.y = w2.y - w1.y;
							var t16 = 1.0 / best1;
							axis.x *= t16;
							axis.y *= t16;
							if(swapped) {
								axis.x = -axis.x;
								axis.y = -axis.y;
							}
						}
						return best1;
					} else {
						var c0x = 0.0;
						var c0y = 0.0;
						c0x = ay.gp0.x;
						c0y = ay.gp0.y;
						var c1x = 0.0;
						var c1y = 0.0;
						c1x = ay.gp1.x;
						c1y = ay.gp1.y;
						var dvx = 0.0;
						var dvy = 0.0;
						dvx = c1x - c0x;
						dvy = c1y - c0y;
						var d0 = ax.gnormy * c0x - ax.gnormx * c0y;
						var d11 = ax.gnormy * c1x - ax.gnormx * c1y;
						var den = 1 / (d11 - d0);
						var t17 = (-ax.tp1 - d0) * den;
						if(t17 > nape_Config.epsilon) {
							var t19 = t17;
							c0x += dvx * t19;
							c0y += dvy * t19;
						}
						var t18 = (-ax.tp0 - d11) * den;
						if(t18 < -nape_Config.epsilon) {
							var t20 = t18;
							c1x += dvx * t20;
							c1y += dvy * t20;
						}
						var c0d = c0x * ax.gnormx + c0y * ax.gnormy - ax.gprojection;
						var c1d = c1x * ax.gnormx + c1y * ax.gnormy - ax.gprojection;
						if(c0d < c1d) {
							w2.x = c0x;
							w2.y = c0y;
							var t22 = -c0d;
							w1.x = w2.x + ax.gnormx * t22;
							w1.y = w2.y + ax.gnormy * t22;
							return c0d;
						} else {
							w2.x = c1x;
							w2.y = c1y;
							var t23 = -c1d;
							w1.x = w2.x + ax.gnormx * t23;
							w1.y = w2.y + ax.gnormy * t23;
							return c1d;
						}
					}
				} else return upperBound;
			} else return upperBound;
		}
	}
};
var zpp_$nape_geom_ZPP_$PartitionPair = function() {
	this.node = null;
	this.di = 0;
	this.id = 0;
	this.b = null;
	this.a = null;
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
};
$hxClasses["zpp_nape.geom.ZPP_PartitionPair"] = zpp_$nape_geom_ZPP_$PartitionPair;
zpp_$nape_geom_ZPP_$PartitionPair.__name__ = ["zpp_nape","geom","ZPP_PartitionPair"];
zpp_$nape_geom_ZPP_$PartitionPair.get = function(a,b) {
	var ret;
	if(zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool == null) ret = new zpp_$nape_geom_ZPP_$PartitionPair(); else {
		ret = zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool;
		zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool = ret.next;
		ret.next = null;
	}
	null;
	ret.a = a;
	ret.b = b;
	if(a.id < b.id) {
		ret.id = a.id;
		ret.di = b.id;
	} else {
		ret.id = b.id;
		ret.di = a.id;
	}
	return ret;
};
zpp_$nape_geom_ZPP_$PartitionPair.edge_swap = function(a,b) {
	var t = a.node;
	a.node = b.node;
	b.node = t;
};
zpp_$nape_geom_ZPP_$PartitionPair.edge_lt = function(a,b) {
	return a.id < b.id || a.id == b.id && a.di < b.di;
};
zpp_$nape_geom_ZPP_$PartitionPair.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		o._inuse = true;
		temp = o;
		temp.next = this.next;
		this.next = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.next;
		this.next = ret.next;
		ret._inuse = false;
		if(this.next == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.next;
		this.pop();
		return ret;
	}
	,__class__: zpp_$nape_geom_ZPP_$PartitionPair
};
var zpp_$nape_geom_ZPP_$Triangular = function() { };
$hxClasses["zpp_nape.geom.ZPP_Triangular"] = zpp_$nape_geom_ZPP_$Triangular;
zpp_$nape_geom_ZPP_$Triangular.__name__ = ["zpp_nape","geom","ZPP_Triangular"];
zpp_$nape_geom_ZPP_$Triangular.right_turn = function(a,b,c) {
	var ux = 0.0;
	var uy = 0.0;
	ux = c.x - b.x;
	uy = c.y - b.y;
	var vx = 0.0;
	var vy = 0.0;
	vx = b.x - a.x;
	vy = b.y - a.y;
	return vy * ux - vx * uy;
};
zpp_$nape_geom_ZPP_$Triangular.delaunay = function(A,B,C,D) {
	var ux = 0.0;
	var uy = 0.0;
	var vx = 0.0;
	var vy = 0.0;
	if((function($this) {
		var $r;
		{
			ux = C.x - B.x;
			uy = C.y - B.y;
		}
		{
			vx = B.x - A.x;
			vy = B.y - A.y;
		}
		$r = vy * ux - vx * uy >= 0;
		return $r;
	}(this)) || (function($this) {
		var $r;
		{
			ux = D.x - C.x;
			uy = D.y - C.y;
		}
		{
			vx = C.x - B.x;
			vy = C.y - B.y;
		}
		$r = vy * ux - vx * uy >= 0;
		return $r;
	}(this)) || (function($this) {
		var $r;
		{
			ux = A.x - D.x;
			uy = A.y - D.y;
		}
		{
			vx = D.x - C.x;
			vy = D.y - C.y;
		}
		$r = vy * ux - vx * uy >= 0;
		return $r;
	}(this)) || (function($this) {
		var $r;
		{
			ux = B.x - A.x;
			uy = B.y - A.y;
		}
		{
			vx = A.x - D.x;
			vy = A.y - D.y;
		}
		$r = vy * ux - vx * uy >= 0;
		return $r;
	}(this))) return true;
	return B.x * (C.y * D.mag - C.mag * D.y) - C.x * (B.y * D.mag - B.mag * D.y) + D.x * (B.y * C.mag - B.mag * C.y) - (A.x * (C.y * D.mag - C.mag * D.y) - C.x * (A.y * D.mag - A.mag * D.y) + D.x * (A.y * C.mag - A.mag * C.y)) + (A.x * (B.y * D.mag - B.mag * D.y) - B.x * (A.y * D.mag - A.mag * D.y) + D.x * (A.y * B.mag - A.mag * B.y)) - (A.x * (B.y * C.mag - B.mag * C.y) - B.x * (A.y * C.mag - A.mag * C.y) + C.x * (A.y * B.mag - A.mag * B.y)) > 0;
	return B.x * (C.y * D.mag - C.mag * D.y) + B.y * (C.mag * D.x - C.x * D.mag) + B.mag * (C.x * D.y - C.y * D.x) + A.x * (C.mag * D.y - C.y * D.mag + B.mag * (C.y - D.y) + B.y * (D.mag - C.mag)) + A.y * (C.x * D.mag - C.mag * D.x + B.mag * (D.x - C.x) + B.x * (C.mag - D.mag)) + A.mag * (C.y * D.x - C.x * D.y + B.x * (D.y - C.y) + B.y * (C.x - D.x)) > 0;
};
zpp_$nape_geom_ZPP_$Triangular.optimise = function(P) {
	var F = P.vertices;
	var L = P.vertices;
	if(F != null) {
		var nite = F;
		do {
			var p = nite;
			p.sort();
			p.mag = p.x * p.x + p.y * p.y;
			nite = nite.next;
		} while(nite != L);
	}
	if(zpp_$nape_geom_ZPP_$Triangular.edgeSet == null) {
		if(zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool == null) zpp_$nape_geom_ZPP_$Triangular.edgeSet = new zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair(); else {
			zpp_$nape_geom_ZPP_$Triangular.edgeSet = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool;
			zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool = zpp_$nape_geom_ZPP_$Triangular.edgeSet.next;
			zpp_$nape_geom_ZPP_$Triangular.edgeSet.next = null;
		}
		null;
		zpp_$nape_geom_ZPP_$Triangular.edgeSet.lt = zpp_$nape_geom_ZPP_$PartitionPair.edge_lt;
		zpp_$nape_geom_ZPP_$Triangular.edgeSet.swapped = zpp_$nape_geom_ZPP_$PartitionPair.edge_swap;
	}
	var edgeStack;
	if(zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool == null) edgeStack = new zpp_$nape_geom_ZPP_$PartitionPair(); else {
		edgeStack = zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool;
		zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool = edgeStack.next;
		edgeStack.next = null;
	}
	null;
	var F1 = P.vertices;
	var L1 = P.vertices;
	if(F1 != null) {
		var nite1 = F1;
		do {
			var p1 = nite1;
			var q0 = p1.next;
			p1.diagonals.reverse();
			var cx_ite = p1.diagonals.head;
			while(cx_ite != null) {
				var q = cx_ite.elt;
				if(q.id < p1.id) {
					q0 = q;
					cx_ite = cx_ite.next;
					continue;
				}
				var q1;
				if(cx_ite.next == null) q1 = p1.prev; else q1 = cx_ite.next.elt;
				if(!zpp_$nape_geom_ZPP_$Triangular.delaunay(p1,q0,q,q1)) {
					var edge = zpp_$nape_geom_ZPP_$PartitionPair.get(p1,q);
					edgeStack.add(edge);
					edge.node = zpp_$nape_geom_ZPP_$Triangular.edgeSet.insert(edge);
				}
				q0 = q;
				cx_ite = cx_ite.next;
			}
			nite1 = nite1.next;
		} while(nite1 != L1);
	}
	while(!(edgeStack.next == null)) {
		var edge1 = edgeStack.pop_unsafe();
		var A = edge1.a;
		var C = edge1.b;
		var B = A.next;
		var D = null;
		var cx_ite1 = A.diagonals.head;
		while(cx_ite1 != null) {
			var p2 = cx_ite1.elt;
			if(p2 == C) {
				cx_ite1 = cx_ite1.next;
				if(cx_ite1 == null) D = A.prev; else D = cx_ite1.elt;
				break;
			}
			B = p2;
			cx_ite1 = cx_ite1.next;
		}
		A.diagonals.remove(C);
		C.diagonals.remove(A);
		if(C == B.next) B.diagonals.add(D); else {
			var cx_ite2 = B.diagonals.head;
			while(cx_ite2 != null) {
				var p3 = cx_ite2.elt;
				if(p3 == C) {
					B.diagonals.insert(cx_ite2,D);
					break;
				}
				cx_ite2 = cx_ite2.next;
			}
		}
		if(A == D.next) D.diagonals.add(B); else {
			var cx_ite3 = D.diagonals.head;
			while(cx_ite3 != null) {
				var p4 = cx_ite3.elt;
				if(p4 == A) {
					D.diagonals.insert(cx_ite3,B);
					break;
				}
				cx_ite3 = cx_ite3.next;
			}
		}
		zpp_$nape_geom_ZPP_$Triangular.edgeSet.remove_node(edge1.node);
		var o = edge1;
		o.a = o.b = null;
		o.node = null;
		o.next = zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool;
		zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool = o;
	}
	var o1 = edgeStack;
	o1.a = o1.b = null;
	o1.node = null;
	o1.next = zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool;
	zpp_$nape_geom_ZPP_$PartitionPair.zpp_pool = o1;
};
zpp_$nape_geom_ZPP_$Triangular.triangulate = function(P) {
	var min = P.vertices;
	var max = P.vertices;
	var F = P.vertices.next;
	var L = P.vertices;
	if(F != null) {
		var nite = F;
		do {
			var p = nite;
			if(p.y < min.y || p.y == min.y && p.x < min.x) min = p;
			if(max.y < p.y || max.y == p.y && max.x < p.x) max = p;
			nite = nite.next;
		} while(nite != L);
	}
	if(zpp_$nape_geom_ZPP_$Triangular.queue == null) zpp_$nape_geom_ZPP_$Triangular.queue = new zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex();
	var rp = max.prev;
	var lp = max.next;
	zpp_$nape_geom_ZPP_$Triangular.queue.add(max);
	while(rp != min || lp != min) if(rp == min || lp != min && (rp.y < lp.y || rp.y == lp.y && rp.x < lp.x)) {
		zpp_$nape_geom_ZPP_$Triangular.queue.add(lp);
		lp.rightchain = false;
		lp = lp.next;
	} else {
		zpp_$nape_geom_ZPP_$Triangular.queue.add(rp);
		rp.rightchain = true;
		rp = rp.prev;
	}
	zpp_$nape_geom_ZPP_$Triangular.queue.add(min);
	if(zpp_$nape_geom_ZPP_$Triangular.stack == null) zpp_$nape_geom_ZPP_$Triangular.stack = new zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex();
	zpp_$nape_geom_ZPP_$Triangular.stack.add(zpp_$nape_geom_ZPP_$Triangular.queue.pop_unsafe());
	var pre = zpp_$nape_geom_ZPP_$Triangular.queue.pop_unsafe();
	zpp_$nape_geom_ZPP_$Triangular.stack.add(pre);
	while(true) {
		var p1 = zpp_$nape_geom_ZPP_$Triangular.queue.pop_unsafe();
		if(zpp_$nape_geom_ZPP_$Triangular.queue.head == null) break;
		if(p1.rightchain != zpp_$nape_geom_ZPP_$Triangular.stack.head.elt.rightchain) {
			while(true) {
				var s = zpp_$nape_geom_ZPP_$Triangular.stack.pop_unsafe();
				if(zpp_$nape_geom_ZPP_$Triangular.stack.head == null) break;
				P.add_diagonal(s,p1);
			}
			zpp_$nape_geom_ZPP_$Triangular.stack.add(pre);
		} else {
			var q = zpp_$nape_geom_ZPP_$Triangular.stack.pop_unsafe();
			while(!(zpp_$nape_geom_ZPP_$Triangular.stack.head == null)) {
				var s1 = zpp_$nape_geom_ZPP_$Triangular.stack.head.elt;
				var right = zpp_$nape_geom_ZPP_$Triangular.right_turn(s1,q,p1);
				if(p1.rightchain && right >= 0 || !p1.rightchain && right <= 0) break;
				P.add_diagonal(s1,p1);
				q = s1;
				zpp_$nape_geom_ZPP_$Triangular.stack.pop();
			}
			zpp_$nape_geom_ZPP_$Triangular.stack.add(q);
		}
		zpp_$nape_geom_ZPP_$Triangular.stack.add(p1);
		pre = p1;
	}
	if(!(zpp_$nape_geom_ZPP_$Triangular.stack.head == null)) {
		zpp_$nape_geom_ZPP_$Triangular.stack.pop();
		while(!(zpp_$nape_geom_ZPP_$Triangular.stack.head == null)) {
			var s2 = zpp_$nape_geom_ZPP_$Triangular.stack.pop_unsafe();
			if(zpp_$nape_geom_ZPP_$Triangular.stack.head == null) break;
			P.add_diagonal(max,s2);
		}
	}
	return P;
};
var zpp_$nape_geom_ZPP_$Vec3 = function() {
	this._validate = null;
	this.z = 0.0;
	this.y = 0.0;
	this.x = 0.0;
};
$hxClasses["zpp_nape.geom.ZPP_Vec3"] = zpp_$nape_geom_ZPP_$Vec3;
zpp_$nape_geom_ZPP_$Vec3.__name__ = ["zpp_nape","geom","ZPP_Vec3"];
zpp_$nape_geom_ZPP_$Vec3.prototype = {
	validate: function() {
		if(this._validate != null) this._validate();
	}
	,__class__: zpp_$nape_geom_ZPP_$Vec3
};
var zpp_$nape_geom_ZPP_$VecMath = function() { };
$hxClasses["zpp_nape.geom.ZPP_VecMath"] = zpp_$nape_geom_ZPP_$VecMath;
zpp_$nape_geom_ZPP_$VecMath.__name__ = ["zpp_nape","geom","ZPP_VecMath"];
zpp_$nape_geom_ZPP_$VecMath.vec_dsq = function(ax,ay,bx,by) {
	var dx = 0.0;
	var dy = 0.0;
	dx = ax - bx;
	dy = ay - by;
	return dx * dx + dy * dy;
};
var zpp_$nape_phys_ZPP_$Interactor = function() {
	this.wrap_cbTypes = null;
	this.cbSet = null;
	this.cbTypes = null;
	this.group = null;
	this.cbsets = null;
	this.icompound = null;
	this.ibody = null;
	this.ishape = null;
	this.userData = null;
	this.id = 0;
	this.outer_i = null;
	this.id = zpp_$nape_ZPP_$ID.Interactor();
	this.cbsets = new zpp_$nape_util_ZNPList_$ZPP_$CallbackSet();
	this.cbTypes = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
};
$hxClasses["zpp_nape.phys.ZPP_Interactor"] = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_phys_ZPP_$Interactor.__name__ = ["zpp_nape","phys","ZPP_Interactor"];
zpp_$nape_phys_ZPP_$Interactor.get = function(i1,i2) {
	var id;
	if(i1.id < i2.id) id = i1.id; else id = i2.id;
	var di;
	if(i1.id < i2.id) di = i2.id; else di = i1.id;
	var xs;
	if(i1.cbsets.length < i2.cbsets.length) xs = i1.cbsets; else xs = i2.cbsets;
	var ret = null;
	var cx_ite = xs.head;
	while(cx_ite != null) {
		var x = cx_ite.elt;
		if(x.id == id && x.di == di) {
			ret = x;
			break;
		}
		cx_ite = cx_ite.next;
	}
	return ret;
};
zpp_$nape_phys_ZPP_$Interactor.int_callback = function(set,x,cb) {
	var o1 = set.int1;
	var o2 = set.int2;
	if(x.options1.compatible(o1.cbTypes) && x.options2.compatible(o2.cbTypes)) {
		cb.int1 = o1;
		cb.int2 = o2;
	} else {
		cb.int1 = o2;
		cb.int2 = o1;
	}
};
zpp_$nape_phys_ZPP_$Interactor.prototype = {
	__iaddedToSpace: function() {
		if(this.group != null) this.group.interactors.add(this);
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.interactors.add(this);
			cx_ite = cx_ite.next;
		}
		this.alloc_cbSet();
	}
	,__iremovedFromSpace: function() {
		if(this.group != null) this.group.interactors.remove(this);
		var cx_ite = this.cbTypes.head;
		while(cx_ite != null) {
			var cb = cx_ite.elt;
			cb.interactors.remove(this);
			cx_ite = cx_ite.next;
		}
		this.dealloc_cbSet();
	}
	,wake: function() {
		if(this.ishape != null) {
			var body = this.ishape.body;
			if(body != null && body.space != null) body.space.non_inlined_wake(body);
			true;
		} else if(this.ibody != null) {
			if(this.ibody.space != null) this.ibody.space.non_inlined_wake(this.ibody); else false;
		} else {
			if(this.icompound.space != null) this.icompound.space.wakeCompound(this.icompound);
			true;
		}
	}
	,setupcbTypes: function() {
		this.wrap_cbTypes = zpp_$nape_util_ZPP_$CbTypeList.get(this.cbTypes);
		this.wrap_cbTypes.zpp_inner.adder = $bind(this,this.wrap_cbTypes_adder);
		this.wrap_cbTypes.zpp_inner.subber = $bind(this,this.wrap_cbTypes_subber);
		this.wrap_cbTypes.zpp_inner.dontremove = true;
		this.wrap_cbTypes.zpp_inner._modifiable = $bind(this,this.immutable_cbTypes);
	}
	,immutable_cbTypes: function() {
		this.immutable_midstep("Interactor::cbTypes");
	}
	,wrap_cbTypes_subber: function(pcb) {
		var cb = pcb.zpp_inner;
		if(this.cbTypes.has(cb)) {
			var space;
			if(this.ishape != null) {
				if(this.ishape.body == null) space = null; else space = this.ishape.body.space;
			} else if(this.ibody != null) space = this.ibody.space; else space = this.icompound.space;
			if(space != null) {
				this.dealloc_cbSet();
				cb.interactors.remove(this);
			}
			this.cbTypes.remove(cb);
			if(space != null) {
				this.alloc_cbSet();
				this.wake();
			}
		}
	}
	,wrap_cbTypes_adder: function(cb) {
		this.insert_cbtype(cb.zpp_inner);
		return false;
	}
	,insert_cbtype: function(cb) {
		if(!this.cbTypes.has(cb)) {
			var space;
			if(this.ishape != null) {
				if(this.ishape.body == null) space = null; else space = this.ishape.body.space;
			} else if(this.ibody != null) space = this.ibody.space; else space = this.icompound.space;
			if(space != null) {
				this.dealloc_cbSet();
				cb.interactors.add(this);
			}
			var pre = null;
			var cx_ite = this.cbTypes.head;
			while(cx_ite != null) {
				var j = cx_ite.elt;
				if(cb.id < j.id) break;
				pre = cx_ite;
				cx_ite = cx_ite.next;
			}
			this.cbTypes.inlined_insert(pre,cb);
			if(space != null) {
				this.alloc_cbSet();
				this.wake();
			}
		}
	}
	,alloc_cbSet: function() {
		var space;
		if(this.ishape != null) {
			if(this.ishape.body == null) space = null; else space = this.ishape.body.space;
		} else if(this.ibody != null) space = this.ibody.space; else space = this.icompound.space;
		if((this.cbSet = space.cbsets.get(this.cbTypes)) != null) {
			this.cbSet.count++;
			this.cbSet.interactors.add(this);
			this.cbSet.validate();
			space.freshInteractorType(this);
		}
	}
	,dealloc_cbSet: function() {
		var space;
		if(this.ishape != null) {
			if(this.ishape.body == null) space = null; else space = this.ishape.body.space;
		} else if(this.ibody != null) space = this.ibody.space; else space = this.icompound.space;
		if(this.cbSet != null) {
			this.cbSet.interactors.remove(this);
			space.nullInteractorType(this);
			if(--this.cbSet.count == 0) {
				space.cbsets.remove(this.cbSet);
				var o = this.cbSet;
				o.free();
				o.next = zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool;
				zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool = o;
			}
			this.cbSet = null;
		}
	}
	,setGroup: function(group) {
		if(this.group != group) {
			var inspace;
			inspace = (this.ishape != null?this.ishape.body == null?null:this.ishape.body.space:this.ibody != null?this.ibody.space:this.icompound.space) != null;
			if(inspace && this.group != null) this.group.interactors.remove(this);
			this.group = group;
			if(inspace && group != null) group.interactors.add(this);
			if(inspace) {
				if(this.ishape != null) this.ishape.body.wake(); else if(this.ibody != null) this.ibody.wake(); else this.icompound.wake();
			}
		}
	}
	,immutable_midstep: function(n) {
		if(this.ibody != null) this.ibody.__immutable_midstep(n); else if(this.ishape != null) this.ishape.__immutable_midstep(n); else this.icompound.__imutable_midstep(n);
	}
	,lookup_group: function() {
		var cur = this;
		while(cur != null && cur.group == null) if(cur.ishape != null) cur = cur.ishape.body; else if(cur.icompound != null) cur = cur.icompound.compound; else cur = cur.ibody.compound;
		if(cur == null) return null; else return cur.group;
	}
	,__class__: zpp_$nape_phys_ZPP_$Interactor
};
var zpp_$nape_phys_ZPP_$Body = function() {
	this.wrap_worldCOM = null;
	this.wrap_localCOM = null;
	this.zip_worldCOM = false;
	this.worldCOMy = 0.0;
	this.worldCOMx = 0.0;
	this.zip_localCOM = false;
	this.localCOMy = 0.0;
	this.localCOMx = 0.0;
	this.zip_aabb = false;
	this.aabb = null;
	this.norotate = false;
	this.sinertia = 0.0;
	this.iinertia = 0.0;
	this.cinertia = 0.0;
	this.zip_inertia = false;
	this.inertia = 0.0;
	this.inertiaMode = 0;
	this.zip_gravMassScale = false;
	this.gravMassScale = 0.0;
	this.gravMassMode = 0;
	this.zip_gravMass = false;
	this.gravMass = 0.0;
	this.nomove = false;
	this.cmass = 0.0;
	this.smass = 0.0;
	this.imass = 0.0;
	this.massMode = 0;
	this.zip_mass = false;
	this.mass = 0.0;
	this.zip_axis = false;
	this.axisy = 0.0;
	this.axisx = 0.0;
	this.rot = 0.0;
	this.pre_rot = 0.0;
	this.kinangvel = 0.0;
	this.torque = 0.0;
	this.angvel = 0.0;
	this.svely = 0.0;
	this.svelx = 0.0;
	this.kinvely = 0.0;
	this.kinvelx = 0.0;
	this.forcey = 0.0;
	this.forcex = 0.0;
	this.wrap_vel = null;
	this.vely = 0.0;
	this.velx = 0.0;
	this.wrap_pos = null;
	this.posy = 0.0;
	this.posx = 0.0;
	this.pre_posy = 0.0;
	this.pre_posx = 0.0;
	this.disableCCD = false;
	this.bulletEnabled = false;
	this.bullet = false;
	this.sweepRadius = 0.0;
	this.sweepFrozen = false;
	this.sweep_angvel = 0.0;
	this.sweepTime = 0.0;
	this.component = null;
	this.wrap_constraints = null;
	this.constraints = null;
	this.wrap_arbiters = null;
	this.arbiters = null;
	this.space = null;
	this.wrap_shapes = null;
	this.shapes = null;
	this.compound = null;
	this.type = 0;
	this.world = false;
	this.outer = null;
	zpp_$nape_phys_ZPP_$Interactor.call(this);
	this.ibody = this;
	this.world = false;
	this.bulletEnabled = false;
	this.sweepTime = 0;
	this.sweep_angvel = 0;
	this.norotate = this.nomove = false;
	this.disableCCD = false;
	this.posx = 0;
	this.posy = 0;
	this.rot = 0;
	this.axisx = 0;
	this.axisy = 1;
	this.svelx = 0;
	this.svely = 0;
	this.velx = 0;
	this.vely = 0;
	this.kinvelx = 0;
	this.kinvely = 0;
	this.forcex = 0;
	this.forcey = 0;
	this.torque = this.angvel = this.kinangvel = 0;
	this.pre_posx = Infinity;
	this.pre_posy = Infinity;
	this.pre_rot = Infinity;
	this.localCOMx = 0;
	this.localCOMy = 0;
	this.worldCOMx = 0;
	this.worldCOMy = 0;
	this.zip_aabb = true;
	this.aabb = zpp_$nape_geom_ZPP_$AABB.get(0,0,0,0);
	this.aabb._immutable = true;
	var me = this;
	this.aabb._validate = $bind(this,this.aabb_validate);
	this.massMode = zpp_$nape_util_ZPP_$Flags.id_MassMode_DEFAULT;
	this.gravMassMode = zpp_$nape_util_ZPP_$Flags.id_GravMassMode_DEFAULT;
	this.gravMassScale = 1.0;
	this.inertiaMode = zpp_$nape_util_ZPP_$Flags.id_InertiaMode_DEFAULT;
	this.arbiters = new zpp_$nape_util_ZNPList_$ZPP_$Arbiter();
	this.constraints = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this.shapes = new zpp_$nape_util_ZNPList_$ZPP_$Shape();
	this.wrap_shapes = zpp_$nape_util_ZPP_$ShapeList.get(this.shapes);
	this.wrap_shapes.zpp_inner.adder = $bind(this,this.shapes_adder);
	this.wrap_shapes.zpp_inner.subber = $bind(this,this.shapes_subber);
	this.wrap_shapes.zpp_inner._invalidate = $bind(this,this.shapes_invalidate);
	this.wrap_shapes.zpp_inner._modifiable = $bind(this,this.shapes_modifiable);
	this.kinematicDelaySleep = false;
};
$hxClasses["zpp_nape.phys.ZPP_Body"] = zpp_$nape_phys_ZPP_$Body;
zpp_$nape_phys_ZPP_$Body.__name__ = ["zpp_nape","phys","ZPP_Body"];
zpp_$nape_phys_ZPP_$Body.__static = function() {
	var ret = new nape_phys_Body((function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
		return $r;
	}(this)));
	var si = ret.zpp_inner;
	si.world = true;
	si.wrap_shapes.zpp_inner.immutable = true;
	si.smass = si.imass = si.cmass = si.mass = si.gravMass = 0.0;
	si.sinertia = si.iinertia = si.cinertia = si.inertia = 0.0;
	si.cbTypes.clear();
	return ret;
};
zpp_$nape_phys_ZPP_$Body.__super__ = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_phys_ZPP_$Body.prototype = $extend(zpp_$nape_phys_ZPP_$Interactor.prototype,{
	invalidate_type: function() {
		this.invalidate_mass();
		this.invalidate_inertia();
	}
	,invalidate_shapes: function() {
		this.zip_aabb = true;
		this.zip_localCOM = true;
		this.zip_worldCOM = true;
		this.invalidate_mass();
		this.invalidate_inertia();
	}
	,atRest: function(dt) {
		if(!(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) return this.component.sleeping; else {
			var linSq = nape_Config.linearSleepThreshold;
			linSq *= linSq;
			var cansleep;
			if(this.velx * this.velx + this.vely * this.vely > linSq) cansleep = false; else if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(this.posx,this.posy,this.pre_posx,this.pre_posy) > 0.25 * linSq * dt * dt) cansleep = false; else {
				var dx = 0.0;
				var dy = 0.0;
				dx = this.aabb.maxx - this.aabb.minx;
				dy = this.aabb.maxy - this.aabb.miny;
				var idl = dx * dx + dy * dy;
				var angSq = nape_Config.angularSleepThreshold;
				angSq *= angSq;
				if(4 * this.angvel * this.angvel * idl > angSq) cansleep = false; else {
					var dr = this.rot - this.pre_rot;
					if(dr * dr * idl > angSq * dt * dt) cansleep = false; else cansleep = true;
				}
			}
			if(!cansleep) this.component.waket = this.space.stamp;
			return this.component.waket + nape_Config.sleepDelay < this.space.stamp;
		}
	}
	,refreshArbiters: function() {
		var cx_ite = this.arbiters.head;
		while(cx_ite != null) {
			var arb = cx_ite.elt;
			arb.invalidated = true;
			cx_ite = cx_ite.next;
		}
	}
	,sweepIntegrate: function(dt) {
		var delta = dt - this.sweepTime;
		if(delta != 0) {
			this.sweepTime = dt;
			var t = delta;
			this.posx += this.velx * t;
			this.posy += this.vely * t;
			if(this.angvel != 0) this.delta_rot(this.sweep_angvel * delta);
		}
	}
	,sweepValidate: function(s) {
		if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
			s.worldCOMx = this.posx + (this.axisy * s.localCOMx - this.axisx * s.localCOMy);
			s.worldCOMy = this.posy + (s.localCOMx * this.axisx + s.localCOMy * this.axisy);
		} else {
			var p = s.polygon;
			var li = p.lverts.next;
			var cx_ite = p.gverts.next;
			while(cx_ite != null) {
				var g = cx_ite;
				var l = li;
				li = li.next;
				g.x = this.posx + (this.axisy * l.x - this.axisx * l.y);
				g.y = this.posy + (l.x * this.axisx + l.y * this.axisy);
				cx_ite = cx_ite.next;
			}
			var ite = p.edges.head;
			var cx_ite1 = p.gverts.next;
			var u = cx_ite1;
			cx_ite1 = cx_ite1.next;
			while(cx_ite1 != null) {
				var v1 = cx_ite1;
				var e = ite.elt;
				ite = ite.next;
				e.gnormx = this.axisy * e.lnormx - this.axisx * e.lnormy;
				e.gnormy = e.lnormx * this.axisx + e.lnormy * this.axisy;
				e.gprojection = this.posx * e.gnormx + this.posy * e.gnormy + e.lprojection;
				e.tp0 = u.y * e.gnormx - u.x * e.gnormy;
				e.tp1 = v1.y * e.gnormx - v1.x * e.gnormy;
				u = v1;
				cx_ite1 = cx_ite1.next;
			}
			var v = p.gverts.next;
			var e1 = ite.elt;
			ite = ite.next;
			e1.gnormx = this.axisy * e1.lnormx - this.axisx * e1.lnormy;
			e1.gnormy = e1.lnormx * this.axisx + e1.lnormy * this.axisy;
			e1.gprojection = this.posx * e1.gnormx + this.posy * e1.gnormy + e1.lprojection;
			e1.tp0 = u.y * e1.gnormx - u.x * e1.gnormy;
			e1.tp1 = v.y * e1.gnormx - v.x * e1.gnormy;
		}
	}
	,invalidate_pos: function() {
		var cx_ite = this.shapes.head;
		while(cx_ite != null) {
			var s = cx_ite.elt;
			if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
				s.polygon.invalidate_gverts();
				s.polygon.invalidate_gaxi();
			}
			s.invalidate_worldCOM();
			cx_ite = cx_ite.next;
		}
		this.zip_worldCOM = true;
	}
	,pos_invalidate: function(pos) {
		this.immutable_midstep("Body::position");
		if(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.space != null) throw new js__$Boot_HaxeError("Error: Cannot move a static object once inside a Space");
		if(!(this.posx == pos.x && this.posy == pos.y)) {
			this.posx = pos.x;
			this.posy = pos.y;
			this.invalidate_pos();
			this.wake();
		}
	}
	,pos_validate: function() {
		this.wrap_pos.zpp_inner.x = this.posx;
		this.wrap_pos.zpp_inner.y = this.posy;
	}
	,vel_invalidate: function(vel) {
		if(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) throw new js__$Boot_HaxeError("Error: Static body cannot have its velocity set.");
		this.velx = vel.x;
		this.vely = vel.y;
		this.wake();
	}
	,vel_validate: function() {
		this.wrap_vel.zpp_inner.x = this.velx;
		this.wrap_vel.zpp_inner.y = this.vely;
	}
	,setupPosition: function() {
		this.wrap_pos = nape_geom_Vec2.get(this.posx,this.posy,null);
		this.wrap_pos.zpp_inner._inuse = true;
		if(this.world) this.wrap_pos.zpp_inner._immutable = true; else {
			this.wrap_pos.zpp_inner._invalidate = $bind(this,this.pos_invalidate);
			this.wrap_pos.zpp_inner._validate = $bind(this,this.pos_validate);
		}
	}
	,setupVelocity: function() {
		this.wrap_vel = nape_geom_Vec2.get(this.velx,this.vely,null);
		this.wrap_vel.zpp_inner._inuse = true;
		if(this.world) this.wrap_vel.zpp_inner._immutable = true; else {
			this.wrap_vel.zpp_inner._invalidate = $bind(this,this.vel_invalidate);
			this.wrap_vel.zpp_inner._validate = $bind(this,this.vel_validate);
		}
	}
	,invalidate_rot: function() {
		this.zip_axis = true;
		var cx_ite = this.shapes.head;
		while(cx_ite != null) {
			var s = cx_ite.elt;
			if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
				s.polygon.invalidate_gverts();
				s.polygon.invalidate_gaxi();
			}
			s.invalidate_worldCOM();
			cx_ite = cx_ite.next;
		}
		this.zip_worldCOM = true;
	}
	,validate_axis: function() {
		if(this.zip_axis) {
			this.zip_axis = false;
			this.axisx = Math.sin(this.rot);
			this.axisy = Math.cos(this.rot);
			null;
		}
	}
	,delta_rot: function(dr) {
		this.rot += dr;
		if(dr * dr > 0.0001) {
			this.axisx = Math.sin(this.rot);
			this.axisy = Math.cos(this.rot);
			null;
		} else {
			var d2 = dr * dr;
			var p = 1 - 0.5 * d2;
			var m = 1 - d2 * d2 / 8;
			var nx = (p * this.axisx + dr * this.axisy) * m;
			this.axisy = (p * this.axisy - dr * this.axisx) * m;
			this.axisx = nx;
		}
	}
	,invalidate_mass: function() {
		this.zip_mass = true;
		this.invalidate_gravMass();
	}
	,validate_mass: function() {
		var exist = false;
		if(this.zip_mass || this.massMode == zpp_$nape_util_ZPP_$Flags.id_MassMode_DEFAULT && exist) {
			this.zip_mass = false;
			if(this.massMode == zpp_$nape_util_ZPP_$Flags.id_MassMode_DEFAULT) {
				this.cmass = 0;
				var cx_ite = this.shapes.head;
				while(cx_ite != null) {
					var s = cx_ite.elt;
					s.refmaterial.density = s.material.density;
					s.validate_area_inertia();
					this.cmass += s.area * s.material.density;
					cx_ite = cx_ite.next;
				}
			}
			if(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && !this.nomove) {
				this.mass = this.cmass;
				this.imass = this.smass = 1.0 / this.mass;
			} else {
				this.mass = Infinity;
				this.imass = this.smass = 0.0;
			}
			if(exist) this.invalidate_inertia();
		}
	}
	,invalidate_gravMass: function() {
		if(this.gravMassMode != zpp_$nape_util_ZPP_$Flags.id_GravMassMode_FIXED) this.zip_gravMass = true;
		if(this.gravMassMode != zpp_$nape_util_ZPP_$Flags.id_GravMassMode_SCALED) this.zip_gravMassScale = true;
		this.wake();
	}
	,validate_gravMass: function() {
		if(this.zip_gravMass) {
			this.zip_gravMass = false;
			this.validate_mass();
			if(this.gravMassMode == zpp_$nape_util_ZPP_$Flags.id_GravMassMode_DEFAULT) {
				this.validate_mass();
				this.gravMass = this.cmass;
			} else if(this.gravMassMode == zpp_$nape_util_ZPP_$Flags.id_GravMassMode_SCALED) {
				this.validate_mass();
				this.gravMass = this.cmass * this.gravMassScale;
			}
		}
	}
	,invalidate_inertia: function() {
		this.zip_inertia = true;
		this.wake();
	}
	,validate_inertia: function() {
		var exist = false;
		if(this.zip_inertia || this.inertiaMode == zpp_$nape_util_ZPP_$Flags.id_InertiaMode_DEFAULT && exist) {
			this.zip_inertia = false;
			if(this.inertiaMode == zpp_$nape_util_ZPP_$Flags.id_InertiaMode_DEFAULT) {
				this.cinertia = 0;
				var cx_ite = this.shapes.head;
				while(cx_ite != null) {
					var s = cx_ite.elt;
					s.refmaterial.density = s.material.density;
					s.validate_area_inertia();
					this.cinertia += s.inertia * s.area * s.material.density;
					cx_ite = cx_ite.next;
				}
			}
			if(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && !this.norotate) {
				this.inertia = this.cinertia;
				this.sinertia = this.iinertia = 1.0 / this.inertia;
			} else {
				this.inertia = Infinity;
				this.sinertia = this.iinertia = 0;
			}
			if(exist) this.invalidate_inertia();
		}
	}
	,validate_aabb: function() {
		if(this.shapes.head == null) throw new js__$Boot_HaxeError("Error: Body bounds only makes sense if it contains shapes");
		if(this.zip_aabb) {
			this.zip_aabb = false;
			this.aabb.minx = Infinity;
			this.aabb.miny = Infinity;
			this.aabb.maxx = -Infinity;
			this.aabb.maxy = -Infinity;
			var cx_ite = this.shapes.head;
			while(cx_ite != null) {
				var s = cx_ite.elt;
				if(s.zip_aabb) {
					if(s.body != null) {
						s.zip_aabb = false;
						if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) s.circle.__validate_aabb(); else s.polygon.__validate_aabb();
					}
				}
				this.aabb.combine(s.aabb);
				cx_ite = cx_ite.next;
			}
		}
	}
	,invalidate_localCOM: function() {
		this.zip_localCOM = true;
		this.zip_worldCOM = true;
	}
	,validate_localCOM: function() {
		if(this.zip_localCOM) {
			this.zip_localCOM = false;
			var tempx = 0;
			var tempy = 0;
			var msum = 0.0;
			var cx_ite = this.shapes.head;
			while(cx_ite != null) {
				var s = cx_ite.elt;
				if(s.zip_localCOM) {
					s.zip_localCOM = false;
					if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) s.polygon.__validate_localCOM();
					if(s.wrap_localCOM != null) {
						s.wrap_localCOM.zpp_inner.x = s.localCOMx;
						s.wrap_localCOM.zpp_inner.y = s.localCOMy;
					}
				}
				s.validate_area_inertia();
				var t = s.area * s.material.density;
				tempx += s.localCOMx * t;
				tempy += s.localCOMy * t;
				msum += s.area * s.material.density;
				cx_ite = cx_ite.next;
			}
			if(msum != 0) {
				var t1 = 1.0 / msum;
				this.localCOMx = tempx * t1;
				this.localCOMy = tempy * t1;
			}
			if(this.wrap_localCOM != null) {
				this.wrap_localCOM.zpp_inner.x = this.localCOMx;
				this.wrap_localCOM.zpp_inner.y = this.localCOMy;
			}
			if(this.zip_mass && this.massMode == zpp_$nape_util_ZPP_$Flags.id_MassMode_DEFAULT) {
				this.zip_mass = false;
				this.cmass = msum;
				if(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
					this.mass = this.cmass;
					this.imass = this.smass = 1.0 / this.mass;
				} else {
					this.mass = Infinity;
					this.imass = this.smass = 0.0;
				}
			}
		}
	}
	,validate_worldCOM: function() {
		if(this.zip_worldCOM) {
			this.zip_worldCOM = false;
			this.validate_localCOM();
			if(this.zip_axis) {
				this.zip_axis = false;
				this.axisx = Math.sin(this.rot);
				this.axisy = Math.cos(this.rot);
				null;
			}
			this.worldCOMx = this.posx + (this.axisy * this.localCOMx - this.axisx * this.localCOMy);
			this.worldCOMy = this.posy + (this.localCOMx * this.axisx + this.localCOMy * this.axisy);
			if(this.wrap_worldCOM != null) {
				this.wrap_worldCOM.zpp_inner.x = this.worldCOMx;
				this.wrap_worldCOM.zpp_inner.y = this.worldCOMy;
			}
		}
	}
	,getlocalCOM: function() {
		if(this.shapes.head == null) throw new js__$Boot_HaxeError("Error: localCOM only makes sense when Body has Shapes");
		this.validate_localCOM();
	}
	,__immutable_midstep: function(name) {
		if(this.space != null && this.space.midstep) throw new js__$Boot_HaxeError("Error: " + name + " cannot be set during a space step()");
	}
	,aabb_validate: function() {
		if(this.shapes.head == null) throw new js__$Boot_HaxeError("Error: bounds only makes sense when Body has shapes");
		this.validate_aabb();
	}
	,shapes_adder: function(s) {
		if(s.zpp_inner.body != this) {
			if(s.zpp_inner.body != null) s.zpp_inner.body.wrap_shapes.remove(s);
			s.zpp_inner.body = this;
			s.zpp_inner.addedToBody();
			if(this.space != null) this.space.added_shape(s.zpp_inner,null);
			if(s.zpp_inner.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
				s.zpp_inner.polygon.invalidate_gaxi();
				s.zpp_inner.polygon.invalidate_gverts();
			}
			return true;
		} else return false;
	}
	,shapes_subber: function(s) {
		if(this.space != null) this.space.removed_shape(s.zpp_inner);
		s.zpp_inner.body = null;
		s.zpp_inner.removedFromBody();
	}
	,shapes_invalidate: function(_) {
		this.invalidate_shapes();
	}
	,shapes_modifiable: function() {
		this.immutable_midstep("Body::shapes");
		if(this.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.space != null) throw new js__$Boot_HaxeError("Error: Cannot modifiy shapes of static object once added to Space");
	}
	,addedToSpace: function() {
		if(zpp_$nape_space_ZPP_$Component.zpp_pool == null) this.component = new zpp_$nape_space_ZPP_$Component(); else {
			this.component = zpp_$nape_space_ZPP_$Component.zpp_pool;
			zpp_$nape_space_ZPP_$Component.zpp_pool = this.component.next;
			this.component.next = null;
		}
		null;
		this.component.isBody = true;
		this.component.body = this;
		this.__iaddedToSpace();
	}
	,removedFromSpace: function() {
		while(!(this.arbiters.head == null)) {
			var arb = this.arbiters.pop_unsafe();
			arb.cleared = true;
			if(arb.b2 == this) arb.b1.arbiters.inlined_try_remove(arb);
			if(arb.b1 == this) arb.b2.arbiters.inlined_try_remove(arb);
			if(arb.pair != null) {
				arb.pair.arb = null;
				arb.pair = null;
			}
			arb.active = false;
			this.space.f_arbiters.modified = true;
		}
		var o = this.component;
		o.body = null;
		o.constraint = null;
		null;
		o.next = zpp_$nape_space_ZPP_$Component.zpp_pool;
		zpp_$nape_space_ZPP_$Component.zpp_pool = o;
		this.component = null;
		this.__iremovedFromSpace();
	}
	,__class__: zpp_$nape_phys_ZPP_$Body
});
var zpp_$nape_phys_ZPP_$Compound = function() {
	this.space = null;
	this.compound = null;
	this.depth = 0;
	this.wrap_constraints = null;
	this.compounds = null;
	this.constraints = null;
	this.bodies = null;
	this.outer = null;
};
$hxClasses["zpp_nape.phys.ZPP_Compound"] = zpp_$nape_phys_ZPP_$Compound;
zpp_$nape_phys_ZPP_$Compound.__name__ = ["zpp_nape","phys","ZPP_Compound"];
zpp_$nape_phys_ZPP_$Compound.__super__ = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_phys_ZPP_$Compound.prototype = $extend(zpp_$nape_phys_ZPP_$Interactor.prototype,{
	__imutable_midstep: function(name) {
		if(this.space != null && this.space.midstep) throw new js__$Boot_HaxeError("Error: " + name + " cannot be set during space step()");
	}
	,addedToSpace: function() {
		this.__iaddedToSpace();
	}
	,removedFromSpace: function() {
		this.__iremovedFromSpace();
	}
	,__class__: zpp_$nape_phys_ZPP_$Compound
});
var zpp_$nape_phys_ZPP_$FluidProperties = function() {
	this.wrap_gravity = null;
	this.gravityy = 0.0;
	this.gravityx = 0.0;
	this.density = 0.0;
	this.viscosity = 0.0;
	this.shapes = null;
};
$hxClasses["zpp_nape.phys.ZPP_FluidProperties"] = zpp_$nape_phys_ZPP_$FluidProperties;
zpp_$nape_phys_ZPP_$FluidProperties.__name__ = ["zpp_nape","phys","ZPP_FluidProperties"];
zpp_$nape_phys_ZPP_$FluidProperties.prototype = {
	__class__: zpp_$nape_phys_ZPP_$FluidProperties
};
var zpp_$nape_phys_ZPP_$Material = function() {
	this.rollingFriction = 0.0;
	this.elasticity = 0.0;
	this.density = 0.0;
	this.staticFriction = 0.0;
	this.dynamicFriction = 0.0;
	this.shapes = null;
	this.outer = null;
	this.next = null;
	this.shapes = new zpp_$nape_util_ZNPList_$ZPP_$Shape();
	this.elasticity = 0;
	this.dynamicFriction = 1;
	this.staticFriction = 2;
	this.density = 0.001;
	this.rollingFriction = 0.01;
};
$hxClasses["zpp_nape.phys.ZPP_Material"] = zpp_$nape_phys_ZPP_$Material;
zpp_$nape_phys_ZPP_$Material.__name__ = ["zpp_nape","phys","ZPP_Material"];
zpp_$nape_phys_ZPP_$Material.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			this.outer = new nape_phys_Material();
			var o = this.outer.zpp_inner;
			o.outer = null;
			o.next = zpp_$nape_phys_ZPP_$Material.zpp_pool;
			zpp_$nape_phys_ZPP_$Material.zpp_pool = o;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,set: function(x) {
		this.dynamicFriction = x.dynamicFriction;
		this.staticFriction = x.staticFriction;
		this.density = x.density;
		this.elasticity = x.elasticity;
		this.rollingFriction = x.rollingFriction;
	}
	,invalidate: function(x) {
		var cx_ite = this.shapes.head;
		while(cx_ite != null) {
			var s = cx_ite.elt;
			s.invalidate_material(x);
			cx_ite = cx_ite.next;
		}
	}
	,__class__: zpp_$nape_phys_ZPP_$Material
};
var zpp_$nape_shape_ZPP_$Shape = function(type) {
	this.zip_aabb = false;
	this.aabb = null;
	this.pairs = null;
	this.node = null;
	this.sweep = null;
	this.sensorEnabled = false;
	this.fluidEnabled = false;
	this.fluidProperties = null;
	this.filter = null;
	this.material = null;
	this.refmaterial = null;
	this.polygon = null;
	this.circle = null;
	this.sweepCoef = 0.0;
	this.zip_sweepRadius = false;
	this.sweepRadius = 0.0;
	this.wrap_localCOM = null;
	this.zip_worldCOM = false;
	this.worldCOMy = 0.0;
	this.worldCOMx = 0.0;
	this.zip_localCOM = false;
	this.localCOMy = 0.0;
	this.localCOMx = 0.0;
	this.zip_angDrag = false;
	this.angDrag = 0.0;
	this.inertia = 0.0;
	this.zip_area_inertia = false;
	this.area = 0.0;
	this.type = 0;
	this.body = null;
	this.outer = null;
	zpp_$nape_phys_ZPP_$Interactor.call(this);
	this.pairs = new zpp_$nape_util_ZNPList_$ZPP_$AABBPair();
	this.ishape = this;
	this.type = type;
	this.aabb = zpp_$nape_geom_ZPP_$AABB.get(0,0,0,0);
	this.aabb._immutable = true;
	var me = this;
	this.aabb._validate = $bind(this,this.aabb_validate);
	this.zip_area_inertia = this.zip_angDrag = this.zip_localCOM = this.zip_sweepRadius = true;
	this.localCOMx = 0;
	this.localCOMy = 0;
	this.worldCOMx = 0;
	this.worldCOMy = 0;
	this.fluidEnabled = false;
	this.sensorEnabled = false;
	this.fluidProperties = null;
	this.body = null;
	this.refmaterial = new zpp_$nape_phys_ZPP_$Material();
	this.sweepRadius = this.sweepCoef = 0;
};
$hxClasses["zpp_nape.shape.ZPP_Shape"] = zpp_$nape_shape_ZPP_$Shape;
zpp_$nape_shape_ZPP_$Shape.__name__ = ["zpp_nape","shape","ZPP_Shape"];
zpp_$nape_shape_ZPP_$Shape.__super__ = zpp_$nape_phys_ZPP_$Interactor;
zpp_$nape_shape_ZPP_$Shape.prototype = $extend(zpp_$nape_phys_ZPP_$Interactor.prototype,{
	validate_sweepRadius: function() {
		if(this.zip_sweepRadius) {
			this.zip_sweepRadius = false;
			if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.circle.__validate_sweepRadius(); else this.polygon.__validate_sweepRadius();
		}
	}
	,validate_area_inertia: function() {
		if(this.zip_area_inertia) {
			this.zip_area_inertia = false;
			if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.circle.__validate_area_inertia(); else this.polygon.__validate_area_inertia();
		}
	}
	,validate_angDrag: function() {
		if(this.zip_angDrag || this.refmaterial.dynamicFriction != this.material.dynamicFriction) {
			this.zip_angDrag = false;
			this.refmaterial.dynamicFriction = this.material.dynamicFriction;
			if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.circle.__validate_angDrag(); else this.polygon.__validate_angDrag();
		}
	}
	,validate_worldCOM: function() {
		if(this.zip_worldCOM) {
			if(this.body != null) {
				this.zip_worldCOM = false;
				if(this.zip_localCOM) {
					this.zip_localCOM = false;
					if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) this.polygon.__validate_localCOM();
					if(this.wrap_localCOM != null) {
						this.wrap_localCOM.zpp_inner.x = this.localCOMx;
						this.wrap_localCOM.zpp_inner.y = this.localCOMy;
					}
				}
				this.body.validate_axis();
				this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy);
				this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy);
			}
		}
	}
	,invalidate_area_inertia: function() {
		this.zip_area_inertia = true;
		if(this.body != null) {
			this.body.invalidate_localCOM();
			this.body.invalidate_mass();
			this.body.invalidate_inertia();
		}
	}
	,invalidate_angDrag: function() {
		this.zip_angDrag = true;
	}
	,invalidate_localCOM: function() {
		this.zip_localCOM = true;
		this.invalidate_area_inertia();
		if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.zip_sweepRadius = true;
		this.invalidate_angDrag();
		this.invalidate_worldCOM();
		if(this.body != null) this.body.invalidate_localCOM();
	}
	,invalidate_worldCOM: function() {
		this.zip_worldCOM = true;
		this.zip_aabb = true;
		if(this.body != null) this.body.zip_aabb = true;
	}
	,invalidate_material: function(flags) {
		if((flags & zpp_$nape_phys_ZPP_$Material.WAKE) != 0) this.wake();
		if((flags & zpp_$nape_phys_ZPP_$Material.ARBITERS) != 0) {
			if(this.body != null) this.body.refreshArbiters();
		}
		if((flags & zpp_$nape_phys_ZPP_$Material.PROPS) != 0) {
			if(this.body != null) {
				this.body.invalidate_localCOM();
				this.body.invalidate_mass();
				this.body.invalidate_inertia();
			}
		}
		if((flags & zpp_$nape_phys_ZPP_$Material.ANGDRAG) != 0) this.invalidate_angDrag();
		this.refmaterial.set(this.material);
	}
	,invalidate_filter: function() {
		this.wake();
	}
	,aabb_validate: function() {
		if(this.body == null) throw new js__$Boot_HaxeError("Error: bounds only makes sense when Shape belongs to a Body");
		if(this.zip_aabb) {
			if(this.body != null) {
				this.zip_aabb = false;
				if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) this.circle.__validate_aabb(); else this.polygon.__validate_aabb();
			}
		}
	}
	,setMaterial: function(material) {
		if(this.material != material) {
			if(this.body != null && this.body.space != null) {
				if(this.material != null) this.material.shapes.remove(this);
			}
			this.material = material;
			if(this.body != null && this.body.space != null) material.shapes.add(this);
			this.wake();
			if(this.body != null) this.body.refreshArbiters();
		}
	}
	,setFilter: function(filter) {
		if(this.filter != filter) {
			if(this.body != null && this.body.space != null) {
				if(this.filter != null) this.filter.shapes.remove(this);
			}
			this.filter = filter;
			if(this.body != null && this.body.space != null) filter.shapes.add(this);
			this.wake();
		}
	}
	,__immutable_midstep: function(name) {
		if(this.body != null && this.body.space != null && this.body.space.midstep) throw new js__$Boot_HaxeError("Error: " + name + " cannot be set during a space step()");
	}
	,addedToBody: function() {
		this.invalidate_worldCOM();
		this.zip_aabb = true;
		if(this.body != null) this.body.zip_aabb = true;
	}
	,removedFromBody: function() {
	}
	,addedToSpace: function() {
		this.__iaddedToSpace();
		this.material.shapes.add(this);
		this.filter.shapes.add(this);
		if(this.fluidProperties != null) this.fluidProperties.shapes.add(this);
	}
	,removedFromSpace: function() {
		this.__iremovedFromSpace();
		this.material.shapes.remove(this);
		this.filter.shapes.remove(this);
		if(this.fluidProperties != null) this.fluidProperties.shapes.remove(this);
	}
	,__class__: zpp_$nape_shape_ZPP_$Shape
});
var zpp_$nape_shape_ZPP_$Circle = function() {
	this.radius = 0.0;
	this.outer_zn = null;
	zpp_$nape_shape_ZPP_$Shape.call(this,zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE);
	this.circle = this;
	this.zip_localCOM = false;
};
$hxClasses["zpp_nape.shape.ZPP_Circle"] = zpp_$nape_shape_ZPP_$Circle;
zpp_$nape_shape_ZPP_$Circle.__name__ = ["zpp_nape","shape","ZPP_Circle"];
zpp_$nape_shape_ZPP_$Circle.__super__ = zpp_$nape_shape_ZPP_$Shape;
zpp_$nape_shape_ZPP_$Circle.prototype = $extend(zpp_$nape_shape_ZPP_$Shape.prototype,{
	invalidate_radius: function() {
		this.invalidate_area_inertia();
		this.invalidate_angDrag();
		this.zip_aabb = true;
		if(this.body != null) this.body.zip_aabb = true;
		if(this.body != null) this.body.wake();
	}
	,__validate_aabb: function() {
		if(this.zip_worldCOM) {
			if(this.body != null) {
				this.zip_worldCOM = false;
				if(this.zip_localCOM) {
					this.zip_localCOM = false;
					if(this.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) this.polygon.__validate_localCOM();
					if(this.wrap_localCOM != null) {
						this.wrap_localCOM.zpp_inner.x = this.localCOMx;
						this.wrap_localCOM.zpp_inner.y = this.localCOMy;
					}
				}
				this.body.validate_axis();
				this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy);
				this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy);
			}
		}
		var rx = this.radius;
		var ry = this.radius;
		this.aabb.minx = this.worldCOMx - rx;
		this.aabb.miny = this.worldCOMy - ry;
		this.aabb.maxx = this.worldCOMx + rx;
		this.aabb.maxy = this.worldCOMy + ry;
	}
	,_force_validate_aabb: function() {
		this.worldCOMx = this.body.posx + (this.body.axisy * this.localCOMx - this.body.axisx * this.localCOMy);
		this.worldCOMy = this.body.posy + (this.localCOMx * this.body.axisx + this.localCOMy * this.body.axisy);
		this.aabb.minx = this.worldCOMx - this.radius;
		this.aabb.miny = this.worldCOMy - this.radius;
		this.aabb.maxx = this.worldCOMx + this.radius;
		this.aabb.maxy = this.worldCOMy + this.radius;
	}
	,__validate_sweepRadius: function() {
		this.sweepCoef = Math.sqrt(this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy);
		this.sweepRadius = this.sweepCoef + this.radius;
	}
	,__validate_area_inertia: function() {
		var r2 = this.radius * this.radius;
		this.area = r2 * Math.PI;
		this.inertia = r2 * 0.5 + (this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy);
	}
	,__validate_angDrag: function() {
		var lc = this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy;
		var r2 = this.radius * this.radius;
		var skin = this.material.dynamicFriction * nape_Config.fluidAngularDragFriction;
		this.angDrag = (lc + 2 * r2) * skin + 0.5 * nape_Config.fluidAngularDrag * (1 + nape_Config.fluidVacuumDrag) * lc;
		this.angDrag /= 2 * (lc + 0.5 * r2);
	}
	,__translate: function(x,y) {
		var t = 1.0;
		this.localCOMx += x * t;
		this.localCOMy += y * t;
		this.invalidate_localCOM();
	}
	,__rotate: function(x,y) {
		if(this.localCOMx * this.localCOMx + this.localCOMy * this.localCOMy > 0) {
			var tx = 0.0;
			var ty = 0.0;
			tx = y * this.localCOMx - x * this.localCOMy;
			ty = this.localCOMx * x + this.localCOMy * y;
			this.localCOMx = tx;
			this.localCOMy = ty;
			this.invalidate_localCOM();
		}
	}
	,__class__: zpp_$nape_shape_ZPP_$Circle
});
var zpp_$nape_shape_ZPP_$Edge = function() {
	this.tp1 = 0.0;
	this.tp0 = 0.0;
	this.gp1 = null;
	this.lp1 = null;
	this.gp0 = null;
	this.lp0 = null;
	this.gprojection = 0.0;
	this.lprojection = 0.0;
	this.length = 0.0;
	this.wrap_gnorm = null;
	this.gnormy = 0.0;
	this.gnormx = 0.0;
	this.wrap_lnorm = null;
	this.lnormy = 0.0;
	this.lnormx = 0.0;
	this.outer = null;
	this.polygon = null;
	this.next = null;
	this.lnormx = 0;
	this.lnormy = 0;
	this.gnormx = 0;
	this.gnormy = 0;
	this.length = 0;
	this.lprojection = 0;
	this.gprojection = 0;
};
$hxClasses["zpp_nape.shape.ZPP_Edge"] = zpp_$nape_shape_ZPP_$Edge;
zpp_$nape_shape_ZPP_$Edge.__name__ = ["zpp_nape","shape","ZPP_Edge"];
zpp_$nape_shape_ZPP_$Edge.prototype = {
	wrapper: function() {
		if(this.outer == null) {
			zpp_$nape_shape_ZPP_$Edge.internal = true;
			this.outer = new nape_shape_Edge();
			zpp_$nape_shape_ZPP_$Edge.internal = false;
			this.outer.zpp_inner = this;
		}
		return this.outer;
	}
	,gnorm_validate: function() {
		if(this.polygon == null) throw new js__$Boot_HaxeError("Error: Edge not currently in use");
		if(this.polygon.body == null) throw new js__$Boot_HaxeError("Error: Edge worldNormal only makes sense if the parent Polygon is contained within a rigid body");
		this.polygon.validate_gaxi();
		this.wrap_gnorm.zpp_inner.x = this.gnormx;
		this.wrap_gnorm.zpp_inner.y = this.gnormy;
	}
	,getgnorm: function() {
		this.wrap_gnorm = nape_geom_Vec2.get(this.gnormx,this.gnormy,null);
		this.wrap_gnorm.zpp_inner._immutable = true;
		this.wrap_gnorm.zpp_inner._validate = $bind(this,this.gnorm_validate);
	}
	,__class__: zpp_$nape_shape_ZPP_$Edge
};
var zpp_$nape_shape_ZPP_$Polygon = function() {
	this.zip_sanitation = false;
	this.zip_valid = false;
	this.zip_gaxi = false;
	this.zip_gverts = false;
	this.zip_laxi = false;
	this.zip_lverts = false;
	this.reverse_flag = false;
	this.edgeCnt = 0;
	this.wrap_edges = null;
	this.edges = null;
	this.wrap_gverts = null;
	this.gverts = null;
	this.wrap_lverts = null;
	this.lverts = null;
	this.outer_zn = null;
	zpp_$nape_shape_ZPP_$Shape.call(this,zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON);
	this.polygon = this;
	this.lverts = new zpp_$nape_geom_ZPP_$Vec2();
	this.gverts = new zpp_$nape_geom_ZPP_$Vec2();
	this.edges = new zpp_$nape_util_ZNPList_$ZPP_$Edge();
	this.edgeCnt = 0;
};
$hxClasses["zpp_nape.shape.ZPP_Polygon"] = zpp_$nape_shape_ZPP_$Polygon;
zpp_$nape_shape_ZPP_$Polygon.__name__ = ["zpp_nape","shape","ZPP_Polygon"];
zpp_$nape_shape_ZPP_$Polygon.__super__ = zpp_$nape_shape_ZPP_$Shape;
zpp_$nape_shape_ZPP_$Polygon.prototype = $extend(zpp_$nape_shape_ZPP_$Shape.prototype,{
	lverts_pa_invalidate: function(x) {
		this.invalidate_lverts();
	}
	,lverts_pa_immutable: function() {
		if(this.body != null && this.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.body.space != null) throw new js__$Boot_HaxeError("Error: Cannot modify local vertex of Polygon added to a static body whilst within a Space");
	}
	,gverts_pa_validate: function() {
		if(this.body == null) throw new js__$Boot_HaxeError("Error: World vertex only makes sense when Polygon is contained in a rigid body");
		this.validate_gverts();
	}
	,lverts_post_adder: function(x) {
		x.zpp_inner._invalidate = $bind(this,this.lverts_pa_invalidate);
		x.zpp_inner._isimmutable = $bind(this,this.lverts_pa_immutable);
		var ite = null;
		var ite2 = null;
		var cx_ite = this.lverts.next;
		while(cx_ite != null) {
			var i = cx_ite;
			if(i == x.zpp_inner) break; else {
				if(ite == null) ite = this.gverts.next; else ite = ite.next;
				if(ite2 == null) ite2 = this.edges.head; else ite2 = ite2.next;
			}
			cx_ite = cx_ite.next;
		}
		var vec = zpp_$nape_geom_ZPP_$Vec2.get(0,0,true);
		this.gverts.insert(ite,vec);
		if(this.lverts.next.next != null) {
			if(this.lverts.next.next.next == null) {
				var ed;
				if(zpp_$nape_shape_ZPP_$Edge.zpp_pool == null) ed = new zpp_$nape_shape_ZPP_$Edge(); else {
					ed = zpp_$nape_shape_ZPP_$Edge.zpp_pool;
					zpp_$nape_shape_ZPP_$Edge.zpp_pool = ed.next;
					ed.next = null;
				}
				null;
				ed.polygon = this;
				this.edges.add(ed);
				var ed1;
				if(zpp_$nape_shape_ZPP_$Edge.zpp_pool == null) ed1 = new zpp_$nape_shape_ZPP_$Edge(); else {
					ed1 = zpp_$nape_shape_ZPP_$Edge.zpp_pool;
					zpp_$nape_shape_ZPP_$Edge.zpp_pool = ed1.next;
					ed1.next = null;
				}
				null;
				ed1.polygon = this;
				this.edges.add(ed1);
				this.edgeCnt += 2;
			} else {
				var ed2;
				if(zpp_$nape_shape_ZPP_$Edge.zpp_pool == null) ed2 = new zpp_$nape_shape_ZPP_$Edge(); else {
					ed2 = zpp_$nape_shape_ZPP_$Edge.zpp_pool;
					zpp_$nape_shape_ZPP_$Edge.zpp_pool = ed2.next;
					ed2.next = null;
				}
				null;
				ed2.polygon = this;
				this.edges.insert(ite2,ed2);
				this.edgeCnt++;
			}
		}
		vec._validate = $bind(this,this.gverts_pa_validate);
	}
	,lverts_subber: function(x) {
		this.cleanup_lvert(x.zpp_inner);
	}
	,lverts_invalidate: function(_) {
		this.invalidate_lverts();
	}
	,lverts_validate: function() {
		this.validate_lverts();
	}
	,lverts_modifiable: function() {
		this.immutable_midstep("Polygon::localVerts");
		if(this.body != null && this.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && this.body.space != null) throw new js__$Boot_HaxeError("Error: Cannot modifiy shapes of static object once added to Space");
	}
	,getlverts: function() {
		var me = this;
		this.wrap_lverts = zpp_$nape_util_ZPP_$MixVec2List.get(this.lverts);
		this.wrap_lverts.zpp_inner.post_adder = $bind(this,this.lverts_post_adder);
		this.wrap_lverts.zpp_inner.subber = $bind(this,this.lverts_subber);
		this.wrap_lverts.zpp_inner._invalidate = $bind(this,this.lverts_invalidate);
		this.wrap_lverts.zpp_inner._validate = $bind(this,this.lverts_validate);
		this.wrap_lverts.zpp_inner._modifiable = $bind(this,this.lverts_modifiable);
		this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag;
	}
	,invalidate_lverts: function() {
		this.invalidate_laxi();
		this.invalidate_area_inertia();
		this.invalidate_angDrag();
		this.invalidate_localCOM();
		this.invalidate_gverts();
		this.zip_lverts = true;
		this.zip_valid = true;
		this.zip_sanitation = true;
		if(this.body != null) this.body.wake();
	}
	,invalidate_laxi: function() {
		this.invalidate_gaxi();
		this.zip_sweepRadius = true;
		this.zip_laxi = true;
	}
	,invalidate_gverts: function() {
		this.zip_aabb = true;
		if(this.body != null) this.body.zip_aabb = true;
		this.zip_gverts = true;
	}
	,invalidate_gaxi: function() {
		this.zip_gaxi = true;
	}
	,valid: function() {
		if(this.zip_valid) {
			this.zip_valid = false;
			if(this.zip_sanitation) {
				this.zip_sanitation = false;
				this.splice_collinear_real();
			}
			if(this.lverts.length < 3) return (function($this) {
				var $r;
				if(zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE == null) {
					zpp_$nape_util_ZPP_$Flags.internal = true;
					zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE = new nape_shape_ValidationResult();
					zpp_$nape_util_ZPP_$Flags.internal = false;
				}
				$r = $this.validation = zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE;
				return $r;
			}(this)); else {
				this.validate_lverts();
				this.validate_area_inertia();
				if(this.area < nape_Config.epsilon) return (function($this) {
					var $r;
					if(zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE = new nape_shape_ValidationResult();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					$r = $this.validation = zpp_$nape_util_ZPP_$Flags.ValidationResult_DEGENERATE;
					return $r;
				}(this)); else {
					var neg = false;
					var pos = false;
					var cx_cont = true;
					var cx_ite = this.lverts.next;
					var u = cx_ite;
					cx_ite = cx_ite.next;
					var v = cx_ite;
					cx_ite = cx_ite.next;
					while(cx_ite != null) {
						var w = cx_ite;
						var ax = 0.0;
						var ay = 0.0;
						ax = w.x - v.x;
						ay = w.y - v.y;
						var bx = 0.0;
						var by = 0.0;
						bx = v.x - u.x;
						by = v.y - u.y;
						var dot = by * ax - bx * ay;
						if(dot > nape_Config.epsilon) pos = true; else if(dot < -nape_Config.epsilon) neg = true;
						if(pos && neg) {
							cx_cont = false;
							break;
						}
						u = v;
						v = w;
						cx_ite = cx_ite.next;
					}
					if(cx_cont) {
						cx_ite = this.lverts.next;
						var w1 = cx_ite;
						do {
							var ax1 = 0.0;
							var ay1 = 0.0;
							ax1 = w1.x - v.x;
							ay1 = w1.y - v.y;
							var bx1 = 0.0;
							var by1 = 0.0;
							bx1 = v.x - u.x;
							by1 = v.y - u.y;
							var dot1 = by1 * ax1 - bx1 * ay1;
							if(dot1 > nape_Config.epsilon) pos = true; else if(dot1 < -nape_Config.epsilon) neg = true;
							if(pos && neg) {
								cx_cont = false;
								break;
							}
						} while(false);
						if(cx_cont) {
							u = v;
							v = w1;
							cx_ite = cx_ite.next;
							var w2 = cx_ite;
							do {
								var ax2 = 0.0;
								var ay2 = 0.0;
								ax2 = w2.x - v.x;
								ay2 = w2.y - v.y;
								var bx2 = 0.0;
								var by2 = 0.0;
								bx2 = v.x - u.x;
								by2 = v.y - u.y;
								var dot2 = by2 * ax2 - bx2 * ay2;
								if(dot2 > nape_Config.epsilon) pos = true; else if(dot2 < -nape_Config.epsilon) neg = true;
								if(pos && neg) break;
							} while(false);
						}
					}
					if(pos && neg) return (function($this) {
						var $r;
						if(zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE == null) {
							zpp_$nape_util_ZPP_$Flags.internal = true;
							zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE = new nape_shape_ValidationResult();
							zpp_$nape_util_ZPP_$Flags.internal = false;
						}
						$r = $this.validation = zpp_$nape_util_ZPP_$Flags.ValidationResult_CONCAVE;
						return $r;
					}(this)); else {
						var cont = true;
						var cx_cont1 = true;
						var cx_ite1 = this.lverts.next;
						var u1 = cx_ite1;
						cx_ite1 = cx_ite1.next;
						while(cx_ite1 != null) {
							var v1 = cx_ite1;
							if(!cont) {
								cx_cont1 = false;
								break;
							}
							var cx_cont2 = true;
							var cx_ite2 = this.lverts.next;
							var a = cx_ite2;
							cx_ite2 = cx_ite2.next;
							while(cx_ite2 != null) {
								var b = cx_ite2;
								if(u1 == a || u1 == b || v1 == a || v1 == b) {
									a = b;
									cx_ite2 = cx_ite2.next;
									continue;
								}
								var sx = 0.0;
								var sy = 0.0;
								sx = u1.x - a.x;
								sy = u1.y - a.y;
								var vx = 0.0;
								var vy = 0.0;
								vx = v1.x - u1.x;
								vy = v1.y - u1.y;
								var qx = 0.0;
								var qy = 0.0;
								qx = b.x - a.x;
								qy = b.y - a.y;
								var den = vy * qx - vx * qy;
								if(den * den > nape_Config.epsilon) {
									den = 1 / den;
									var t = (qy * sx - qx * sy) * den;
									if(t > nape_Config.epsilon && t < 1 - nape_Config.epsilon) {
										var s = (vy * sx - vx * sy) * den;
										if(s > nape_Config.epsilon && s < 1 - nape_Config.epsilon) {
											cont = false;
											cx_cont2 = false;
											break;
										}
									}
								}
								a = b;
								cx_ite2 = cx_ite2.next;
							}
							if(cx_cont2) do {
								var b1 = this.lverts.next;
								if(u1 == a || u1 == b1 || v1 == a || v1 == b1) break;
								var sx1 = 0.0;
								var sy1 = 0.0;
								sx1 = u1.x - a.x;
								sy1 = u1.y - a.y;
								var vx1 = 0.0;
								var vy1 = 0.0;
								vx1 = v1.x - u1.x;
								vy1 = v1.y - u1.y;
								var qx1 = 0.0;
								var qy1 = 0.0;
								qx1 = b1.x - a.x;
								qy1 = b1.y - a.y;
								var den1 = vy1 * qx1 - vx1 * qy1;
								if(den1 * den1 > nape_Config.epsilon) {
									den1 = 1 / den1;
									var t1 = (qy1 * sx1 - qx1 * sy1) * den1;
									if(t1 > nape_Config.epsilon && t1 < 1 - nape_Config.epsilon) {
										var s1 = (vy1 * sx1 - vx1 * sy1) * den1;
										if(s1 > nape_Config.epsilon && s1 < 1 - nape_Config.epsilon) {
											cont = false;
											break;
										}
									}
								}
							} while(false);
							u1 = v1;
							cx_ite1 = cx_ite1.next;
						}
						if(cx_cont1) do {
							var v2 = this.lverts.next;
							if(!cont) break;
							var cx_cont3 = true;
							var cx_ite3 = this.lverts.next;
							var a1 = cx_ite3;
							cx_ite3 = cx_ite3.next;
							while(cx_ite3 != null) {
								var b2 = cx_ite3;
								if(u1 == a1 || u1 == b2 || v2 == a1 || v2 == b2) {
									a1 = b2;
									cx_ite3 = cx_ite3.next;
									continue;
								}
								var sx2 = 0.0;
								var sy2 = 0.0;
								sx2 = u1.x - a1.x;
								sy2 = u1.y - a1.y;
								var vx2 = 0.0;
								var vy2 = 0.0;
								vx2 = v2.x - u1.x;
								vy2 = v2.y - u1.y;
								var qx2 = 0.0;
								var qy2 = 0.0;
								qx2 = b2.x - a1.x;
								qy2 = b2.y - a1.y;
								var den2 = vy2 * qx2 - vx2 * qy2;
								if(den2 * den2 > nape_Config.epsilon) {
									den2 = 1 / den2;
									var t2 = (qy2 * sx2 - qx2 * sy2) * den2;
									if(t2 > nape_Config.epsilon && t2 < 1 - nape_Config.epsilon) {
										var s2 = (vy2 * sx2 - vx2 * sy2) * den2;
										if(s2 > nape_Config.epsilon && s2 < 1 - nape_Config.epsilon) {
											cont = false;
											cx_cont3 = false;
											break;
										}
									}
								}
								a1 = b2;
								cx_ite3 = cx_ite3.next;
							}
							if(cx_cont3) do {
								var b3 = this.lverts.next;
								if(u1 == a1 || u1 == b3 || v2 == a1 || v2 == b3) break;
								var sx3 = 0.0;
								var sy3 = 0.0;
								sx3 = u1.x - a1.x;
								sy3 = u1.y - a1.y;
								var vx3 = 0.0;
								var vy3 = 0.0;
								vx3 = v2.x - u1.x;
								vy3 = v2.y - u1.y;
								var qx3 = 0.0;
								var qy3 = 0.0;
								qx3 = b3.x - a1.x;
								qy3 = b3.y - a1.y;
								var den3 = vy3 * qx3 - vx3 * qy3;
								if(den3 * den3 > nape_Config.epsilon) {
									den3 = 1 / den3;
									var t3 = (qy3 * sx3 - qx3 * sy3) * den3;
									if(t3 > nape_Config.epsilon && t3 < 1 - nape_Config.epsilon) {
										var s3 = (vy3 * sx3 - vx3 * sy3) * den3;
										if(s3 > nape_Config.epsilon && s3 < 1 - nape_Config.epsilon) {
											cont = false;
											break;
										}
									}
								}
							} while(false);
						} while(false);
						if(!cont) return (function($this) {
							var $r;
							if(zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING == null) {
								zpp_$nape_util_ZPP_$Flags.internal = true;
								zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING = new nape_shape_ValidationResult();
								zpp_$nape_util_ZPP_$Flags.internal = false;
							}
							$r = $this.validation = zpp_$nape_util_ZPP_$Flags.ValidationResult_SELF_INTERSECTING;
							return $r;
						}(this)); else return (function($this) {
							var $r;
							if(zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID == null) {
								zpp_$nape_util_ZPP_$Flags.internal = true;
								zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID = new nape_shape_ValidationResult();
								zpp_$nape_util_ZPP_$Flags.internal = false;
							}
							$r = $this.validation = zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID;
							return $r;
						}(this));
					}
				}
			}
		} else return this.validation;
	}
	,validate_lverts: function() {
		if(this.zip_lverts) {
			this.zip_lverts = false;
			if(this.lverts.length > 2) {
				this.validate_area_inertia();
				if(this.area < 0) {
					this.reverse_vertices();
					this.area = -this.area;
				}
			}
		}
	}
	,cleanup_lvert: function(x) {
		var ite = null;
		var ite2 = null;
		var cx_ite = this.lverts.next;
		while(cx_ite != null) {
			var i = cx_ite;
			if(i == x) break; else {
				if(ite == null) ite = this.gverts.next; else ite = ite.next;
				if(ite2 == null) ite2 = this.edges.head; else ite2 = ite2.next;
			}
			cx_ite = cx_ite.next;
		}
		var rem;
		if(ite == null) rem = this.gverts.next; else rem = ite.next;
		this.gverts.erase(ite);
		var o = rem;
		if(o.outer != null) {
			o.outer.zpp_inner = null;
			o.outer = null;
		}
		o._isimmutable = null;
		o._validate = null;
		o._invalidate = null;
		o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
		if(this.edgeCnt == 2) {
			var rem1 = this.edges.pop_unsafe();
			var o1 = rem1;
			o1.polygon = null;
			o1.next = zpp_$nape_shape_ZPP_$Edge.zpp_pool;
			zpp_$nape_shape_ZPP_$Edge.zpp_pool = o1;
			rem1 = this.edges.pop_unsafe();
			var o2 = rem1;
			o2.polygon = null;
			o2.next = zpp_$nape_shape_ZPP_$Edge.zpp_pool;
			zpp_$nape_shape_ZPP_$Edge.zpp_pool = o2;
			this.edgeCnt = 0;
		} else if(this.edgeCnt != 0) {
			var rem2;
			if(ite2 == null) rem2 = this.edges.head.elt; else rem2 = ite2.next.elt;
			this.edges.erase(ite2);
			var o3 = rem2;
			o3.polygon = null;
			o3.next = zpp_$nape_shape_ZPP_$Edge.zpp_pool;
			zpp_$nape_shape_ZPP_$Edge.zpp_pool = o3;
			this.edgeCnt--;
		}
	}
	,splice_collinear: function() {
		if(this.zip_sanitation) {
			this.zip_sanitation = false;
			this.splice_collinear_real();
		}
	}
	,splice_collinear_real: function() {
		if(this.lverts.next == null) return;
		if(this.lverts.next.next == null) return;
		if(this.lverts.next.next.next == null) return;
		var pre = null;
		var cur = this.lverts.next;
		while(cur != null) {
			var nxt;
			if(cur.next == null) nxt = this.lverts.next; else nxt = cur.next;
			var u = cur;
			var v = nxt;
			if(zpp_$nape_geom_ZPP_$VecMath.vec_dsq(u.x,u.y,v.x,v.y) < nape_Config.epsilon * nape_Config.epsilon) {
				this.cleanup_lvert(cur);
				cur = this.lverts.erase(pre);
			} else {
				pre = cur;
				cur = cur.next;
			}
		}
		if(this.lverts.next == null) return;
		var removed;
		do {
			removed = false;
			var pre1 = this.lverts.next;
			while(pre1 != null) {
				var cur1;
				if(pre1.next == null) cur1 = this.lverts.next; else cur1 = pre1.next;
				var nxt1;
				if(cur1.next == null) nxt1 = this.lverts.next; else nxt1 = cur1.next;
				var u1 = pre1;
				var v1 = cur1;
				var w = nxt1;
				var ax = 0.0;
				var ay = 0.0;
				ax = v1.x - u1.x;
				ay = v1.y - u1.y;
				var bx = 0.0;
				var by = 0.0;
				bx = w.x - v1.x;
				by = w.y - v1.y;
				var crs = by * ax - bx * ay;
				if(crs * crs >= nape_Config.epsilon * nape_Config.epsilon) pre1 = pre1.next; else {
					this.cleanup_lvert(cur1);
					this.lverts.erase(pre1.next == null?null:pre1);
					removed = true;
					pre1 = pre1.next;
				}
			}
		} while(removed);
	}
	,reverse_vertices: function() {
		this.lverts.reverse();
		this.gverts.reverse();
		this.edges.reverse();
		var ite = this.edges.iterator_at(this.edgeCnt - 1);
		var elem = this.edges.pop_unsafe();
		this.edges.insert(ite,elem);
		this.reverse_flag = !this.reverse_flag;
		if(this.wrap_lverts != null) this.wrap_lverts.zpp_inner.reverse_flag = this.reverse_flag;
		if(this.wrap_gverts != null) this.wrap_gverts.zpp_inner.reverse_flag = this.reverse_flag;
		if(this.wrap_edges != null) this.wrap_edges.zpp_inner.reverse_flag = this.reverse_flag;
	}
	,validate_laxi: function() {
		if(this.zip_laxi) {
			this.zip_laxi = false;
			this.validate_lverts();
			var ite = this.edges.head;
			var cx_ite = this.lverts.next;
			var u = cx_ite;
			cx_ite = cx_ite.next;
			while(cx_ite != null) {
				var v1 = cx_ite;
				var edge = ite.elt;
				ite = ite.next;
				edge.lp0 = u;
				edge.lp1 = v1;
				var dx = 0.0;
				var dy = 0.0;
				dx = u.x - v1.x;
				dy = u.y - v1.y;
				var l = Math.sqrt(dx * dx + dy * dy);
				edge.length = l;
				var t = 1.0 / l;
				dx *= t;
				dy *= t;
				var t1 = dx;
				dx = -dy;
				dy = t1;
				edge.lprojection = dx * u.x + dy * u.y;
				edge.lnormx = dx;
				edge.lnormy = dy;
				if(edge.wrap_lnorm != null) {
					edge.wrap_lnorm.zpp_inner.x = dx;
					edge.wrap_lnorm.zpp_inner.y = dy;
				}
				u = v1;
				cx_ite = cx_ite.next;
			}
			var v = this.lverts.next;
			var edge1 = ite.elt;
			ite = ite.next;
			edge1.lp0 = u;
			edge1.lp1 = v;
			var dx1 = 0.0;
			var dy1 = 0.0;
			dx1 = u.x - v.x;
			dy1 = u.y - v.y;
			var l1 = Math.sqrt(dx1 * dx1 + dy1 * dy1);
			edge1.length = l1;
			var t2 = 1.0 / l1;
			dx1 *= t2;
			dy1 *= t2;
			var t3 = dx1;
			dx1 = -dy1;
			dy1 = t3;
			edge1.lprojection = dx1 * u.x + dy1 * u.y;
			edge1.lnormx = dx1;
			edge1.lnormy = dy1;
			if(edge1.wrap_lnorm != null) {
				edge1.wrap_lnorm.zpp_inner.x = dx1;
				edge1.wrap_lnorm.zpp_inner.y = dy1;
			}
		}
	}
	,validate_gverts: function() {
		if(this.zip_gverts) {
			if(this.body != null) {
				this.zip_gverts = false;
				this.validate_lverts();
				this.body.validate_axis();
				var li = this.lverts.next;
				var cx_ite = this.gverts.next;
				while(cx_ite != null) {
					var g = cx_ite;
					var l = li;
					li = li.next;
					g.x = this.body.posx + (this.body.axisy * l.x - this.body.axisx * l.y);
					g.y = this.body.posy + (l.x * this.body.axisx + l.y * this.body.axisy);
					cx_ite = cx_ite.next;
				}
			}
		}
	}
	,validate_gaxi: function() {
		if(this.zip_gaxi) {
			if(this.body != null) {
				this.zip_gaxi = false;
				this.validate_laxi();
				this.body.validate_axis();
				this.validate_gverts();
				var ite = this.edges.head;
				var cx_ite = this.gverts.next;
				var u = cx_ite;
				cx_ite = cx_ite.next;
				while(cx_ite != null) {
					var v1 = cx_ite;
					var e = ite.elt;
					ite = ite.next;
					e.gp0 = u;
					e.gp1 = v1;
					e.gnormx = this.body.axisy * e.lnormx - this.body.axisx * e.lnormy;
					e.gnormy = e.lnormx * this.body.axisx + e.lnormy * this.body.axisy;
					e.gprojection = this.body.posx * e.gnormx + this.body.posy * e.gnormy + e.lprojection;
					if(e.wrap_gnorm != null) {
						e.wrap_gnorm.zpp_inner.x = e.gnormx;
						e.wrap_gnorm.zpp_inner.y = e.gnormy;
					}
					e.tp0 = e.gp0.y * e.gnormx - e.gp0.x * e.gnormy;
					e.tp1 = e.gp1.y * e.gnormx - e.gp1.x * e.gnormy;
					u = v1;
					cx_ite = cx_ite.next;
				}
				var v = this.gverts.next;
				var e1 = ite.elt;
				ite = ite.next;
				e1.gp0 = u;
				e1.gp1 = v;
				e1.gnormx = this.body.axisy * e1.lnormx - this.body.axisx * e1.lnormy;
				e1.gnormy = e1.lnormx * this.body.axisx + e1.lnormy * this.body.axisy;
				e1.gprojection = this.body.posx * e1.gnormx + this.body.posy * e1.gnormy + e1.lprojection;
				if(e1.wrap_gnorm != null) {
					e1.wrap_gnorm.zpp_inner.x = e1.gnormx;
					e1.wrap_gnorm.zpp_inner.y = e1.gnormy;
				}
				e1.tp0 = e1.gp0.y * e1.gnormx - e1.gp0.x * e1.gnormy;
				e1.tp1 = e1.gp1.y * e1.gnormx - e1.gp1.x * e1.gnormy;
			}
		}
	}
	,__validate_aabb: function() {
		this.validate_gverts();
		if(this.lverts.next == null) throw new js__$Boot_HaxeError("Error: An empty polygon has no meaningful bounds");
		var p0 = this.gverts.next;
		this.aabb.minx = p0.x;
		this.aabb.miny = p0.y;
		this.aabb.maxx = p0.x;
		this.aabb.maxy = p0.y;
		var cx_ite = this.gverts.next.next;
		while(cx_ite != null) {
			var p = cx_ite;
			if(p.x < this.aabb.minx) this.aabb.minx = p.x;
			if(p.x > this.aabb.maxx) this.aabb.maxx = p.x;
			if(p.y < this.aabb.miny) this.aabb.miny = p.y;
			if(p.y > this.aabb.maxy) this.aabb.maxy = p.y;
			cx_ite = cx_ite.next;
		}
	}
	,_force_validate_aabb: function() {
		var li = this.lverts.next;
		var p0 = this.gverts.next;
		var l = li;
		li = li.next;
		p0.x = this.body.posx + (this.body.axisy * l.x - this.body.axisx * l.y);
		p0.y = this.body.posy + (l.x * this.body.axisx + l.y * this.body.axisy);
		this.aabb.minx = p0.x;
		this.aabb.miny = p0.y;
		this.aabb.maxx = p0.x;
		this.aabb.maxy = p0.y;
		var cx_ite = this.gverts.next.next;
		while(cx_ite != null) {
			var p = cx_ite;
			var l1 = li;
			li = li.next;
			p.x = this.body.posx + (this.body.axisy * l1.x - this.body.axisx * l1.y);
			p.y = this.body.posy + (l1.x * this.body.axisx + l1.y * this.body.axisy);
			if(p.x < this.aabb.minx) this.aabb.minx = p.x;
			if(p.x > this.aabb.maxx) this.aabb.maxx = p.x;
			if(p.y < this.aabb.miny) this.aabb.miny = p.y;
			if(p.y > this.aabb.maxy) this.aabb.maxy = p.y;
			cx_ite = cx_ite.next;
		}
	}
	,__validate_sweepRadius: function() {
		var maxRadius = 0.0;
		var minRadius = 0.0;
		this.validate_laxi();
		var cx_ite = this.lverts.next;
		while(cx_ite != null) {
			var x = cx_ite;
			var r = x.x * x.x + x.y * x.y;
			if(r > maxRadius) maxRadius = r;
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = this.edges.head;
		while(cx_ite1 != null) {
			var e = cx_ite1.elt;
			if(e.lprojection < minRadius) {
				minRadius = e.lprojection;
				if(minRadius < 0) break;
			}
			cx_ite1 = cx_ite1.next;
		}
		if(minRadius < 0) minRadius = 0;
		this.sweepRadius = Math.sqrt(maxRadius);
		this.sweepCoef = this.sweepRadius - minRadius;
	}
	,__validate_area_inertia: function() {
		if(this.lverts.next == null || this.lverts.next.next == null || this.lverts.next.next.next == null) {
			this.area = 0;
			this.inertia = 0;
		} else {
			this.area = 0.0;
			var s1 = 0.0;
			var s2 = 0.0;
			var cx_ite = this.lverts.next;
			var u = cx_ite;
			cx_ite = cx_ite.next;
			var v = cx_ite;
			cx_ite = cx_ite.next;
			while(cx_ite != null) {
				var w2 = cx_ite;
				var a = v.y * u.x - v.x * u.y;
				var b = v.x * v.x + v.y * v.y + (v.x * u.x + v.y * u.y) + (u.x * u.x + u.y * u.y);
				s1 += a * b;
				s2 += a;
				this.area += v.x * (w2.y - u.y);
				u = v;
				v = w2;
				cx_ite = cx_ite.next;
			}
			cx_ite = this.lverts.next;
			var w = cx_ite;
			var a1 = v.y * u.x - v.x * u.y;
			var b1 = v.x * v.x + v.y * v.y + (v.x * u.x + v.y * u.y) + (u.x * u.x + u.y * u.y);
			s1 += a1 * b1;
			s2 += a1;
			this.area += v.x * (w.y - u.y);
			u = v;
			v = w;
			cx_ite = cx_ite.next;
			var w1 = cx_ite;
			var a2 = v.y * u.x - v.x * u.y;
			var b2 = v.x * v.x + v.y * v.y + (v.x * u.x + v.y * u.y) + (u.x * u.x + u.y * u.y);
			s1 += a2 * b2;
			s2 += a2;
			this.area += v.x * (w1.y - u.y);
			this.inertia = s1 / (6 * s2);
			this.area *= 0.5;
			if(this.area < 0) {
				this.area = -this.area;
				this.reverse_vertices();
			}
		}
	}
	,__validate_angDrag: function() {
		if(this.lverts.length < 3) throw new js__$Boot_HaxeError("Error: Polygon's with less than 3 vertices have no meaningful angDrag");
		this.validate_area_inertia();
		this.validate_laxi();
		var accum = 0.0;
		var ei = this.edges.head;
		var perim = 0.0;
		var cx_cont = true;
		var cx_itei = this.lverts.next;
		var u = cx_itei;
		var cx_itej = cx_itei.next;
		while(cx_itej != null) {
			var v = cx_itej;
			var edge = ei.elt;
			ei = ei.next;
			perim += edge.length;
			var dx = 0.0;
			var dy = 0.0;
			dx = v.x - u.x;
			dy = v.y - u.y;
			accum += edge.length * nape_Config.fluidAngularDragFriction * this.material.dynamicFriction * edge.lprojection * edge.lprojection;
			var t = -(u.y * edge.lnormx - u.x * edge.lnormy) / (dy * edge.lnormx - dx * edge.lnormy);
			if(t > 0) {
				var ta;
				if(t > 1) ta = 1; else ta = t;
				var cx = 0.0;
				var cy = 0.0;
				cx = u.x;
				cy = u.y;
				var t1 = ta;
				cx += dx * t1;
				cy += dy * t1;
				var dota = edge.lnormy * u.x - edge.lnormx * u.y;
				var dotb = edge.lnormy * cx - edge.lnormx * cy;
				var dots = (dotb * dotb * dotb - dota * dota * dota) / (3 * (dotb - dota));
				accum += dots * ta * edge.length * nape_Config.fluidAngularDrag;
			}
			if(t < 1) {
				var tb;
				if(t < 0) tb = 0; else tb = t;
				var cx1 = 0.0;
				var cy1 = 0.0;
				cx1 = u.x;
				cy1 = u.y;
				var t2 = tb;
				cx1 += dx * t2;
				cy1 += dy * t2;
				var dota1 = edge.lnormy * cx1 - edge.lnormx * cy1;
				var dotb1 = edge.lnormy * v.x - edge.lnormx * v.y;
				var dots1 = (dotb1 * dotb1 * dotb1 - dota1 * dota1 * dota1) / (3 * (dotb1 - dota1));
				accum += dots1 * nape_Config.fluidVacuumDrag * (1 - tb) * edge.length * nape_Config.fluidAngularDrag;
			}
			cx_itei = cx_itej;
			u = v;
			cx_itej = cx_itej.next;
		}
		if(cx_cont) do {
			cx_itej = this.lverts.next;
			var v1 = cx_itej;
			var edge1 = ei.elt;
			ei = ei.next;
			perim += edge1.length;
			var dx1 = 0.0;
			var dy1 = 0.0;
			dx1 = v1.x - u.x;
			dy1 = v1.y - u.y;
			accum += edge1.length * nape_Config.fluidAngularDragFriction * this.material.dynamicFriction * edge1.lprojection * edge1.lprojection;
			var t3 = -(u.y * edge1.lnormx - u.x * edge1.lnormy) / (dy1 * edge1.lnormx - dx1 * edge1.lnormy);
			if(t3 > 0) {
				var ta1;
				if(t3 > 1) ta1 = 1; else ta1 = t3;
				var cx2 = 0.0;
				var cy2 = 0.0;
				cx2 = u.x;
				cy2 = u.y;
				var t4 = ta1;
				cx2 += dx1 * t4;
				cy2 += dy1 * t4;
				var dota2 = edge1.lnormy * u.x - edge1.lnormx * u.y;
				var dotb2 = edge1.lnormy * cx2 - edge1.lnormx * cy2;
				var dots2 = (dotb2 * dotb2 * dotb2 - dota2 * dota2 * dota2) / (3 * (dotb2 - dota2));
				accum += dots2 * ta1 * edge1.length * nape_Config.fluidAngularDrag;
			}
			if(t3 < 1) {
				var tb1;
				if(t3 < 0) tb1 = 0; else tb1 = t3;
				var cx3 = 0.0;
				var cy3 = 0.0;
				cx3 = u.x;
				cy3 = u.y;
				var t5 = tb1;
				cx3 += dx1 * t5;
				cy3 += dy1 * t5;
				var dota3 = edge1.lnormy * cx3 - edge1.lnormx * cy3;
				var dotb3 = edge1.lnormy * v1.x - edge1.lnormx * v1.y;
				var dots3 = (dotb3 * dotb3 * dotb3 - dota3 * dota3 * dota3) / (3 * (dotb3 - dota3));
				accum += dots3 * nape_Config.fluidVacuumDrag * (1 - tb1) * edge1.length * nape_Config.fluidAngularDrag;
			}
		} while(false);
		this.angDrag = accum / (this.inertia * perim);
	}
	,__validate_localCOM: function() {
		if(this.lverts.next == null) throw new js__$Boot_HaxeError("Error: An empty polygon has no meaningful localCOM");
		if(this.lverts.next.next == null) {
			this.localCOMx = this.lverts.next.x;
			this.localCOMy = this.lverts.next.y;
		} else if(this.lverts.next.next.next == null) {
			this.localCOMx = this.lverts.next.x;
			this.localCOMy = this.lverts.next.y;
			var t = 1.0;
			this.localCOMx += this.lverts.next.next.x * t;
			this.localCOMy += this.lverts.next.next.y * t;
			var t1 = 0.5;
			this.localCOMx *= t1;
			this.localCOMy *= t1;
		} else {
			this.localCOMx = 0;
			this.localCOMy = 0;
			var area = 0.0;
			var cx_ite = this.lverts.next;
			var u = cx_ite;
			cx_ite = cx_ite.next;
			var v = cx_ite;
			cx_ite = cx_ite.next;
			while(cx_ite != null) {
				var w2 = cx_ite;
				area += v.x * (w2.y - u.y);
				var cf = w2.y * v.x - w2.x * v.y;
				this.localCOMx += (v.x + w2.x) * cf;
				this.localCOMy += (v.y + w2.y) * cf;
				u = v;
				v = w2;
				cx_ite = cx_ite.next;
			}
			cx_ite = this.lverts.next;
			var w = cx_ite;
			area += v.x * (w.y - u.y);
			var cf1 = w.y * v.x - w.x * v.y;
			this.localCOMx += (v.x + w.x) * cf1;
			this.localCOMy += (v.y + w.y) * cf1;
			u = v;
			v = w;
			cx_ite = cx_ite.next;
			var w1 = cx_ite;
			area += v.x * (w1.y - u.y);
			var cf2 = w1.y * v.x - w1.x * v.y;
			this.localCOMx += (v.x + w1.x) * cf2;
			this.localCOMy += (v.y + w1.y) * cf2;
			area = 1 / (3 * area);
			var t2 = area;
			this.localCOMx *= t2;
			this.localCOMy *= t2;
		}
	}
	,__translate: function(dx,dy) {
		var cx_ite = this.lverts.next;
		while(cx_ite != null) {
			var p = cx_ite;
			var t = 1.0;
			p.x += dx * t;
			p.y += dy * t;
			cx_ite = cx_ite.next;
		}
		this.invalidate_lverts();
	}
	,__rotate: function(ax,ay) {
		var cx_ite = this.lverts.next;
		while(cx_ite != null) {
			var p = cx_ite;
			var tempx = 0.0;
			var tempy = 0.0;
			tempx = ay * p.x - ax * p.y;
			tempy = p.x * ax + p.y * ay;
			p.x = tempx;
			p.y = tempy;
			cx_ite = cx_ite.next;
		}
		this.invalidate_lverts();
	}
	,__class__: zpp_$nape_shape_ZPP_$Polygon
});
var zpp_$nape_space_ZPP_$Broadphase = function() {
	this.dynab = null;
	this.sweep = null;
	this.is_sweep = false;
	this.space = null;
};
$hxClasses["zpp_nape.space.ZPP_Broadphase"] = zpp_$nape_space_ZPP_$Broadphase;
zpp_$nape_space_ZPP_$Broadphase.__name__ = ["zpp_nape","space","ZPP_Broadphase"];
zpp_$nape_space_ZPP_$Broadphase.prototype = {
	insert: function(shape) {
		if(this.is_sweep) this.sweep.__insert(shape); else this.dynab.__insert(shape);
	}
	,remove: function(shape) {
		if(this.is_sweep) this.sweep.__remove(shape); else this.dynab.__remove(shape);
	}
	,sync: function(shape) {
		if(this.is_sweep) {
			if(!this.sweep.space.continuous) {
				if(shape.zip_aabb) {
					if(shape.body != null) {
						shape.zip_aabb = false;
						if(shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) shape.circle.__validate_aabb(); else shape.polygon.__validate_aabb();
					}
				}
			}
		} else this.dynab.__sync(shape);
	}
	,broadphase: function(space,discrete) {
	}
	,bodiesUnderPoint: function(x,y,filter,output) {
		return null;
	}
	,__class__: zpp_$nape_space_ZPP_$Broadphase
};
var zpp_$nape_space_ZPP_$AABBNode = function() {
	this.first_sync = false;
	this.synced = false;
	this.snext = null;
	this.moved = false;
	this.mnext = null;
	this.next = null;
	this.height = 0;
	this.child2 = null;
	this.child1 = null;
	this.parent = null;
	this.dyn = false;
	this.shape = null;
	this.aabb = null;
	this.height = -1;
};
$hxClasses["zpp_nape.space.ZPP_AABBNode"] = zpp_$nape_space_ZPP_$AABBNode;
zpp_$nape_space_ZPP_$AABBNode.__name__ = ["zpp_nape","space","ZPP_AABBNode"];
zpp_$nape_space_ZPP_$AABBNode.prototype = {
	free: function() {
		this.height = -1;
		var o = this.aabb;
		if(o.outer != null) {
			o.outer.zpp_inner = null;
			o.outer = null;
		}
		o.wrap_min = o.wrap_max = null;
		o._invalidate = null;
		o._validate = null;
		o.next = zpp_$nape_geom_ZPP_$AABB.zpp_pool;
		zpp_$nape_geom_ZPP_$AABB.zpp_pool = o;
		this.child1 = this.child2 = this.parent = null;
		this.next = null;
		this.snext = null;
		this.mnext = null;
	}
	,__class__: zpp_$nape_space_ZPP_$AABBNode
};
var zpp_$nape_space_ZPP_$AABBPair = function() {
	this.next = null;
	this.arb = null;
	this.di = 0;
	this.id = 0;
	this.sleeping = false;
	this.first = false;
	this.n2 = null;
	this.n1 = null;
};
$hxClasses["zpp_nape.space.ZPP_AABBPair"] = zpp_$nape_space_ZPP_$AABBPair;
zpp_$nape_space_ZPP_$AABBPair.__name__ = ["zpp_nape","space","ZPP_AABBPair"];
zpp_$nape_space_ZPP_$AABBPair.prototype = {
	__class__: zpp_$nape_space_ZPP_$AABBPair
};
var zpp_$nape_space_ZPP_$AABBTree = function() {
	this.root = null;
};
$hxClasses["zpp_nape.space.ZPP_AABBTree"] = zpp_$nape_space_ZPP_$AABBTree;
zpp_$nape_space_ZPP_$AABBTree.__name__ = ["zpp_nape","space","ZPP_AABBTree"];
zpp_$nape_space_ZPP_$AABBTree.prototype = {
	inlined_insertLeaf: function(leaf) {
		if(this.root == null) {
			this.root = leaf;
			this.root.parent = null;
		} else {
			var leafaabb = leaf.aabb;
			var node = this.root;
			while(!(node.child1 == null)) {
				var child1 = node.child1;
				var child2 = node.child2;
				var area = node.aabb.perimeter();
				zpp_$nape_space_ZPP_$AABBTree.tmpaabb.setCombine(node.aabb,leafaabb);
				var carea = zpp_$nape_space_ZPP_$AABBTree.tmpaabb.perimeter();
				var cost = 2 * carea;
				var icost = 2 * (carea - area);
				var cost1;
				zpp_$nape_space_ZPP_$AABBTree.tmpaabb.setCombine(leafaabb,child1.aabb);
				if(child1.child1 == null) cost1 = zpp_$nape_space_ZPP_$AABBTree.tmpaabb.perimeter() + icost; else {
					var oarea = child1.aabb.perimeter();
					var narea = zpp_$nape_space_ZPP_$AABBTree.tmpaabb.perimeter();
					cost1 = narea - oarea + icost;
				}
				var cost2;
				zpp_$nape_space_ZPP_$AABBTree.tmpaabb.setCombine(leafaabb,child2.aabb);
				if(child2.child1 == null) cost2 = zpp_$nape_space_ZPP_$AABBTree.tmpaabb.perimeter() + icost; else {
					var oarea1 = child2.aabb.perimeter();
					var narea1 = zpp_$nape_space_ZPP_$AABBTree.tmpaabb.perimeter();
					cost2 = narea1 - oarea1 + icost;
				}
				if(cost < cost1 && cost < cost2) break; else if(cost1 < cost2) node = child1; else node = child2;
			}
			var sibling = node;
			var oparent = sibling.parent;
			var nparent;
			if(zpp_$nape_space_ZPP_$AABBNode.zpp_pool == null) nparent = new zpp_$nape_space_ZPP_$AABBNode(); else {
				nparent = zpp_$nape_space_ZPP_$AABBNode.zpp_pool;
				zpp_$nape_space_ZPP_$AABBNode.zpp_pool = nparent.next;
				nparent.next = null;
			}
			if(zpp_$nape_geom_ZPP_$AABB.zpp_pool == null) nparent.aabb = new zpp_$nape_geom_ZPP_$AABB(); else {
				nparent.aabb = zpp_$nape_geom_ZPP_$AABB.zpp_pool;
				zpp_$nape_geom_ZPP_$AABB.zpp_pool = nparent.aabb.next;
				nparent.aabb.next = null;
			}
			null;
			nparent.moved = false;
			nparent.synced = false;
			nparent.first_sync = false;
			nparent.parent = oparent;
			nparent.aabb.setCombine(leafaabb,sibling.aabb);
			nparent.height = sibling.height + 1;
			if(oparent != null) {
				if(oparent.child1 == sibling) oparent.child1 = nparent; else oparent.child2 = nparent;
				nparent.child1 = sibling;
				nparent.child2 = leaf;
				sibling.parent = nparent;
				leaf.parent = nparent;
			} else {
				nparent.child1 = sibling;
				nparent.child2 = leaf;
				sibling.parent = nparent;
				leaf.parent = nparent;
				this.root = nparent;
			}
			node = leaf.parent;
			while(node != null) {
				node = this.balance(node);
				var child11 = node.child1;
				var child21 = node.child2;
				node.height = 1 + (function($this) {
					var $r;
					var x = child11.height;
					var y = child21.height;
					$r = x > y?x:y;
					return $r;
				}(this));
				node.aabb.setCombine(child11.aabb,child21.aabb);
				node = node.parent;
			}
		}
	}
	,removeLeaf: function(leaf) {
		this.inlined_removeLeaf(leaf);
	}
	,inlined_removeLeaf: function(leaf) {
		if(leaf == this.root) {
			this.root = null;
			return;
		} else {
			var parent = leaf.parent;
			var gparent = parent.parent;
			var sibling;
			if(parent.child1 == leaf) sibling = parent.child2; else sibling = parent.child1;
			if(gparent != null) {
				if(gparent.child1 == parent) gparent.child1 = sibling; else gparent.child2 = sibling;
				sibling.parent = gparent;
				var o = parent;
				o.free();
				o.next = zpp_$nape_space_ZPP_$AABBNode.zpp_pool;
				zpp_$nape_space_ZPP_$AABBNode.zpp_pool = o;
				var node = gparent;
				while(node != null) {
					node = this.balance(node);
					var child1 = node.child1;
					var child2 = node.child2;
					node.aabb.setCombine(child1.aabb,child2.aabb);
					node.height = 1 + (function($this) {
						var $r;
						var x = child1.height;
						var y = child2.height;
						$r = x > y?x:y;
						return $r;
					}(this));
					node = node.parent;
				}
			} else {
				this.root = sibling;
				sibling.parent = null;
				var o1 = parent;
				o1.free();
				o1.next = zpp_$nape_space_ZPP_$AABBNode.zpp_pool;
				zpp_$nape_space_ZPP_$AABBNode.zpp_pool = o1;
			}
		}
	}
	,balance: function(a) {
		if(a.child1 == null || a.height < 2) return a; else {
			var b = a.child1;
			var c = a.child2;
			var balance = c.height - b.height;
			if(balance > 1) {
				var f = c.child1;
				var g = c.child2;
				c.child1 = a;
				c.parent = a.parent;
				a.parent = c;
				if(c.parent != null) {
					if(c.parent.child1 == a) c.parent.child1 = c; else c.parent.child2 = c;
				} else this.root = c;
				if(f.height > g.height) {
					c.child2 = f;
					a.child2 = g;
					g.parent = a;
					a.aabb.setCombine(b.aabb,g.aabb);
					c.aabb.setCombine(a.aabb,f.aabb);
					a.height = 1 + (function($this) {
						var $r;
						var x = b.height;
						var y = g.height;
						$r = x > y?x:y;
						return $r;
					}(this));
					c.height = 1 + (function($this) {
						var $r;
						var x1 = a.height;
						var y1 = f.height;
						$r = x1 > y1?x1:y1;
						return $r;
					}(this));
				} else {
					c.child2 = g;
					a.child2 = f;
					f.parent = a;
					a.aabb.setCombine(b.aabb,f.aabb);
					c.aabb.setCombine(a.aabb,g.aabb);
					a.height = 1 + (function($this) {
						var $r;
						var x2 = b.height;
						var y2 = f.height;
						$r = x2 > y2?x2:y2;
						return $r;
					}(this));
					c.height = 1 + (function($this) {
						var $r;
						var x3 = a.height;
						var y3 = g.height;
						$r = x3 > y3?x3:y3;
						return $r;
					}(this));
				}
				return c;
			} else if(balance < -1) {
				var f1 = b.child1;
				var g1 = b.child2;
				b.child1 = a;
				b.parent = a.parent;
				a.parent = b;
				if(b.parent != null) {
					if(b.parent.child1 == a) b.parent.child1 = b; else b.parent.child2 = b;
				} else this.root = b;
				if(f1.height > g1.height) {
					b.child2 = f1;
					a.child1 = g1;
					g1.parent = a;
					a.aabb.setCombine(c.aabb,g1.aabb);
					b.aabb.setCombine(a.aabb,f1.aabb);
					a.height = 1 + (function($this) {
						var $r;
						var x4 = c.height;
						var y4 = g1.height;
						$r = x4 > y4?x4:y4;
						return $r;
					}(this));
					b.height = 1 + (function($this) {
						var $r;
						var x5 = a.height;
						var y5 = f1.height;
						$r = x5 > y5?x5:y5;
						return $r;
					}(this));
				} else {
					b.child2 = g1;
					a.child1 = f1;
					f1.parent = a;
					a.aabb.setCombine(c.aabb,f1.aabb);
					b.aabb.setCombine(a.aabb,g1.aabb);
					a.height = 1 + (function($this) {
						var $r;
						var x6 = c.height;
						var y6 = f1.height;
						$r = x6 > y6?x6:y6;
						return $r;
					}(this));
					b.height = 1 + (function($this) {
						var $r;
						var x7 = a.height;
						var y7 = g1.height;
						$r = x7 > y7?x7:y7;
						return $r;
					}(this));
				}
				return b;
			} else return a;
		}
	}
	,__class__: zpp_$nape_space_ZPP_$AABBTree
};
var zpp_$nape_space_ZPP_$DynAABBPhase = function(space) {
	this.treeStack = null;
	this.moves = null;
	this.syncs = null;
	this.pairs = null;
	this.dtree = null;
	this.stree = null;
	zpp_$nape_space_ZPP_$Broadphase.call(this);
	this.space = space;
	this.is_sweep = false;
	this.dynab = this;
	this.stree = new zpp_$nape_space_ZPP_$AABBTree();
	this.dtree = new zpp_$nape_space_ZPP_$AABBTree();
};
$hxClasses["zpp_nape.space.ZPP_DynAABBPhase"] = zpp_$nape_space_ZPP_$DynAABBPhase;
zpp_$nape_space_ZPP_$DynAABBPhase.__name__ = ["zpp_nape","space","ZPP_DynAABBPhase"];
zpp_$nape_space_ZPP_$DynAABBPhase.__super__ = zpp_$nape_space_ZPP_$Broadphase;
zpp_$nape_space_ZPP_$DynAABBPhase.prototype = $extend(zpp_$nape_space_ZPP_$Broadphase.prototype,{
	__insert: function(shape) {
		var node;
		if(zpp_$nape_space_ZPP_$AABBNode.zpp_pool == null) node = new zpp_$nape_space_ZPP_$AABBNode(); else {
			node = zpp_$nape_space_ZPP_$AABBNode.zpp_pool;
			zpp_$nape_space_ZPP_$AABBNode.zpp_pool = node.next;
			node.next = null;
		}
		if(zpp_$nape_geom_ZPP_$AABB.zpp_pool == null) node.aabb = new zpp_$nape_geom_ZPP_$AABB(); else {
			node.aabb = zpp_$nape_geom_ZPP_$AABB.zpp_pool;
			zpp_$nape_geom_ZPP_$AABB.zpp_pool = node.aabb.next;
			node.aabb.next = null;
		}
		null;
		node.moved = false;
		node.synced = false;
		node.first_sync = false;
		node.shape = shape;
		shape.node = node;
		node.synced = true;
		node.first_sync = true;
		node.snext = this.syncs;
		this.syncs = node;
	}
	,__remove: function(shape) {
		var node = shape.node;
		if(!node.first_sync) {
			if(node.dyn) this.dtree.removeLeaf(node); else this.stree.removeLeaf(node);
		}
		shape.node = null;
		if(node.synced) {
			var pre1 = null;
			var cur1 = this.syncs;
			while(cur1 != null) {
				if(cur1 == node) break;
				pre1 = cur1;
				cur1 = cur1.snext;
			}
			if(pre1 == null) this.syncs = cur1.snext; else pre1.snext = cur1.snext;
			cur1.snext = null;
			node.synced = false;
		}
		if(node.moved) {
			var pre2 = null;
			var cur2 = this.moves;
			while(cur2 != null) {
				if(cur2 == node) break;
				pre2 = cur2;
				cur2 = cur2.mnext;
			}
			if(pre2 == null) this.moves = cur2.mnext; else pre2.mnext = cur2.mnext;
			cur2.mnext = null;
			node.moved = false;
		}
		var pre = null;
		var cur = this.pairs;
		while(cur != null) {
			var nxt = cur.next;
			if(cur.n1 == node || cur.n2 == node) {
				if(pre == null) this.pairs = nxt; else pre.next = nxt;
				if(cur.arb != null) cur.arb.pair = null;
				cur.arb = null;
				cur.n1.shape.pairs.remove(cur);
				cur.n2.shape.pairs.remove(cur);
				var o = cur;
				o.n1 = o.n2 = null;
				o.sleeping = false;
				o.next = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
				zpp_$nape_space_ZPP_$AABBPair.zpp_pool = o;
				cur = nxt;
				continue;
			}
			pre = cur;
			cur = nxt;
		}
		while(!(shape.pairs.head == null)) {
			var cur3 = shape.pairs.pop_unsafe();
			if(cur3.n1 == node) cur3.n2.shape.pairs.remove(cur3); else cur3.n1.shape.pairs.remove(cur3);
			if(cur3.arb != null) cur3.arb.pair = null;
			cur3.arb = null;
			var o1 = cur3;
			o1.n1 = o1.n2 = null;
			o1.sleeping = false;
			o1.next = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
			zpp_$nape_space_ZPP_$AABBPair.zpp_pool = o1;
		}
		var o2 = node;
		o2.free();
		o2.next = zpp_$nape_space_ZPP_$AABBNode.zpp_pool;
		zpp_$nape_space_ZPP_$AABBNode.zpp_pool = o2;
	}
	,__sync: function(shape) {
		var node = shape.node;
		if(!node.synced) {
			if(!this.space.continuous) {
				if(shape.zip_aabb) {
					if(shape.body != null) {
						shape.zip_aabb = false;
						if(shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) shape.circle.__validate_aabb(); else shape.polygon.__validate_aabb();
					}
				}
			}
			var sync;
			sync = node.dyn != (shape.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC?false:!shape.body.component.sleeping) || !node.aabb.contains(shape.aabb);
			if(sync) {
				node.synced = true;
				node.snext = this.syncs;
				this.syncs = node;
			}
		}
	}
	,sync_broadphase: function() {
		this.space.validation();
		if(this.syncs != null) {
			if(this.moves == null) {
				var node = this.syncs;
				while(node != null) {
					var shape = node.shape;
					if(!node.first_sync) {
						var tree1;
						if(node.dyn) tree1 = this.dtree; else tree1 = this.stree;
						tree1.inlined_removeLeaf(node);
					} else node.first_sync = false;
					var aabb = node.aabb;
					if(!this.space.continuous) {
						if(shape.zip_aabb) {
							if(shape.body != null) {
								shape.zip_aabb = false;
								if(shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) shape.circle.__validate_aabb(); else shape.polygon.__validate_aabb();
							}
						}
					}
					aabb.setExpand(shape.aabb,3.0);
					var tree;
					if(shape.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC?node.dyn = false:node.dyn = !shape.body.component.sleeping) tree = this.dtree; else tree = this.stree;
					tree.inlined_insertLeaf(node);
					node.synced = false;
					node.moved = true;
					node.mnext = node.snext;
					node.snext = null;
					node = node.mnext;
				}
				var t = this.syncs;
				this.syncs = this.moves;
				this.moves = t;
			} else while(this.syncs != null) {
				var node1;
				var ret = this.syncs;
				this.syncs = ret.snext;
				ret.snext = null;
				node1 = ret;
				var shape1 = node1.shape;
				if(!node1.first_sync) {
					var tree3;
					if(node1.dyn) tree3 = this.dtree; else tree3 = this.stree;
					tree3.inlined_removeLeaf(node1);
				} else node1.first_sync = false;
				var aabb1 = node1.aabb;
				if(!this.space.continuous) {
					if(shape1.zip_aabb) {
						if(shape1.body != null) {
							shape1.zip_aabb = false;
							if(shape1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) shape1.circle.__validate_aabb(); else shape1.polygon.__validate_aabb();
						}
					}
				}
				aabb1.setExpand(shape1.aabb,3.0);
				var tree2;
				if(shape1.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC?node1.dyn = false:node1.dyn = !shape1.body.component.sleeping) tree2 = this.dtree; else tree2 = this.stree;
				tree2.inlined_insertLeaf(node1);
				node1.synced = false;
				if(!node1.moved) {
					node1.moved = true;
					node1.mnext = this.moves;
					this.moves = node1;
				}
			}
		}
	}
	,broadphase: function(space,discrete) {
		var node = this.syncs;
		while(node != null) {
			var shape = node.shape;
			if(!node.first_sync) {
				var tree1;
				if(node.dyn) tree1 = this.dtree; else tree1 = this.stree;
				tree1.inlined_removeLeaf(node);
			} else node.first_sync = false;
			var aabb = node.aabb;
			if(!space.continuous) {
				if(shape.zip_aabb) {
					if(shape.body != null) {
						shape.zip_aabb = false;
						if(shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) shape.circle.__validate_aabb(); else shape.polygon.__validate_aabb();
					}
				}
			}
			aabb.setExpand(shape.aabb,3.0);
			var tree;
			if(shape.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC?node.dyn = false:node.dyn = !shape.body.component.sleeping) tree = this.dtree; else tree = this.stree;
			tree.inlined_insertLeaf(node);
			node.synced = false;
			node = node.snext;
		}
		while(this.syncs != null) {
			var leaf;
			var ret = this.syncs;
			this.syncs = ret.snext;
			ret.snext = null;
			leaf = ret;
			if(leaf.moved) continue;
			leaf.moved = false;
			var lshape = leaf.shape;
			var lbody = lshape.body;
			if(lbody.component.sleeping) continue;
			var ab = leaf.aabb;
			var stack = null;
			if(this.dtree.root != null) {
				this.dtree.root.next = stack;
				stack = this.dtree.root;
			}
			while(stack != null) {
				var node1;
				var ret1 = stack;
				stack = ret1.next;
				ret1.next = null;
				node1 = ret1;
				if(node1 == leaf) continue;
				if(node1.child1 == null) {
					var shape1 = node1.shape;
					if(shape1.body != lshape.body && !(shape1.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && lshape.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
						if(ab.intersect(node1.aabb)) {
							var id;
							var di;
							if(lshape.id < shape1.id) {
								id = lshape.id;
								di = shape1.id;
							} else {
								id = shape1.id;
								di = lshape.id;
							}
							var s;
							if(lshape.pairs.length < shape1.pairs.length) s = lshape; else s = shape1;
							var p = null;
							var cx_ite = s.pairs.head;
							while(cx_ite != null) {
								var px = cx_ite.elt;
								if(px.id == id && px.di == di) {
									p = px;
									break;
								}
								cx_ite = cx_ite.next;
							}
							if(p != null) {
								if(p.sleeping) {
									p.sleeping = false;
									p.next = this.pairs;
									this.pairs = p;
									p.first = true;
								}
								continue;
							}
							if(zpp_$nape_space_ZPP_$AABBPair.zpp_pool == null) p = new zpp_$nape_space_ZPP_$AABBPair(); else {
								p = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
								zpp_$nape_space_ZPP_$AABBPair.zpp_pool = p.next;
								p.next = null;
							}
							null;
							p.n1 = leaf;
							p.n2 = node1;
							p.id = id;
							p.di = di;
							p.next = this.pairs;
							this.pairs = p;
							p.first = true;
							lshape.pairs.inlined_add(p);
							shape1.pairs.inlined_add(p);
						}
					}
				} else if(ab.intersect(node1.aabb)) {
					if(node1.child1 != null) {
						node1.child1.next = stack;
						stack = node1.child1;
					}
					if(node1.child2 != null) {
						node1.child2.next = stack;
						stack = node1.child2;
					}
				}
			}
			if(this.stree.root != null) {
				this.stree.root.next = stack;
				stack = this.stree.root;
			}
			while(stack != null) {
				var node2;
				var ret2 = stack;
				stack = ret2.next;
				ret2.next = null;
				node2 = ret2;
				if(node2 == leaf) continue;
				if(node2.child1 == null) {
					var shape2 = node2.shape;
					if(shape2.body != lshape.body && !(shape2.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && lshape.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
						if(ab.intersect(node2.aabb)) {
							var id1;
							var di1;
							if(lshape.id < shape2.id) {
								id1 = lshape.id;
								di1 = shape2.id;
							} else {
								id1 = shape2.id;
								di1 = lshape.id;
							}
							var s1;
							if(lshape.pairs.length < shape2.pairs.length) s1 = lshape; else s1 = shape2;
							var p1 = null;
							var cx_ite1 = s1.pairs.head;
							while(cx_ite1 != null) {
								var px1 = cx_ite1.elt;
								if(px1.id == id1 && px1.di == di1) {
									p1 = px1;
									break;
								}
								cx_ite1 = cx_ite1.next;
							}
							if(p1 != null) {
								if(p1.sleeping) {
									p1.sleeping = false;
									p1.next = this.pairs;
									this.pairs = p1;
									p1.first = true;
								}
								continue;
							}
							if(zpp_$nape_space_ZPP_$AABBPair.zpp_pool == null) p1 = new zpp_$nape_space_ZPP_$AABBPair(); else {
								p1 = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
								zpp_$nape_space_ZPP_$AABBPair.zpp_pool = p1.next;
								p1.next = null;
							}
							null;
							p1.n1 = leaf;
							p1.n2 = node2;
							p1.id = id1;
							p1.di = di1;
							p1.next = this.pairs;
							this.pairs = p1;
							p1.first = true;
							lshape.pairs.inlined_add(p1);
							shape2.pairs.inlined_add(p1);
						}
					}
				} else if(ab.intersect(node2.aabb)) {
					if(node2.child1 != null) {
						node2.child1.next = stack;
						stack = node2.child1;
					}
					if(node2.child2 != null) {
						node2.child2.next = stack;
						stack = node2.child2;
					}
				}
			}
		}
		while(this.moves != null) {
			var leaf1;
			var ret3 = this.moves;
			this.moves = ret3.mnext;
			ret3.mnext = null;
			leaf1 = ret3;
			leaf1.moved = false;
			var lshape1 = leaf1.shape;
			var lbody1 = lshape1.body;
			if(lbody1.component.sleeping) continue;
			var ab1 = leaf1.aabb;
			var stack1 = null;
			if(this.dtree.root != null) {
				this.dtree.root.next = stack1;
				stack1 = this.dtree.root;
			}
			while(stack1 != null) {
				var node3;
				var ret4 = stack1;
				stack1 = ret4.next;
				ret4.next = null;
				node3 = ret4;
				if(node3 == leaf1) continue;
				if(node3.child1 == null) {
					var shape3 = node3.shape;
					if(shape3.body != lshape1.body && !(shape3.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && lshape1.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
						if(ab1.intersect(node3.aabb)) {
							var id2;
							var di2;
							if(lshape1.id < shape3.id) {
								id2 = lshape1.id;
								di2 = shape3.id;
							} else {
								id2 = shape3.id;
								di2 = lshape1.id;
							}
							var s2;
							if(lshape1.pairs.length < shape3.pairs.length) s2 = lshape1; else s2 = shape3;
							var p2 = null;
							var cx_ite2 = s2.pairs.head;
							while(cx_ite2 != null) {
								var px2 = cx_ite2.elt;
								if(px2.id == id2 && px2.di == di2) {
									p2 = px2;
									break;
								}
								cx_ite2 = cx_ite2.next;
							}
							if(p2 != null) {
								if(p2.sleeping) {
									p2.sleeping = false;
									p2.next = this.pairs;
									this.pairs = p2;
									p2.first = true;
								}
								continue;
							}
							if(zpp_$nape_space_ZPP_$AABBPair.zpp_pool == null) p2 = new zpp_$nape_space_ZPP_$AABBPair(); else {
								p2 = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
								zpp_$nape_space_ZPP_$AABBPair.zpp_pool = p2.next;
								p2.next = null;
							}
							null;
							p2.n1 = leaf1;
							p2.n2 = node3;
							p2.id = id2;
							p2.di = di2;
							p2.next = this.pairs;
							this.pairs = p2;
							p2.first = true;
							lshape1.pairs.inlined_add(p2);
							shape3.pairs.inlined_add(p2);
						}
					}
				} else if(ab1.intersect(node3.aabb)) {
					if(node3.child1 != null) {
						node3.child1.next = stack1;
						stack1 = node3.child1;
					}
					if(node3.child2 != null) {
						node3.child2.next = stack1;
						stack1 = node3.child2;
					}
				}
			}
			if(this.stree.root != null) {
				this.stree.root.next = stack1;
				stack1 = this.stree.root;
			}
			while(stack1 != null) {
				var node4;
				var ret5 = stack1;
				stack1 = ret5.next;
				ret5.next = null;
				node4 = ret5;
				if(node4 == leaf1) continue;
				if(node4.child1 == null) {
					var shape4 = node4.shape;
					if(shape4.body != lshape1.body && !(shape4.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && lshape1.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
						if(ab1.intersect(node4.aabb)) {
							var id3;
							var di3;
							if(lshape1.id < shape4.id) {
								id3 = lshape1.id;
								di3 = shape4.id;
							} else {
								id3 = shape4.id;
								di3 = lshape1.id;
							}
							var s3;
							if(lshape1.pairs.length < shape4.pairs.length) s3 = lshape1; else s3 = shape4;
							var p3 = null;
							var cx_ite3 = s3.pairs.head;
							while(cx_ite3 != null) {
								var px3 = cx_ite3.elt;
								if(px3.id == id3 && px3.di == di3) {
									p3 = px3;
									break;
								}
								cx_ite3 = cx_ite3.next;
							}
							if(p3 != null) {
								if(p3.sleeping) {
									p3.sleeping = false;
									p3.next = this.pairs;
									this.pairs = p3;
									p3.first = true;
								}
								continue;
							}
							if(zpp_$nape_space_ZPP_$AABBPair.zpp_pool == null) p3 = new zpp_$nape_space_ZPP_$AABBPair(); else {
								p3 = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
								zpp_$nape_space_ZPP_$AABBPair.zpp_pool = p3.next;
								p3.next = null;
							}
							null;
							p3.n1 = leaf1;
							p3.n2 = node4;
							p3.id = id3;
							p3.di = di3;
							p3.next = this.pairs;
							this.pairs = p3;
							p3.first = true;
							lshape1.pairs.inlined_add(p3);
							shape4.pairs.inlined_add(p3);
						}
					}
				} else if(ab1.intersect(node4.aabb)) {
					if(node4.child1 != null) {
						node4.child1.next = stack1;
						stack1 = node4.child1;
					}
					if(node4.child2 != null) {
						node4.child2.next = stack1;
						stack1 = node4.child2;
					}
				}
			}
		}
		var pre = null;
		var cur = this.pairs;
		while(cur != null) {
			if(!cur.first && !cur.n1.aabb.intersect(cur.n2.aabb)) {
				if(pre == null) this.pairs = cur.next; else pre.next = cur.next;
				cur.n1.shape.pairs.inlined_try_remove(cur);
				cur.n2.shape.pairs.inlined_try_remove(cur);
				var nxt = cur.next;
				if(cur.arb != null) cur.arb.pair = null;
				cur.arb = null;
				var o = cur;
				o.n1 = o.n2 = null;
				o.sleeping = false;
				o.next = zpp_$nape_space_ZPP_$AABBPair.zpp_pool;
				zpp_$nape_space_ZPP_$AABBPair.zpp_pool = o;
				cur = nxt;
				continue;
			}
			var s11 = cur.n1.shape;
			var b1 = s11.body;
			var s21 = cur.n2.shape;
			var b2 = s21.body;
			if(!cur.first) {
				if((b1.component.sleeping || b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) && (b2.component.sleeping || b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
					cur.sleeping = true;
					if(pre == null) this.pairs = cur.next; else pre.next = cur.next;
					cur = cur.next;
					continue;
				}
			}
			cur.first = false;
			if(s11.aabb.intersect(s21.aabb)) {
				var oarb = cur.arb;
				if(discrete) cur.arb = space.narrowPhase(s11,s21,!(b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) || !(b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC),cur.arb,false); else cur.arb = space.continuousEvent(s11,s21,!(b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) || !(b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC),cur.arb,false);
				if(cur.arb == null) {
					if(oarb != null) oarb.pair = null;
				} else cur.arb.pair = cur;
			}
			pre = cur;
			cur = cur.next;
		}
	}
	,bodiesUnderPoint: function(x,y,filter,output) {
		this.sync_broadphase();
		var v = zpp_$nape_geom_ZPP_$Vec2.get(x,y,null);
		var ret;
		if(output == null) ret = new nape_phys_BodyList(); else ret = output;
		if(this.stree.root != null) {
			if(this.treeStack == null) this.treeStack = new zpp_$nape_util_ZNPList_$ZPP_$AABBNode();
			this.treeStack.add(this.stree.root);
			while(!(this.treeStack.head == null)) {
				var node = this.treeStack.pop_unsafe();
				if(node.aabb.containsPoint(v)) {
					if(node.child1 == null) {
						var body = node.shape.body.outer;
						if(!ret.has(body)) {
							if(filter == null || node.shape.filter.shouldCollide(filter)) {
								if(node.shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
									if(zpp_$nape_geom_ZPP_$Collide.circleContains(node.shape.circle,v)) ret.push(body);
								} else if(zpp_$nape_geom_ZPP_$Collide.polyContains(node.shape.polygon,v)) ret.push(body);
							}
						}
					} else {
						if(node.child1 != null) this.treeStack.add(node.child1);
						if(node.child2 != null) this.treeStack.add(node.child2);
					}
				}
			}
		}
		if(this.dtree.root != null) {
			if(this.treeStack == null) this.treeStack = new zpp_$nape_util_ZNPList_$ZPP_$AABBNode();
			this.treeStack.add(this.dtree.root);
			while(!(this.treeStack.head == null)) {
				var node1 = this.treeStack.pop_unsafe();
				if(node1.aabb.containsPoint(v)) {
					if(node1.child1 == null) {
						var body1 = node1.shape.body.outer;
						if(!ret.has(body1)) {
							if(filter == null || node1.shape.filter.shouldCollide(filter)) {
								if(node1.shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
									if(zpp_$nape_geom_ZPP_$Collide.circleContains(node1.shape.circle,v)) ret.push(body1);
								} else if(zpp_$nape_geom_ZPP_$Collide.polyContains(node1.shape.polygon,v)) ret.push(body1);
							}
						}
					} else {
						if(node1.child1 != null) this.treeStack.add(node1.child1);
						if(node1.child2 != null) this.treeStack.add(node1.child2);
					}
				}
			}
		}
		var o = v;
		if(o.outer != null) {
			o.outer.zpp_inner = null;
			o.outer = null;
		}
		o._isimmutable = null;
		o._validate = null;
		o._invalidate = null;
		o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
		return ret;
	}
	,__class__: zpp_$nape_space_ZPP_$DynAABBPhase
});
var zpp_$nape_space_ZPP_$Island = function() {
	this.waket = 0;
	this.sleep = false;
	this.comps = null;
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
	this.comps = new zpp_$nape_util_ZNPList_$ZPP_$Component();
};
$hxClasses["zpp_nape.space.ZPP_Island"] = zpp_$nape_space_ZPP_$Island;
zpp_$nape_space_ZPP_$Island.__name__ = ["zpp_nape","space","ZPP_Island"];
zpp_$nape_space_ZPP_$Island.prototype = {
	inlined_add: function(o) {
		var temp;
		o._inuse = true;
		temp = o;
		temp.next = this.next;
		this.next = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.next;
		this.next = ret.next;
		ret._inuse = false;
		if(this.next == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,inlined_pop_unsafe: function() {
		var ret = this.next;
		this.pop();
		return ret;
	}
	,__class__: zpp_$nape_space_ZPP_$Island
};
var zpp_$nape_space_ZPP_$Component = function() {
	this.woken = false;
	this.waket = 0;
	this.sleeping = false;
	this.island = null;
	this.constraint = null;
	this.body = null;
	this.isBody = false;
	this.rank = 0;
	this.parent = null;
	this.next = null;
	this.sleeping = false;
	this.island = null;
	this.parent = this;
	this.rank = 0;
	this.woken = false;
};
$hxClasses["zpp_nape.space.ZPP_Component"] = zpp_$nape_space_ZPP_$Component;
zpp_$nape_space_ZPP_$Component.__name__ = ["zpp_nape","space","ZPP_Component"];
zpp_$nape_space_ZPP_$Component.prototype = {
	__class__: zpp_$nape_space_ZPP_$Component
};
var zpp_$nape_space_ZPP_$CallbackSet = function() {
	this.lazydel = false;
	this.freed = false;
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this._inuse = false;
	this.next = null;
	this.int2 = null;
	this.int1 = null;
	this.di = 0;
	this.id = 0;
	this.arbiters = new zpp_$nape_util_ZNPList_$ZPP_$Arbiter();
};
$hxClasses["zpp_nape.space.ZPP_CallbackSet"] = zpp_$nape_space_ZPP_$CallbackSet;
zpp_$nape_space_ZPP_$CallbackSet.__name__ = ["zpp_nape","space","ZPP_CallbackSet"];
zpp_$nape_space_ZPP_$CallbackSet.get = function(i1,i2) {
	var ret;
	if(zpp_$nape_space_ZPP_$CallbackSet.zpp_pool == null) ret = new zpp_$nape_space_ZPP_$CallbackSet(); else {
		ret = zpp_$nape_space_ZPP_$CallbackSet.zpp_pool;
		zpp_$nape_space_ZPP_$CallbackSet.zpp_pool = ret.next;
		ret.next = null;
	}
	ret.freed = false;
	ret.lazydel = false;
	ret.COLLISIONstate = zpp_$nape_util_ZPP_$Flags.id_PreFlag_ACCEPT;
	ret.COLLISIONstamp = 0;
	ret.SENSORstate = zpp_$nape_util_ZPP_$Flags.id_PreFlag_ACCEPT;
	ret.SENSORstamp = 0;
	ret.FLUIDstate = zpp_$nape_util_ZPP_$Flags.id_PreFlag_ACCEPT;
	ret.FLUIDstamp = 0;
	if(i1.id < i2.id) {
		ret.int1 = i1;
		ret.int2 = i2;
	} else {
		ret.int1 = i2;
		ret.int2 = i1;
	}
	ret.id = ret.int1.id;
	ret.di = ret.int2.id;
	return ret;
};
zpp_$nape_space_ZPP_$CallbackSet.prototype = {
	inlined_add: function(o) {
		var temp;
		o._inuse = true;
		temp = o;
		temp.next = this.next;
		this.next = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.next;
			ret = old.next;
			this.next = ret;
			if(this.next == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		old._inuse = false;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,remove_arb: function(x) {
		this.arbiters.inlined_try_remove(x);
	}
	,empty_arb: function(type) {
		var retvar;
		retvar = true;
		var cx_ite = this.arbiters.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if((x.type & type) == 0) {
				cx_ite = cx_ite.next;
				continue;
			} else {
				retvar = false;
				break;
			}
			cx_ite = cx_ite.next;
		}
		return retvar;
	}
	,sleeping: function() {
		var ret;
		ret = true;
		var cx_ite = this.arbiters.head;
		while(cx_ite != null) {
			var x = cx_ite.elt;
			if(x.sleeping) {
				cx_ite = cx_ite.next;
				continue;
			} else {
				ret = false;
				break;
			}
			cx_ite = cx_ite.next;
		}
		return ret;
	}
	,__class__: zpp_$nape_space_ZPP_$CallbackSet
};
var zpp_$nape_space_ZPP_$CbSetManager = function(space) {
	this.space = null;
	this.cbsets = null;
	if(zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool == null) this.cbsets = new zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet(); else {
		this.cbsets = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool;
		zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool = this.cbsets.next;
		this.cbsets.next = null;
	}
	null;
	this.cbsets.lt = zpp_$nape_callbacks_ZPP_$CbSet.setlt;
	this.space = space;
};
$hxClasses["zpp_nape.space.ZPP_CbSetManager"] = zpp_$nape_space_ZPP_$CbSetManager;
zpp_$nape_space_ZPP_$CbSetManager.__name__ = ["zpp_nape","space","ZPP_CbSetManager"];
zpp_$nape_space_ZPP_$CbSetManager.prototype = {
	get: function(cbTypes) {
		if(cbTypes.head == null) return null;
		var fake;
		if(zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool == null) fake = new zpp_$nape_callbacks_ZPP_$CbSet(); else {
			fake = zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool;
			zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool = fake.next;
			fake.next = null;
		}
		null;
		var faketypes = fake.cbTypes;
		fake.cbTypes = cbTypes;
		var res = this.cbsets.find_weak(fake);
		var ret;
		if(res != null) ret = res.data; else {
			var set = zpp_$nape_callbacks_ZPP_$CbSet.get(cbTypes);
			this.cbsets.insert(set);
			set.manager = this;
			ret = set;
		}
		fake.cbTypes = faketypes;
		var o = fake;
		o.free();
		o.next = zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool;
		zpp_$nape_callbacks_ZPP_$CbSet.zpp_pool = o;
		return ret;
	}
	,remove: function(set) {
		this.cbsets.remove(set);
		while(!(set.cbpairs.head == null)) {
			var pair = set.cbpairs.pop_unsafe();
			if(pair.a != pair.b) {
				if(set == pair.a) pair.b.cbpairs.remove(pair); else pair.a.cbpairs.remove(pair);
			}
			var o = pair;
			o.a = o.b = null;
			o.listeners.clear();
			o.next = zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool;
			zpp_$nape_callbacks_ZPP_$CbSetPair.zpp_pool = o;
		}
		set.manager = null;
	}
	,validate: function() {
		if(!this.cbsets.empty()) {
			var set_ite = this.cbsets.parent;
			while(set_ite.prev != null) set_ite = set_ite.prev;
			while(set_ite != null) {
				var cb = set_ite.data;
				cb.validate();
				if(set_ite.next != null) {
					set_ite = set_ite.next;
					while(set_ite.prev != null) set_ite = set_ite.prev;
				} else {
					while(set_ite.parent != null && set_ite == set_ite.parent.next) set_ite = set_ite.parent;
					set_ite = set_ite.parent;
				}
			}
		}
	}
	,pair: function(a,b) {
		var ret = null;
		var pairs;
		if(a.cbpairs.length < b.cbpairs.length) pairs = a.cbpairs; else pairs = b.cbpairs;
		var cx_ite = pairs.head;
		while(cx_ite != null) {
			var p = cx_ite.elt;
			if(p.a == a && p.b == b || p.a == b && p.b == a) {
				ret = p;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(ret == null) {
			ret = zpp_$nape_callbacks_ZPP_$CbSetPair.get(a,b);
			a.cbpairs.add(ret);
			if(b != a) b.cbpairs.add(ret);
		}
		if(ret.zip_listeners) {
			ret.zip_listeners = false;
			ret.__validate();
		}
		return ret;
	}
	,__class__: zpp_$nape_space_ZPP_$CbSetManager
};
var zpp_$nape_space_ZPP_$Space = function(gravity,broadphase) {
	this.prelisteners = null;
	this.precb = null;
	this.continuous = false;
	this.toiEvents = null;
	this.pre_dt = 0.0;
	this.cbsets = null;
	this.callbackset_list = null;
	this.callbacks = null;
	this.wrap_listeners = null;
	this.listeners = null;
	this.islands = null;
	this.staticsleep = null;
	this.wrap_livecon = null;
	this.live_constraints = null;
	this.wrap_live = null;
	this.live = null;
	this.s_arbiters = null;
	this.f_arbiters = null;
	this.c_arbiters_false = null;
	this.c_arbiters_true = null;
	this.sortcontacts = false;
	this.time = 0.0;
	this.midstep = false;
	this.stamp = 0;
	this.global_ang_drag = 0.0;
	this.global_lin_drag = 0.0;
	this.__static = null;
	this.bphase = null;
	this.kinematics = null;
	this.wrap_constraints = null;
	this.constraints = null;
	this.wrap_compounds = null;
	this.compounds = null;
	this.wrap_bodies = null;
	this.bodies = null;
	this.gravityy = 0.0;
	this.gravityx = 0.0;
	this.outer = null;
	this.toiEvents = new zpp_$nape_util_ZNPList_$ZPP_$ToiEvent();
	this.global_lin_drag = 0.015;
	this.global_ang_drag = 0.015;
	zpp_$nape_callbacks_ZPP_$Callback.internal = true;
	this.precb = new nape_callbacks_PreCallback();
	this.precb.zpp_inner = new zpp_$nape_callbacks_ZPP_$Callback();
	zpp_$nape_callbacks_ZPP_$Callback.internal = false;
	this.sortcontacts = true;
	this.pre_dt = 0.0;
	if(broadphase == null || broadphase == (function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE = new nape_space_Broadphase();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.Broadphase_DYNAMIC_AABB_TREE;
		return $r;
	}(this))) this.bphase = new zpp_$nape_space_ZPP_$DynAABBPhase(this); else if(broadphase == (function($this) {
		var $r;
		if(zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE == null) {
			zpp_$nape_util_ZPP_$Flags.internal = true;
			zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE = new nape_space_Broadphase();
			zpp_$nape_util_ZPP_$Flags.internal = false;
		}
		$r = zpp_$nape_util_ZPP_$Flags.Broadphase_SWEEP_AND_PRUNE;
		return $r;
	}(this))) this.bphase = new zpp_$nape_space_ZPP_$SweepPhase(this);
	this.time = 0.0;
	var me = this;
	if(gravity != null) {
		this.gravityx = gravity.x;
		this.gravityy = gravity.y;
	} else {
		this.gravityx = 0;
		this.gravityy = 0;
	}
	this.bodies = new zpp_$nape_util_ZNPList_$ZPP_$Body();
	this.wrap_bodies = zpp_$nape_util_ZPP_$BodyList.get(this.bodies);
	this.wrap_bodies.zpp_inner.adder = $bind(this,this.bodies_adder);
	this.wrap_bodies.zpp_inner.subber = $bind(this,this.bodies_subber);
	this.wrap_bodies.zpp_inner._modifiable = $bind(this,this.bodies_modifiable);
	this.compounds = new zpp_$nape_util_ZNPList_$ZPP_$Compound();
	this.wrap_compounds = zpp_$nape_util_ZPP_$CompoundList.get(this.compounds);
	this.wrap_compounds.zpp_inner.adder = $bind(this,this.compounds_adder);
	this.wrap_compounds.zpp_inner.subber = $bind(this,this.compounds_subber);
	this.wrap_compounds.zpp_inner._modifiable = $bind(this,this.compounds_modifiable);
	this.kinematics = new zpp_$nape_util_ZNPList_$ZPP_$Body();
	this.c_arbiters_true = new zpp_$nape_util_ZNPList_$ZPP_$ColArbiter();
	this.c_arbiters_false = new zpp_$nape_util_ZNPList_$ZPP_$ColArbiter();
	this.f_arbiters = new zpp_$nape_util_ZNPList_$ZPP_$FluidArbiter();
	this.s_arbiters = new zpp_$nape_util_ZNPList_$ZPP_$SensorArbiter();
	this.islands = new zpp_$nape_space_ZPP_$Island();
	this.live = new zpp_$nape_util_ZNPList_$ZPP_$Body();
	this.wrap_live = zpp_$nape_util_ZPP_$BodyList.get(this.live,true);
	this.staticsleep = new zpp_$nape_util_ZNPList_$ZPP_$Body();
	this.constraints = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this.wrap_constraints = zpp_$nape_util_ZPP_$ConstraintList.get(this.constraints);
	this.wrap_constraints.zpp_inner.adder = $bind(this,this.constraints_adder);
	this.wrap_constraints.zpp_inner.subber = $bind(this,this.constraints_subber);
	this.wrap_constraints.zpp_inner._modifiable = $bind(this,this.constraints_modifiable);
	this.live_constraints = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this.wrap_livecon = zpp_$nape_util_ZPP_$ConstraintList.get(this.live_constraints,true);
	this.__static = zpp_$nape_phys_ZPP_$Body.__static();
	this.__static.zpp_inner.space = this;
	this.callbacks = new zpp_$nape_callbacks_ZPP_$Callback();
	this.midstep = false;
	this.listeners = new zpp_$nape_util_ZNPList_$ZPP_$Listener();
	this.wrap_listeners = zpp_$nape_util_ZPP_$ListenerList.get(this.listeners);
	this.wrap_listeners.zpp_inner.adder = $bind(this,this.listeners_adder);
	this.wrap_listeners.zpp_inner.subber = $bind(this,this.listeners_subber);
	this.wrap_listeners.zpp_inner._modifiable = $bind(this,this.listeners_modifiable);
	this.callbackset_list = new zpp_$nape_space_ZPP_$CallbackSet();
	this.mrca1 = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
	this.mrca2 = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
	this.prelisteners = new zpp_$nape_util_ZNPList_$ZPP_$InteractionListener();
	this.cbsets = new zpp_$nape_space_ZPP_$CbSetManager(this);
};
$hxClasses["zpp_nape.space.ZPP_Space"] = zpp_$nape_space_ZPP_$Space;
zpp_$nape_space_ZPP_$Space.__name__ = ["zpp_nape","space","ZPP_Space"];
zpp_$nape_space_ZPP_$Space.prototype = {
	bodies_adder: function(x) {
		if(x.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Body belonging to a Compound, only the root Compound space can be set");
		if(x.zpp_inner.space != this) {
			if(x.zpp_inner.space != null) x.zpp_inner.space.outer.zpp_inner.wrap_bodies.remove(x);
			this.addBody(x.zpp_inner);
			return true;
		} else return false;
	}
	,bodies_subber: function(x) {
		this.remBody(x.zpp_inner);
	}
	,bodies_modifiable: function() {
		if(this.midstep) throw new js__$Boot_HaxeError("Error: Space::bodies cannot be set during space step()");
	}
	,compounds_adder: function(x) {
		if(x.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of an inner Compound, only the root Compound space can be set");
		if(x.zpp_inner.space != this) {
			if(x.zpp_inner.space != null) x.zpp_inner.space.wrap_compounds.remove(x);
			this.addCompound(x.zpp_inner);
			return true;
		} else return false;
	}
	,compounds_subber: function(x) {
		this.remCompound(x.zpp_inner);
	}
	,compounds_modifiable: function() {
		if(this.midstep) throw new js__$Boot_HaxeError("Error: Space::compounds cannot be set during space step()");
	}
	,constraints_adder: function(x) {
		if(x.zpp_inner.compound != null) throw new js__$Boot_HaxeError("Error: Cannot set the space of a Constraint belonging to a Compound, only the root Compound space can be set");
		if(x.zpp_inner.space != this) {
			if(x.zpp_inner.space != null) x.zpp_inner.space.outer.zpp_inner.wrap_constraints.remove(x);
			this.addConstraint(x.zpp_inner);
			return true;
		} else return false;
	}
	,constraints_subber: function(x) {
		this.remConstraint(x.zpp_inner);
	}
	,constraints_modifiable: function() {
		if(this.midstep) throw new js__$Boot_HaxeError("Error: Space::constraints cannot be set during space step()");
	}
	,listeners_adder: function(x) {
		if(x.zpp_inner.space != this) {
			if(x.zpp_inner.space != null) x.zpp_inner.space.outer.zpp_inner.wrap_listeners.remove(x);
			this.addListener(x.zpp_inner);
			return true;
		} else return false;
	}
	,listeners_subber: function(x) {
		this.remListener(x.zpp_inner);
	}
	,listeners_modifiable: function() {
		if(this.midstep) throw new js__$Boot_HaxeError("Error: Space::listeners cannot be set during space step()");
	}
	,addListener: function(x) {
		x.space = this;
		x.addedToSpace();
		if(x.interaction != null) null;
	}
	,remListener: function(x) {
		if(x.interaction != null) null;
		x.removedFromSpace();
		x.space = null;
	}
	,add_callbackset: function(cb) {
		cb.int1.cbsets.inlined_add(cb);
		cb.int2.cbsets.inlined_add(cb);
		this.callbackset_list.inlined_add(cb);
	}
	,remove_callbackset: function(cb) {
		cb.lazydel = true;
		cb.int1.cbsets.inlined_try_remove(cb);
		cb.int2.cbsets.inlined_try_remove(cb);
	}
	,transmitType: function(p,new_type) {
		var o = p;
		if(!o.world) {
			o.component.waket = this.stamp + (this.midstep?0:1);
			if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
			if(o.component.sleeping) this.really_wake(o,false);
		}
		if(p.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.live.remove(p); else if(p.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) {
			this.kinematics.remove(p);
			this.staticsleep.remove(p);
		} else if(p.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) this.staticsleep.remove(p);
		p.type = new_type;
		if(p.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) this.kinematics.add(p);
		if(p.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) this.static_validation(p);
		p.component.sleeping = true;
		var o1 = p;
		if(!o1.world) {
			o1.component.waket = this.stamp + (this.midstep?0:1);
			if(o1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o1.kinematicDelaySleep = true;
			if(o1.component.sleeping) this.really_wake(o1,true);
		}
	}
	,added_shape: function(s,dontwake) {
		if(dontwake == null) dontwake = false;
		if(!dontwake) {
			var o = s.body;
			if(!o.world) {
				o.component.waket = this.stamp + (this.midstep?0:1);
				if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
				if(o.component.sleeping) this.really_wake(o,false);
			}
		}
		this.bphase.insert(s);
		s.addedToSpace();
	}
	,removed_shape: function(s,deleting) {
		if(deleting == null) deleting = false;
		var _g = this;
		var body = s.body;
		if(!deleting) body.wake();
		var pre = null;
		var cx_ite = body.arbiters.head;
		while(cx_ite != null) {
			var xarb = [cx_ite.elt];
			var rem = xarb[0].ws1 == s || xarb[0].ws2 == s;
			if(rem) {
				if(xarb[0].present != 0) {
					this.MRCA_chains(xarb[0].ws1,xarb[0].ws2);
					var cx_ite1 = this.mrca1.head;
					while(cx_ite1 != null) {
						var i1 = cx_ite1.elt;
						var cx_ite2 = this.mrca2.head;
						while(cx_ite2 != null) {
							var i2 = cx_ite2.elt;
							var cb1 = i1.cbSet;
							var cb2 = i2.cbSet;
							cb1.validate();
							cb2.validate();
							if(cb1.manager.pair(cb1,cb2).empty_intersection()) {
								cx_ite2 = cx_ite2.next;
								continue;
							}
							var callbackset = [zpp_$nape_phys_ZPP_$Interactor.get(i1,i2)];
							callbackset[0].remove_arb(xarb[0]);
							xarb[0].present--;
							cb1.manager.pair(cb1,cb2).forall(zpp_$nape_util_ZPP_$Flags.id_CbEvent_END,(function(callbackset,xarb) {
								return function(listener) {
									if((listener.itype & xarb[0].type) != 0 && callbackset[0].empty_arb(listener.itype)) {
										var cb = _g.push_callback(listener);
										cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_END;
										zpp_$nape_phys_ZPP_$Interactor.int_callback(callbackset[0],listener,cb);
										cb.set = callbackset[0];
									}
								};
							})(callbackset,xarb));
							if(callbackset[0].arbiters.head == null) this.remove_callbackset(callbackset[0]);
							cx_ite2 = cx_ite2.next;
						}
						cx_ite1 = cx_ite1.next;
					}
				}
				if(xarb[0].b1 != body && xarb[0].b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
					var o = xarb[0].b1;
					if(!o.world) {
						o.component.waket = this.stamp + (this.midstep?0:1);
						if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
						if(o.component.sleeping) this.really_wake(o,false);
					}
				}
				if(xarb[0].b2 != body && xarb[0].b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
					var o1 = xarb[0].b2;
					if(!o1.world) {
						o1.component.waket = this.stamp + (this.midstep?0:1);
						if(o1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o1.kinematicDelaySleep = true;
						if(o1.component.sleeping) this.really_wake(o1,false);
					}
				}
				xarb[0].cleared = true;
				if(body == null || xarb[0].b2 == body) xarb[0].b1.arbiters.inlined_try_remove(xarb[0]);
				if(body == null || xarb[0].b1 == body) xarb[0].b2.arbiters.inlined_try_remove(xarb[0]);
				if(xarb[0].pair != null) {
					xarb[0].pair.arb = null;
					xarb[0].pair = null;
				}
				xarb[0].active = false;
				this.f_arbiters.modified = true;
				cx_ite = body.arbiters.erase(pre);
				continue;
			}
			pre = cx_ite;
			cx_ite = cx_ite.next;
		}
		this.bphase.remove(s);
		s.removedFromSpace();
	}
	,addConstraint: function(con) {
		con.space = this;
		con.addedToSpace();
		if(con.active) {
			con.component.sleeping = true;
			this.wake_constraint(con,true);
		}
	}
	,remConstraint: function(con) {
		if(con.active) {
			this.wake_constraint(con,true);
			this.live_constraints.remove(con);
		}
		con.removedFromSpace();
		con.space = null;
	}
	,addCompound: function(x) {
		x.space = this;
		x.addedToSpace();
		var cx_ite = x.bodies.head;
		while(cx_ite != null) {
			var i = cx_ite.elt;
			this.addBody(i);
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = x.constraints.head;
		while(cx_ite1 != null) {
			var i1 = cx_ite1.elt;
			this.addConstraint(i1);
			cx_ite1 = cx_ite1.next;
		}
		var cx_ite2 = x.compounds.head;
		while(cx_ite2 != null) {
			var i2 = cx_ite2.elt;
			this.addCompound(i2);
			cx_ite2 = cx_ite2.next;
		}
	}
	,remCompound: function(x) {
		var cx_ite = x.bodies.head;
		while(cx_ite != null) {
			var i = cx_ite.elt;
			this.remBody(i);
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = x.constraints.head;
		while(cx_ite1 != null) {
			var i1 = cx_ite1.elt;
			this.remConstraint(i1);
			cx_ite1 = cx_ite1.next;
		}
		var cx_ite2 = x.compounds.head;
		while(cx_ite2 != null) {
			var i2 = cx_ite2.elt;
			this.remCompound(i2);
			cx_ite2 = cx_ite2.next;
		}
		x.removedFromSpace();
		x.space = null;
	}
	,addBody: function(body,flag) {
		if(flag == null) flag = -1;
		body.space = this;
		body.addedToSpace();
		body.component.sleeping = true;
		var o = body;
		if(!o.world) {
			o.component.waket = this.stamp + (this.midstep?0:1);
			if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
			if(o.component.sleeping) this.really_wake(o,true);
		}
		var cx_ite = body.shapes.head;
		while(cx_ite != null) {
			var shape = cx_ite.elt;
			this.added_shape(shape,true);
			cx_ite = cx_ite.next;
		}
		if(body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) {
			this.static_validation(body);
		} else if(body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
		} else {
			if(flag != zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) this.kinematics.add(body);
		}
	}
	,remBody: function(body,flag) {
		if(flag == null) flag = -1;
		if(body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) {
			var o = body;
			if(!o.world) {
				o.component.waket = this.stamp + (this.midstep?0:1);
				if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
				if(o.component.sleeping) this.really_wake(o,true);
			}
			this.staticsleep.remove(body);
		} else if(body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
			var o1 = body;
			if(!o1.world) {
				o1.component.waket = this.stamp + (this.midstep?0:1);
				if(o1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o1.kinematicDelaySleep = true;
				if(o1.component.sleeping) this.really_wake(o1,true);
			}
			this.live.remove(body);
		} else {
			if(flag != zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) this.kinematics.remove(body);
			var o2 = body;
			if(!o2.world) {
				o2.component.waket = this.stamp + (this.midstep?0:1);
				if(o2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o2.kinematicDelaySleep = true;
				if(o2.component.sleeping) this.really_wake(o2,true);
			}
			this.staticsleep.remove(body);
		}
		var cx_ite = body.shapes.head;
		while(cx_ite != null) {
			var shape = cx_ite.elt;
			this.removed_shape(shape,true);
			cx_ite = cx_ite.next;
		}
		body.removedFromSpace();
		body.space = null;
	}
	,bodiesUnderPoint: function(x,y,filter,output) {
		return this.bphase.bodiesUnderPoint(x,y,filter,output);
	}
	,push_callback: function(i) {
		var cb;
		if(zpp_$nape_callbacks_ZPP_$Callback.zpp_pool == null) cb = new zpp_$nape_callbacks_ZPP_$Callback(); else {
			cb = zpp_$nape_callbacks_ZPP_$Callback.zpp_pool;
			zpp_$nape_callbacks_ZPP_$Callback.zpp_pool = cb.next;
			cb.next = null;
		}
		null;
		this.callbacks.push(cb);
		cb.listener = i;
		return cb;
	}
	,step: function(deltaTime,velocityIterations,positionIterations) {
		var _g = this;
		if(this.midstep) throw new js__$Boot_HaxeError("Error: ... REALLY?? you're going to call space.step() inside of space.step()? COME ON!!");
		this.time += deltaTime;
		this.pre_dt = deltaTime;
		this.midstep = true;
		this.stamp++;
		this.validation();
		this.bphase.broadphase(this,true);
		this.prestep(deltaTime);
		if(this.sortcontacts) {
			var xxlist = this.c_arbiters_false;
			if(!(xxlist.head == null) && xxlist.head.next != null) {
				var head = xxlist.head;
				var tail = null;
				var left = null;
				var right = null;
				var nxt = null;
				var listSize = 1;
				var numMerges;
				var leftSize;
				var rightSize;
				do {
					numMerges = 0;
					left = head;
					tail = head = null;
					while(left != null) {
						numMerges++;
						right = left;
						leftSize = 0;
						rightSize = listSize;
						while(right != null && leftSize < listSize) {
							leftSize++;
							right = right.next;
						}
						while(leftSize > 0 || rightSize > 0 && right != null) {
							if(leftSize == 0) {
								nxt = right;
								right = right.next;
								rightSize--;
							} else if(rightSize == 0 || right == null) {
								nxt = left;
								left = left.next;
								leftSize--;
							} else if(left.elt.active && right.elt.active?left.elt.oc1.dist < right.elt.oc1.dist:true) {
								nxt = left;
								left = left.next;
								leftSize--;
							} else {
								nxt = right;
								right = right.next;
								rightSize--;
							}
							if(tail != null) tail.next = nxt; else head = nxt;
							tail = nxt;
						}
						left = right;
					}
					tail.next = null;
					listSize <<= 1;
				} while(numMerges > 1);
				xxlist.head = head;
				xxlist.modified = true;
				xxlist.pushmod = true;
			}
		}
		this.updateVel(deltaTime);
		this.warmStart();
		this.iterateVel(velocityIterations);
		var cx_ite = this.kinematics.head;
		while(cx_ite != null) {
			var cur = cx_ite.elt;
			cur.pre_posx = cur.posx;
			cur.pre_posy = cur.posy;
			cur.pre_rot = cur.rot;
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = this.live.head;
		while(cx_ite1 != null) {
			var cur1 = cx_ite1.elt;
			cur1.pre_posx = cur1.posx;
			cur1.pre_posy = cur1.posy;
			cur1.pre_rot = cur1.rot;
			cx_ite1 = cx_ite1.next;
		}
		this.updatePos(deltaTime);
		this.continuous = true;
		this.continuousCollisions(deltaTime);
		this.continuous = false;
		this.iteratePos(positionIterations);
		var cx_ite2 = this.kinematics.head;
		while(cx_ite2 != null) {
			var cur2 = cx_ite2.elt;
			var upos = !(cur2.posx == cur2.pre_posx && cur2.posy == cur2.pre_posy);
			var urot = cur2.pre_rot != cur2.rot;
			if(upos) cur2.invalidate_pos();
			if(urot) cur2.invalidate_rot();
			cx_ite2 = cx_ite2.next;
		}
		var cx_ite3 = this.live.head;
		while(cx_ite3 != null) {
			var cur3 = cx_ite3.elt;
			var upos1 = !(cur3.posx == cur3.pre_posx && cur3.posy == cur3.pre_posy);
			var urot1 = cur3.pre_rot != cur3.rot;
			if(upos1) cur3.invalidate_pos();
			if(urot1) cur3.invalidate_rot();
			cx_ite3 = cx_ite3.next;
		}
		var pre = null;
		var cx_ite4 = this.staticsleep.head;
		while(cx_ite4 != null) {
			var b = cx_ite4.elt;
			if(!(b.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) || b.velx == 0 && b.vely == 0 && b.angvel == 0) {
				if(b.kinematicDelaySleep) {
					b.kinematicDelaySleep = false;
					cx_ite4 = cx_ite4.next;
					continue;
				}
				b.component.sleeping = true;
				cx_ite4 = this.staticsleep.inlined_erase(pre);
				continue;
			}
			pre = cx_ite4;
			cx_ite4 = cx_ite4.next;
		}
		this.doForests(deltaTime);
		this.sleepArbiters();
		this.midstep = false;
		var pre1 = null;
		var cx_ite5 = this.callbackset_list.next;
		while(cx_ite5 != null) {
			var set = [cx_ite5];
			if(set[0].arbiters.head == null) {
				cx_ite5 = this.callbackset_list.inlined_erase(pre1);
				var o = set[0];
				o.int1 = o.int2 = null;
				o.id = o.di = -1;
				o.freed = true;
				null;
				o.next = zpp_$nape_space_ZPP_$CallbackSet.zpp_pool;
				zpp_$nape_space_ZPP_$CallbackSet.zpp_pool = o;
				continue;
			}
			var sleeping = [set[0].sleeping()];
			zpp_$nape_callbacks_ZPP_$CbSet.find_all(set[0].int1.cbSet,set[0].int2.cbSet,zpp_$nape_util_ZPP_$Flags.id_CbEvent_ONGOING,(function(sleeping,set) {
				return function(x) {
					if((!sleeping[0] || x.allowSleepingCallbacks) && !set[0].empty_arb(x.itype)) {
						var cb = _g.push_callback(x);
						cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_ONGOING;
						zpp_$nape_phys_ZPP_$Interactor.int_callback(set[0],x,cb);
						cb.set = set[0];
					}
				};
			})(sleeping,set));
			pre1 = cx_ite5;
			cx_ite5 = cx_ite5.next;
		}
		while(!this.callbacks.empty()) {
			var cb1 = this.callbacks.pop();
			if(cb1.listener.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_BODY) {
				var o1 = cb1.listener.body;
				o1.handler(cb1.wrapper_body());
			} else if(cb1.listener.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_CONSTRAINT) {
				var o2 = cb1.listener.constraint;
				o2.handler(cb1.wrapper_con());
			} else if(cb1.listener.type == zpp_$nape_util_ZPP_$Flags.id_ListenerType_INTERACTION) {
				var o3 = cb1.listener.interaction;
				o3.handleri(cb1.wrapper_int());
			}
			var o4 = cb1;
			o4.int1 = o4.int2 = null;
			o4.body = null;
			o4.constraint = null;
			o4.listener = null;
			if(o4.wrap_arbiters != null) o4.wrap_arbiters.zpp_inner.inner = null;
			o4.set = null;
			o4.next = zpp_$nape_callbacks_ZPP_$Callback.zpp_pool;
			zpp_$nape_callbacks_ZPP_$Callback.zpp_pool = o4;
		}
	}
	,continuousCollisions: function(deltaTime) {
		var MAX_VEL = 2 * Math.PI / deltaTime;
		this.bphase.broadphase(this,false);
		var curTimeAlpha = 0.0;
		while(curTimeAlpha < 1 && !(this.toiEvents.head == null)) {
			var minTOI = null;
			var minTime = 2.0;
			var minKinematic = false;
			var preMin = null;
			var pre = null;
			var cx_ite = this.toiEvents.head;
			while(cx_ite != null) {
				var toi = cx_ite.elt;
				var b11 = toi.s1.body;
				var b21 = toi.s2.body;
				if(b11.sweepFrozen && b21.sweepFrozen) {
					if(toi.toi != 0 && zpp_$nape_geom_ZPP_$Collide.testCollide_safe(toi.s1,toi.s2)) toi.toi = 0; else {
						cx_ite = this.toiEvents.erase(pre);
						var o = toi;
						o.next = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
						zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = o;
						continue;
					}
				}
				if(toi.frozen1 != b11.sweepFrozen || toi.frozen2 != b21.sweepFrozen) {
					if(!toi.kinematic) {
						toi.frozen1 = b11.sweepFrozen;
						toi.frozen2 = b21.sweepFrozen;
						if(toi.frozen1) {
							var tmp = toi.s1;
							toi.s1 = toi.s2;
							toi.s2 = tmp;
							toi.frozen1 = false;
							toi.frozen2 = true;
						}
						zpp_$nape_geom_ZPP_$SweepDistance.staticSweep(toi,deltaTime,0,nape_Config.collisionSlopCCD);
						if(toi.toi < 0) {
							cx_ite = this.toiEvents.erase(pre);
							var o1 = toi;
							o1.next = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
							zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = o1;
							continue;
						}
					} else {
						cx_ite = this.toiEvents.erase(pre);
						var o2 = toi;
						o2.next = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
						zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = o2;
						continue;
					}
				}
				if(toi.toi >= 0 && (toi.toi < minTime || !minKinematic && toi.kinematic)) {
					minTOI = toi;
					minTime = toi.toi;
					minKinematic = toi.kinematic;
					preMin = pre;
				}
				pre = cx_ite;
				cx_ite = cx_ite.next;
			}
			if(minTOI == null) break;
			this.toiEvents.erase(preMin);
			curTimeAlpha = minTOI.toi;
			var b1 = minTOI.s1.body;
			var b2 = minTOI.s2.body;
			if(!b1.sweepFrozen) {
				b1.sweepIntegrate(curTimeAlpha * deltaTime);
				b1.sweepValidate(minTOI.s1);
			}
			if(!b2.sweepFrozen) {
				b2.sweepIntegrate(curTimeAlpha * deltaTime);
				b2.sweepValidate(minTOI.s2);
			}
			var wasnull = minTOI.arbiter == null;
			var arb = this.narrowPhase(minTOI.s1,minTOI.s2,true,minTOI.arbiter,true);
			if(arb == null) {
				if(minTOI.arbiter != null && minTOI.arbiter.pair != null) {
					minTOI.arbiter.pair.arb = null;
					minTOI.arbiter.pair = null;
				}
			} else if(!this.presteparb(arb,deltaTime,true)) {
				if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL && (arb.active && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0)) {
					arb.colarb.warmStart();
					arb.colarb.applyImpulseVel();
					arb.colarb.applyImpulseVel();
					arb.colarb.applyImpulseVel();
					arb.colarb.applyImpulseVel();
					b1.sweep_angvel = b1.angvel % MAX_VEL;
					b2.sweep_angvel = b2.angvel % MAX_VEL;
				}
			}
			if(arb != null && (arb.active && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) && arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) {
				if(!b1.sweepFrozen && !(b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC)) {
					b1.sweepFrozen = true;
					if(minTOI.failed) b1.angvel = b1.sweep_angvel = 0; else if(minTOI.slipped) b1.angvel = b1.sweep_angvel *= nape_Config.angularCCDSlipScale; else b1.angvel = b1.sweep_angvel;
				}
				if(!b2.sweepFrozen && !(b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC)) {
					b2.sweepFrozen = true;
					if(minTOI.failed) b2.angvel = b2.sweep_angvel = 0; else if(minTOI.slipped) b2.angvel = b2.sweep_angvel *= nape_Config.angularCCDSlipScale; else b2.angvel = b2.sweep_angvel;
				}
			}
			var o3 = minTOI;
			o3.next = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
			zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = o3;
		}
		while(!(this.toiEvents.head == null)) {
			var toi1 = this.toiEvents.pop_unsafe();
			var o4 = toi1;
			o4.next = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
			zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = o4;
		}
		var cx_ite1 = this.kinematics.head;
		while(cx_ite1 != null) {
			var cur = cx_ite1.elt;
			cur.sweepIntegrate(deltaTime);
			cur.sweepTime = 0;
			cx_ite1 = cx_ite1.next;
		}
		var cx_ite2 = this.live.head;
		while(cx_ite2 != null) {
			var cur1 = cx_ite2.elt;
			if(!cur1.sweepFrozen) cur1.sweepIntegrate(deltaTime);
			cur1.sweepTime = 0;
			cx_ite2 = cx_ite2.next;
		}
	}
	,continuousEvent: function(s1,s2,stat,in_arb,_) {
		if(s1.body.sweepFrozen && s2.body.sweepFrozen) return in_arb;
		if(s1.body.disableCCD || s2.body.disableCCD) return in_arb;
		if(in_arb != null && in_arb.colarb == null || this.interactionType(s1,s2,s1.body,s2.body) <= 0) return in_arb;
		var b1 = s1.body;
		var b2 = s2.body;
		if(stat || b1.bullet || b2.bullet) {
			var toi;
			if(zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool == null) toi = new zpp_$nape_geom_ZPP_$ToiEvent(); else {
				toi = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
				zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = toi.next;
				toi.next = null;
			}
			toi.failed = false;
			toi.s1 = toi.s2 = null;
			toi.arbiter = null;
			var kin = b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC || b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC;
			if(stat && !kin) {
				if(!(s1.body.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC)) {
					toi.s2 = s1;
					toi.s1 = s2;
				} else {
					toi.s1 = s1;
					toi.s2 = s2;
				}
				toi.kinematic = false;
				zpp_$nape_geom_ZPP_$SweepDistance.staticSweep(toi,this.pre_dt,0,nape_Config.collisionSlopCCD);
			} else {
				toi.s1 = s1;
				toi.s2 = s2;
				toi.kinematic = kin;
				if(toi.s1.body.sweepFrozen || toi.s2.body.sweepFrozen) {
					if(toi.s1.body.sweepFrozen) {
						var tmp = toi.s1;
						toi.s1 = toi.s2;
						toi.s2 = tmp;
						toi.frozen1 = false;
						toi.frozen2 = true;
					}
					zpp_$nape_geom_ZPP_$SweepDistance.staticSweep(toi,this.pre_dt,0,nape_Config.collisionSlopCCD);
				} else zpp_$nape_geom_ZPP_$SweepDistance.dynamicSweep(toi,this.pre_dt,0,nape_Config.collisionSlopCCD);
			}
			if(stat && toi.toi < 0 || toi.failed) {
				var o = toi;
				o.next = zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool;
				zpp_$nape_geom_ZPP_$ToiEvent.zpp_pool = o;
			} else {
				this.toiEvents.add(toi);
				toi.frozen1 = toi.s1.body.sweepFrozen;
				toi.frozen2 = toi.s2.body.sweepFrozen;
				if(in_arb != null) toi.arbiter = in_arb.colarb; else toi.arbiter = null;
			}
		}
		return in_arb;
	}
	,bodyCbWake: function(b) {
		if(b.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && b.cbSet != null) {
			if(this.midstep) {
				var cx_ite = b.cbSet.bodylisteners.head;
				while(cx_ite != null) {
					var i = cx_ite.elt;
					if(i.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE) {
						cx_ite = cx_ite.next;
						continue;
					}
					var cb = this.push_callback(i);
					cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE;
					cb.body = b;
					cx_ite = cx_ite.next;
				}
			} else b.component.woken = true;
		}
	}
	,bodyCbSleep: function(b) {
		if(b.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && b.cbSet != null) {
			var cx_ite = b.cbSet.bodylisteners.head;
			while(cx_ite != null) {
				var i = cx_ite.elt;
				if(i.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_SLEEP) {
					cx_ite = cx_ite.next;
					continue;
				}
				var cb = this.push_callback(i);
				cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_SLEEP;
				cb.body = b;
				cx_ite = cx_ite.next;
			}
		}
	}
	,constraintCbWake: function(con) {
		if(con.cbSet != null) {
			if(this.midstep) {
				var cx_ite = con.cbSet.conlisteners.head;
				while(cx_ite != null) {
					var i = cx_ite.elt;
					if(i.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE) {
						cx_ite = cx_ite.next;
						continue;
					}
					var cb = this.push_callback(i);
					cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE;
					cb.constraint = con;
					cx_ite = cx_ite.next;
				}
			} else con.component.woken = true;
		}
	}
	,constraintCbSleep: function(con) {
		if(con.cbSet != null) {
			var cx_ite = con.cbSet.conlisteners.head;
			while(cx_ite != null) {
				var i = cx_ite.elt;
				if(i.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_SLEEP) {
					cx_ite = cx_ite.next;
					continue;
				}
				var cb = this.push_callback(i);
				cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_SLEEP;
				cb.constraint = con;
				cx_ite = cx_ite.next;
			}
		}
	}
	,constraintCbBreak: function(con) {
		if(con.cbSet != null) {
			var cx_ite = con.cbSet.conlisteners.head;
			while(cx_ite != null) {
				var i = cx_ite.elt;
				if(i.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_BREAK) {
					cx_ite = cx_ite.next;
					continue;
				}
				var cb = this.push_callback(i);
				cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_BREAK;
				cb.constraint = con;
				cx_ite = cx_ite.next;
			}
		}
	}
	,nullListenerType: function(cb1,cb2) {
		var stack = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
		var cx_ite = cb1.interactors.head;
		while(cx_ite != null) {
			var i = cx_ite.elt;
			stack.add(i);
			cx_ite = cx_ite.next;
		}
		if(cb1 != cb2) {
			var cx_ite1 = cb2.interactors.head;
			while(cx_ite1 != null) {
				var i1 = cx_ite1.elt;
				stack.add(i1);
				cx_ite1 = cx_ite1.next;
			}
		}
		while(!(stack.head == null)) {
			var intx = stack.pop_unsafe();
			if(intx.icompound != null) {
				var comp = intx.icompound;
				var cx_ite2 = comp.bodies.head;
				while(cx_ite2 != null) {
					var i2 = cx_ite2.elt;
					stack.add(i2);
					cx_ite2 = cx_ite2.next;
				}
				var cx_ite3 = comp.compounds.head;
				while(cx_ite3 != null) {
					var i3 = cx_ite3.elt;
					stack.add(i3);
					cx_ite3 = cx_ite3.next;
				}
			} else {
				var xbody;
				if(intx.ibody != null) xbody = intx.ibody; else xbody = intx.ishape.body;
				var xshp;
				if(intx.ishape != null) xshp = intx.ishape; else xshp = null;
				var cx_ite4 = xbody.arbiters.head;
				while(cx_ite4 != null) {
					var xarb = cx_ite4.elt;
					if(xarb.present == 0) {
						cx_ite4 = cx_ite4.next;
						continue;
					}
					if(xshp != null && !(xarb.ws1 == xshp || xarb.ws2 == xshp)) {
						cx_ite4 = cx_ite4.next;
						continue;
					}
					this.MRCA_chains(xarb.ws1,xarb.ws2);
					var cx_ite5 = this.mrca1.head;
					while(cx_ite5 != null) {
						var i11 = cx_ite5.elt;
						if(i11.cbSet != cb1 && i11.cbSet != cb2) {
							cx_ite5 = cx_ite5.next;
							continue;
						}
						var cx_ite6 = this.mrca2.head;
						while(cx_ite6 != null) {
							var i21 = cx_ite6.elt;
							if(i11.cbSet == cb1 && i21.cbSet != cb2 || i11.cbSet == cb2 && i21.cbSet != cb1) {
								cx_ite6 = cx_ite6.next;
								continue;
							}
							var callbackset = zpp_$nape_phys_ZPP_$Interactor.get(i11,i21);
							if(callbackset != null) {
								while(!(callbackset.arbiters.head == null)) {
									var arb = callbackset.arbiters.pop_unsafe();
									arb.present--;
								}
								this.remove_callbackset(callbackset);
							}
							cx_ite6 = cx_ite6.next;
						}
						cx_ite5 = cx_ite5.next;
					}
					cx_ite4 = cx_ite4.next;
				}
			}
		}
	}
	,nullInteractorType: function(intx,me) {
		if(me == null) me = intx;
		if(intx.icompound != null) {
			var comp = intx.icompound;
			var cx_ite = comp.bodies.head;
			while(cx_ite != null) {
				var body = cx_ite.elt;
				this.nullInteractorType(body,me);
				cx_ite = cx_ite.next;
			}
			var cx_ite1 = comp.compounds.head;
			while(cx_ite1 != null) {
				var comp1 = cx_ite1.elt;
				this.nullInteractorType(comp1,me);
				cx_ite1 = cx_ite1.next;
			}
		} else {
			var xbody;
			if(intx.ibody != null) xbody = intx.ibody; else xbody = intx.ishape.body;
			var xshp;
			if(intx.ishape != null) xshp = intx.ishape; else xshp = null;
			var cx_ite2 = xbody.arbiters.head;
			while(cx_ite2 != null) {
				var xarb = cx_ite2.elt;
				if(xarb.present == 0) {
					cx_ite2 = cx_ite2.next;
					continue;
				}
				if(xshp != null && !(xarb.ws1 == xshp || xarb.ws2 == xshp)) {
					cx_ite2 = cx_ite2.next;
					continue;
				}
				this.MRCA_chains(xarb.ws1,xarb.ws2);
				var cx_ite3 = this.mrca1.head;
				while(cx_ite3 != null) {
					var i1 = cx_ite3.elt;
					var cx_ite4 = this.mrca2.head;
					while(cx_ite4 != null) {
						var i2 = cx_ite4.elt;
						if(i1 != me && i2 != me) {
							cx_ite4 = cx_ite4.next;
							continue;
						}
						var callbackset = zpp_$nape_phys_ZPP_$Interactor.get(i1,i2);
						if(callbackset != null) {
							xarb.present--;
							callbackset.remove_arb(xarb);
							if(callbackset.arbiters.head == null) this.remove_callbackset(callbackset);
						}
						cx_ite4 = cx_ite4.next;
					}
					cx_ite3 = cx_ite3.next;
				}
				cx_ite2 = cx_ite2.next;
			}
		}
	}
	,freshListenerType: function(cb1,cb2) {
		var stack = new zpp_$nape_util_ZNPList_$ZPP_$Interactor();
		var cx_ite = cb1.interactors.head;
		while(cx_ite != null) {
			var i = cx_ite.elt;
			stack.add(i);
			cx_ite = cx_ite.next;
		}
		if(cb1 != cb2) {
			var cx_ite1 = cb2.interactors.head;
			while(cx_ite1 != null) {
				var i1 = cx_ite1.elt;
				stack.add(i1);
				cx_ite1 = cx_ite1.next;
			}
		}
		while(!(stack.head == null)) {
			var intx = stack.pop_unsafe();
			if(intx.icompound != null) {
				var comp = intx.icompound;
				var cx_ite2 = comp.bodies.head;
				while(cx_ite2 != null) {
					var i2 = cx_ite2.elt;
					stack.add(i2);
					cx_ite2 = cx_ite2.next;
				}
				var cx_ite3 = comp.compounds.head;
				while(cx_ite3 != null) {
					var i3 = cx_ite3.elt;
					stack.add(i3);
					cx_ite3 = cx_ite3.next;
				}
			} else {
				var xbody;
				if(intx.ibody != null) xbody = intx.ibody; else xbody = intx.ishape.body;
				var xshp;
				if(intx.ishape != null) xshp = intx.ishape; else xshp = null;
				var cx_ite4 = xbody.arbiters.head;
				while(cx_ite4 != null) {
					var xarb = cx_ite4.elt;
					if(!xarb.presentable) {
						cx_ite4 = cx_ite4.next;
						continue;
					}
					if(xshp != null && !(xarb.ws1 == xshp || xarb.ws2 == xshp)) {
						cx_ite4 = cx_ite4.next;
						continue;
					}
					this.MRCA_chains(xarb.ws1,xarb.ws2);
					var cx_ite5 = this.mrca1.head;
					while(cx_ite5 != null) {
						var i11 = cx_ite5.elt;
						if(i11.cbSet != cb1 && i11.cbSet != cb2) {
							cx_ite5 = cx_ite5.next;
							continue;
						}
						var cx_ite6 = this.mrca2.head;
						while(cx_ite6 != null) {
							var i21 = cx_ite6.elt;
							if(i11.cbSet == cb1 && i21.cbSet != cb2 || i11.cbSet == cb2 && i21.cbSet != cb1) {
								cx_ite6 = cx_ite6.next;
								continue;
							}
							var callbackset = zpp_$nape_phys_ZPP_$Interactor.get(i11,i21);
							if(callbackset == null) {
								callbackset = zpp_$nape_space_ZPP_$CallbackSet.get(i11,i21);
								this.add_callbackset(callbackset);
							}
							if(!callbackset.arbiters.inlined_has(xarb)?(function($this) {
								var $r;
								callbackset.arbiters.inlined_add(xarb);
								$r = true;
								return $r;
							}(this)):false) xarb.present++;
							cx_ite6 = cx_ite6.next;
						}
						cx_ite5 = cx_ite5.next;
					}
					cx_ite4 = cx_ite4.next;
				}
			}
		}
	}
	,freshInteractorType: function(intx,me) {
		if(me == null) me = intx;
		if(intx.icompound != null) {
			var comp = intx.icompound;
			var cx_ite = comp.bodies.head;
			while(cx_ite != null) {
				var body = cx_ite.elt;
				this.freshInteractorType(body,me);
				cx_ite = cx_ite.next;
			}
			var cx_ite1 = comp.compounds.head;
			while(cx_ite1 != null) {
				var comp1 = cx_ite1.elt;
				this.freshInteractorType(comp1,me);
				cx_ite1 = cx_ite1.next;
			}
		} else {
			var xbody;
			if(intx.ibody != null) xbody = intx.ibody; else xbody = intx.ishape.body;
			var xshp;
			if(intx.ishape != null) xshp = intx.ishape; else xshp = null;
			var cx_ite2 = xbody.arbiters.head;
			while(cx_ite2 != null) {
				var xarb = cx_ite2.elt;
				if(!xarb.presentable) {
					cx_ite2 = cx_ite2.next;
					continue;
				}
				if(xshp != null && !(xarb.ws1 == xshp || xarb.ws2 == xshp)) {
					cx_ite2 = cx_ite2.next;
					continue;
				}
				this.MRCA_chains(xarb.ws1,xarb.ws2);
				var cx_ite3 = this.mrca1.head;
				while(cx_ite3 != null) {
					var i1 = cx_ite3.elt;
					var cx_ite4 = this.mrca2.head;
					while(cx_ite4 != null) {
						var i2 = cx_ite4.elt;
						if(i1 != me && i2 != me) {
							cx_ite4 = cx_ite4.next;
							continue;
						}
						var cb1 = i1.cbSet;
						var cb2 = i2.cbSet;
						cb1.validate();
						cb2.validate();
						if(!cb1.manager.pair(cb1,cb2).empty_intersection()) {
							var callbackset = zpp_$nape_phys_ZPP_$Interactor.get(i1,i2);
							if(callbackset == null) {
								callbackset = zpp_$nape_space_ZPP_$CallbackSet.get(i1,i2);
								this.add_callbackset(callbackset);
							}
							if(!callbackset.arbiters.inlined_has(xarb)?(function($this) {
								var $r;
								callbackset.arbiters.inlined_add(xarb);
								$r = true;
								return $r;
							}(this)):false) xarb.present++;
						}
						cx_ite4 = cx_ite4.next;
					}
					cx_ite3 = cx_ite3.next;
				}
				cx_ite2 = cx_ite2.next;
			}
		}
	}
	,wakeCompound: function(x) {
		var cx_ite = x.bodies.head;
		while(cx_ite != null) {
			var y = cx_ite.elt;
			var o = y;
			if(!o.world) {
				o.component.waket = this.stamp + (this.midstep?0:1);
				if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
				if(o.component.sleeping) this.really_wake(o,false);
			}
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = x.constraints.head;
		while(cx_ite1 != null) {
			var i = cx_ite1.elt;
			this.wake_constraint(i);
			cx_ite1 = cx_ite1.next;
		}
		var cx_ite2 = x.compounds.head;
		while(cx_ite2 != null) {
			var i1 = cx_ite2.elt;
			this.wakeCompound(i1);
			cx_ite2 = cx_ite2.next;
		}
	}
	,wakeIsland: function(i) {
		while(!(i.comps.head == null)) {
			var c = i.comps.pop_unsafe();
			c.waket = this.stamp + (this.midstep?0:1);
			if(c.isBody) {
				var b = c.body;
				this.live.add(b);
				var cx_ite = b.arbiters.head;
				while(cx_ite != null) {
					var arb = cx_ite.elt;
					if(arb.sleeping) {
						arb.sleeping = false;
						arb.up_stamp += this.stamp - arb.sleep_stamp;
						if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) {
							var carb = arb.colarb;
							if(carb.stat) this.c_arbiters_true.inlined_add(carb); else this.c_arbiters_false.inlined_add(carb);
						} else if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID) this.f_arbiters.inlined_add(arb.fluidarb); else this.s_arbiters.inlined_add(arb.sensorarb);
					}
					cx_ite = cx_ite.next;
				}
				this.bodyCbWake(b);
				c.sleeping = false;
				c.island = null;
				c.parent = c;
				c.rank = 0;
				if(!(b.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
					var cx_ite1 = b.shapes.head;
					while(cx_ite1 != null) {
						var shape = cx_ite1.elt;
						if(shape.node != null) this.bphase.sync(shape);
						cx_ite1 = cx_ite1.next;
					}
				}
			} else {
				var con = c.constraint;
				this.live_constraints.inlined_add(con);
				this.constraintCbWake(con);
				c.sleeping = false;
				c.island = null;
				c.parent = c;
				c.rank = 0;
			}
		}
		var o = i;
		o.next = zpp_$nape_space_ZPP_$Island.zpp_pool;
		zpp_$nape_space_ZPP_$Island.zpp_pool = o;
	}
	,non_inlined_wake: function(o,fst) {
		if(fst == null) fst = false;
		var o1 = o;
		if(!o1.world) {
			o1.component.waket = this.stamp + (this.midstep?0:1);
			if(o1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o1.kinematicDelaySleep = true;
			if(o1.component.sleeping) this.really_wake(o1,fst);
		}
	}
	,really_wake: function(o,fst) {
		if(fst == null) fst = false;
		if(o.component.island == null) {
			o.component.sleeping = false;
			if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC || o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) this.staticsleep.inlined_add(o); else this.live.inlined_add(o);
			var cx_ite = o.constraints.head;
			while(cx_ite != null) {
				var con = cx_ite.elt;
				if(con.space == this) this.wake_constraint(con);
				cx_ite = cx_ite.next;
			}
			var cx_ite1 = o.arbiters.head;
			while(cx_ite1 != null) {
				var arb = cx_ite1.elt;
				if(arb.sleeping) {
					arb.sleeping = false;
					arb.up_stamp += this.stamp + (this.midstep?0:1) - arb.sleep_stamp;
					if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL) {
						var carb = arb.colarb;
						if(carb.stat) this.c_arbiters_true.inlined_add(carb); else this.c_arbiters_false.inlined_add(carb);
					} else if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID) this.f_arbiters.inlined_add(arb.fluidarb); else this.s_arbiters.inlined_add(arb.sensorarb);
				}
				if(arb.type != zpp_$nape_dynamics_ZPP_$Arbiter.SENSOR && !arb.cleared && arb.up_stamp >= this.stamp && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) {
					if(arb.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb.b1.component.sleeping) {
						var o1 = arb.b1;
						if(!o1.world) {
							o1.component.waket = this.stamp + (this.midstep?0:1);
							if(o1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o1.kinematicDelaySleep = true;
							if(o1.component.sleeping) this.really_wake(o1,false);
						}
					}
					if(arb.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb.b2.component.sleeping) {
						var o2 = arb.b2;
						if(!o2.world) {
							o2.component.waket = this.stamp + (this.midstep?0:1);
							if(o2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o2.kinematicDelaySleep = true;
							if(o2.component.sleeping) this.really_wake(o2,false);
						}
					}
				}
				cx_ite1 = cx_ite1.next;
			}
			if(!fst && o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) this.bodyCbWake(o);
			if(!fst && !this.bphase.is_sweep && !(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
				var cx_ite2 = o.shapes.head;
				while(cx_ite2 != null) {
					var shape = cx_ite2.elt;
					if(shape.node != null) this.bphase.sync(shape);
					cx_ite2 = cx_ite2.next;
				}
			}
		} else this.wakeIsland(o.component.island);
	}
	,wake_constraint: function(con,fst) {
		if(fst == null) fst = false;
		if(con.active) {
			con.component.waket = this.stamp + (this.midstep?0:1);
			if(con.component.sleeping) {
				if(con.component.island == null) {
					con.component.sleeping = false;
					this.live_constraints.inlined_add(con);
					con.wake_connected();
					if(!fst) this.constraintCbWake(con);
				} else this.wakeIsland(con.component.island);
				return true;
			} else return false;
		} else return false;
	}
	,doForests: function(dt) {
		var cx_ite = this.c_arbiters_false.head;
		while(cx_ite != null) {
			var arb = cx_ite.elt;
			if(!arb.cleared && arb.up_stamp == this.stamp && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) {
				if(arb.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
					var xr;
					if(arb.b1.component == arb.b1.component.parent) xr = arb.b1.component; else {
						var obj = arb.b1.component;
						var stack = null;
						while(obj != obj.parent) {
							var nxt = obj.parent;
							obj.parent = stack;
							stack = obj;
							obj = nxt;
						}
						while(stack != null) {
							var nxt1 = stack.parent;
							stack.parent = obj;
							stack = nxt1;
						}
						xr = obj;
					}
					var yr;
					if(arb.b2.component == arb.b2.component.parent) yr = arb.b2.component; else {
						var obj1 = arb.b2.component;
						var stack1 = null;
						while(obj1 != obj1.parent) {
							var nxt2 = obj1.parent;
							obj1.parent = stack1;
							stack1 = obj1;
							obj1 = nxt2;
						}
						while(stack1 != null) {
							var nxt3 = stack1.parent;
							stack1.parent = obj1;
							stack1 = nxt3;
						}
						yr = obj1;
					}
					if(xr != yr) {
						if(xr.rank < yr.rank) xr.parent = yr; else if(xr.rank > yr.rank) yr.parent = xr; else {
							yr.parent = xr;
							xr.rank++;
						}
					}
				}
			}
			cx_ite = cx_ite.next;
		}
		var cx_ite1 = this.f_arbiters.head;
		while(cx_ite1 != null) {
			var arb1 = cx_ite1.elt;
			if(!arb1.cleared && arb1.up_stamp == this.stamp && (arb1.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) {
				if(arb1.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb1.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
					var xr1;
					if(arb1.b1.component == arb1.b1.component.parent) xr1 = arb1.b1.component; else {
						var obj2 = arb1.b1.component;
						var stack2 = null;
						while(obj2 != obj2.parent) {
							var nxt4 = obj2.parent;
							obj2.parent = stack2;
							stack2 = obj2;
							obj2 = nxt4;
						}
						while(stack2 != null) {
							var nxt5 = stack2.parent;
							stack2.parent = obj2;
							stack2 = nxt5;
						}
						xr1 = obj2;
					}
					var yr1;
					if(arb1.b2.component == arb1.b2.component.parent) yr1 = arb1.b2.component; else {
						var obj3 = arb1.b2.component;
						var stack3 = null;
						while(obj3 != obj3.parent) {
							var nxt6 = obj3.parent;
							obj3.parent = stack3;
							stack3 = obj3;
							obj3 = nxt6;
						}
						while(stack3 != null) {
							var nxt7 = stack3.parent;
							stack3.parent = obj3;
							stack3 = nxt7;
						}
						yr1 = obj3;
					}
					if(xr1 != yr1) {
						if(xr1.rank < yr1.rank) xr1.parent = yr1; else if(xr1.rank > yr1.rank) yr1.parent = xr1; else {
							yr1.parent = xr1;
							xr1.rank++;
						}
					}
				}
			}
			cx_ite1 = cx_ite1.next;
		}
		var cx_ite2 = this.live_constraints.head;
		while(cx_ite2 != null) {
			var con = cx_ite2.elt;
			con.forest();
			cx_ite2 = cx_ite2.next;
		}
		while(!(this.live.head == null)) {
			var o = this.live.inlined_pop_unsafe();
			var oc = o.component;
			var root;
			if(oc == oc.parent) root = oc; else {
				var obj4 = oc;
				var stack4 = null;
				while(obj4 != obj4.parent) {
					var nxt8 = obj4.parent;
					obj4.parent = stack4;
					stack4 = obj4;
					obj4 = nxt8;
				}
				while(stack4 != null) {
					var nxt9 = stack4.parent;
					stack4.parent = obj4;
					stack4 = nxt9;
				}
				root = obj4;
			}
			if(root.island == null) {
				if(zpp_$nape_space_ZPP_$Island.zpp_pool == null) root.island = new zpp_$nape_space_ZPP_$Island(); else {
					root.island = zpp_$nape_space_ZPP_$Island.zpp_pool;
					zpp_$nape_space_ZPP_$Island.zpp_pool = root.island.next;
					root.island.next = null;
				}
				root.island.waket = 0;
				this.islands.inlined_add(root.island);
				root.island.sleep = true;
			}
			oc.island = root.island;
			oc.island.comps.inlined_add(oc);
			var rest = o.atRest(dt);
			oc.island.sleep = oc.island.sleep && rest;
			if(oc.waket > oc.island.waket) oc.island.waket = oc.waket;
		}
		while(!(this.live_constraints.head == null)) {
			var o1 = this.live_constraints.inlined_pop_unsafe();
			var oc1 = o1.component;
			var root1;
			if(oc1 == oc1.parent) root1 = oc1; else {
				var obj5 = oc1;
				var stack5 = null;
				while(obj5 != obj5.parent) {
					var nxt10 = obj5.parent;
					obj5.parent = stack5;
					stack5 = obj5;
					obj5 = nxt10;
				}
				while(stack5 != null) {
					var nxt11 = stack5.parent;
					stack5.parent = obj5;
					stack5 = nxt11;
				}
				root1 = obj5;
			}
			oc1.island = root1.island;
			oc1.island.comps.inlined_add(oc1);
			if(oc1.waket > oc1.island.waket) oc1.island.waket = oc1.waket;
		}
		while(!(this.islands.next == null)) {
			var i = this.islands.inlined_pop_unsafe();
			if(i.sleep) {
				var cx_ite3 = i.comps.head;
				while(cx_ite3 != null) {
					var c = cx_ite3.elt;
					if(c.isBody) {
						var b = c.body;
						b.velx = 0;
						b.vely = 0;
						b.angvel = 0;
						c.sleeping = true;
						var cx_ite4 = b.shapes.head;
						while(cx_ite4 != null) {
							var shape = cx_ite4.elt;
							this.bphase.sync(shape);
							cx_ite4 = cx_ite4.next;
						}
						this.bodyCbSleep(b);
					} else {
						var con1 = c.constraint;
						this.constraintCbSleep(con1);
						c.sleeping = true;
					}
					cx_ite3 = cx_ite3.next;
				}
			} else {
				while(!(i.comps.head == null)) {
					var c1 = i.comps.inlined_pop_unsafe();
					c1.waket = i.waket;
					if(c1.isBody) this.live.inlined_add(c1.body); else this.live_constraints.inlined_add(c1.constraint);
					c1.sleeping = false;
					c1.island = null;
					c1.parent = c1;
					c1.rank = 0;
				}
				var o2 = i;
				o2.next = zpp_$nape_space_ZPP_$Island.zpp_pool;
				zpp_$nape_space_ZPP_$Island.zpp_pool = o2;
			}
		}
	}
	,sleepArbiters: function() {
		var pre = null;
		var arbs = this.c_arbiters_true;
		var arbite = arbs.head;
		var fst = this.c_arbiters_false != null;
		if(fst && arbite == null) {
			fst = false;
			arbite = this.c_arbiters_false.head;
			arbs = this.c_arbiters_false;
			pre = null;
		}
		while(arbite != null) {
			var arb = arbite.elt;
			if(arb.b1.component.sleeping && arb.b2.component.sleeping) {
				arb.sleep_stamp = this.stamp;
				arb.sleeping = true;
				arbite = arbs.inlined_erase(pre);
				if(fst && arbite == null) {
					fst = false;
					arbite = this.c_arbiters_false.head;
					arbs = this.c_arbiters_false;
					pre = null;
				}
				continue;
			}
			pre = arbite;
			arbite = arbite.next;
			if(fst && arbite == null) {
				fst = false;
				arbite = this.c_arbiters_false.head;
				arbs = this.c_arbiters_false;
				pre = null;
			}
		}
		var pre1 = null;
		var arbs1 = this.f_arbiters;
		var arbite1 = arbs1.head;
		var fst1 = false;
		if(fst1 && arbite1 == null) {
			fst1 = false;
			arbs1 = null;
			pre1 = null;
		}
		while(arbite1 != null) {
			var arb1 = arbite1.elt;
			if(arb1.b1.component.sleeping && arb1.b2.component.sleeping) {
				arb1.sleep_stamp = this.stamp;
				arb1.sleeping = true;
				arbite1 = arbs1.inlined_erase(pre1);
				if(fst1 && arbite1 == null) {
					fst1 = false;
					arbs1 = null;
					pre1 = null;
				}
				continue;
			}
			pre1 = arbite1;
			arbite1 = arbite1.next;
			if(fst1 && arbite1 == null) {
				fst1 = false;
				arbs1 = null;
				pre1 = null;
			}
		}
		var pre2 = null;
		var arbs2 = this.s_arbiters;
		var arbite2 = arbs2.head;
		var fst2 = false;
		if(fst2 && arbite2 == null) {
			fst2 = false;
			arbs2 = null;
			pre2 = null;
		}
		while(arbite2 != null) {
			var arb2 = arbite2.elt;
			if(arb2.b1.component.sleeping && arb2.b2.component.sleeping) {
				arb2.sleep_stamp = this.stamp;
				arb2.sleeping = true;
				arbite2 = arbs2.inlined_erase(pre2);
				if(fst2 && arbite2 == null) {
					fst2 = false;
					arbs2 = null;
					pre2 = null;
				}
				continue;
			}
			pre2 = arbite2;
			arbite2 = arbite2.next;
			if(fst2 && arbite2 == null) {
				fst2 = false;
				arbs2 = null;
				pre2 = null;
			}
		}
	}
	,static_validation: function(body) {
		if(!(body.shapes.head == null)) body.validate_aabb();
		body.validate_mass();
		body.validate_inertia();
		if(body.velx != 0 || body.vely != 0 || body.angvel != 0) throw new js__$Boot_HaxeError("Error: Static body cannot have any real velocity, only kinematic or surface velocities");
		var cx_ite = body.shapes.head;
		while(cx_ite != null) {
			var s = cx_ite.elt;
			if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
				s.polygon.splice_collinear();
				var res = s.polygon.valid();
				if(res != (function($this) {
					var $r;
					if(zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID == null) {
						zpp_$nape_util_ZPP_$Flags.internal = true;
						zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID = new nape_shape_ValidationResult();
						zpp_$nape_util_ZPP_$Flags.internal = false;
					}
					$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID;
					return $r;
				}(this))) throw new js__$Boot_HaxeError("Error: Cannot simulate with an invalid Polygon : " + s.polygon.outer.toString() + " is invalid : " + res.toString());
				s.polygon.validate_gaxi();
			}
			cx_ite = cx_ite.next;
		}
		body.sweepFrozen = true;
	}
	,validation: function() {
		this.cbsets.validate();
		var cx_ite = this.live.head;
		while(cx_ite != null) {
			var cur = cx_ite.elt;
			cur.sweepRadius = 0;
			var cx_ite1 = cur.shapes.head;
			while(cx_ite1 != null) {
				var s = cx_ite1.elt;
				if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
					s.polygon.splice_collinear();
					var res = s.polygon.valid();
					if(res != (function($this) {
						var $r;
						if(zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID == null) {
							zpp_$nape_util_ZPP_$Flags.internal = true;
							zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID = new nape_shape_ValidationResult();
							zpp_$nape_util_ZPP_$Flags.internal = false;
						}
						$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID;
						return $r;
					}(this))) throw new js__$Boot_HaxeError("Error: Cannot simulate with an invalid Polygon : " + s.polygon.outer.toString() + " is invalid : " + res.toString());
					s.polygon.validate_gaxi();
				}
				s.validate_sweepRadius();
				if(s.sweepRadius > cur.sweepRadius) cur.sweepRadius = s.sweepRadius;
				cx_ite1 = cx_ite1.next;
			}
			cur.validate_mass();
			cur.validate_inertia();
			if(!(cur.shapes.head == null)) {
				cur.validate_aabb();
				cur.validate_worldCOM();
			}
			cur.validate_gravMass();
			if(cur.zip_axis) {
				cur.zip_axis = false;
				cur.axisx = Math.sin(cur.rot);
				cur.axisy = Math.cos(cur.rot);
				null;
			}
			if(!cur.nomove && cur.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && cur.mass == 0) throw new js__$Boot_HaxeError("Error: Dynamic Body cannot be simulated with 0 mass unless allowMovement is false");
			if(!cur.norotate && cur.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && cur.inertia == 0) throw new js__$Boot_HaxeError("Error: Dynamic Body cannot be simulated with 0 inertia unless allowRotation is false");
			if(cur.component.woken && cur.cbSet != null) {
				var cx_ite2 = cur.cbSet.bodylisteners.head;
				while(cx_ite2 != null) {
					var i = cx_ite2.elt;
					if(i.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE) {
						cx_ite2 = cx_ite2.next;
						continue;
					}
					var cb = this.push_callback(i);
					cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE;
					cb.body = cur;
					cx_ite2 = cx_ite2.next;
				}
			}
			cur.component.woken = false;
			var cx_ite3 = cur.shapes.head;
			while(cx_ite3 != null) {
				var shape = cx_ite3.elt;
				this.bphase.sync(shape);
				cx_ite3 = cx_ite3.next;
			}
			cx_ite = cx_ite.next;
		}
		var cx_ite4 = this.kinematics.head;
		while(cx_ite4 != null) {
			var cur1 = cx_ite4.elt;
			cur1.sweepRadius = 0;
			var cx_ite5 = cur1.shapes.head;
			while(cx_ite5 != null) {
				var s1 = cx_ite5.elt;
				if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON) {
					s1.polygon.splice_collinear();
					var res1 = s1.polygon.valid();
					if(res1 != (function($this) {
						var $r;
						if(zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID == null) {
							zpp_$nape_util_ZPP_$Flags.internal = true;
							zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID = new nape_shape_ValidationResult();
							zpp_$nape_util_ZPP_$Flags.internal = false;
						}
						$r = zpp_$nape_util_ZPP_$Flags.ValidationResult_VALID;
						return $r;
					}(this))) throw new js__$Boot_HaxeError("Error: Cannot simulate with an invalid Polygon : " + s1.polygon.outer.toString() + " is invalid : " + res1.toString());
					s1.polygon.validate_gaxi();
				}
				s1.validate_sweepRadius();
				if(s1.sweepRadius > cur1.sweepRadius) cur1.sweepRadius = s1.sweepRadius;
				cx_ite5 = cx_ite5.next;
			}
			cur1.validate_mass();
			cur1.validate_inertia();
			if(!(cur1.shapes.head == null)) {
				cur1.validate_aabb();
				cur1.validate_worldCOM();
			}
			cur1.validate_gravMass();
			if(cur1.zip_axis) {
				cur1.zip_axis = false;
				cur1.axisx = Math.sin(cur1.rot);
				cur1.axisy = Math.cos(cur1.rot);
				null;
			}
			if(!cur1.nomove && cur1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && cur1.mass == 0) throw new js__$Boot_HaxeError("Error: Dynamic Body cannot be simulated with 0 mass unless allowMovement is false");
			if(!cur1.norotate && cur1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && cur1.inertia == 0) throw new js__$Boot_HaxeError("Error: Dynamic Body cannot be simulated with 0 inertia unless allowRotation is false");
			var cx_ite6 = cur1.shapes.head;
			while(cx_ite6 != null) {
				var shape1 = cx_ite6.elt;
				this.bphase.sync(shape1);
				cx_ite6 = cx_ite6.next;
			}
			cx_ite4 = cx_ite4.next;
		}
		var cx_ite7 = this.live_constraints.head;
		while(cx_ite7 != null) {
			var con = cx_ite7.elt;
			if(con.active) {
				con.validate();
				if(con.component.woken && con.cbSet != null) {
					var cx_ite8 = con.cbSet.conlisteners.head;
					while(cx_ite8 != null) {
						var i1 = cx_ite8.elt;
						if(i1.event != zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE) {
							cx_ite8 = cx_ite8.next;
							continue;
						}
						var cb1 = this.push_callback(i1);
						cb1.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE;
						cb1.constraint = con;
						cx_ite8 = cx_ite8.next;
					}
				}
				con.component.woken = false;
			}
			cx_ite7 = cx_ite7.next;
		}
	}
	,updateVel: function(dt) {
		var pre = null;
		var linDrag = 1 - dt * this.global_lin_drag;
		var angDrag = 1 - dt * this.global_ang_drag;
		var cx_ite = this.live.head;
		while(cx_ite != null) {
			var cur = cx_ite.elt;
			if(cur.smass != 0.0) {
				var time = dt * cur.imass;
				cur.velx = linDrag * cur.velx + (cur.forcex + this.gravityx * cur.gravMass) * time;
				cur.vely = linDrag * cur.vely + (cur.forcey + this.gravityy * cur.gravMass) * time;
			}
			if(cur.sinertia != 0.0) {
				var dpx = 0.0;
				var dpy = 0.0;
				dpx = cur.worldCOMx - cur.posx;
				dpy = cur.worldCOMy - cur.posy;
				var torque = cur.torque + (this.gravityy * dpx - this.gravityx * dpy) * cur.gravMass;
				cur.angvel = angDrag * cur.angvel + torque * dt * cur.iinertia;
			}
			pre = cx_ite;
			cx_ite = cx_ite.next;
		}
	}
	,updatePos: function(dt) {
		var MAX_VEL = 2 * Math.PI / dt;
		var cx_ite = this.live.head;
		while(cx_ite != null) {
			var cur = cx_ite.elt;
			cur.pre_posx = cur.posx;
			cur.pre_posy = cur.posy;
			cur.pre_rot = cur.rot;
			cur.sweepTime = 0;
			cur.sweep_angvel = cur.angvel % MAX_VEL;
			cur.sweepIntegrate(dt);
			if(!cur.disableCCD) {
				var linThreshold = nape_Config.staticCCDLinearThreshold * cur.sweepRadius;
				var angThreshold = nape_Config.staticCCDAngularThreshold;
				if((cur.velx * cur.velx + cur.vely * cur.vely) * dt * dt > linThreshold * linThreshold || cur.angvel * cur.angvel * dt * dt > angThreshold * angThreshold || cur.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) {
					var angvel = cur.sweep_angvel;
					if(angvel < 0) angvel = -angvel;
					var iangvel = 1 / angvel;
					var cx_ite1 = cur.shapes.head;
					while(cx_ite1 != null) {
						var s = cx_ite1.elt;
						var aabb = s.aabb;
						var minx = aabb.minx;
						var miny = aabb.miny;
						var maxx = aabb.maxx;
						var maxy = aabb.maxy;
						var count = angvel * dt * s.sweepCoef * 0.0083333333333333332 | 0;
						if(count > 8) count = 8;
						var anginc = angvel * dt / count;
						cur.sweepIntegrate(dt);
						if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) s.circle._force_validate_aabb(); else s.polygon._force_validate_aabb();
						if(minx < aabb.minx) aabb.minx = minx; else minx = aabb.minx;
						if(miny < aabb.miny) aabb.miny = miny; else miny = aabb.miny;
						if(maxx > aabb.maxx) aabb.maxx = maxx; else maxx = aabb.maxx;
						if(maxy > aabb.maxy) aabb.maxy = maxy; else maxy = aabb.maxy;
						var _g = 1;
						while(_g < count) {
							var i = _g++;
							cur.sweepIntegrate(anginc * i * iangvel);
							if(s.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) s.circle._force_validate_aabb(); else s.polygon._force_validate_aabb();
							if(minx < aabb.minx) aabb.minx = minx; else minx = aabb.minx;
							if(miny < aabb.miny) aabb.miny = miny; else miny = aabb.miny;
							if(maxx > aabb.maxx) aabb.maxx = maxx; else maxx = aabb.maxx;
							if(maxy > aabb.maxy) aabb.maxy = maxy; else maxy = aabb.maxy;
						}
						this.bphase.sync(s);
						cx_ite1 = cx_ite1.next;
					}
					cur.sweepFrozen = false;
					if(cur.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && cur.bulletEnabled) {
						var linThreshold2 = nape_Config.bulletCCDLinearThreshold * cur.sweepRadius;
						var angThreshold2 = nape_Config.bulletCCDAngularThreshold;
						if((cur.velx * cur.velx + cur.vely * cur.vely) * dt * dt > linThreshold2 * linThreshold2 || cur.angvel * cur.angvel * dt * dt > angThreshold2 * angThreshold2) cur.bullet = true;
					}
				} else {
					cur.sweepFrozen = true;
					cur.bullet = false;
				}
			} else {
				cur.sweepFrozen = true;
				cur.bullet = false;
			}
			cx_ite = cx_ite.next;
		}
		var cx_ite2 = this.kinematics.head;
		while(cx_ite2 != null) {
			var cur1 = cx_ite2.elt;
			cur1.pre_posx = cur1.posx;
			cur1.pre_posy = cur1.posy;
			cur1.pre_rot = cur1.rot;
			cur1.sweepTime = 0;
			cur1.sweep_angvel = cur1.angvel % MAX_VEL;
			cur1.sweepIntegrate(dt);
			if(!cur1.disableCCD) {
				var linThreshold1 = nape_Config.staticCCDLinearThreshold * cur1.sweepRadius;
				var angThreshold1 = nape_Config.staticCCDAngularThreshold;
				if((cur1.velx * cur1.velx + cur1.vely * cur1.vely) * dt * dt > linThreshold1 * linThreshold1 || cur1.angvel * cur1.angvel * dt * dt > angThreshold1 * angThreshold1 || cur1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) {
					var angvel1 = cur1.sweep_angvel;
					if(angvel1 < 0) angvel1 = -angvel1;
					var iangvel1 = 1 / angvel1;
					var cx_ite3 = cur1.shapes.head;
					while(cx_ite3 != null) {
						var s1 = cx_ite3.elt;
						var aabb1 = s1.aabb;
						var minx1 = aabb1.minx;
						var miny1 = aabb1.miny;
						var maxx1 = aabb1.maxx;
						var maxy1 = aabb1.maxy;
						var count1 = angvel1 * dt * s1.sweepCoef * 0.0083333333333333332 | 0;
						if(count1 > 8) count1 = 8;
						var anginc1 = angvel1 * dt / count1;
						cur1.sweepIntegrate(dt);
						if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) s1.circle._force_validate_aabb(); else s1.polygon._force_validate_aabb();
						if(minx1 < aabb1.minx) aabb1.minx = minx1; else minx1 = aabb1.minx;
						if(miny1 < aabb1.miny) aabb1.miny = miny1; else miny1 = aabb1.miny;
						if(maxx1 > aabb1.maxx) aabb1.maxx = maxx1; else maxx1 = aabb1.maxx;
						if(maxy1 > aabb1.maxy) aabb1.maxy = maxy1; else maxy1 = aabb1.maxy;
						var _g1 = 1;
						while(_g1 < count1) {
							var i1 = _g1++;
							cur1.sweepIntegrate(anginc1 * i1 * iangvel1);
							if(s1.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) s1.circle._force_validate_aabb(); else s1.polygon._force_validate_aabb();
							if(minx1 < aabb1.minx) aabb1.minx = minx1; else minx1 = aabb1.minx;
							if(miny1 < aabb1.miny) aabb1.miny = miny1; else miny1 = aabb1.miny;
							if(maxx1 > aabb1.maxx) aabb1.maxx = maxx1; else maxx1 = aabb1.maxx;
							if(maxy1 > aabb1.maxy) aabb1.maxy = maxy1; else maxy1 = aabb1.maxy;
						}
						this.bphase.sync(s1);
						cx_ite3 = cx_ite3.next;
					}
					cur1.sweepFrozen = false;
					if(cur1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && cur1.bulletEnabled) {
						var linThreshold21 = nape_Config.bulletCCDLinearThreshold * cur1.sweepRadius;
						var angThreshold21 = nape_Config.bulletCCDAngularThreshold;
						if((cur1.velx * cur1.velx + cur1.vely * cur1.vely) * dt * dt > linThreshold21 * linThreshold21 || cur1.angvel * cur1.angvel * dt * dt > angThreshold21 * angThreshold21) cur1.bullet = true;
					}
				} else {
					cur1.sweepFrozen = true;
					cur1.bullet = false;
				}
			} else {
				cur1.sweepFrozen = true;
				cur1.bullet = false;
			}
			cx_ite2 = cx_ite2.next;
		}
	}
	,presteparb: function(arb,dt,cont) {
		if(cont == null) cont = false;
		var _g = this;
		if(!arb.cleared && (arb.b1.component.sleeping && arb.b2.component.sleeping)) {
			arb.sleep_stamp = this.stamp;
			arb.sleeping = true;
			return true;
		}
		if(!arb.cleared || arb.present != 0 || arb.intchange) {
			var endcb = !cont && arb.up_stamp == this.stamp - 1 && !arb.cleared && !arb.intchange;
			var begcb = arb.fresh && !arb.cleared && !arb.intchange;
			if(endcb) arb.endGenerated = this.stamp;
			if(begcb || endcb || arb.cleared || arb.intchange) {
				this.inlined_MRCA_chains(arb.ws1,arb.ws2);
				var cx_ite = this.mrca1.head;
				while(cx_ite != null) {
					var i1 = cx_ite.elt;
					var cx_ite1 = this.mrca2.head;
					while(cx_ite1 != null) {
						var i2 = cx_ite1.elt;
						var cb1 = i1.cbSet;
						var cb2 = i2.cbSet;
						if(cb1.manager.pair(cb1,cb2).empty_intersection()) {
							cx_ite1 = cx_ite1.next;
							continue;
						}
						var callbackset = [zpp_$nape_phys_ZPP_$Interactor.get(i1,i2)];
						if(begcb || arb.intchange) {
							if(callbackset[0] == null) {
								callbackset[0] = zpp_$nape_space_ZPP_$CallbackSet.get(i1,i2);
								this.add_callbackset(callbackset[0]);
							}
							cb1.manager.pair(cb1,cb2).forall(zpp_$nape_util_ZPP_$Flags.id_CbEvent_BEGIN,(function(callbackset) {
								return function(listener) {
									if((listener.itype & arb.type) != 0 && callbackset[0].empty_arb(listener.itype)) {
										var cb = _g.push_callback(listener);
										cb.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_BEGIN;
										zpp_$nape_phys_ZPP_$Interactor.int_callback(callbackset[0],listener,cb);
										cb.set = callbackset[0];
									}
								};
							})(callbackset));
							if(!callbackset[0].arbiters.inlined_has(arb)?(function($this) {
								var $r;
								callbackset[0].arbiters.inlined_add(arb);
								$r = true;
								return $r;
							}(this)):false) arb.present++;
						} else {
							arb.present--;
							callbackset[0].remove_arb(arb);
							cb1.manager.pair(cb1,cb2).forall(zpp_$nape_util_ZPP_$Flags.id_CbEvent_END,(function(callbackset) {
								return function(listener1) {
									if((listener1.itype & arb.type) != 0 && callbackset[0].empty_arb(listener1.itype)) {
										var cb3 = _g.push_callback(listener1);
										cb3.event = zpp_$nape_util_ZPP_$Flags.id_CbEvent_END;
										zpp_$nape_phys_ZPP_$Interactor.int_callback(callbackset[0],listener1,cb3);
										cb3.set = callbackset[0];
									}
								};
							})(callbackset));
							if(callbackset[0].arbiters.head == null) this.remove_callbackset(callbackset[0]);
						}
						cx_ite1 = cx_ite1.next;
					}
					cx_ite = cx_ite.next;
				}
			}
			arb.fresh = false;
			arb.intchange = false;
		}
		if(arb.cleared || arb.up_stamp + (arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.COL?nape_Config.arbiterExpirationDelay:0) < this.stamp) {
			if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.SENSOR) arb.sensorarb.retire(); else if(arb.type == zpp_$nape_dynamics_ZPP_$Arbiter.FLUID) arb.fluidarb.retire(); else arb.colarb.retire();
			return true;
		}
		var pact = arb.active;
		arb.active = arb.presentable = arb.up_stamp == this.stamp;
		if((arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) {
			if(arb.active && arb.type != zpp_$nape_dynamics_ZPP_$Arbiter.SENSOR) {
				if(arb.colarb != null) {
					if(arb.colarb.preStep(dt)) arb.active = false;
				} else arb.fluidarb.preStep(this,dt);
			}
		} else if(arb.colarb != null) {
			if(arb.colarb.cleanupContacts()) arb.active = false;
		}
		if(pact != arb.active) {
			arb.b1.arbiters.modified = true;
			arb.b2.arbiters.modified = true;
			this.c_arbiters_true.modified = this.c_arbiters_false.modified = true;
			this.s_arbiters.modified = this.f_arbiters.modified = true;
		}
		return false;
	}
	,prestep: function(dt) {
		var pre = null;
		var cx_ite = this.live_constraints.head;
		while(cx_ite != null) {
			var con = cx_ite.elt;
			if(con.preStep(dt)) {
				cx_ite = this.live_constraints.erase(pre);
				con.broken();
				this.constraintCbBreak(con);
				if(con.removeOnBreak) {
					con.component.sleeping = true;
					this.midstep = false;
					if(con.compound != null) con.compound.wrap_constraints.remove(con.outer); else this.wrap_constraints.remove(con.outer);
					this.midstep = true;
				} else con.active = false;
				con.clearcache();
				continue;
			}
			pre = cx_ite;
			cx_ite = cx_ite.next;
		}
		var pre1 = null;
		var arbs = this.c_arbiters_true;
		var arbite = arbs.head;
		var fst = this.c_arbiters_false != null;
		if(fst && arbite == null) {
			fst = false;
			arbite = this.c_arbiters_false.head;
			arbs = this.c_arbiters_false;
			pre1 = null;
		}
		while(arbite != null) {
			var arb = arbite.elt;
			if(this.presteparb(arb,dt)) {
				arbite = arbs.inlined_erase(pre1);
				if(fst && arbite == null) {
					fst = false;
					arbite = this.c_arbiters_false.head;
					arbs = this.c_arbiters_false;
					pre1 = null;
				}
				continue;
			}
			pre1 = arbite;
			arbite = arbite.next;
			if(fst && arbite == null) {
				fst = false;
				arbite = this.c_arbiters_false.head;
				arbs = this.c_arbiters_false;
				pre1 = null;
			}
		}
		var pre2 = null;
		var arbs1 = this.f_arbiters;
		var arbite1 = arbs1.head;
		var fst1 = false;
		if(fst1 && arbite1 == null) {
			fst1 = false;
			arbs1 = null;
			pre2 = null;
		}
		while(arbite1 != null) {
			var arb1 = arbite1.elt;
			if(this.presteparb(arb1,dt)) {
				arbite1 = arbs1.inlined_erase(pre2);
				if(fst1 && arbite1 == null) {
					fst1 = false;
					arbs1 = null;
					pre2 = null;
				}
				continue;
			}
			pre2 = arbite1;
			arbite1 = arbite1.next;
			if(fst1 && arbite1 == null) {
				fst1 = false;
				arbs1 = null;
				pre2 = null;
			}
		}
		var pre3 = null;
		var arbs2 = this.s_arbiters;
		var arbite2 = arbs2.head;
		var fst2 = false;
		if(fst2 && arbite2 == null) {
			fst2 = false;
			arbs2 = null;
			pre3 = null;
		}
		while(arbite2 != null) {
			var arb2 = arbite2.elt;
			if(this.presteparb(arb2,dt)) {
				arbite2 = arbs2.inlined_erase(pre3);
				if(fst2 && arbite2 == null) {
					fst2 = false;
					arbs2 = null;
					pre3 = null;
				}
				continue;
			}
			pre3 = arbite2;
			arbite2 = arbite2.next;
			if(fst2 && arbite2 == null) {
				fst2 = false;
				arbs2 = null;
				pre3 = null;
			}
		}
	}
	,warmStart: function() {
		var cx_ite = this.f_arbiters.head;
		while(cx_ite != null) {
			var arb = cx_ite.elt;
			if(arb.active && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) arb.warmStart();
			cx_ite = cx_ite.next;
		}
		var arbi = this.c_arbiters_false.head;
		var fst = true;
		if(arbi == null) {
			arbi = this.c_arbiters_true.head;
			fst = false;
		}
		while(arbi != null) {
			var arb1 = arbi.elt;
			if(arb1.active && (arb1.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) arb1.warmStart();
			arbi = arbi.next;
			if(fst && arbi == null) {
				arbi = this.c_arbiters_true.head;
				fst = false;
			}
		}
		var cx_ite1 = this.live_constraints.head;
		while(cx_ite1 != null) {
			var con = cx_ite1.elt;
			con.warmStart();
			cx_ite1 = cx_ite1.next;
		}
	}
	,iterateVel: function(times) {
		var _g = 0;
		while(_g < times) {
			var i = _g++;
			var cx_ite = this.f_arbiters.head;
			while(cx_ite != null) {
				var arb = cx_ite.elt;
				if(arb.active && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) arb.applyImpulseVel();
				cx_ite = cx_ite.next;
			}
			var pre = null;
			var cx_ite1 = this.live_constraints.head;
			while(cx_ite1 != null) {
				var con = cx_ite1.elt;
				if(con.applyImpulseVel()) {
					cx_ite1 = this.live_constraints.erase(pre);
					con.broken();
					this.constraintCbBreak(con);
					if(con.removeOnBreak) {
						con.component.sleeping = true;
						this.midstep = false;
						if(con.compound != null) con.compound.wrap_constraints.remove(con.outer); else this.wrap_constraints.remove(con.outer);
						this.midstep = true;
					} else con.active = false;
					con.clearcache();
					continue;
				}
				pre = cx_ite1;
				cx_ite1 = cx_ite1.next;
			}
			var arbi = this.c_arbiters_false.head;
			var fst = true;
			if(arbi == null) {
				arbi = this.c_arbiters_true.head;
				fst = false;
			}
			while(arbi != null) {
				var arb1 = arbi.elt;
				if(arb1.active && (arb1.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) arb1.applyImpulseVel();
				arbi = arbi.next;
				if(fst && arbi == null) {
					arbi = this.c_arbiters_true.head;
					fst = false;
				}
			}
		}
	}
	,iteratePos: function(times) {
		var _g = 0;
		while(_g < times) {
			var i = _g++;
			var pre = null;
			var cx_ite = this.live_constraints.head;
			while(cx_ite != null) {
				var con = cx_ite.elt;
				if(!con.__velocity && con.stiff) {
					if(con.applyImpulsePos()) {
						cx_ite = this.live_constraints.erase(pre);
						con.broken();
						this.constraintCbBreak(con);
						if(con.removeOnBreak) {
							con.component.sleeping = true;
							this.midstep = false;
							if(con.compound != null) con.compound.wrap_constraints.remove(con.outer); else this.wrap_constraints.remove(con.outer);
							this.midstep = true;
						} else con.active = false;
						con.clearcache();
						continue;
					}
				}
				pre = cx_ite;
				cx_ite = cx_ite.next;
			}
			var arbi = this.c_arbiters_false.head;
			var fst = true;
			if(arbi == null) {
				arbi = this.c_arbiters_true.head;
				fst = false;
			}
			while(arbi != null) {
				var arb = arbi.elt;
				if(arb.active && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) arb.applyImpulsePos();
				arbi = arbi.next;
				if(fst && arbi == null) {
					arbi = this.c_arbiters_true.head;
					fst = false;
				}
			}
		}
	}
	,group_ignore: function(s1,s2) {
		var g1 = s1.lookup_group();
		if(g1 == null) return false; else {
			var g2 = s2.lookup_group();
			if(g2 == null) return false; else {
				var ret = false;
				while(g1 != null && g2 != null) {
					if(g1 == g2) {
						ret = g1.ignore;
						break;
					}
					if(g1.depth < g2.depth) g2 = g2.group; else g1 = g1.group;
				}
				return ret;
			}
		}
	}
	,interactionType: function(s1,s2,b1,b2) {
		var con_ignore;
		con_ignore = false;
		var cx_ite = b1.constraints.head;
		while(cx_ite != null) {
			var con = cx_ite.elt;
			if(con.ignore && con.pair_exists(b1.id,b2.id)) {
				con_ignore = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		if(!con_ignore && !this.group_ignore(s1,s2)) {
			if((s1.sensorEnabled || s2.sensorEnabled) && s1.filter.shouldSense(s2.filter)) return 2; else if((s1.fluidEnabled || s2.fluidEnabled) && s1.filter.shouldFlow(s2.filter) && !(b1.imass == 0 && b2.imass == 0 && b1.iinertia == 0 && b2.iinertia == 0)) return 0; else if(s1.filter.shouldCollide(s2.filter) && !(b1.imass == 0 && b2.imass == 0 && b1.iinertia == 0 && b2.iinertia == 0)) return 1; else return -1;
		} else return -1;
	}
	,narrowPhase: function(s1,s2,stat,in_arb,continuous) {
		var _g = this;
		var ret = null;
		var b1 = s1.body;
		var b2 = s2.body;
		var itype = this.interactionType(s1,s2,b1,b2);
		if(itype != -1) {
			var sa;
			var sb;
			if(s1.type > s2.type) {
				sa = s2;
				sb = s1;
			} else if(s1.type == s2.type) {
				if(s1.id < s2.id) {
					sa = s1;
					sb = s2;
				} else {
					sb = s1;
					sa = s2;
				}
			} else {
				sa = s1;
				sb = s2;
			}
			var reverse = sa == s2;
			if(itype == 0) {
				var xarb;
				if(in_arb == null) {
					var ret1 = null;
					var b;
					if(b1.arbiters.length < b2.arbiters.length) b = b1; else b = b2;
					var cx_ite = b.arbiters.head;
					while(cx_ite != null) {
						var arb1 = cx_ite.elt;
						if(arb1.id == sa.id && arb1.di == sb.id) {
							ret1 = arb1;
							break;
						}
						cx_ite = cx_ite.next;
					}
					xarb = ret1;
				} else xarb = in_arb;
				var first = xarb == null;
				var arb;
				var swapped = false;
				if(first) {
					if(zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool == null) arb = new zpp_$nape_dynamics_ZPP_$FluidArbiter(); else {
						arb = zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool = arb.next;
						arb.next = null;
					}
					null;
				} else if(xarb.fluidarb == null) {
					xarb.cleared = true;
					xarb.b1.arbiters.inlined_try_remove(xarb);
					xarb.b2.arbiters.inlined_try_remove(xarb);
					if(xarb.pair != null) {
						xarb.pair.arb = null;
						xarb.pair = null;
					}
					xarb.active = false;
					this.f_arbiters.modified = true;
					if(zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool == null) arb = new zpp_$nape_dynamics_ZPP_$FluidArbiter(); else {
						arb = zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool = arb.next;
						arb.next = null;
					}
					null;
					arb.intchange = true;
					first = true;
					swapped = true;
				} else arb = xarb.fluidarb;
				var inttype = zpp_$nape_util_ZPP_$Flags.id_InteractionType_FLUID;
				if(first || arb.stamp != this.stamp || continuous) {
					arb.stamp = this.stamp;
					if(zpp_$nape_geom_ZPP_$Collide.flowCollide(sa,sb,arb)) {
						if(first) {
							arb.b1 = s1.body;
							arb.ws1 = s1;
							arb.b2 = s2.body;
							arb.ws2 = s2;
							arb.id = sa.id;
							arb.di = sb.id;
							arb.b1.arbiters.inlined_add(arb);
							arb.b2.arbiters.inlined_add(arb);
							arb.active = true;
							arb.present = 0;
							arb.cleared = false;
							arb.sleeping = false;
							arb.fresh = false;
							arb.presentable = false;
							arb.nx = 0;
							arb.ny = 1;
							arb.dampx = 0;
							arb.dampy = 0;
							arb.adamp = 0.0;
							this.f_arbiters.inlined_add(arb);
							arb.fresh = !swapped;
						} else arb.fresh = arb.up_stamp < this.stamp - 1 || arb.endGenerated == this.stamp && continuous;
						arb.up_stamp = arb.stamp;
						if(arb.fresh || (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
							arb.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT;
							var anyimpure = false;
							var arbs1;
							if(arb.ws1.id > arb.ws2.id) arbs1 = arb.ws2; else arbs1 = arb.ws1;
							var arbs2;
							if(arb.ws1.id > arb.ws2.id) arbs2 = arb.ws1; else arbs2 = arb.ws2;
							this.inlined_MRCA_chains(arbs1,arbs2);
							var cx_ite1 = this.mrca1.head;
							while(cx_ite1 != null) {
								var i1 = cx_ite1.elt;
								var cx_ite2 = this.mrca2.head;
								while(cx_ite2 != null) {
									var i2 = cx_ite2.elt;
									var cb1 = i1.cbSet;
									var cb2 = i2.cbSet;
									if(cb1.manager.pair(cb1,cb2).empty_intersection()) {
										cx_ite2 = cx_ite2.next;
										continue;
									}
									var callbackset = null;
									var ncallbackset = null;
									this.prelisteners.inlined_clear();
									var lite = [null];
									cb1.manager.pair(cb1,cb2).forall(zpp_$nape_util_ZPP_$Flags.id_CbEvent_PRE,(function(lite) {
										return function(listener) {
											if((listener.itype & inttype) != 0) {
												lite[0] = _g.prelisteners.inlined_insert(lite[0],listener);
												anyimpure = anyimpure || !listener.pure;
											}
										};
									})(lite));
									if(this.prelisteners.head == null) {
										cx_ite2 = cx_ite2.next;
										continue;
									}
									callbackset = zpp_$nape_phys_ZPP_$Interactor.get(i1,i2);
									if(callbackset == null) {
										ncallbackset = zpp_$nape_space_ZPP_$CallbackSet.get(i1,i2);
										this.add_callbackset(ncallbackset);
									}
									if(callbackset == null || (callbackset.FLUIDstamp != this.stamp || continuous) && (callbackset.FLUIDstate & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
										if(ncallbackset != null) callbackset = ncallbackset;
										if(callbackset != null) {
											var cx_ite3 = this.prelisteners.head;
											while(cx_ite3 != null) {
												var listener1 = cx_ite3.elt;
												if(listener1.itype == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
													callbackset.COLLISIONstamp = this.stamp;
													callbackset.SENSORstamp = this.stamp;
													callbackset.FLUIDstamp = this.stamp;
												} else callbackset.FLUIDstamp = this.stamp;
												cx_ite3 = cx_ite3.next;
											}
										}
										arb.mutable = true;
										if(arb.wrap_position != null) arb.wrap_position.zpp_inner._immutable = false;
										var pact = arb.active;
										arb.active = true;
										var emptycontacts = false;
										this.precb.zpp_inner.pre_arbiter = arb;
										this.precb.zpp_inner.set = callbackset;
										var cx_ite4 = this.prelisteners.head;
										while(cx_ite4 != null) {
											var listener2 = cx_ite4.elt;
											this.precb.zpp_inner.listener = listener2;
											zpp_$nape_phys_ZPP_$Interactor.int_callback(callbackset,listener2,this.precb.zpp_inner);
											this.precb.zpp_inner.pre_swapped = i1 != this.precb.zpp_inner.int1;
											var ret2 = listener2.handlerp(this.precb);
											if(ret2 != null) if(ret2 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
												return $r;
											}(this))) arb.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS; else if(ret2 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE;
												return $r;
											}(this))) arb.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT; else if(ret2 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
												return $r;
											}(this))) arb.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS; else arb.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE;
											cx_ite4 = cx_ite4.next;
										}
										arb.mutable = false;
										if(arb.wrap_position != null) arb.wrap_position.zpp_inner._immutable = true;
										arb.active = pact;
										if(callbackset != null) {
											var cx_ite5 = this.prelisteners.head;
											while(cx_ite5 != null) {
												var listener3 = cx_ite5.elt;
												if(listener3.itype == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
													callbackset.COLLISIONstate = arb.immState;
													callbackset.SENSORstate = arb.immState;
													callbackset.FLUIDstate = arb.immState;
												} else callbackset.FLUIDstate = arb.immState;
												cx_ite5 = cx_ite5.next;
											}
										}
									} else if(callbackset == null) {
										if((arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) arb.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT;
									} else arb.immState = callbackset.FLUIDstate;
									cx_ite2 = cx_ite2.next;
								}
								cx_ite1 = cx_ite1.next;
							}
							if(anyimpure && (arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
								if(arb.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
									var o = arb.b1;
									if(!o.world) {
										o.component.waket = this.stamp + (this.midstep?0:1);
										if(o.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o.kinematicDelaySleep = true;
										if(o.component.sleeping) this.really_wake(o,false);
									}
								}
								if(arb.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
									var o1 = arb.b2;
									if(!o1.world) {
										o1.component.waket = this.stamp + (this.midstep?0:1);
										if(o1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o1.kinematicDelaySleep = true;
										if(o1.component.sleeping) this.really_wake(o1,false);
									}
								}
							}
						}
						if((arb.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) {
							if(arb.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb.b1.component.sleeping) {
								var o2 = arb.b1;
								if(!o2.world) {
									o2.component.waket = this.stamp + (this.midstep?0:1);
									if(o2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o2.kinematicDelaySleep = true;
									if(o2.component.sleeping) this.really_wake(o2,false);
								}
							}
							if(arb.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb.b2.component.sleeping) {
								var o3 = arb.b2;
								if(!o3.world) {
									o3.component.waket = this.stamp + (this.midstep?0:1);
									if(o3.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o3.kinematicDelaySleep = true;
									if(o3.component.sleeping) this.really_wake(o3,false);
								}
							}
						}
						if(arb.sleeping) {
							arb.sleeping = false;
							this.f_arbiters.inlined_add(arb);
						}
						ret = arb;
					} else if(first) {
						var o4 = arb;
						o4.next = zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$FluidArbiter.zpp_pool = o4;
						ret = null;
					} else ret = arb;
				} else ret = arb;
			} else if(itype == 1) {
				var carbs;
				if(stat) carbs = this.c_arbiters_true; else carbs = this.c_arbiters_false;
				var xarb1;
				if(in_arb == null) {
					var ret3 = null;
					var b3;
					if(b1.arbiters.length < b2.arbiters.length) b3 = b1; else b3 = b2;
					var cx_ite6 = b3.arbiters.head;
					while(cx_ite6 != null) {
						var arb3 = cx_ite6.elt;
						if(arb3.id == sa.id && arb3.di == sb.id) {
							ret3 = arb3;
							break;
						}
						cx_ite6 = cx_ite6.next;
					}
					xarb1 = ret3;
				} else xarb1 = in_arb;
				var first1 = xarb1 == null;
				var arb2;
				var swapped1 = false;
				if(first1) {
					if(zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool == null) arb2 = new zpp_$nape_dynamics_ZPP_$ColArbiter(); else {
						arb2 = zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool = arb2.next;
						arb2.next = null;
					}
					null;
					arb2.stat = stat;
				} else if(xarb1.colarb == null) {
					xarb1.cleared = true;
					xarb1.b1.arbiters.inlined_try_remove(xarb1);
					xarb1.b2.arbiters.inlined_try_remove(xarb1);
					if(xarb1.pair != null) {
						xarb1.pair.arb = null;
						xarb1.pair = null;
					}
					xarb1.active = false;
					this.f_arbiters.modified = true;
					if(zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool == null) arb2 = new zpp_$nape_dynamics_ZPP_$ColArbiter(); else {
						arb2 = zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool = arb2.next;
						arb2.next = null;
					}
					null;
					arb2.intchange = true;
					arb2.stat = stat;
					first1 = true;
					swapped1 = true;
				} else {
					arb2 = xarb1.colarb;
					reverse = sa != arb2.s1;
					if(arb2.stat != stat) {
						arb2.stat = stat;
						if(!arb2.sleeping) {
							(stat?this.c_arbiters_false:this.c_arbiters_true).remove(arb2);
							carbs.add(arb2);
						}
					}
				}
				var inttype1 = zpp_$nape_util_ZPP_$Flags.id_InteractionType_COLLISION;
				if(first1 || arb2.stamp != this.stamp || continuous) {
					arb2.stamp = this.stamp;
					if(zpp_$nape_geom_ZPP_$Collide.contactCollide(sa,sb,arb2,reverse)) {
						if(first1) {
							arb2.b1 = s1.body;
							arb2.ws1 = s1;
							arb2.b2 = s2.body;
							arb2.ws2 = s2;
							arb2.id = sa.id;
							arb2.di = sb.id;
							arb2.b1.arbiters.inlined_add(arb2);
							arb2.b2.arbiters.inlined_add(arb2);
							arb2.active = true;
							arb2.present = 0;
							arb2.cleared = false;
							arb2.sleeping = false;
							arb2.fresh = false;
							arb2.presentable = false;
							arb2.s1 = s1;
							arb2.s2 = s2;
							if(!arb2.userdef_restitution) {
								if(arb2.s1.material.elasticity <= -Infinity || arb2.s2.material.elasticity <= -Infinity) arb2.restitution = 0; else if(arb2.s1.material.elasticity >= Infinity || arb2.s2.material.elasticity >= Infinity) arb2.restitution = 1; else arb2.restitution = (arb2.s1.material.elasticity + arb2.s2.material.elasticity) / 2;
								if(arb2.restitution < 0) arb2.restitution = 0;
								if(arb2.restitution > 1) arb2.restitution = 1;
							}
							if(!arb2.userdef_dyn_fric) arb2.dyn_fric = Math.sqrt(arb2.s1.material.dynamicFriction * arb2.s2.material.dynamicFriction);
							if(!arb2.userdef_stat_fric) arb2.stat_fric = Math.sqrt(arb2.s1.material.staticFriction * arb2.s2.material.staticFriction);
							if(!arb2.userdef_rfric) arb2.rfric = Math.sqrt(arb2.s1.material.rollingFriction * arb2.s2.material.rollingFriction);
							carbs.inlined_add(arb2);
							arb2.fresh = !swapped1;
						} else arb2.fresh = arb2.up_stamp < this.stamp - 1 || arb2.endGenerated == this.stamp && continuous;
						arb2.up_stamp = arb2.stamp;
						if(arb2.fresh || (arb2.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
							arb2.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT;
							var anyimpure1 = false;
							var arbs11;
							if(arb2.ws1.id > arb2.ws2.id) arbs11 = arb2.ws2; else arbs11 = arb2.ws1;
							var arbs21;
							if(arb2.ws1.id > arb2.ws2.id) arbs21 = arb2.ws1; else arbs21 = arb2.ws2;
							this.inlined_MRCA_chains(arbs11,arbs21);
							var cx_ite7 = this.mrca1.head;
							while(cx_ite7 != null) {
								var i11 = cx_ite7.elt;
								var cx_ite8 = this.mrca2.head;
								while(cx_ite8 != null) {
									var i21 = cx_ite8.elt;
									var cb11 = i11.cbSet;
									var cb21 = i21.cbSet;
									if(cb11.manager.pair(cb11,cb21).empty_intersection()) {
										cx_ite8 = cx_ite8.next;
										continue;
									}
									var callbackset1 = null;
									var ncallbackset1 = null;
									this.prelisteners.inlined_clear();
									var lite1 = [null];
									cb11.manager.pair(cb11,cb21).forall(zpp_$nape_util_ZPP_$Flags.id_CbEvent_PRE,(function(lite1) {
										return function(listener4) {
											if((listener4.itype & inttype1) != 0) {
												lite1[0] = _g.prelisteners.inlined_insert(lite1[0],listener4);
												anyimpure1 = anyimpure1 || !listener4.pure;
											}
										};
									})(lite1));
									if(this.prelisteners.head == null) {
										cx_ite8 = cx_ite8.next;
										continue;
									}
									callbackset1 = zpp_$nape_phys_ZPP_$Interactor.get(i11,i21);
									if(callbackset1 == null) {
										ncallbackset1 = zpp_$nape_space_ZPP_$CallbackSet.get(i11,i21);
										this.add_callbackset(ncallbackset1);
									}
									if(callbackset1 == null || (callbackset1.COLLISIONstamp != this.stamp || continuous) && (callbackset1.COLLISIONstate & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
										if(ncallbackset1 != null) callbackset1 = ncallbackset1;
										if(callbackset1 != null) {
											var cx_ite9 = this.prelisteners.head;
											while(cx_ite9 != null) {
												var listener5 = cx_ite9.elt;
												if(listener5.itype == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
													callbackset1.COLLISIONstamp = this.stamp;
													callbackset1.SENSORstamp = this.stamp;
													callbackset1.FLUIDstamp = this.stamp;
												} else callbackset1.COLLISIONstamp = this.stamp;
												cx_ite9 = cx_ite9.next;
											}
										}
										arb2.mutable = true;
										if(arb2.wrap_normal != null) arb2.wrap_normal.zpp_inner._immutable = false;
										if(arb2.wrap_contacts != null) arb2.wrap_contacts.zpp_inner.immutable = false;
										var pact1 = arb2.active;
										arb2.active = true;
										var emptycontacts1 = false;
										arb2.cleanupContacts();
										this.precb.zpp_inner.pre_arbiter = arb2;
										this.precb.zpp_inner.set = callbackset1;
										var cx_ite10 = this.prelisteners.head;
										while(cx_ite10 != null) {
											var listener6 = cx_ite10.elt;
											this.precb.zpp_inner.listener = listener6;
											zpp_$nape_phys_ZPP_$Interactor.int_callback(callbackset1,listener6,this.precb.zpp_inner);
											this.precb.zpp_inner.pre_swapped = i11 != this.precb.zpp_inner.int1;
											var ret4 = listener6.handlerp(this.precb);
											if(ret4 != null) if(ret4 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
												return $r;
											}(this))) arb2.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS; else if(ret4 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE;
												return $r;
											}(this))) arb2.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT; else if(ret4 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
												return $r;
											}(this))) arb2.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS; else arb2.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE;
											cx_ite10 = cx_ite10.next;
										}
										arb2.mutable = false;
										if(arb2.wrap_normal != null) arb2.wrap_normal.zpp_inner._immutable = true;
										if(arb2.wrap_contacts != null) arb2.wrap_contacts.zpp_inner.immutable = true;
										arb2.active = pact1;
										if(callbackset1 != null) {
											var cx_ite11 = this.prelisteners.head;
											while(cx_ite11 != null) {
												var listener7 = cx_ite11.elt;
												if(listener7.itype == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
													callbackset1.COLLISIONstate = arb2.immState;
													callbackset1.SENSORstate = arb2.immState;
													callbackset1.FLUIDstate = arb2.immState;
												} else callbackset1.COLLISIONstate = arb2.immState;
												cx_ite11 = cx_ite11.next;
											}
										}
									} else if(callbackset1 == null) {
										if((arb2.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) arb2.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT;
									} else arb2.immState = callbackset1.COLLISIONstate;
									cx_ite8 = cx_ite8.next;
								}
								cx_ite7 = cx_ite7.next;
							}
							if(anyimpure1 && (arb2.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
								if(arb2.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
									var o5 = arb2.b1;
									if(!o5.world) {
										o5.component.waket = this.stamp + (this.midstep?0:1);
										if(o5.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o5.kinematicDelaySleep = true;
										if(o5.component.sleeping) this.really_wake(o5,false);
									}
								}
								if(arb2.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) {
									var o6 = arb2.b2;
									if(!o6.world) {
										o6.component.waket = this.stamp + (this.midstep?0:1);
										if(o6.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o6.kinematicDelaySleep = true;
										if(o6.component.sleeping) this.really_wake(o6,false);
									}
								}
							}
						}
						if((arb2.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT) != 0) {
							if(arb2.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb2.b1.component.sleeping) {
								var o7 = arb2.b1;
								if(!o7.world) {
									o7.component.waket = this.stamp + (this.midstep?0:1);
									if(o7.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o7.kinematicDelaySleep = true;
									if(o7.component.sleeping) this.really_wake(o7,false);
								}
							}
							if(arb2.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC && arb2.b2.component.sleeping) {
								var o8 = arb2.b2;
								if(!o8.world) {
									o8.component.waket = this.stamp + (this.midstep?0:1);
									if(o8.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o8.kinematicDelaySleep = true;
									if(o8.component.sleeping) this.really_wake(o8,false);
								}
							}
						}
						if(arb2.sleeping) {
							arb2.sleeping = false;
							carbs.inlined_add(arb2);
						}
						ret = arb2;
					} else if(first1) {
						var o9 = arb2;
						o9.userdef_dyn_fric = false;
						o9.userdef_stat_fric = false;
						o9.userdef_restitution = false;
						o9.userdef_rfric = false;
						o9.__ref_edge1 = o9.__ref_edge2 = null;
						o9.next = zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$ColArbiter.zpp_pool = o9;
						ret = null;
					} else ret = arb2;
				} else ret = arb2;
			} else {
				var xarb2;
				if(in_arb == null) {
					var ret5 = null;
					var b4;
					if(b1.arbiters.length < b2.arbiters.length) b4 = b1; else b4 = b2;
					var cx_ite12 = b4.arbiters.head;
					while(cx_ite12 != null) {
						var arb5 = cx_ite12.elt;
						if(arb5.id == sa.id && arb5.di == sb.id) {
							ret5 = arb5;
							break;
						}
						cx_ite12 = cx_ite12.next;
					}
					xarb2 = ret5;
				} else xarb2 = in_arb;
				var first2 = xarb2 == null;
				var arb4;
				var swapped2 = false;
				if(first2) {
					if(zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool == null) arb4 = new zpp_$nape_dynamics_ZPP_$SensorArbiter(); else {
						arb4 = zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool = arb4.next;
						arb4.next = null;
					}
					null;
				} else if(xarb2.sensorarb == null) {
					xarb2.cleared = true;
					xarb2.b1.arbiters.inlined_try_remove(xarb2);
					xarb2.b2.arbiters.inlined_try_remove(xarb2);
					if(xarb2.pair != null) {
						xarb2.pair.arb = null;
						xarb2.pair = null;
					}
					xarb2.active = false;
					this.f_arbiters.modified = true;
					if(zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool == null) arb4 = new zpp_$nape_dynamics_ZPP_$SensorArbiter(); else {
						arb4 = zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool = arb4.next;
						arb4.next = null;
					}
					null;
					arb4.intchange = true;
					first2 = true;
					swapped2 = true;
				} else arb4 = xarb2.sensorarb;
				var inttype2 = zpp_$nape_util_ZPP_$Flags.id_InteractionType_SENSOR;
				if(first2 || arb4.stamp != this.stamp || continuous) {
					arb4.stamp = this.stamp;
					if(zpp_$nape_geom_ZPP_$Collide.testCollide(sa,sb)) {
						if(first2) {
							arb4.b1 = s1.body;
							arb4.ws1 = s1;
							arb4.b2 = s2.body;
							arb4.ws2 = s2;
							arb4.id = sa.id;
							arb4.di = sb.id;
							arb4.b1.arbiters.inlined_add(arb4);
							arb4.b2.arbiters.inlined_add(arb4);
							arb4.active = true;
							arb4.present = 0;
							arb4.cleared = false;
							arb4.sleeping = false;
							arb4.fresh = false;
							arb4.presentable = false;
							this.s_arbiters.inlined_add(arb4);
							arb4.fresh = !swapped2;
						} else arb4.fresh = arb4.up_stamp < this.stamp - 1 || arb4.endGenerated == this.stamp && continuous;
						arb4.up_stamp = arb4.stamp;
						if(arb4.fresh || (arb4.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
							arb4.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT;
							var anyimpure2 = false;
							var arbs12;
							if(arb4.ws1.id > arb4.ws2.id) arbs12 = arb4.ws2; else arbs12 = arb4.ws1;
							var arbs22;
							if(arb4.ws1.id > arb4.ws2.id) arbs22 = arb4.ws1; else arbs22 = arb4.ws2;
							this.inlined_MRCA_chains(arbs12,arbs22);
							var cx_ite13 = this.mrca1.head;
							while(cx_ite13 != null) {
								var i12 = cx_ite13.elt;
								var cx_ite14 = this.mrca2.head;
								while(cx_ite14 != null) {
									var i22 = cx_ite14.elt;
									var cb12 = i12.cbSet;
									var cb22 = i22.cbSet;
									if(cb12.manager.pair(cb12,cb22).empty_intersection()) {
										cx_ite14 = cx_ite14.next;
										continue;
									}
									var callbackset2 = null;
									var ncallbackset2 = null;
									this.prelisteners.inlined_clear();
									var lite2 = [null];
									cb12.manager.pair(cb12,cb22).forall(zpp_$nape_util_ZPP_$Flags.id_CbEvent_PRE,(function(lite2) {
										return function(listener8) {
											if((listener8.itype & inttype2) != 0) {
												lite2[0] = _g.prelisteners.inlined_insert(lite2[0],listener8);
												anyimpure2 = anyimpure2 || !listener8.pure;
											}
										};
									})(lite2));
									if(this.prelisteners.head == null) {
										cx_ite14 = cx_ite14.next;
										continue;
									}
									callbackset2 = zpp_$nape_phys_ZPP_$Interactor.get(i12,i22);
									if(callbackset2 == null) {
										ncallbackset2 = zpp_$nape_space_ZPP_$CallbackSet.get(i12,i22);
										this.add_callbackset(ncallbackset2);
									}
									if(callbackset2 == null || (callbackset2.SENSORstamp != this.stamp || continuous) && (callbackset2.SENSORstate & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
										if(ncallbackset2 != null) callbackset2 = ncallbackset2;
										if(callbackset2 != null) {
											var cx_ite15 = this.prelisteners.head;
											while(cx_ite15 != null) {
												var listener9 = cx_ite15.elt;
												if(listener9.itype == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
													callbackset2.COLLISIONstamp = this.stamp;
													callbackset2.SENSORstamp = this.stamp;
													callbackset2.FLUIDstamp = this.stamp;
												} else callbackset2.SENSORstamp = this.stamp;
												cx_ite15 = cx_ite15.next;
											}
										}
										var pact2 = arb4.active;
										arb4.active = true;
										var emptycontacts2 = false;
										this.precb.zpp_inner.pre_arbiter = arb4;
										this.precb.zpp_inner.set = callbackset2;
										var cx_ite16 = this.prelisteners.head;
										while(cx_ite16 != null) {
											var listener10 = cx_ite16.elt;
											this.precb.zpp_inner.listener = listener10;
											zpp_$nape_phys_ZPP_$Interactor.int_callback(callbackset2,listener10,this.precb.zpp_inner);
											this.precb.zpp_inner.pre_swapped = i12 != this.precb.zpp_inner.int1;
											var ret6 = listener10.handlerp(this.precb);
											if(ret6 != null) if(ret6 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT;
												return $r;
											}(this))) arb4.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS; else if(ret6 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_ACCEPT_ONCE;
												return $r;
											}(this))) arb4.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT; else if(ret6 == (function($this) {
												var $r;
												if(zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE == null) {
													zpp_$nape_util_ZPP_$Flags.internal = true;
													zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE = new nape_callbacks_PreFlag();
													zpp_$nape_util_ZPP_$Flags.internal = false;
												}
												$r = zpp_$nape_util_ZPP_$Flags.PreFlag_IGNORE;
												return $r;
											}(this))) arb4.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE | zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS; else arb4.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE;
											cx_ite16 = cx_ite16.next;
										}
										arb4.active = pact2;
										if(callbackset2 != null) {
											var cx_ite17 = this.prelisteners.head;
											while(cx_ite17 != null) {
												var listener11 = cx_ite17.elt;
												if(listener11.itype == zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY) {
													callbackset2.COLLISIONstate = arb4.immState;
													callbackset2.SENSORstate = arb4.immState;
													callbackset2.FLUIDstate = arb4.immState;
												} else callbackset2.SENSORstate = arb4.immState;
												cx_ite17 = cx_ite17.next;
											}
										}
									} else if(callbackset2 == null) {
										if((arb4.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) arb4.immState = zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT;
									} else arb4.immState = callbackset2.SENSORstate;
									cx_ite14 = cx_ite14.next;
								}
								cx_ite13 = cx_ite13.next;
							}
							if(anyimpure2 && (arb4.immState & zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS) == 0) {
								if(!(arb4.b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
									var o10 = arb4.b1;
									if(!o10.world) {
										o10.component.waket = this.stamp + (this.midstep?0:1);
										if(o10.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o10.kinematicDelaySleep = true;
										if(o10.component.sleeping) this.really_wake(o10,false);
									}
								}
								if(!(arb4.b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC)) {
									var o11 = arb4.b2;
									if(!o11.world) {
										o11.component.waket = this.stamp + (this.midstep?0:1);
										if(o11.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC) o11.kinematicDelaySleep = true;
										if(o11.component.sleeping) this.really_wake(o11,false);
									}
								}
							}
						}
						if(arb4.sleeping) {
							arb4.sleeping = false;
							this.s_arbiters.inlined_add(arb4);
						}
						ret = arb4;
					} else if(first2) {
						var o12 = arb4;
						o12.next = zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool;
						zpp_$nape_dynamics_ZPP_$SensorArbiter.zpp_pool = o12;
						ret = null;
					} else ret = arb4;
				} else ret = arb4;
			}
		}
		return ret;
	}
	,MRCA_chains: function(s1,s2) {
		this.inlined_MRCA_chains(s1,s2);
	}
	,inlined_MRCA_chains: function(s1,s2) {
		this.mrca1.inlined_clear();
		this.mrca2.inlined_clear();
		if(s1.cbSet != null) this.mrca1.inlined_add(s1);
		if(s1.body.cbSet != null) this.mrca1.inlined_add(s1.body);
		if(s2.cbSet != null) this.mrca2.inlined_add(s2);
		if(s2.body.cbSet != null) this.mrca2.inlined_add(s2.body);
		var c1 = s1.body.compound;
		var c2 = s2.body.compound;
		while(c1 != c2) {
			var d1;
			if(c1 == null) d1 = 0; else d1 = c1.depth;
			var d2;
			if(c2 == null) d2 = 0; else d2 = c2.depth;
			if(d1 < d2) {
				if(c2.cbSet != null) this.mrca2.inlined_add(c2);
				c2 = c2.compound;
			} else {
				if(c1.cbSet != null) this.mrca1.inlined_add(c1);
				c1 = c1.compound;
			}
		}
	}
	,__class__: zpp_$nape_space_ZPP_$Space
};
var zpp_$nape_space_ZPP_$SweepData = function() {
	this.aabb = null;
	this.shape = null;
	this.prev = null;
	this.next = null;
};
$hxClasses["zpp_nape.space.ZPP_SweepData"] = zpp_$nape_space_ZPP_$SweepData;
zpp_$nape_space_ZPP_$SweepData.__name__ = ["zpp_nape","space","ZPP_SweepData"];
zpp_$nape_space_ZPP_$SweepData.prototype = {
	__class__: zpp_$nape_space_ZPP_$SweepData
};
var zpp_$nape_space_ZPP_$SweepPhase = function(space) {
	this.list = null;
	zpp_$nape_space_ZPP_$Broadphase.call(this);
	this.space = space;
	this.is_sweep = true;
	this.sweep = this;
};
$hxClasses["zpp_nape.space.ZPP_SweepPhase"] = zpp_$nape_space_ZPP_$SweepPhase;
zpp_$nape_space_ZPP_$SweepPhase.__name__ = ["zpp_nape","space","ZPP_SweepPhase"];
zpp_$nape_space_ZPP_$SweepPhase.__super__ = zpp_$nape_space_ZPP_$Broadphase;
zpp_$nape_space_ZPP_$SweepPhase.prototype = $extend(zpp_$nape_space_ZPP_$Broadphase.prototype,{
	__insert: function(shape) {
		var dat;
		if(zpp_$nape_space_ZPP_$SweepData.zpp_pool == null) dat = new zpp_$nape_space_ZPP_$SweepData(); else {
			dat = zpp_$nape_space_ZPP_$SweepData.zpp_pool;
			zpp_$nape_space_ZPP_$SweepData.zpp_pool = dat.next;
			dat.next = null;
		}
		null;
		shape.sweep = dat;
		dat.shape = shape;
		dat.aabb = shape.aabb;
		dat.next = this.list;
		if(this.list != null) this.list.prev = dat;
		this.list = dat;
	}
	,__remove: function(shape) {
		var dat = shape.sweep;
		if(dat.prev == null) this.list = dat.next; else dat.prev.next = dat.next;
		if(dat.next != null) dat.next.prev = dat.prev;
		shape.sweep = null;
		var o = dat;
		o.prev = null;
		o.shape = null;
		o.aabb = null;
		o.next = zpp_$nape_space_ZPP_$SweepData.zpp_pool;
		zpp_$nape_space_ZPP_$SweepData.zpp_pool = o;
	}
	,sync_broadphase: function() {
		this.space.validation();
		if(this.list != null) this.sync_broadphase_fast();
	}
	,sync_broadphase_fast: function() {
		var a = this.list.next;
		while(a != null) {
			var n = a.next;
			var b = a.prev;
			if(a.aabb.minx > b.aabb.minx) {
				a = n;
				continue;
			}
			while(b.prev != null && b.prev.aabb.minx > a.aabb.minx) b = b.prev;
			var prev = a.prev;
			prev.next = a.next;
			if(a.next != null) a.next.prev = prev;
			if(b.prev == null) {
				a.prev = null;
				this.list = a;
				a.next = b;
				b.prev = a;
			} else {
				a.prev = b.prev;
				b.prev = a;
				a.prev.next = a;
				a.next = b;
			}
			a = n;
		}
	}
	,broadphase: function(space,discrete) {
		if(this.list != null) {
			this.sync_broadphase_fast();
			var d1 = this.list;
			while(d1 != null) {
				var d2 = d1.next;
				var s1 = d1.shape;
				var b1 = s1.body;
				var bottom = d1.aabb.maxx;
				while(d2 != null) {
					if(d2.aabb.minx > bottom) break;
					var s2 = d2.shape;
					var b2 = s2.body;
					if(b2 == b1) {
						d2 = d2.next;
						continue;
					}
					if(b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC && b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC) {
						d2 = d2.next;
						continue;
					}
					if(b1.component.sleeping && b2.component.sleeping) {
						d2 = d2.next;
						continue;
					}
					if(s1.aabb.intersectY(s2.aabb)) {
						if(discrete) space.narrowPhase(s1,s2,!(b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) || !(b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC),null,false); else space.continuousEvent(s1,s2,!(b1.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC) || !(b2.type == zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC),null,false);
					}
					d2 = d2.next;
				}
				d1 = d1.next;
			}
		}
	}
	,bodiesUnderPoint: function(x,y,filter,output) {
		this.sync_broadphase();
		var v = zpp_$nape_geom_ZPP_$Vec2.get(x,y,null);
		var ret;
		if(output == null) ret = new nape_phys_BodyList(); else ret = output;
		var a = this.list;
		while(a != null && a.aabb.minx > x) a = a.next;
		while(a != null && a.aabb.minx <= x) {
			if(a.aabb.maxx >= x && a.aabb.miny <= y && a.aabb.maxy >= y) {
				var shape = a.shape;
				var body = shape.body.outer;
				if(!ret.has(body)) {
					if(filter == null || shape.filter.shouldCollide(filter)) {
						if(shape.type == zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE) {
							if(zpp_$nape_geom_ZPP_$Collide.circleContains(shape.circle,v)) ret.push(body);
						} else if(zpp_$nape_geom_ZPP_$Collide.polyContains(shape.polygon,v)) ret.push(body);
					}
				}
			}
			a = a.next;
		}
		var o = v;
		if(o.outer != null) {
			o.outer.zpp_inner = null;
			o.outer = null;
		}
		o._isimmutable = null;
		o._validate = null;
		o._invalidate = null;
		o.next = zpp_$nape_geom_ZPP_$Vec2.zpp_pool;
		zpp_$nape_geom_ZPP_$Vec2.zpp_pool = o;
		return ret;
	}
	,__class__: zpp_$nape_space_ZPP_$SweepPhase
});
var zpp_$nape_util_ZNPList_$ZPP_$CallbackSet = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_CallbackSet"] = zpp_$nape_util_ZNPList_$ZPP_$CallbackSet;
zpp_$nape_util_ZNPList_$ZPP_$CallbackSet.__name__ = ["zpp_nape","util","ZNPList_ZPP_CallbackSet"];
zpp_$nape_util_ZNPList_$ZPP_$CallbackSet.prototype = {
	inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$CallbackSet
};
var zpp_$nape_util_ZNPList_$ZPP_$Shape = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Shape"] = zpp_$nape_util_ZNPList_$ZPP_$Shape;
zpp_$nape_util_ZNPList_$ZPP_$Shape.__name__ = ["zpp_nape","util","ZNPList_ZPP_Shape"];
zpp_$nape_util_ZNPList_$ZPP_$Shape.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Shape(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Shape(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Shape.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Shape
};
var zpp_$nape_util_ZNPList_$ZPP_$Body = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Body"] = zpp_$nape_util_ZNPList_$ZPP_$Body;
zpp_$nape_util_ZNPList_$ZPP_$Body.__name__ = ["zpp_nape","util","ZNPList_ZPP_Body"];
zpp_$nape_util_ZNPList_$ZPP_$Body.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Body(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Body(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Body.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,has: function(obj) {
		return this.inlined_has(obj);
	}
	,inlined_has: function(obj) {
		var ret;
		ret = false;
		var cx_ite = this.head;
		while(cx_ite != null) {
			var npite = cx_ite.elt;
			if(npite == obj) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Body
};
var zpp_$nape_util_ZNPList_$ZPP_$Compound = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Compound"] = zpp_$nape_util_ZNPList_$ZPP_$Compound;
zpp_$nape_util_ZNPList_$ZPP_$Compound.__name__ = ["zpp_nape","util","ZNPList_ZPP_Compound"];
zpp_$nape_util_ZNPList_$ZPP_$Compound.prototype = {
	remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Compound.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Compound.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Compound
};
var zpp_$nape_util_ZNPList_$ZPP_$Arbiter = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Arbiter"] = zpp_$nape_util_ZNPList_$ZPP_$Arbiter;
zpp_$nape_util_ZNPList_$ZPP_$Arbiter.__name__ = ["zpp_nape","util","ZNPList_ZPP_Arbiter"];
zpp_$nape_util_ZNPList_$ZPP_$Arbiter.prototype = {
	inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Arbiter(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,inlined_has: function(obj) {
		var ret;
		ret = false;
		var cx_ite = this.head;
		while(cx_ite != null) {
			var npite = cx_ite.elt;
			if(npite == obj) {
				ret = true;
				break;
			}
			cx_ite = cx_ite.next;
		}
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Arbiter
};
var zpp_$nape_util_ZNPList_$ZPP_$CbSetPair = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_CbSetPair"] = zpp_$nape_util_ZNPList_$ZPP_$CbSetPair;
zpp_$nape_util_ZNPList_$ZPP_$CbSetPair.__name__ = ["zpp_nape","util","ZNPList_ZPP_CbSetPair"];
zpp_$nape_util_ZNPList_$ZPP_$CbSetPair.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$CbSetPair
};
var zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_PartitionVertex"] = zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex;
zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex.__name__ = ["zpp_nape","util","ZNPList_ZPP_PartitionVertex"];
zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,reverse: function() {
		var cur = this.head;
		var pre = null;
		while(cur != null) {
			var nx = cur.next;
			cur.next = pre;
			this.head = cur;
			pre = cur;
			cur = nx;
		}
		this.modified = true;
		this.pushmod = true;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$PartitionVertex
};
var zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_PartitionedPoly"] = zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly;
zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly.__name__ = ["zpp_nape","util","ZNPList_ZPP_PartitionedPoly"];
zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$PartitionedPoly
};
var zpp_$nape_util_ZNPList_$ZPP_$GeomVert = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_GeomVert"] = zpp_$nape_util_ZNPList_$ZPP_$GeomVert;
zpp_$nape_util_ZNPList_$ZPP_$GeomVert.__name__ = ["zpp_nape","util","ZNPList_ZPP_GeomVert"];
zpp_$nape_util_ZNPList_$ZPP_$GeomVert.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$GeomVert(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$GeomVert
};
var zpp_$nape_util_ZNPList_$ZPP_$AABBPair = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_AABBPair"] = zpp_$nape_util_ZNPList_$ZPP_$AABBPair;
zpp_$nape_util_ZNPList_$ZPP_$AABBPair.__name__ = ["zpp_nape","util","ZNPList_ZPP_AABBPair"];
zpp_$nape_util_ZNPList_$ZPP_$AABBPair.prototype = {
	inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$AABBPair(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$AABBPair
};
var zpp_$nape_util_ZNPList_$ZPP_$Edge = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Edge"] = zpp_$nape_util_ZNPList_$ZPP_$Edge;
zpp_$nape_util_ZNPList_$ZPP_$Edge.__name__ = ["zpp_nape","util","ZNPList_ZPP_Edge"];
zpp_$nape_util_ZNPList_$ZPP_$Edge.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Edge(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Edge(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Edge.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,reverse: function() {
		var cur = this.head;
		var pre = null;
		while(cur != null) {
			var nx = cur.next;
			cur.next = pre;
			this.head = cur;
			pre = cur;
			cur = nx;
		}
		this.modified = true;
		this.pushmod = true;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Edge
};
var zpp_$nape_util_ZNPList_$ZPP_$Component = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Component"] = zpp_$nape_util_ZNPList_$ZPP_$Component;
zpp_$nape_util_ZNPList_$ZPP_$Component.__name__ = ["zpp_nape","util","ZNPList_ZPP_Component"];
zpp_$nape_util_ZNPList_$ZPP_$Component.prototype = {
	inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Component.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Component(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Component.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Component.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Component.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Component.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Component
};
var zpp_$nape_util_ZNPList_$ZPP_$AABBNode = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_AABBNode"] = zpp_$nape_util_ZNPList_$ZPP_$AABBNode;
zpp_$nape_util_ZNPList_$ZPP_$AABBNode.__name__ = ["zpp_nape","util","ZNPList_ZPP_AABBNode"];
zpp_$nape_util_ZNPList_$ZPP_$AABBNode.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$AABBNode(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$AABBNode
};
var zpp_$nape_util_ZNPList_$ZPP_$FluidArbiter = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_FluidArbiter"] = zpp_$nape_util_ZNPList_$ZPP_$FluidArbiter;
zpp_$nape_util_ZNPList_$ZPP_$FluidArbiter.__name__ = ["zpp_nape","util","ZNPList_ZPP_FluidArbiter"];
zpp_$nape_util_ZNPList_$ZPP_$FluidArbiter.prototype = {
	inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$FluidArbiter
};
var zpp_$nape_util_ZNPList_$ZPP_$SensorArbiter = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_SensorArbiter"] = zpp_$nape_util_ZNPList_$ZPP_$SensorArbiter;
zpp_$nape_util_ZNPList_$ZPP_$SensorArbiter.__name__ = ["zpp_nape","util","ZNPList_ZPP_SensorArbiter"];
zpp_$nape_util_ZNPList_$ZPP_$SensorArbiter.prototype = {
	inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$SensorArbiter
};
var zpp_$nape_util_ZNPList_$ZPP_$ColArbiter = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_ColArbiter"] = zpp_$nape_util_ZNPList_$ZPP_$ColArbiter;
zpp_$nape_util_ZNPList_$ZPP_$ColArbiter.__name__ = ["zpp_nape","util","ZNPList_ZPP_ColArbiter"];
zpp_$nape_util_ZNPList_$ZPP_$ColArbiter.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$ColArbiter
};
var zpp_$nape_util_ZNPList_$ZPP_$Listener = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_Listener"] = zpp_$nape_util_ZNPList_$ZPP_$Listener;
zpp_$nape_util_ZNPList_$ZPP_$Listener.__name__ = ["zpp_nape","util","ZNPList_ZPP_Listener"];
zpp_$nape_util_ZNPList_$ZPP_$Listener.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Listener(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$Listener(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,remove: function(obj) {
		this.inlined_try_remove(obj);
	}
	,inlined_try_remove: function(obj) {
		var pre = null;
		var cur = this.head;
		var ret = false;
		while(cur != null) {
			if(cur.elt == obj) {
				this.inlined_erase(pre);
				ret = true;
				break;
			}
			pre = cur;
			cur = cur.next;
		}
		return ret;
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$Listener.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$Listener
};
var zpp_$nape_util_ZNPList_$ZPP_$ToiEvent = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_ToiEvent"] = zpp_$nape_util_ZNPList_$ZPP_$ToiEvent;
zpp_$nape_util_ZNPList_$ZPP_$ToiEvent.__name__ = ["zpp_nape","util","ZNPList_ZPP_ToiEvent"];
zpp_$nape_util_ZNPList_$ZPP_$ToiEvent.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,pop: function() {
		this.inlined_pop();
	}
	,inlined_pop: function() {
		var ret = this.head;
		this.head = ret.next;
		var o = ret;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool = o;
		if(this.head == null) this.pushmod = true;
		this.modified = true;
		this.length--;
	}
	,pop_unsafe: function() {
		return this.inlined_pop_unsafe();
	}
	,inlined_pop_unsafe: function() {
		var ret = this.head.elt;
		this.pop();
		return ret;
	}
	,erase: function(pre) {
		return this.inlined_erase(pre);
	}
	,inlined_erase: function(pre) {
		var old;
		var ret;
		if(pre == null) {
			old = this.head;
			ret = old.next;
			this.head = ret;
			if(this.head == null) this.pushmod = true;
		} else {
			old = pre.next;
			ret = old.next;
			pre.next = ret;
			if(ret == null) this.pushmod = true;
		}
		var o = old;
		o.elt = null;
		o.next = zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool;
		zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.zpp_pool = o;
		this.modified = true;
		this.length--;
		this.pushmod = true;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$ToiEvent
};
var zpp_$nape_util_ZNPList_$ConvexResult = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ConvexResult"] = zpp_$nape_util_ZNPList_$ConvexResult;
zpp_$nape_util_ZNPList_$ConvexResult.__name__ = ["zpp_nape","util","ZNPList_ConvexResult"];
zpp_$nape_util_ZNPList_$ConvexResult.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ConvexResult
};
var zpp_$nape_util_ZNPList_$ZPP_$GeomPoly = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_ZPP_GeomPoly"] = zpp_$nape_util_ZNPList_$ZPP_$GeomPoly;
zpp_$nape_util_ZNPList_$ZPP_$GeomPoly.__name__ = ["zpp_nape","util","ZNPList_ZPP_GeomPoly"];
zpp_$nape_util_ZNPList_$ZPP_$GeomPoly.prototype = {
	add: function(o) {
		return this.inlined_add(o);
	}
	,inlined_add: function(o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		temp.next = this.head;
		this.head = temp;
		this.modified = true;
		this.length++;
		return o;
	}
	,insert: function(cur,o) {
		return this.inlined_insert(cur,o);
	}
	,inlined_insert: function(cur,o) {
		var temp;
		var ret;
		if(zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.zpp_pool == null) ret = new zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly(); else {
			ret = zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.zpp_pool;
			zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.zpp_pool = ret.next;
			ret.next = null;
		}
		null;
		ret.elt = o;
		temp = ret;
		if(cur == null) {
			temp.next = this.head;
			this.head = temp;
		} else {
			temp.next = cur.next;
			cur.next = temp;
		}
		this.pushmod = this.modified = true;
		this.length++;
		return temp;
	}
	,iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$ZPP_$GeomPoly
};
var zpp_$nape_util_ZNPList_$RayResult = function() {
	this.length = 0;
	this.pushmod = false;
	this.modified = false;
	this.head = null;
};
$hxClasses["zpp_nape.util.ZNPList_RayResult"] = zpp_$nape_util_ZNPList_$RayResult;
zpp_$nape_util_ZNPList_$RayResult.__name__ = ["zpp_nape","util","ZNPList_RayResult"];
zpp_$nape_util_ZNPList_$RayResult.prototype = {
	iterator_at: function(ind) {
		var ret = this.head;
		while(ind-- > 0 && ret != null) ret = ret.next;
		return ret;
	}
	,__class__: zpp_$nape_util_ZNPList_$RayResult
};
var zpp_$nape_util_ZNPNode_$ZPP_$CbType = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_CbType"] = zpp_$nape_util_ZNPNode_$ZPP_$CbType;
zpp_$nape_util_ZNPNode_$ZPP_$CbType.__name__ = ["zpp_nape","util","ZNPNode_ZPP_CbType"];
zpp_$nape_util_ZNPNode_$ZPP_$CbType.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$CbType
};
var zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_CallbackSet"] = zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet;
zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.__name__ = ["zpp_nape","util","ZNPNode_ZPP_CallbackSet"];
zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$CallbackSet
};
var zpp_$nape_util_ZNPNode_$ZPP_$Shape = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Shape"] = zpp_$nape_util_ZNPNode_$ZPP_$Shape;
zpp_$nape_util_ZNPNode_$ZPP_$Shape.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Shape"];
zpp_$nape_util_ZNPNode_$ZPP_$Shape.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Shape
};
var zpp_$nape_util_ZNPNode_$ZPP_$Body = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Body"] = zpp_$nape_util_ZNPNode_$ZPP_$Body;
zpp_$nape_util_ZNPNode_$ZPP_$Body.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Body"];
zpp_$nape_util_ZNPNode_$ZPP_$Body.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Body
};
var zpp_$nape_util_ZNPNode_$ZPP_$Constraint = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Constraint"] = zpp_$nape_util_ZNPNode_$ZPP_$Constraint;
zpp_$nape_util_ZNPNode_$ZPP_$Constraint.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Constraint"];
zpp_$nape_util_ZNPNode_$ZPP_$Constraint.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Constraint
};
var zpp_$nape_util_ZNPNode_$ZPP_$Compound = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Compound"] = zpp_$nape_util_ZNPNode_$ZPP_$Compound;
zpp_$nape_util_ZNPNode_$ZPP_$Compound.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Compound"];
zpp_$nape_util_ZNPNode_$ZPP_$Compound.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Compound
};
var zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_InteractionListener"] = zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener;
zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.__name__ = ["zpp_nape","util","ZNPNode_ZPP_InteractionListener"];
zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$InteractionListener
};
var zpp_$nape_util_ZNPNode_$ZPP_$CbSet = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_CbSet"] = zpp_$nape_util_ZNPNode_$ZPP_$CbSet;
zpp_$nape_util_ZNPNode_$ZPP_$CbSet.__name__ = ["zpp_nape","util","ZNPNode_ZPP_CbSet"];
zpp_$nape_util_ZNPNode_$ZPP_$CbSet.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$CbSet
};
var zpp_$nape_util_ZNPNode_$ZPP_$Interactor = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Interactor"] = zpp_$nape_util_ZNPNode_$ZPP_$Interactor;
zpp_$nape_util_ZNPNode_$ZPP_$Interactor.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Interactor"];
zpp_$nape_util_ZNPNode_$ZPP_$Interactor.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Interactor
};
var zpp_$nape_util_ZNPNode_$ZPP_$BodyListener = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_BodyListener"] = zpp_$nape_util_ZNPNode_$ZPP_$BodyListener;
zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.__name__ = ["zpp_nape","util","ZNPNode_ZPP_BodyListener"];
zpp_$nape_util_ZNPNode_$ZPP_$BodyListener.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$BodyListener
};
var zpp_$nape_util_ZNPNode_$ZPP_$Arbiter = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Arbiter"] = zpp_$nape_util_ZNPNode_$ZPP_$Arbiter;
zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Arbiter"];
zpp_$nape_util_ZNPNode_$ZPP_$Arbiter.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Arbiter
};
var zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_ConstraintListener"] = zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener;
zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.__name__ = ["zpp_nape","util","ZNPNode_ZPP_ConstraintListener"];
zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$ConstraintListener
};
var zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_CbSetPair"] = zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair;
zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.__name__ = ["zpp_nape","util","ZNPNode_ZPP_CbSetPair"];
zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$CbSetPair
};
var zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_PartitionVertex"] = zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex;
zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.__name__ = ["zpp_nape","util","ZNPNode_ZPP_PartitionVertex"];
zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$PartitionVertex
};
var zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_PartitionedPoly"] = zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly;
zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.__name__ = ["zpp_nape","util","ZNPNode_ZPP_PartitionedPoly"];
zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$PartitionedPoly
};
var zpp_$nape_util_ZNPNode_$ZPP_$GeomVert = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_GeomVert"] = zpp_$nape_util_ZNPNode_$ZPP_$GeomVert;
zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.__name__ = ["zpp_nape","util","ZNPNode_ZPP_GeomVert"];
zpp_$nape_util_ZNPNode_$ZPP_$GeomVert.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$GeomVert
};
var zpp_$nape_util_ZNPNode_$ZPP_$AABBPair = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_AABBPair"] = zpp_$nape_util_ZNPNode_$ZPP_$AABBPair;
zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.__name__ = ["zpp_nape","util","ZNPNode_ZPP_AABBPair"];
zpp_$nape_util_ZNPNode_$ZPP_$AABBPair.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$AABBPair
};
var zpp_$nape_util_ZNPNode_$ZPP_$Edge = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Edge"] = zpp_$nape_util_ZNPNode_$ZPP_$Edge;
zpp_$nape_util_ZNPNode_$ZPP_$Edge.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Edge"];
zpp_$nape_util_ZNPNode_$ZPP_$Edge.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Edge
};
var zpp_$nape_util_ZNPNode_$ZPP_$Vec2 = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Vec2"] = zpp_$nape_util_ZNPNode_$ZPP_$Vec2;
zpp_$nape_util_ZNPNode_$ZPP_$Vec2.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Vec2"];
zpp_$nape_util_ZNPNode_$ZPP_$Vec2.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Vec2
};
var zpp_$nape_util_ZNPNode_$ZPP_$Component = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Component"] = zpp_$nape_util_ZNPNode_$ZPP_$Component;
zpp_$nape_util_ZNPNode_$ZPP_$Component.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Component"];
zpp_$nape_util_ZNPNode_$ZPP_$Component.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Component
};
var zpp_$nape_util_ZNPNode_$ZPP_$AABBNode = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_AABBNode"] = zpp_$nape_util_ZNPNode_$ZPP_$AABBNode;
zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.__name__ = ["zpp_nape","util","ZNPNode_ZPP_AABBNode"];
zpp_$nape_util_ZNPNode_$ZPP_$AABBNode.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$AABBNode
};
var zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_InteractionGroup"] = zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup;
zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup.__name__ = ["zpp_nape","util","ZNPNode_ZPP_InteractionGroup"];
zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$InteractionGroup
};
var zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_FluidArbiter"] = zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter;
zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.__name__ = ["zpp_nape","util","ZNPNode_ZPP_FluidArbiter"];
zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$FluidArbiter
};
var zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_SensorArbiter"] = zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter;
zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.__name__ = ["zpp_nape","util","ZNPNode_ZPP_SensorArbiter"];
zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$SensorArbiter
};
var zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_ColArbiter"] = zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter;
zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.__name__ = ["zpp_nape","util","ZNPNode_ZPP_ColArbiter"];
zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$ColArbiter
};
var zpp_$nape_util_ZNPNode_$ZPP_$Listener = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_Listener"] = zpp_$nape_util_ZNPNode_$ZPP_$Listener;
zpp_$nape_util_ZNPNode_$ZPP_$Listener.__name__ = ["zpp_nape","util","ZNPNode_ZPP_Listener"];
zpp_$nape_util_ZNPNode_$ZPP_$Listener.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$Listener
};
var zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_ToiEvent"] = zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent;
zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.__name__ = ["zpp_nape","util","ZNPNode_ZPP_ToiEvent"];
zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$ToiEvent
};
var zpp_$nape_util_ZNPNode_$ConvexResult = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ConvexResult"] = zpp_$nape_util_ZNPNode_$ConvexResult;
zpp_$nape_util_ZNPNode_$ConvexResult.__name__ = ["zpp_nape","util","ZNPNode_ConvexResult"];
zpp_$nape_util_ZNPNode_$ConvexResult.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ConvexResult
};
var zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_ZPP_GeomPoly"] = zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly;
zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.__name__ = ["zpp_nape","util","ZNPNode_ZPP_GeomPoly"];
zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$ZPP_$GeomPoly
};
var zpp_$nape_util_ZNPNode_$RayResult = function() {
	this.elt = null;
	this.next = null;
};
$hxClasses["zpp_nape.util.ZNPNode_RayResult"] = zpp_$nape_util_ZNPNode_$RayResult;
zpp_$nape_util_ZNPNode_$RayResult.__name__ = ["zpp_nape","util","ZNPNode_RayResult"];
zpp_$nape_util_ZNPNode_$RayResult.prototype = {
	__class__: zpp_$nape_util_ZNPNode_$RayResult
};
var zpp_$nape_util_ZPP_$MixVec2List = function() {
	this.at_index = 0;
	this.at_ite = null;
	this.zip_length = false;
	this._length = 0;
	this.inner = null;
	nape_geom_Vec2List.call(this);
	this.at_ite = null;
	this.at_index = 0;
	this.zip_length = true;
	this._length = 0;
};
$hxClasses["zpp_nape.util.ZPP_MixVec2List"] = zpp_$nape_util_ZPP_$MixVec2List;
zpp_$nape_util_ZPP_$MixVec2List.__name__ = ["zpp_nape","util","ZPP_MixVec2List"];
zpp_$nape_util_ZPP_$MixVec2List.get = function(list,immutable) {
	if(immutable == null) immutable = false;
	var ret = new zpp_$nape_util_ZPP_$MixVec2List();
	ret.inner = list;
	ret.zpp_inner.immutable = immutable;
	return ret;
};
zpp_$nape_util_ZPP_$MixVec2List.__super__ = nape_geom_Vec2List;
zpp_$nape_util_ZPP_$MixVec2List.prototype = $extend(nape_geom_Vec2List.prototype,{
	zpp_gl: function() {
		this.zpp_vm();
		if(this.zip_length) {
			this._length = 0;
			var cx_ite = this.inner.next;
			while(cx_ite != null) {
				var i = cx_ite;
				this._length++;
				cx_ite = cx_ite.next;
			}
			this.zip_length = false;
		}
		return this._length;
	}
	,zpp_vm: function() {
		this.zpp_inner.validate();
		if(this.inner.modified) {
			this.zip_length = true;
			this._length = 0;
			this.at_ite = null;
		}
	}
	,at: function(index) {
		this.zpp_vm();
		if(index < 0 || index >= this.zpp_gl()) throw new js__$Boot_HaxeError("Error: Index out of bounds");
		if(this.zpp_inner.reverse_flag) index = this.zpp_gl() - 1 - index;
		if(index < this.at_index || this.at_ite == null) {
			this.at_index = 0;
			this.at_ite = this.inner.next;
			while(true) {
				var x = this.at_ite;
				break;
				this.at_ite = this.at_ite.next;
			}
		}
		while(this.at_index != index) {
			this.at_index++;
			this.at_ite = this.at_ite.next;
			while(true) {
				var x1 = this.at_ite;
				break;
				this.at_ite = this.at_ite.next;
			}
		}
		return this.at_ite.wrapper();
	}
	,push: function(obj) {
		if(this.zpp_inner.immutable) throw new js__$Boot_HaxeError("Error: " + "Vec2" + "List is immutable");
		this.zpp_inner.modify_test();
		this.zpp_vm();
		if(obj.zpp_inner._inuse) throw new js__$Boot_HaxeError("Error: " + "Vec2" + " is already in use");
		var cont;
		if(this.zpp_inner.adder != null) cont = this.zpp_inner.adder(obj); else cont = true;
		if(cont) {
			if(this.zpp_inner.reverse_flag) this.inner.add(obj.zpp_inner); else {
				var ite = this.inner.iterator_at(this.zpp_gl() - 1);
				this.inner.insert(ite,obj.zpp_inner);
			}
			this.zpp_inner.invalidate();
			if(this.zpp_inner.post_adder != null) this.zpp_inner.post_adder(obj);
		}
		return cont;
	}
	,__class__: zpp_$nape_util_ZPP_$MixVec2List
});
var zpp_$nape_util_ZPP_$ConstraintList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Constraint();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_ConstraintList"] = zpp_$nape_util_ZPP_$ConstraintList;
zpp_$nape_util_ZPP_$ConstraintList.__name__ = ["zpp_nape","util","ZPP_ConstraintList"];
zpp_$nape_util_ZPP_$ConstraintList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_constraint_ConstraintList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$ConstraintList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$ConstraintList
};
var zpp_$nape_util_ZPP_$BodyList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Body();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_BodyList"] = zpp_$nape_util_ZPP_$BodyList;
zpp_$nape_util_ZPP_$BodyList.__name__ = ["zpp_nape","util","ZPP_BodyList"];
zpp_$nape_util_ZPP_$BodyList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_phys_BodyList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$BodyList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$BodyList
};
var zpp_$nape_util_ZPP_$InteractorList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
$hxClasses["zpp_nape.util.ZPP_InteractorList"] = zpp_$nape_util_ZPP_$InteractorList;
zpp_$nape_util_ZPP_$InteractorList.__name__ = ["zpp_nape","util","ZPP_InteractorList"];
zpp_$nape_util_ZPP_$InteractorList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$InteractorList
};
var zpp_$nape_util_ZPP_$CompoundList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Compound();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_CompoundList"] = zpp_$nape_util_ZPP_$CompoundList;
zpp_$nape_util_ZPP_$CompoundList.__name__ = ["zpp_nape","util","ZPP_CompoundList"];
zpp_$nape_util_ZPP_$CompoundList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_phys_CompoundList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$CompoundList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$CompoundList
};
var zpp_$nape_util_ZPP_$ListenerList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Listener();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_ListenerList"] = zpp_$nape_util_ZPP_$ListenerList;
zpp_$nape_util_ZPP_$ListenerList.__name__ = ["zpp_nape","util","ZPP_ListenerList"];
zpp_$nape_util_ZPP_$ListenerList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_callbacks_ListenerList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$ListenerList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$ListenerList
};
var zpp_$nape_util_ZPP_$CbTypeList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_CbTypeList"] = zpp_$nape_util_ZPP_$CbTypeList;
zpp_$nape_util_ZPP_$CbTypeList.__name__ = ["zpp_nape","util","ZPP_CbTypeList"];
zpp_$nape_util_ZPP_$CbTypeList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_callbacks_CbTypeList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$CbTypeList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$CbTypeList
};
var zpp_$nape_util_ZPP_$Vec2List = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.subber = null;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Vec2();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_Vec2List"] = zpp_$nape_util_ZPP_$Vec2List;
zpp_$nape_util_ZPP_$Vec2List.__name__ = ["zpp_nape","util","ZPP_Vec2List"];
zpp_$nape_util_ZPP_$Vec2List.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$Vec2List
};
var zpp_$nape_util_ZPP_$GeomPolyList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$GeomPoly();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_GeomPolyList"] = zpp_$nape_util_ZPP_$GeomPolyList;
zpp_$nape_util_ZPP_$GeomPolyList.__name__ = ["zpp_nape","util","ZPP_GeomPolyList"];
zpp_$nape_util_ZPP_$GeomPolyList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$GeomPolyList
};
var zpp_$nape_util_ZPP_$RayResultList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
$hxClasses["zpp_nape.util.ZPP_RayResultList"] = zpp_$nape_util_ZPP_$RayResultList;
zpp_$nape_util_ZPP_$RayResultList.__name__ = ["zpp_nape","util","ZPP_RayResultList"];
zpp_$nape_util_ZPP_$RayResultList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$RayResultList
};
var zpp_$nape_util_ZPP_$ConvexResultList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
$hxClasses["zpp_nape.util.ZPP_ConvexResultList"] = zpp_$nape_util_ZPP_$ConvexResultList;
zpp_$nape_util_ZPP_$ConvexResultList.__name__ = ["zpp_nape","util","ZPP_ConvexResultList"];
zpp_$nape_util_ZPP_$ConvexResultList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ConvexResultList
};
var zpp_$nape_util_ZPP_$EdgeList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
$hxClasses["zpp_nape.util.ZPP_EdgeList"] = zpp_$nape_util_ZPP_$EdgeList;
zpp_$nape_util_ZPP_$EdgeList.__name__ = ["zpp_nape","util","ZPP_EdgeList"];
zpp_$nape_util_ZPP_$EdgeList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$EdgeList
};
var zpp_$nape_util_ZPP_$ShapeList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.post_adder = null;
	this.adder = null;
	this._modifiable = null;
	this._validate = null;
	this._invalidate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Shape();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_ShapeList"] = zpp_$nape_util_ZPP_$ShapeList;
zpp_$nape_util_ZPP_$ShapeList.__name__ = ["zpp_nape","util","ZPP_ShapeList"];
zpp_$nape_util_ZPP_$ShapeList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_shape_ShapeList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$ShapeList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,modify_test: function() {
		if(this._modifiable != null) this._modifiable();
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,invalidate: function() {
		this._invalidated = true;
		if(this._invalidate != null) this._invalidate(this);
	}
	,__class__: zpp_$nape_util_ZPP_$ShapeList
};
var zpp_$nape_util_ZPP_$InteractionGroupList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.inner = null;
};
$hxClasses["zpp_nape.util.ZPP_InteractionGroupList"] = zpp_$nape_util_ZPP_$InteractionGroupList;
zpp_$nape_util_ZPP_$InteractionGroupList.__name__ = ["zpp_nape","util","ZPP_InteractionGroupList"];
zpp_$nape_util_ZPP_$InteractionGroupList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$InteractionGroupList
};
var zpp_$nape_util_ZPP_$ArbiterList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this._validate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_util_ZNPList_$ZPP_$Arbiter();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_ArbiterList"] = zpp_$nape_util_ZPP_$ArbiterList;
zpp_$nape_util_ZPP_$ArbiterList.__name__ = ["zpp_nape","util","ZPP_ArbiterList"];
zpp_$nape_util_ZPP_$ArbiterList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_dynamics_ArbiterList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$ArbiterList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ArbiterList
};
var zpp_$nape_util_ZPP_$ContactList = function() {
	this.user_length = 0;
	this.zip_length = false;
	this.push_ite = null;
	this.at_ite = null;
	this.at_index = 0;
	this.reverse_flag = false;
	this.dontremove = false;
	this.subber = null;
	this.adder = null;
	this._validate = null;
	this._invalidated = false;
	this.immutable = false;
	this.inner = null;
	this.outer = null;
	this.inner = new zpp_$nape_dynamics_ZPP_$Contact();
	this._invalidated = true;
};
$hxClasses["zpp_nape.util.ZPP_ContactList"] = zpp_$nape_util_ZPP_$ContactList;
zpp_$nape_util_ZPP_$ContactList.__name__ = ["zpp_nape","util","ZPP_ContactList"];
zpp_$nape_util_ZPP_$ContactList.get = function(list,imm) {
	if(imm == null) imm = false;
	var ret = new nape_dynamics_ContactList();
	ret.zpp_inner.inner = list;
	if(imm) ret.zpp_inner.immutable = true;
	ret.zpp_inner.zip_length = true;
	return ret;
};
zpp_$nape_util_ZPP_$ContactList.prototype = {
	valmod: function() {
		this.validate();
		if(this.inner.modified) {
			if(this.inner.pushmod) this.push_ite = null;
			this.at_ite = null;
			this.inner.modified = false;
			this.inner.pushmod = false;
			this.zip_length = true;
		}
	}
	,validate: function() {
		if(this._invalidated) {
			this._invalidated = false;
			if(this._validate != null) this._validate();
		}
	}
	,__class__: zpp_$nape_util_ZPP_$ContactList
};
var zpp_$nape_util_ZPP_$Math = function() { };
$hxClasses["zpp_nape.util.ZPP_Math"] = zpp_$nape_util_ZPP_$Math;
zpp_$nape_util_ZPP_$Math.__name__ = ["zpp_nape","util","ZPP_Math"];
zpp_$nape_util_ZPP_$Math.sqr = function(x) {
	return x * x;
};
var zpp_$nape_util_ZPP_$PubPool = function() { };
$hxClasses["zpp_nape.util.ZPP_PubPool"] = zpp_$nape_util_ZPP_$PubPool;
zpp_$nape_util_ZPP_$PubPool.__name__ = ["zpp_nape","util","ZPP_PubPool"];
var zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair = function() {
	this.colour = 0;
	this.parent = null;
	this.next = null;
	this.prev = null;
	this.data = null;
	this.swapped = null;
	this.lt = null;
};
$hxClasses["zpp_nape.util.ZPP_Set_ZPP_CbSetPair"] = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair;
zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.__name__ = ["zpp_nape","util","ZPP_Set_ZPP_CbSetPair"];
zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.prototype = {
	clear_with: function(lambda) {
		if(this.parent == null) return; else {
			var cur = this.parent;
			while(cur != null) if(cur.prev != null) cur = cur.prev; else if(cur.next != null) cur = cur.next; else cur = this.clear_node(cur,lambda);
			this.parent = null;
		}
	}
	,clear_node: function(node,lambda) {
		lambda(node.data);
		var ret = node.parent;
		if(ret != null) {
			if(node == ret.prev) ret.prev = null; else ret.next = null;
			node.parent = null;
		}
		var o = node;
		o.data = null;
		o.lt = null;
		o.swapped = null;
		o.next = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool;
		zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool = o;
		return ret;
	}
	,__fix_dbl_red: function(x) {
		while(true) {
			var par = x.parent;
			var g = par.parent;
			if(g == null) {
				par.colour = 1;
				break;
			}
			var n1;
			var n2;
			var n3;
			var t1;
			var t2;
			var t3;
			var t4;
			if(par == g.prev) {
				n3 = g;
				t4 = g.next;
				if(x == par.prev) {
					n1 = x;
					n2 = par;
					t1 = x.prev;
					t2 = x.next;
					t3 = par.next;
				} else {
					n1 = par;
					n2 = x;
					t1 = par.prev;
					t2 = x.prev;
					t3 = x.next;
				}
			} else {
				n1 = g;
				t1 = g.prev;
				if(x == par.prev) {
					n2 = x;
					n3 = par;
					t2 = x.prev;
					t3 = x.next;
					t4 = par.next;
				} else {
					n2 = par;
					n3 = x;
					t2 = par.prev;
					t3 = x.prev;
					t4 = x.next;
				}
			}
			var par1 = g.parent;
			if(par1 == null) this.parent = n2; else if(par1.prev == g) par1.prev = n2; else par1.next = n2;
			if(n2 != null) n2.parent = par1;
			n1.prev = t1;
			if(t1 != null) t1.parent = n1;
			n1.next = t2;
			if(t2 != null) t2.parent = n1;
			n2.prev = n1;
			if(n1 != null) n1.parent = n2;
			n2.next = n3;
			if(n3 != null) n3.parent = n2;
			n3.prev = t3;
			if(t3 != null) t3.parent = n3;
			n3.next = t4;
			if(t4 != null) t4.parent = n3;
			n2.colour = g.colour - 1;
			n1.colour = 1;
			n3.colour = 1;
			if(n2 == this.parent) this.parent.colour = 1; else if(n2.colour == 0 && n2.parent.colour == 0) {
				x = n2;
				continue;
			}
			break;
		}
	}
	,try_insert: function(obj) {
		var x = null;
		var cur = null;
		if(this.parent == null) {
			if(zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool == null) x = new zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair(); else {
				x = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool;
				zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool = x.next;
				x.next = null;
			}
			null;
			x.data = obj;
			this.parent = x;
		} else {
			cur = this.parent;
			while(true) if(this.lt(obj,cur.data)) {
				if(cur.prev == null) {
					if(zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool == null) x = new zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair(); else {
						x = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool;
						zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool = x.next;
						x.next = null;
					}
					null;
					x.data = obj;
					cur.prev = x;
					x.parent = cur;
					break;
				} else cur = cur.prev;
			} else if(this.lt(cur.data,obj)) {
				if(cur.next == null) {
					if(zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool == null) x = new zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair(); else {
						x = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool;
						zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair.zpp_pool = x.next;
						x.next = null;
					}
					null;
					x.data = obj;
					cur.next = x;
					x.parent = cur;
					break;
				} else cur = cur.next;
			} else break;
		}
		if(x == null) return cur; else {
			if(x.parent == null) x.colour = 1; else {
				x.colour = 0;
				if(x.parent.colour == 0) this.__fix_dbl_red(x);
			}
			return x;
		}
	}
	,__class__: zpp_$nape_util_ZPP_$Set_$ZPP_$CbSetPair
};
var zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex = function() {
	this.colour = 0;
	this.parent = null;
	this.next = null;
	this.prev = null;
	this.data = null;
	this.swapped = null;
	this.lt = null;
};
$hxClasses["zpp_nape.util.ZPP_Set_ZPP_PartitionVertex"] = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex;
zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.__name__ = ["zpp_nape","util","ZPP_Set_ZPP_PartitionVertex"];
zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.prototype = {
	empty: function() {
		return this.parent == null;
	}
	,remove_node: function(cur) {
		if(cur.next != null && cur.prev != null) {
			var sm = cur.next;
			while(sm.prev != null) sm = sm.prev;
			var t = cur.data;
			cur.data = sm.data;
			sm.data = t;
			if(this.swapped != null) this.swapped(cur.data,sm.data);
			cur = sm;
		}
		var child;
		if(cur.prev == null) child = cur.next; else child = cur.prev;
		if(cur.colour == 1) {
			if(cur.prev != null || cur.next != null) child.colour = 1; else if(cur.parent != null) {
				var parent = cur.parent;
				while(true) {
					parent.colour++;
					parent.prev.colour--;
					parent.next.colour--;
					var child1 = parent.prev;
					if(child1.colour == -1) {
						this.__fix_neg_red(child1);
						break;
					} else if(child1.colour == 0) {
						if(child1.prev != null && child1.prev.colour == 0) {
							this.__fix_dbl_red(child1.prev);
							break;
						}
						if(child1.next != null && child1.next.colour == 0) {
							this.__fix_dbl_red(child1.next);
							break;
						}
					}
					var child2 = parent.next;
					if(child2.colour == -1) {
						this.__fix_neg_red(child2);
						break;
					} else if(child2.colour == 0) {
						if(child2.prev != null && child2.prev.colour == 0) {
							this.__fix_dbl_red(child2.prev);
							break;
						}
						if(child2.next != null && child2.next.colour == 0) {
							this.__fix_dbl_red(child2.next);
							break;
						}
					}
					if(parent.colour == 2) {
						if(parent.parent == null) parent.colour = 1; else {
							parent = parent.parent;
							continue;
						}
					}
					break;
				}
			}
		}
		var par = cur.parent;
		if(par == null) this.parent = child; else if(par.prev == cur) par.prev = child; else par.next = child;
		if(child != null) child.parent = par;
		cur.parent = cur.prev = cur.next = null;
		var o = cur;
		o.data = null;
		o.lt = null;
		o.swapped = null;
		o.next = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool;
		zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool = o;
	}
	,__fix_neg_red: function(negred) {
		var parent = negred.parent;
		var child;
		if(parent.prev == negred) {
			var nl = negred.prev;
			var nr = negred.next;
			var trl = nr.prev;
			var trr = nr.next;
			nl.colour = 0;
			negred.colour = parent.colour = 1;
			negred.next = trl;
			if(trl != null) trl.parent = negred;
			var t = parent.data;
			parent.data = nr.data;
			nr.data = t;
			if(this.swapped != null) this.swapped(parent.data,nr.data);
			nr.prev = trr;
			if(trr != null) trr.parent = nr;
			nr.next = parent.next;
			if(parent.next != null) parent.next.parent = nr;
			parent.next = nr;
			if(nr != null) nr.parent = parent;
			child = nl;
		} else {
			var nl1 = negred.next;
			var nr1 = negred.prev;
			var trl1 = nr1.next;
			var trr1 = nr1.prev;
			nl1.colour = 0;
			negred.colour = parent.colour = 1;
			negred.prev = trl1;
			if(trl1 != null) trl1.parent = negred;
			var t1 = parent.data;
			parent.data = nr1.data;
			nr1.data = t1;
			if(this.swapped != null) this.swapped(parent.data,nr1.data);
			nr1.next = trr1;
			if(trr1 != null) trr1.parent = nr1;
			nr1.prev = parent.prev;
			if(parent.prev != null) parent.prev.parent = nr1;
			parent.prev = nr1;
			if(nr1 != null) nr1.parent = parent;
			child = nl1;
		}
		if(child.prev != null && child.prev.colour == 0) this.__fix_dbl_red(child.prev); else if(child.next != null && child.next.colour == 0) this.__fix_dbl_red(child.next);
	}
	,__fix_dbl_red: function(x) {
		while(true) {
			var par = x.parent;
			var g = par.parent;
			if(g == null) {
				par.colour = 1;
				break;
			}
			var n1;
			var n2;
			var n3;
			var t1;
			var t2;
			var t3;
			var t4;
			if(par == g.prev) {
				n3 = g;
				t4 = g.next;
				if(x == par.prev) {
					n1 = x;
					n2 = par;
					t1 = x.prev;
					t2 = x.next;
					t3 = par.next;
				} else {
					n1 = par;
					n2 = x;
					t1 = par.prev;
					t2 = x.prev;
					t3 = x.next;
				}
			} else {
				n1 = g;
				t1 = g.prev;
				if(x == par.prev) {
					n2 = x;
					n3 = par;
					t2 = x.prev;
					t3 = x.next;
					t4 = par.next;
				} else {
					n2 = par;
					n3 = x;
					t2 = par.prev;
					t3 = x.prev;
					t4 = x.next;
				}
			}
			var par1 = g.parent;
			if(par1 == null) this.parent = n2; else if(par1.prev == g) par1.prev = n2; else par1.next = n2;
			if(n2 != null) n2.parent = par1;
			n1.prev = t1;
			if(t1 != null) t1.parent = n1;
			n1.next = t2;
			if(t2 != null) t2.parent = n1;
			n2.prev = n1;
			if(n1 != null) n1.parent = n2;
			n2.next = n3;
			if(n3 != null) n3.parent = n2;
			n3.prev = t3;
			if(t3 != null) t3.parent = n3;
			n3.next = t4;
			if(t4 != null) t4.parent = n3;
			n2.colour = g.colour - 1;
			n1.colour = 1;
			n3.colour = 1;
			if(n2 == this.parent) this.parent.colour = 1; else if(n2.colour == 0 && n2.parent.colour == 0) {
				x = n2;
				continue;
			}
			break;
		}
	}
	,insert: function(obj) {
		var x;
		if(zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool == null) x = new zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex(); else {
			x = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool;
			zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex.zpp_pool = x.next;
			x.next = null;
		}
		null;
		x.data = obj;
		if(this.parent == null) this.parent = x; else {
			var cur = this.parent;
			while(true) if(this.lt(x.data,cur.data)) {
				if(cur.prev == null) {
					cur.prev = x;
					x.parent = cur;
					break;
				} else cur = cur.prev;
			} else if(cur.next == null) {
				cur.next = x;
				x.parent = cur;
				break;
			} else cur = cur.next;
		}
		if(x.parent == null) x.colour = 1; else {
			x.colour = 0;
			if(x.parent.colour == 0) this.__fix_dbl_red(x);
		}
		return x;
	}
	,__class__: zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionVertex
};
var zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair = function() {
	this.colour = 0;
	this.parent = null;
	this.next = null;
	this.prev = null;
	this.data = null;
	this.swapped = null;
	this.lt = null;
};
$hxClasses["zpp_nape.util.ZPP_Set_ZPP_PartitionPair"] = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair;
zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.__name__ = ["zpp_nape","util","ZPP_Set_ZPP_PartitionPair"];
zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.prototype = {
	remove_node: function(cur) {
		if(cur.next != null && cur.prev != null) {
			var sm = cur.next;
			while(sm.prev != null) sm = sm.prev;
			var t = cur.data;
			cur.data = sm.data;
			sm.data = t;
			if(this.swapped != null) this.swapped(cur.data,sm.data);
			cur = sm;
		}
		var child;
		if(cur.prev == null) child = cur.next; else child = cur.prev;
		if(cur.colour == 1) {
			if(cur.prev != null || cur.next != null) child.colour = 1; else if(cur.parent != null) {
				var parent = cur.parent;
				while(true) {
					parent.colour++;
					parent.prev.colour--;
					parent.next.colour--;
					var child1 = parent.prev;
					if(child1.colour == -1) {
						this.__fix_neg_red(child1);
						break;
					} else if(child1.colour == 0) {
						if(child1.prev != null && child1.prev.colour == 0) {
							this.__fix_dbl_red(child1.prev);
							break;
						}
						if(child1.next != null && child1.next.colour == 0) {
							this.__fix_dbl_red(child1.next);
							break;
						}
					}
					var child2 = parent.next;
					if(child2.colour == -1) {
						this.__fix_neg_red(child2);
						break;
					} else if(child2.colour == 0) {
						if(child2.prev != null && child2.prev.colour == 0) {
							this.__fix_dbl_red(child2.prev);
							break;
						}
						if(child2.next != null && child2.next.colour == 0) {
							this.__fix_dbl_red(child2.next);
							break;
						}
					}
					if(parent.colour == 2) {
						if(parent.parent == null) parent.colour = 1; else {
							parent = parent.parent;
							continue;
						}
					}
					break;
				}
			}
		}
		var par = cur.parent;
		if(par == null) this.parent = child; else if(par.prev == cur) par.prev = child; else par.next = child;
		if(child != null) child.parent = par;
		cur.parent = cur.prev = cur.next = null;
		var o = cur;
		o.data = null;
		o.lt = null;
		o.swapped = null;
		o.next = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool;
		zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool = o;
	}
	,__fix_neg_red: function(negred) {
		var parent = negred.parent;
		var child;
		if(parent.prev == negred) {
			var nl = negred.prev;
			var nr = negred.next;
			var trl = nr.prev;
			var trr = nr.next;
			nl.colour = 0;
			negred.colour = parent.colour = 1;
			negred.next = trl;
			if(trl != null) trl.parent = negred;
			var t = parent.data;
			parent.data = nr.data;
			nr.data = t;
			if(this.swapped != null) this.swapped(parent.data,nr.data);
			nr.prev = trr;
			if(trr != null) trr.parent = nr;
			nr.next = parent.next;
			if(parent.next != null) parent.next.parent = nr;
			parent.next = nr;
			if(nr != null) nr.parent = parent;
			child = nl;
		} else {
			var nl1 = negred.next;
			var nr1 = negred.prev;
			var trl1 = nr1.next;
			var trr1 = nr1.prev;
			nl1.colour = 0;
			negred.colour = parent.colour = 1;
			negred.prev = trl1;
			if(trl1 != null) trl1.parent = negred;
			var t1 = parent.data;
			parent.data = nr1.data;
			nr1.data = t1;
			if(this.swapped != null) this.swapped(parent.data,nr1.data);
			nr1.next = trr1;
			if(trr1 != null) trr1.parent = nr1;
			nr1.prev = parent.prev;
			if(parent.prev != null) parent.prev.parent = nr1;
			parent.prev = nr1;
			if(nr1 != null) nr1.parent = parent;
			child = nl1;
		}
		if(child.prev != null && child.prev.colour == 0) this.__fix_dbl_red(child.prev); else if(child.next != null && child.next.colour == 0) this.__fix_dbl_red(child.next);
	}
	,__fix_dbl_red: function(x) {
		while(true) {
			var par = x.parent;
			var g = par.parent;
			if(g == null) {
				par.colour = 1;
				break;
			}
			var n1;
			var n2;
			var n3;
			var t1;
			var t2;
			var t3;
			var t4;
			if(par == g.prev) {
				n3 = g;
				t4 = g.next;
				if(x == par.prev) {
					n1 = x;
					n2 = par;
					t1 = x.prev;
					t2 = x.next;
					t3 = par.next;
				} else {
					n1 = par;
					n2 = x;
					t1 = par.prev;
					t2 = x.prev;
					t3 = x.next;
				}
			} else {
				n1 = g;
				t1 = g.prev;
				if(x == par.prev) {
					n2 = x;
					n3 = par;
					t2 = x.prev;
					t3 = x.next;
					t4 = par.next;
				} else {
					n2 = par;
					n3 = x;
					t2 = par.prev;
					t3 = x.prev;
					t4 = x.next;
				}
			}
			var par1 = g.parent;
			if(par1 == null) this.parent = n2; else if(par1.prev == g) par1.prev = n2; else par1.next = n2;
			if(n2 != null) n2.parent = par1;
			n1.prev = t1;
			if(t1 != null) t1.parent = n1;
			n1.next = t2;
			if(t2 != null) t2.parent = n1;
			n2.prev = n1;
			if(n1 != null) n1.parent = n2;
			n2.next = n3;
			if(n3 != null) n3.parent = n2;
			n3.prev = t3;
			if(t3 != null) t3.parent = n3;
			n3.next = t4;
			if(t4 != null) t4.parent = n3;
			n2.colour = g.colour - 1;
			n1.colour = 1;
			n3.colour = 1;
			if(n2 == this.parent) this.parent.colour = 1; else if(n2.colour == 0 && n2.parent.colour == 0) {
				x = n2;
				continue;
			}
			break;
		}
	}
	,insert: function(obj) {
		var x;
		if(zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool == null) x = new zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair(); else {
			x = zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool;
			zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair.zpp_pool = x.next;
			x.next = null;
		}
		null;
		x.data = obj;
		if(this.parent == null) this.parent = x; else {
			var cur = this.parent;
			while(true) if(this.lt(x.data,cur.data)) {
				if(cur.prev == null) {
					cur.prev = x;
					x.parent = cur;
					break;
				} else cur = cur.prev;
			} else if(cur.next == null) {
				cur.next = x;
				x.parent = cur;
				break;
			} else cur = cur.next;
		}
		if(x.parent == null) x.colour = 1; else {
			x.colour = 0;
			if(x.parent.colour == 0) this.__fix_dbl_red(x);
		}
		return x;
	}
	,__class__: zpp_$nape_util_ZPP_$Set_$ZPP_$PartitionPair
};
var zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet = function() {
	this.colour = 0;
	this.parent = null;
	this.next = null;
	this.prev = null;
	this.data = null;
	this.swapped = null;
	this.lt = null;
};
$hxClasses["zpp_nape.util.ZPP_Set_ZPP_CbSet"] = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet;
zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.__name__ = ["zpp_nape","util","ZPP_Set_ZPP_CbSet"];
zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.prototype = {
	empty: function() {
		return this.parent == null;
	}
	,find: function(obj) {
		var cur = this.parent;
		while(cur != null && cur.data != obj) if(this.lt(obj,cur.data)) cur = cur.prev; else cur = cur.next;
		return cur;
	}
	,find_weak: function(obj) {
		var cur = this.parent;
		while(cur != null) if(this.lt(obj,cur.data)) cur = cur.prev; else if(this.lt(cur.data,obj)) cur = cur.next; else break;
		return cur;
	}
	,remove: function(obj) {
		var node = this.find(obj);
		this.remove_node(node);
	}
	,remove_node: function(cur) {
		if(cur.next != null && cur.prev != null) {
			var sm = cur.next;
			while(sm.prev != null) sm = sm.prev;
			var t = cur.data;
			cur.data = sm.data;
			sm.data = t;
			if(this.swapped != null) this.swapped(cur.data,sm.data);
			cur = sm;
		}
		var child;
		if(cur.prev == null) child = cur.next; else child = cur.prev;
		if(cur.colour == 1) {
			if(cur.prev != null || cur.next != null) child.colour = 1; else if(cur.parent != null) {
				var parent = cur.parent;
				while(true) {
					parent.colour++;
					parent.prev.colour--;
					parent.next.colour--;
					var child1 = parent.prev;
					if(child1.colour == -1) {
						this.__fix_neg_red(child1);
						break;
					} else if(child1.colour == 0) {
						if(child1.prev != null && child1.prev.colour == 0) {
							this.__fix_dbl_red(child1.prev);
							break;
						}
						if(child1.next != null && child1.next.colour == 0) {
							this.__fix_dbl_red(child1.next);
							break;
						}
					}
					var child2 = parent.next;
					if(child2.colour == -1) {
						this.__fix_neg_red(child2);
						break;
					} else if(child2.colour == 0) {
						if(child2.prev != null && child2.prev.colour == 0) {
							this.__fix_dbl_red(child2.prev);
							break;
						}
						if(child2.next != null && child2.next.colour == 0) {
							this.__fix_dbl_red(child2.next);
							break;
						}
					}
					if(parent.colour == 2) {
						if(parent.parent == null) parent.colour = 1; else {
							parent = parent.parent;
							continue;
						}
					}
					break;
				}
			}
		}
		var par = cur.parent;
		if(par == null) this.parent = child; else if(par.prev == cur) par.prev = child; else par.next = child;
		if(child != null) child.parent = par;
		cur.parent = cur.prev = cur.next = null;
		var o = cur;
		o.data = null;
		o.lt = null;
		o.swapped = null;
		o.next = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool;
		zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool = o;
	}
	,__fix_neg_red: function(negred) {
		var parent = negred.parent;
		var child;
		if(parent.prev == negred) {
			var nl = negred.prev;
			var nr = negred.next;
			var trl = nr.prev;
			var trr = nr.next;
			nl.colour = 0;
			negred.colour = parent.colour = 1;
			negred.next = trl;
			if(trl != null) trl.parent = negred;
			var t = parent.data;
			parent.data = nr.data;
			nr.data = t;
			if(this.swapped != null) this.swapped(parent.data,nr.data);
			nr.prev = trr;
			if(trr != null) trr.parent = nr;
			nr.next = parent.next;
			if(parent.next != null) parent.next.parent = nr;
			parent.next = nr;
			if(nr != null) nr.parent = parent;
			child = nl;
		} else {
			var nl1 = negred.next;
			var nr1 = negred.prev;
			var trl1 = nr1.next;
			var trr1 = nr1.prev;
			nl1.colour = 0;
			negred.colour = parent.colour = 1;
			negred.prev = trl1;
			if(trl1 != null) trl1.parent = negred;
			var t1 = parent.data;
			parent.data = nr1.data;
			nr1.data = t1;
			if(this.swapped != null) this.swapped(parent.data,nr1.data);
			nr1.next = trr1;
			if(trr1 != null) trr1.parent = nr1;
			nr1.prev = parent.prev;
			if(parent.prev != null) parent.prev.parent = nr1;
			parent.prev = nr1;
			if(nr1 != null) nr1.parent = parent;
			child = nl1;
		}
		if(child.prev != null && child.prev.colour == 0) this.__fix_dbl_red(child.prev); else if(child.next != null && child.next.colour == 0) this.__fix_dbl_red(child.next);
	}
	,__fix_dbl_red: function(x) {
		while(true) {
			var par = x.parent;
			var g = par.parent;
			if(g == null) {
				par.colour = 1;
				break;
			}
			var n1;
			var n2;
			var n3;
			var t1;
			var t2;
			var t3;
			var t4;
			if(par == g.prev) {
				n3 = g;
				t4 = g.next;
				if(x == par.prev) {
					n1 = x;
					n2 = par;
					t1 = x.prev;
					t2 = x.next;
					t3 = par.next;
				} else {
					n1 = par;
					n2 = x;
					t1 = par.prev;
					t2 = x.prev;
					t3 = x.next;
				}
			} else {
				n1 = g;
				t1 = g.prev;
				if(x == par.prev) {
					n2 = x;
					n3 = par;
					t2 = x.prev;
					t3 = x.next;
					t4 = par.next;
				} else {
					n2 = par;
					n3 = x;
					t2 = par.prev;
					t3 = x.prev;
					t4 = x.next;
				}
			}
			var par1 = g.parent;
			if(par1 == null) this.parent = n2; else if(par1.prev == g) par1.prev = n2; else par1.next = n2;
			if(n2 != null) n2.parent = par1;
			n1.prev = t1;
			if(t1 != null) t1.parent = n1;
			n1.next = t2;
			if(t2 != null) t2.parent = n1;
			n2.prev = n1;
			if(n1 != null) n1.parent = n2;
			n2.next = n3;
			if(n3 != null) n3.parent = n2;
			n3.prev = t3;
			if(t3 != null) t3.parent = n3;
			n3.next = t4;
			if(t4 != null) t4.parent = n3;
			n2.colour = g.colour - 1;
			n1.colour = 1;
			n3.colour = 1;
			if(n2 == this.parent) this.parent.colour = 1; else if(n2.colour == 0 && n2.parent.colour == 0) {
				x = n2;
				continue;
			}
			break;
		}
	}
	,insert: function(obj) {
		var x;
		if(zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool == null) x = new zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet(); else {
			x = zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool;
			zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet.zpp_pool = x.next;
			x.next = null;
		}
		null;
		x.data = obj;
		if(this.parent == null) this.parent = x; else {
			var cur = this.parent;
			while(true) if(this.lt(x.data,cur.data)) {
				if(cur.prev == null) {
					cur.prev = x;
					x.parent = cur;
					break;
				} else cur = cur.prev;
			} else if(cur.next == null) {
				cur.next = x;
				x.parent = cur;
				break;
			} else cur = cur.next;
		}
		if(x.parent == null) x.colour = 1; else {
			x.colour = 0;
			if(x.parent.colour == 0) this.__fix_dbl_red(x);
		}
		return x;
	}
	,__class__: zpp_$nape_util_ZPP_$Set_$ZPP_$CbSet
};
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
if(Array.prototype.indexOf) HxOverrides.indexOf = function(a,o,i) {
	return Array.prototype.indexOf.call(a,o,i);
};
$hxClasses.Math = Math;
String.prototype.__class__ = $hxClasses.String = String;
String.__name__ = ["String"];
$hxClasses.Array = Array;
Array.__name__ = ["Array"];
Date.prototype.__class__ = $hxClasses.Date = Date;
Date.__name__ = ["Date"];
var Int = $hxClasses.Int = { __name__ : ["Int"]};
var Dynamic = $hxClasses.Dynamic = { __name__ : ["Dynamic"]};
var Float = $hxClasses.Float = Number;
Float.__name__ = ["Float"];
var Bool = $hxClasses.Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = $hxClasses.Class = { __name__ : ["Class"]};
var Enum = { };
openfl_Lib.__init();
PreloaderLogoBMD.preload();
haxe_Resource.content = [{ name : "levels", data : ""},{ name : "definitions", data : ""}];
var __map_reserved = {}
PreloaderBarBMD.preload();
var q = window.jQuery;
var js = js || {}
js.JQuery = q;
var ArrayBuffer = $global.ArrayBuffer || js_html_compat_ArrayBuffer;
if(ArrayBuffer.prototype.slice == null) ArrayBuffer.prototype.slice = js_html_compat_ArrayBuffer.sliceImpl;
var DataView = $global.DataView || js_html_compat_DataView;
var Uint8Array = $global.Uint8Array || js_html_compat_Uint8Array._new;
(function() {
	var a = Event.prototype;
	var b = openfl_events_Event.prototype;
	a.clone = b.clone;
	a.isDefaultPrevented = b.isDefaultPrevented;
	a.get_target = b.get_target;
	a.set_target = b.set_target;
	a.get_currentTarget = b.get_currentTarget;
	a.set_currentTarget = b.set_currentTarget;
})();
ApplicationMain.AssetNames = ["assets/GameFont.png","assets/Objects.png"];
ApplicationMain.AssetBytes = [24901,844731];
Main.BOTH_ORIENTATIONS = false;
Main.INTERPOLATE = false;
Main.hasResized = false;
Main.started = false;
Main.NumChangedStates = 0;
Main.systemPaused = false;
Main.hadSound = true;
Audio.needsAudio = true;
Audio.hasMusic = false;
Audio.hasSound = false;
Audio.loaded = false;
Audio.initted = false;
Audio.muteMusic = false;
Audio.muteSound = false;
Audio.locallyMuted = false;
Preloader.BMPsToRemove = [];
Preloader.ShowBlank = false;
Preloader.NoGA = false;
Preloader.timePassed = true;
Preloader.filterAds = false;
Preloader.showMobile = true;
Preloader.showCross = true;
Preloader.assetsLoaded = false;
Preloader.MainStarted = false;
Preloader.estimateLoaded = 0;
GamePreloader.SM = ["award","motor","bonus","boost","collect","lose","roll","win"];
GamePreloader.M = [];
Globals.currentLevel = 0;
Globals.currentSkin = 0;
Globals.seenSkins = 1;
Globals.coins = 0;
Globals.numRuns = 0;
Globals.totalScore = 0;
Globals.lastScore = 0;
Globals.bestScore = 0;
Globals.MAX_LIVES = 10;
Globals.hideGUI = false;
Globals.gameBeatTest = false;
Globals.is4399 = false;
Globals.isHooda = false;
Globals.ext = "";
Globals.GooglePlayURL = "";
Globals.DefaultMobileURL = "";
HolaverseAPI.AdsInitted = false;
Input.KEYNUM = 256;
Input.ENTER = 13;
Input.ESCAPE = 27;
Input.UP = 38;
Input.DOWN = 40;
Input.LEFT = 37;
Input.RIGHT = 39;
Input.INSERT = 45;
Input.DELETE = 46;
Input.PAGE_UP = 33;
Input.PAGE_DOWN = 34;
Input.END = 35;
Input.HOME = 36;
Input.SPACE = 32;
Input.D0 = 48;
Input.D1 = 49;
Input.D2 = 50;
Input.D3 = 51;
Input.D4 = 52;
Input.D5 = 53;
Input.D6 = 54;
Input.D7 = 55;
Input.D8 = 56;
Input.D9 = 57;
Input.mOffsetX = 0;
Input.mOffsetY = 0;
Input.ClickSound = "roll";
Input.TouchIdArray = [];
Input.TouchIdArrayLength = 0;
Input._pTouch = new openfl_geom_Point();
Objects.Frames = [[1914,756,128,128,0,0],[1871,756,32,16,16,8],[1773,746,4,4,2,2],[1763,987,32,16,16,8],[1654,746,32,4,16,2],[466,1155,64,64,32,32],[83,1156,64,64,0,0],[1335,1156,64,64,0,0],[1402,1156,64,64,0,0],[1569,1031,95,82,47,41],[1297,1048,95,82,47,41],[1792,1142,68,67,33,31],[3,1080,77,76,39,38],[195,1080,77,76,39,38],[275,1080,77,76,39,38],[865,1084,77,76,39,38],[945,1109,77,76,39,38],[1025,1109,77,76,39,38],[1863,1114,77,76,39,38],[1943,1114,77,76,39,38],[1466,983,100,88,48,43],[3,1216,48,48,24,24],[1245,1204,49,57,23,31],[268,918,320,44,160,22],[591,918,320,44,160,22],[1642,1142,72,71,36,35],[1842,887,135,116,67,59],[383,1079,80,78,39,39],[496,965,119,102,59,52],[1561,1116,78,73,40,37],[1641,319,336,291,168,147],[618,1068,81,82,29,22],[496,1070,81,82,29,22],[903,972,108,109,53,55],[1625,912,135,116,67,59],[1980,408,60,60,29,26],[383,965,110,111,54,55],[702,1079,78,79,39,39],[112,975,93,95,48,45],[1980,471,57,61,29,31],[1163,1059,87,78,42,41],[1667,1057,95,82,47,41],[1765,1057,95,82,47,41],[1603,486,31,67,14,34],[1717,1142,72,71,34,37],[1253,1133,79,68,39,34],[1395,1074,80,79,52,19],[1478,1074,80,79,52,19],[1654,613,151,130,76,66],[150,1216,48,48,24,24],[1297,983,166,62,81,27],[1569,983,41,40,20,19],[1603,556,8,8,4,4],[3,3,0,0,0,0],[3,3,0,0,0,0],[268,965,112,112,54,55],[3,3,912,912,124,136],[3,3,0,0,0,0],[3,3,0,0,0,0],[3,3,0,0,0,0],[3,3,0,0,0,0],[722,1161,48,60,24,30],[3,3,0,0,0,0],[3,3,0,0,0,0],[3,3,0,0,0,0],[201,1216,103,19,52,10],[921,1188,214,16,0,8],[1539,1192,91,34,45,16],[1970,1006,70,40,33,18],[112,1073,80,80,40,40],[783,1158,66,54,34,46],[3,1159,66,54,34,46],[150,1159,66,54,34,46],[219,1159,66,54,34,46],[288,1159,66,54,34,46],[357,1160,66,54,34,46],[653,1161,66,54,34,46],[852,1163,66,54,34,46],[1414,1048,18,18,9,9],[3,3,0,0,0,0],[3,918,262,54,135,25],[914,926,316,43,-83,1],[618,965,282,43,-100,1],[1382,778,529,67,23,9],[1395,1048,16,21,8,10],[2031,351,14,23,7,11],[918,778,461,81,236,6],[918,778,461,81,236,6],[1242,761,15,8,7,4],[2031,721,14,8,7,4],[2031,732,10,10,5,5],[1260,761,10,9,4,3],[1226,761,13,14,6,7],[1615,597,12,11,5,5],[1341,570,168,35,88,18],[1763,1006,204,48,101,23],[3,3,0,0,0,0],[1469,1215,48,48,24,24],[918,761,208,10,104,4],[1641,3,373,313,186,180],[1980,319,48,86,24,43],[1014,972,140,84,68,40],[3,975,106,102,52,48],[3,3,0,0,0,0],[1233,926,95,36,33,17],[1721,1031,23,21,11,11],[3,3,0,0,0,1],[466,1120,26,25,13,12],[1339,862,37,37,18,18],[1138,1183,104,32,52,16],[1863,1193,103,32,51,16],[921,1207,103,32,51,16],[1027,1207,102,30,51,15],[307,1226,412,4,206,2],[1863,1057,140,54,51,24],[618,1011,155,54,51,24],[2017,3,24,35,12,24],[776,1011,124,65,62,31],[83,1121,26,25,13,12],[1630,597,6,6,3,3],[2039,607,6,6,3,3],[1014,1059,146,47,81,22],[580,1153,70,70,35,35],[918,3,720,480,0,0],[1512,570,100,36,51,18],[1253,1059,37,35,17,55],[2006,1049,34,40,15,18],[1808,613,140,140,70,70],[1763,912,72,72,36,36],[1157,972,137,84,70,43],[1980,887,60,57,28,27],[1667,1031,24,22,10,10],[1253,1097,30,28,43,12],[1694,1031,24,22,10,10],[1105,1109,30,27,17,16],[1341,613,310,162,153,91],[918,862,418,61,206,27],[1382,848,457,61,225,27],[2017,287,28,24,-11,-14],[1654,756,214,16,0,8],[208,975,39,75,20,42],[1980,535,47,73,24,37],[1951,697,77,56,36,27],[1469,1156,67,56,36,27],[1980,947,57,56,36,27],[3,3,0,0,0,1],[1630,606,4,4,4,2],[2031,745,4,4,5,2],[2038,745,4,4,7,2],[1689,746,4,4,8,2],[1696,746,4,4,9,2],[1703,746,4,4,11,2],[1710,746,4,4,12,2],[1717,746,4,4,13,2],[1724,746,4,4,15,2],[1731,746,4,4,16,2],[1738,746,4,4,17,2],[1745,746,4,4,18,2],[1752,746,4,4,20,2],[1759,746,4,4,21,2],[1766,746,4,4,22,2],[783,1079,79,76,39,39],[1951,613,85,81,42,41],[1105,1140,130,40,65,20],[918,486,420,272,210,136],[580,1070,32,27,-11,3],[1842,848,66,30,36,18],[1339,912,283,68,144,36],[2031,314,14,34,4,17],[355,1121,20,34,10,17],[79,1223,20,34,10,17],[102,1223,20,34,10,17],[125,1223,20,34,10,17],[1322,1223,20,34,10,17],[1345,1223,20,34,10,17],[1368,1223,20,34,10,17],[1391,1223,20,34,10,17],[1414,1223,20,34,10,17],[1437,1223,20,34,10,17],[722,1224,20,34,10,17],[745,1224,20,34,10,17],[1845,1228,20,34,10,17],[1868,1228,20,34,10,17],[1891,1228,20,34,10,17],[1914,1228,20,34,10,17],[1937,1228,20,34,10,17],[1520,1229,20,34,10,17],[1543,1229,20,34,10,17],[1566,1229,20,34,10,17],[899,1220,16,34,10,17],[2017,41,22,38,11,18],[2017,82,22,38,11,18],[2017,123,22,38,11,18],[2017,164,22,38,11,18],[2017,205,22,38,11,18],[2017,246,22,38,11,18],[1615,556,22,38,11,18],[466,1079,22,38,11,18],[83,1080,22,38,11,18],[355,1080,22,38,11,18],[2023,1092,22,38,11,18],[580,1100,22,38,11,18],[2023,1133,22,38,11,18],[1297,1204,22,38,11,18],[826,1215,22,38,11,18],[54,1216,22,38,11,18],[1633,1216,22,38,11,18],[1658,1216,22,38,11,18],[250,975,13,24,6,11],[250,1002,13,22,6,11],[250,1027,13,22,6,11],[1747,1031,13,22,6,11],[1435,1048,13,22,6,11],[250,1052,13,22,6,11],[208,1053,13,22,6,11],[224,1053,13,22,6,11],[945,1084,13,22,6,11],[961,1084,13,22,6,11],[977,1084,13,22,6,11],[993,1084,13,22,6,11],[1138,1109,13,22,6,11],[1642,1116,13,22,6,11],[1539,1156,13,22,6,11],[921,1163,13,22,6,11],[533,1193,13,22,6,11],[549,1193,13,22,6,11],[426,1198,13,22,6,11],[442,1198,13,22,6,11],[1589,1229,13,22,6,11],[2031,377,10,22,6,11],[876,1220,20,38,9,19],[1683,1216,22,38,11,19],[1708,1216,22,38,11,19],[1733,1216,22,38,11,19],[1758,1216,22,38,11,19],[1132,1218,22,38,11,19],[1157,1218,22,38,11,19],[1182,1218,22,38,11,19],[1207,1218,22,38,11,19],[851,1220,22,38,11,19],[2031,697,9,21,3,10],[2030,535,12,21,6,10],[2030,559,12,21,6,10],[2030,583,12,21,6,10],[1451,1048,12,21,6,10],[1238,1140,12,21,6,10],[565,1193,12,21,6,10],[1605,1229,12,21,6,10],[307,1233,12,21,6,10],[322,1233,12,21,6,10],[337,1233,12,21,6,10],[352,1233,12,21,6,10],[367,1233,12,21,6,10],[382,1233,12,21,6,10],[397,1233,12,21,6,10],[1969,1193,73,40,42,27],[1341,486,259,81,130,42],[1129,761,60,13,4,7],[533,1155,36,35,18,17],[426,1160,36,35,18,17],[1792,1212,50,50,0,0],[1192,761,31,8,4,4],[773,1215,50,50,25,25]];
Objects.bmpBrick = new oz_OzMovieClip("bmpBrick",[0],-1);
Objects.bmpChain = new oz_OzMovieClip("bmpChain",[1],-1);
Objects.bmpLine = new oz_OzMovieClip("bmpLine",[2],-1);
Objects.bmpPathEdge = new oz_OzMovieClip("bmpPathEdge",[3],-1);
Objects.bmpPathEdgeRed = new oz_OzMovieClip("bmpPathEdgeRed",[4],-1);
Objects.bmpRedChess = new oz_OzMovieClip("bmpRedChess",[5],-1);
Objects.bmpRedFill = new oz_OzMovieClip("bmpRedFill",[6],-1);
Objects.bmpSysFill = new oz_OzMovieClip("bmpSysFill",[7],-1);
Objects.bmpTealFill = new oz_OzMovieClip("bmpTealFill",[8],-1);
Objects.cbtnAwards1 = new oz_OzMovieClip("cbtnAwards1",[9],-1);
Objects.cbtnBack1 = new oz_OzMovieClip("cbtnBack1",[10],-1);
Objects.cbtnBack4 = new oz_OzMovieClip("cbtnBack4",[11],-1);
Objects.cbtnChooseSkin = new oz_OzMovieClip("cbtnChooseSkin",[12,13,14,15,16,17,18,19],-1);
Objects.cbtnCredits1 = new oz_OzMovieClip("cbtnCredits1",[20],-1);
Objects.cbtnFacebook = new oz_OzMovieClip("cbtnFacebook",[21],-1);
Objects.cbtnIconLock = new oz_OzMovieClip("cbtnIconLock",[22],-1);
Objects.cbtnLevel = new oz_OzMovieClip("cbtnLevel",[23,24],-1);
Objects.cbtnLevels = new oz_OzMovieClip("cbtnLevels",[25],-1);
Objects.cbtnLevels1 = new oz_OzMovieClip("cbtnLevels1",[26],-1);
Objects.cbtnLevels2 = new oz_OzMovieClip("cbtnLevels2",[27],-1);
Objects.cbtnMore1 = new oz_OzMovieClip("cbtnMore1",[28],-1);
Objects.cbtnMore2 = new oz_OzMovieClip("cbtnMore2",[29],-1);
Objects.cbtnMoreLevels = new oz_OzMovieClip("cbtnMoreLevels",[30],-1);
Objects.cbtnMusic1 = new oz_OzMovieClip("cbtnMusic1",[31,32],-1);
Objects.cbtnNext = new oz_OzMovieClip("cbtnNext",[33],-1);
Objects.cbtnNext1 = new oz_OzMovieClip("cbtnNext1",[34],-1);
Objects.cbtnPause1 = new oz_OzMovieClip("cbtnPause1",[35],-1);
Objects.cbtnPlay1 = new oz_OzMovieClip("cbtnPlay1",[36],-1);
Objects.cbtnPlay2 = new oz_OzMovieClip("cbtnPlay2",[37],-1);
Objects.cbtnPlay3 = new oz_OzMovieClip("cbtnPlay3",[38],-1);
Objects.cbtnRestart1 = new oz_OzMovieClip("cbtnRestart1",[39],-1);
Objects.cbtnRestart2 = new oz_OzMovieClip("cbtnRestart2",[40],-1);
Objects.cbtnRestore1 = new oz_OzMovieClip("cbtnRestore1",[41],-1);
Objects.cbtnScores1 = new oz_OzMovieClip("cbtnScores1",[42],-1);
Objects.cbtnSide = new oz_OzMovieClip("cbtnSide",[43],-1);
Objects.cbtnSkin = new oz_OzMovieClip("cbtnSkin",[44],-1);
Objects.cbtnSolution1 = new oz_OzMovieClip("cbtnSolution1",[45],-1);
Objects.cbtnSound1 = new oz_OzMovieClip("cbtnSound1",[46,47],-1);
Objects.cbtnTrack = new oz_OzMovieClip("cbtnTrack",[48],-1);
Objects.cbtnTwitter = new oz_OzMovieClip("cbtnTwitter",[49],-1);
Objects.cbtnWalkthrough = new oz_OzMovieClip("cbtnWalkthrough",[50],-1);
Objects.cbtnX2 = new oz_OzMovieClip("cbtnX2",[51],-1);
Objects.cmcAimBall = new oz_OzMovieClip("cmcAimBall",[52],-1);
Objects.cmcAmazon = new oz_OzMovieClip("cmcAmazon",[53],-1);
Objects.cmcAppStore = new oz_OzMovieClip("cmcAppStore",[54],-1);
Objects.cmcAwardHighlight = new oz_OzMovieClip("cmcAwardHighlight",[55],-1);
Objects.cmcBG = new oz_OzMovieClip("cmcBG",[56],-1);
Objects.cmcBGFront0 = new oz_OzMovieClip("cmcBGFront0",[57],-1);
Objects.cmcBGFront1 = new oz_OzMovieClip("cmcBGFront1",[58],-1);
Objects.cmcBGFront2 = new oz_OzMovieClip("cmcBGFront2",[59],-1);
Objects.cmcBGFrontRect = new oz_OzMovieClip("cmcBGFrontRect",[60],-1);
Objects.cmcBGGGG = new oz_OzMovieClip("cmcBGGGG",[61],-1);
Objects.cmcBackMountain0 = new oz_OzMovieClip("cmcBackMountain0",[62],-1);
Objects.cmcBackMountain1 = new oz_OzMovieClip("cmcBackMountain1",[63],-1);
Objects.cmcBackMountain2 = new oz_OzMovieClip("cmcBackMountain2",[64],-1);
Objects.cmcBarrier = new oz_OzMovieClip("cmcBarrier",[65],-1);
Objects.cmcBaseUpgradeLine = new oz_OzMovieClip("cmcBaseUpgradeLine",[66],-1);
Objects.cmcBestScore = new oz_OzMovieClip("cmcBestScore",[67],-1);
Objects.cmcBoost = new oz_OzMovieClip("cmcBoost",[68],-1);
Objects.cmcCameraBound = new oz_OzMovieClip("cmcCameraBound",[69],-1);
Objects.cmcCarChassis = new oz_OzMovieClip("cmcCarChassis",[70,71,72,73,74,75,76,77],-1);
Objects.cmcCarWheel = new oz_OzMovieClip("cmcCarWheel",[78,79],-1);
Objects.cmcChooseARideTxt = new oz_OzMovieClip("cmcChooseARideTxt",[80],-1);
Objects.cmcClickToStart = new oz_OzMovieClip("cmcClickToStart",[81,82,83],-1);
Objects.cmcCoin = new oz_OzMovieClip("cmcCoin",[84],-1);
Objects.cmcCoinIcon = new oz_OzMovieClip("cmcCoinIcon",[85],-1);
Objects.cmcControlInstructions = new oz_OzMovieClip("cmcControlInstructions",[86,87],-1);
Objects.cmcCrashStar = new oz_OzMovieClip("cmcCrashStar",[88,89,90,91,92,93],-1);
Objects.cmcCreatedBy = new oz_OzMovieClip("cmcCreatedBy",[94],-1);
Objects.cmcCreditsText = new oz_OzMovieClip("cmcCreditsText",[95],-1);
Objects.cmcCross = new oz_OzMovieClip("cmcCross",[96],-1);
Objects.cmcDashedCircle = new oz_OzMovieClip("cmcDashedCircle",[97],-1);
Objects.cmcDashedLine = new oz_OzMovieClip("cmcDashedLine",[98],-1);
Objects.cmcDialog = new oz_OzMovieClip("cmcDialog",[99],-1);
Objects.cmcDialogBG = new oz_OzMovieClip("cmcDialogBG",[100],-1);
Objects.cmcFinish = new oz_OzMovieClip("cmcFinish",[101],-1);
Objects.cmcGoldStar = new oz_OzMovieClip("cmcGoldStar",[102,103],-1);
Objects.cmcGooglePlay = new oz_OzMovieClip("cmcGooglePlay",[104],-1);
Objects.cmcGuiStar = new oz_OzMovieClip("cmcGuiStar",[105,106],-1);
Objects.cmcIconStarSmaller = new oz_OzMovieClip("cmcIconStarSmaller",[107],-1);
Objects.cmcLevelMark = new oz_OzMovieClip("cmcLevelMark",[108],-1);
Objects.cmcLevelStars = new oz_OzMovieClip("cmcLevelStars",[109,110,111,112],-1);
Objects.cmcLineBonus = new oz_OzMovieClip("cmcLineBonus",[113],-1);
Objects.cmcLivesCounter = new oz_OzMovieClip("cmcLivesCounter",[114,115],-1);
Objects.cmcLock = new oz_OzMovieClip("cmcLock",[116],-1);
Objects.cmcMusicBy = new oz_OzMovieClip("cmcMusicBy",[117],-1);
Objects.cmcNewStar = new oz_OzMovieClip("cmcNewStar",[118],-1);
Objects.cmcPathNode = new oz_OzMovieClip("cmcPathNode",[119],-1);
Objects.cmcPathNodeRed = new oz_OzMovieClip("cmcPathNodeRed",[120],-1);
Objects.cmcPausedText = new oz_OzMovieClip("cmcPausedText",[121],-1);
Objects.cmcRay1 = new oz_OzMovieClip("cmcRay1",[122],-1);
Objects.cmcRotateDeviceSprite = new oz_OzMovieClip("cmcRotateDeviceSprite",[123],-1);
Objects.cmcScore = new oz_OzMovieClip("cmcScore",[124],-1);
Objects.cmcShowPlayer = new oz_OzMovieClip("cmcShowPlayer",[125],-1);
Objects.cmcSmallerLock = new oz_OzMovieClip("cmcSmallerLock",[126],-1);
Objects.cmcSpikeWheelBig = new oz_OzMovieClip("cmcSpikeWheelBig",[127],-1);
Objects.cmcSpikeWheelSmall = new oz_OzMovieClip("cmcSpikeWheelSmall",[128],-1);
Objects.cmcSponsor = new oz_OzMovieClip("cmcSponsor",[129],-1);
Objects.cmcStar = new oz_OzMovieClip("cmcStar",[130],-1);
Objects.cmcStarBlue = new oz_OzMovieClip("cmcStarBlue",[131],-1);
Objects.cmcStarCount = new oz_OzMovieClip("cmcStarCount",[132],-1);
Objects.cmcStarGold = new oz_OzMovieClip("cmcStarGold",[133],-1);
Objects.cmcStarIcon = new oz_OzMovieClip("cmcStarIcon",[134],-1);
Objects.cmcSuperHoodaTitle = new oz_OzMovieClip("cmcSuperHoodaTitle",[135],-1);
Objects.cmcTapToStart = new oz_OzMovieClip("cmcTapToStart",[136,137],-1);
Objects.cmcTick = new oz_OzMovieClip("cmcTick",[138],-1);
Objects.cmcTotalUpgradeLine = new oz_OzMovieClip("cmcTotalUpgradeLine",[139],-1);
Objects.cmcTouchDevice = new oz_OzMovieClip("cmcTouchDevice",[140,141],-1);
Objects.cmcTryStars = new oz_OzMovieClip("cmcTryStars",[142,143,144,145],-1);
Objects.cmcWheelFX = new oz_OzMovieClip("cmcWheelFX",[146,147,148,149,150,151,152,153,154,155,156,157,158,159,160],-1);
Objects.cmcWinStar = new oz_OzMovieClip("cmcWinStar",[161,162],-1);
Objects.cmcWindowsStore = new oz_OzMovieClip("cmcWindowsStore",[163],-1);
Objects.cmcYepi = new oz_OzMovieClip("cmcYepi",[164],-1);
Objects.cmcYes = new oz_OzMovieClip("cmcYes",[165],-1);
Objects.ctxtBestTime = new oz_OzMovieClip("ctxtBestTime",[166],-1);
Objects.ctxtCompleted = new oz_OzMovieClip("ctxtCompleted",[167],-1);
Objects.ctxtDOCK11 = new oz_OzMovieClip("ctxtDOCK11",[168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189],-1);
Objects.ctxtDOCK11Gold = new oz_OzMovieClip("ctxtDOCK11Gold",[190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207],-1);
Objects.ctxtNeonBlackSmall = new oz_OzMovieClip("ctxtNeonBlackSmall",[208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229],-1);
Objects.ctxtNeonWhiteBig = new oz_OzMovieClip("ctxtNeonWhiteBig",[230,231,232,233,234,235,236,237,238,239],-1);
Objects.ctxtNeonWhiteSmall = new oz_OzMovieClip("ctxtNeonWhiteSmall",[240,241,242,243,244,245,246,247,248,249,250,251,252,253,254],-1);
Objects.ctxtTime = new oz_OzMovieClip("ctxtTime",[255],-1);
Objects.sponsorGGG = new oz_OzMovieClip("sponsorGGG",[256],-1);
Objects.sysBlueArrow = new oz_OzMovieClip("sysBlueArrow",[257],-1);
Objects.sysRateStar = new oz_OzMovieClip("sysRateStar",[258,259],-1);
Objects.sysRectBlack = new oz_OzMovieClip("sysRectBlack",[260],-1);
Objects.sysRedArrow = new oz_OzMovieClip("sysRedArrow",[261],-1);
Objects.sysWhiteRect = new oz_OzMovieClip("sysWhiteRect",[262],-1);
Objects.BitmapName = "Objects.png";
openfl_geom_Matrix.pool = [];
haxe_ds_ObjectMap.count = 0;
openfl_Lib.qTimeStamp = Date.now() + 0;
js_Boot.__toStr = {}.toString;
oz_OzSprite.MinimumBMD = false;
oz_OzSprite.DeltaT = 0;
oz_OzSprite.TilesheetAssetBMDs = [];
oz_OzSprite.EPS = 0.001;
oz_OzSprite.PathMatrix = new openfl_geom_Matrix();
oz_OzSprite.BGMinY = 0.5;
oz_OzSprite.BGMaxY = 0.5;
oz_OzSprite.ShowFlushInfo = -1;
oz_OzSprite.TraceCurrentMatrix = false;
dev_DevUtil.PLDNearest = 0;
Xml.Element = 0;
Xml.PCData = 1;
Xml.CData = 2;
Xml.Comment = 3;
Xml.DocType = 4;
Xml.ProcessingInstruction = 5;
Xml.Document = 6;
haxe_Serializer.USE_CACHE = false;
haxe_Serializer.USE_ENUM_INDEX = false;
haxe_Serializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_Unserializer.DEFAULT_RESOLVER = Type;
haxe_Unserializer.BASE64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789%:";
haxe_crypto_Base64.CHARS = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
haxe_crypto_Base64.BYTES = haxe_io_Bytes.ofString(haxe_crypto_Base64.CHARS);
haxe_io_FPHelper.i64tmp = (function($this) {
	var $r;
	var x = new haxe__$Int64__$_$_$Int64(0,0);
	$r = x;
	return $r;
}(this));
haxe_xml_Parser.escapes = (function($this) {
	var $r;
	var h = new haxe_ds_StringMap();
	if(__map_reserved.lt != null) h.setReserved("lt","<"); else h.h["lt"] = "<";
	if(__map_reserved.gt != null) h.setReserved("gt",">"); else h.h["gt"] = ">";
	if(__map_reserved.amp != null) h.setReserved("amp","&"); else h.h["amp"] = "&";
	if(__map_reserved.quot != null) h.setReserved("quot","\""); else h.h["quot"] = "\"";
	if(__map_reserved.apos != null) h.setReserved("apos","'"); else h.h["apos"] = "'";
	$r = h;
	return $r;
}(this));
js_html_compat_Uint8Array.BYTES_PER_ELEMENT = 1;
nape_Config.epsilon = 1e-8;
nape_Config.fluidAngularDragFriction = 2.5;
nape_Config.fluidAngularDrag = 100;
nape_Config.fluidVacuumDrag = 0.5;
nape_Config.fluidLinearDrag = 0.5;
nape_Config.collisionSlop = 0.2;
nape_Config.collisionSlopCCD = 0.5;
nape_Config.distanceThresholdCCD = 0.05;
nape_Config.staticCCDLinearThreshold = 0.05;
nape_Config.staticCCDAngularThreshold = 0.005;
nape_Config.bulletCCDLinearThreshold = 0.125;
nape_Config.bulletCCDAngularThreshold = 0.0125;
nape_Config.dynamicSweepLinearThreshold = 17;
nape_Config.dynamicSweepAngularThreshold = 0.6;
nape_Config.angularCCDSlipScale = 0.75;
nape_Config.arbiterExpirationDelay = 6;
nape_Config.staticFrictionThreshold = 2;
nape_Config.elasticThreshold = 20;
nape_Config.sleepDelay = 60;
nape_Config.linearSleepThreshold = 0.2;
nape_Config.angularSleepThreshold = 0.4;
nape_Config.contactBiasCoef = 0.3;
nape_Config.contactStaticBiasCoef = 0.6;
nape_Config.contactContinuousBiasCoef = 0.4;
nape_Config.contactContinuousStaticBiasCoef = 0.5;
nape_Config.constraintLinearSlop = 0.1;
nape_Config.illConditionedThreshold = 2e+8;
nape_constraint_Constraint.zpp_internalAlloc = false;
nape_phys_Interactor.zpp_internalAlloc = false;
nape_shape_Shape.zpp_internalAlloc = false;
openfl_Assets.cache = new openfl_AssetCache();
openfl_Assets.libraries = new haxe_ds_StringMap();
openfl_Assets.initialized = false;
oz_OzTileMap.initPoly2Tiles = false;
ozity_OzComponent.PACKAGE_PATH = "ozity.";
ozity_OzCamera.tempVec = [];
ozity_OzCameraBound.MinX = -1000;
ozity_OzCameraBound.MaxX = 1000;
ozity_OzCameraBound.MinY = -1000;
ozity_OzCameraBound.MaxY = 1000;
ozity_OzCar.Y_BEFORE_DIE = 950;
ozity_OzCar.isUnibody = true;
ozity_OzCar.posImpulseVec = new nape_geom_Vec2();
ozity_OzCar.velVecTemp = new nape_geom_Vec2();
ozity_OzCar.impulseVec = new nape_geom_Vec2();
ozity_OzDistanceJoint.tempVec = [];
ozity_OzGameSystem.NUM_GFX_LAYERS = 7;
ozity_OzGameSystem.WORLD_SPEED_FACTOR = 1;
ozity_OzGeometry.RECTANGLE = 1;
ozity_OzGeometry.CIRCLE = 2;
ozity_OzGeometry.POLYGON = 3;
ozity_OzGeometry.LINE = 4;
ozity_OzGeometry.DOT = 5;
ozity_OzGeometry.TRIANGLE = 6;
ozity_OzGeometry.PATH = 7;
ozity_OzGeometry.FLAG_IS_CURVE = 1;
ozity_OzGeometry.oo = 2000000;
ozity_OzGeometry.CURVE_SEGMENT_LENGTH = 20;
ozity_OzGeometry._d = ":";
ozity_OzGeometry.temp2 = [];
ozity_OzGeometry.temp3 = [];
ozity_OzGraphics.tileInfos = new haxe_ds_StringMap();
ozity_OzMoveAndRotate.WAITING_TRIGGER = 0;
ozity_OzMoveAndRotate.OFFSET_START = 1;
ozity_OzMoveAndRotate.FORWARD_DELAY = 2;
ozity_OzMoveAndRotate.GOING_FORWARD = 3;
ozity_OzMoveAndRotate.BACKWARD_DELAY = 4;
ozity_OzMoveAndRotate.GOING_BACKWARD = 5;
ozity_OzPathFollower.tempArr2 = [];
ozity_OzPhysics.StaticGroup = new nape_dynamics_InteractionGroup();
ozity_OzPhysics.INTERACTION_COLLISION = 0;
ozity_OzPhysics.INTERACTION_SENSOR = 1;
ozity_OzPhysics.INTERACTION_FLUID = 2;
ozity_OzPhysics.INTERACTION_ANY = 3;
ozity_OzPhysics.RotTX = [];
ozity_OzPhysics.pointVec = new nape_geom_Vec2();
ozity_OzPulleyJoint.tempVec = [];
ozity_OzTransform.TempVec = [];
states_StatePlay.NORMAL = 0;
states_StatePlay.WAITING = 1;
states_StatePlay.WIN = 2;
states_StatePlay.LOSE = 3;
states_StatePlay.mode = 1;
states_StatePlay.currentLevelPage = -1;
states_StatePlay.OffsetX = -240;
states_StatePlay.OffsetY = -240;
states_StatePlay.BoundsWidth = 2400;
states_StatePlay.BoundsHeight = 2400;
states_StatePlay.StartDirectly = false;
states_StatePlay.LevelsDirectly = false;
states_StatePlay.frontLine1MCs = [Objects.cmcBGFront0,Objects.cmcBGFront1,Objects.cmcBGFront2];
states_StatePlay.backLine1MCs = [Objects.cmcBackMountain0,Objects.cmcBackMountain1,Objects.cmcBackMountain2];
states_StatePlay.NUM_PLAYS = 0;
zpp_$nape_ZPP_$ID._Constraint = 0;
zpp_$nape_ZPP_$ID._Interactor = 0;
zpp_$nape_ZPP_$ID._CbType = 0;
zpp_$nape_ZPP_$ID._CbSet = 0;
zpp_$nape_ZPP_$ID._Listener = 0;
zpp_$nape_callbacks_ZPP_$Callback.internal = false;
zpp_$nape_callbacks_ZPP_$CbType.ANY_SHAPE = new nape_callbacks_CbType();
zpp_$nape_callbacks_ZPP_$CbType.ANY_BODY = new nape_callbacks_CbType();
zpp_$nape_callbacks_ZPP_$CbType.ANY_COMPOUND = new nape_callbacks_CbType();
zpp_$nape_callbacks_ZPP_$CbType.ANY_CONSTRAINT = new nape_callbacks_CbType();
zpp_$nape_util_ZPP_$Flags.internal = false;
zpp_$nape_util_ZPP_$Flags.id_ImmState_ACCEPT = 1;
zpp_$nape_util_ZPP_$Flags.id_ImmState_IGNORE = 2;
zpp_$nape_util_ZPP_$Flags.id_ImmState_ALWAYS = 4;
zpp_$nape_util_ZPP_$Flags.id_GravMassMode_DEFAULT = 0;
zpp_$nape_util_ZPP_$Flags.id_GravMassMode_FIXED = 1;
zpp_$nape_util_ZPP_$Flags.id_GravMassMode_SCALED = 2;
zpp_$nape_util_ZPP_$Flags.id_InertiaMode_DEFAULT = 0;
zpp_$nape_util_ZPP_$Flags.id_MassMode_DEFAULT = 0;
zpp_$nape_util_ZPP_$Flags.id_BodyType_STATIC = 1;
zpp_$nape_util_ZPP_$Flags.id_BodyType_DYNAMIC = 2;
zpp_$nape_util_ZPP_$Flags.id_BodyType_KINEMATIC = 3;
zpp_$nape_util_ZPP_$Flags.id_ListenerType_BODY = 0;
zpp_$nape_util_ZPP_$Flags.id_ListenerType_CONSTRAINT = 1;
zpp_$nape_util_ZPP_$Flags.id_PreFlag_ACCEPT = 1;
zpp_$nape_util_ZPP_$Flags.id_ListenerType_INTERACTION = 2;
zpp_$nape_util_ZPP_$Flags.id_ListenerType_PRE = 3;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_BEGIN = 0;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_ONGOING = 6;
zpp_$nape_util_ZPP_$Flags.id_InteractionType_COLLISION = 1;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_END = 1;
zpp_$nape_util_ZPP_$Flags.id_InteractionType_SENSOR = 2;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_WAKE = 2;
zpp_$nape_util_ZPP_$Flags.id_InteractionType_FLUID = 4;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_SLEEP = 3;
zpp_$nape_util_ZPP_$Flags.id_InteractionType_ANY = 7;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_BREAK = 4;
zpp_$nape_util_ZPP_$Flags.id_CbEvent_PRE = 5;
zpp_$nape_util_ZPP_$Flags.id_ShapeType_CIRCLE = 0;
zpp_$nape_util_ZPP_$Flags.id_ShapeType_POLYGON = 1;
zpp_$nape_callbacks_ZPP_$Listener.internal = false;
zpp_$nape_callbacks_ZPP_$InteractionListener.UCbSet = new zpp_$nape_util_ZNPList_$ZPP_$CbSet();
zpp_$nape_callbacks_ZPP_$InteractionListener.VCbSet = new zpp_$nape_util_ZNPList_$ZPP_$CbSet();
zpp_$nape_callbacks_ZPP_$InteractionListener.WCbSet = new zpp_$nape_util_ZNPList_$ZPP_$CbSet();
zpp_$nape_callbacks_ZPP_$InteractionListener.UCbType = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
zpp_$nape_callbacks_ZPP_$InteractionListener.VCbType = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
zpp_$nape_callbacks_ZPP_$InteractionListener.WCbType = new zpp_$nape_util_ZNPList_$ZPP_$CbType();
zpp_$nape_dynamics_ZPP_$Arbiter.internal = false;
zpp_$nape_dynamics_ZPP_$Arbiter.COL = 1;
zpp_$nape_dynamics_ZPP_$Arbiter.FLUID = 4;
zpp_$nape_dynamics_ZPP_$Arbiter.SENSOR = 2;
zpp_$nape_dynamics_ZPP_$Arbiter.types = [null,(function($this) {
	var $r;
	if(zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION == null) {
		zpp_$nape_util_ZPP_$Flags.internal = true;
		zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION = new nape_dynamics_ArbiterType();
		zpp_$nape_util_ZPP_$Flags.internal = false;
	}
	$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_COLLISION;
	return $r;
}(this)),(function($this) {
	var $r;
	if(zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR == null) {
		zpp_$nape_util_ZPP_$Flags.internal = true;
		zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR = new nape_dynamics_ArbiterType();
		zpp_$nape_util_ZPP_$Flags.internal = false;
	}
	$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_SENSOR;
	return $r;
}(this)),null,(function($this) {
	var $r;
	if(zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID == null) {
		zpp_$nape_util_ZPP_$Flags.internal = true;
		zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID = new nape_dynamics_ArbiterType();
		zpp_$nape_util_ZPP_$Flags.internal = false;
	}
	$r = zpp_$nape_util_ZPP_$Flags.ArbiterType_FLUID;
	return $r;
}(this))];
zpp_$nape_dynamics_ZPP_$Contact.internal = false;
zpp_$nape_geom_ZPP_$Collide.flowpoly = new zpp_$nape_util_ZNPList_$ZPP_$Vec2();
zpp_$nape_geom_ZPP_$Collide.flowsegs = new zpp_$nape_util_ZNPList_$ZPP_$Vec2();
zpp_$nape_geom_ZPP_$GeomVertexIterator.internal = false;
zpp_$nape_geom_ZPP_$PartitionVertex.nextId = 0;
zpp_$nape_phys_ZPP_$Body.types = [null,(function($this) {
	var $r;
	if(zpp_$nape_util_ZPP_$Flags.BodyType_STATIC == null) {
		zpp_$nape_util_ZPP_$Flags.internal = true;
		zpp_$nape_util_ZPP_$Flags.BodyType_STATIC = new nape_phys_BodyType();
		zpp_$nape_util_ZPP_$Flags.internal = false;
	}
	$r = zpp_$nape_util_ZPP_$Flags.BodyType_STATIC;
	return $r;
}(this)),(function($this) {
	var $r;
	if(zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC == null) {
		zpp_$nape_util_ZPP_$Flags.internal = true;
		zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC = new nape_phys_BodyType();
		zpp_$nape_util_ZPP_$Flags.internal = false;
	}
	$r = zpp_$nape_util_ZPP_$Flags.BodyType_DYNAMIC;
	return $r;
}(this)),(function($this) {
	var $r;
	if(zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC == null) {
		zpp_$nape_util_ZPP_$Flags.internal = true;
		zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC = new nape_phys_BodyType();
		zpp_$nape_util_ZPP_$Flags.internal = false;
	}
	$r = zpp_$nape_util_ZPP_$Flags.BodyType_KINEMATIC;
	return $r;
}(this))];
zpp_$nape_phys_ZPP_$Material.WAKE = 1;
zpp_$nape_phys_ZPP_$Material.PROPS = 2;
zpp_$nape_phys_ZPP_$Material.ANGDRAG = 4;
zpp_$nape_phys_ZPP_$Material.ARBITERS = 8;
zpp_$nape_shape_ZPP_$Edge.internal = false;
zpp_$nape_space_ZPP_$AABBTree.tmpaabb = new zpp_$nape_geom_ZPP_$AABB();
zpp_$nape_util_ZPP_$ConstraintList.internal = false;
zpp_$nape_util_ZPP_$BodyList.internal = false;
zpp_$nape_util_ZPP_$InteractorList.internal = false;
zpp_$nape_util_ZPP_$CompoundList.internal = false;
zpp_$nape_util_ZPP_$ListenerList.internal = false;
zpp_$nape_util_ZPP_$CbTypeList.internal = false;
zpp_$nape_util_ZPP_$Vec2List.internal = false;
zpp_$nape_util_ZPP_$GeomPolyList.internal = false;
zpp_$nape_util_ZPP_$RayResultList.internal = false;
zpp_$nape_util_ZPP_$ConvexResultList.internal = false;
zpp_$nape_util_ZPP_$EdgeList.internal = false;
zpp_$nape_util_ZPP_$ShapeList.internal = false;
zpp_$nape_util_ZPP_$InteractionGroupList.internal = false;
zpp_$nape_util_ZPP_$ArbiterList.internal = false;
zpp_$nape_util_ZPP_$ContactList.internal = false;
ApplicationMain.main();
})(typeof console != "undefined" ? console : {log:function(){}}, typeof window != "undefined" ? window : exports, typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
